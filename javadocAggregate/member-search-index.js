memberSearchIndex = [{"p":"org.apache.calcite.sql.fun","c":"SqlLibrary","l":"abbrev"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ABS"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"ABS"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"abs(BigDecimal)","u":"abs(java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"abs(byte)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"abs(double)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"abs(float)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"abs(int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"abs(long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"abs(short)"},{"p":"org.apache.calcite.sql","c":"SqlJsonConstructorNullClause","l":"ABSENT_ON_NULL"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"absentOverClause()"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ABSTRACT_ENUMERABLE_CTOR"},{"p":"org.apache.calcite.util","c":"Glossary","l":"ABSTRACT_FACTORY_PATTERN"},{"p":"org.apache.calcite.plan.volcano","c":"AbstractConverter","l":"AbstractConverter(RelOptCluster, RelSubset, RelTraitDef, RelTraitSet)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.volcano.RelSubset,org.apache.calcite.plan.RelTraitDef,org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.linq4j","c":"AbstractEnumerable","l":"AbstractEnumerable()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.linq4j","c":"AbstractEnumerable2","l":"AbstractEnumerable2()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.runtime","c":"FlatLists.AbstractFlatList","l":"AbstractFlatList()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.rules","c":"AbstractJoinExtractFilterRule","l":"AbstractJoinExtractFilterRule(AbstractJoinExtractFilterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.AbstractJoinExtractFilterRule.Config)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.AbstractMapping","l":"AbstractMapping()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.test","c":"AbstractModifiableTable","l":"AbstractModifiableTable(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.test","c":"AbstractModifiableView","l":"AbstractModifiableView()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.prepare","c":"Prepare.AbstractPreparingTable","l":"AbstractPreparingTable()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.linq4j","c":"AbstractQueryable","l":"AbstractQueryable()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.java","c":"AbstractQueryableTable","l":"AbstractQueryableTable(Type)","u":"%3Cinit%3E(java.lang.reflect.Type)"},{"p":"org.apache.calcite.runtime","c":"SpaceFillingCurve2D.AbstractRange","l":"AbstractRange(long, long)","u":"%3Cinit%3E(long,long)"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"AbstractRelNode(RelOptCluster, RelTraitSet)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"AbstractRelOptPlanner(RelOptCostFactory, Context)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCostFactory,org.apache.calcite.plan.Context)"},{"p":"org.apache.calcite.schema.impl","c":"AbstractSchema","l":"AbstractSchema()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util.mapping","c":"AbstractSourceMapping","l":"AbstractSourceMapping(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"org.apache.calcite.sql.test","c":"AbstractSqlTester","l":"AbstractSqlTester()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.type","c":"AbstractSqlType","l":"AbstractSqlType(SqlTypeName, boolean, List<? extends RelDataTypeField>)","u":"%3Cinit%3E(org.apache.calcite.sql.type.SqlTypeName,boolean,java.util.List)"},{"p":"org.apache.calcite.sql","c":"SqlSplittableAggFunction.AbstractSumSplitter","l":"AbstractSumSplitter()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.schema.impl","c":"AbstractTable","l":"AbstractTable()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.schema.impl","c":"AbstractTableQueryable","l":"AbstractTableQueryable(QueryProvider, SchemaPlus, QueryableTable, String)","u":"%3Cinit%3E(org.apache.calcite.linq4j.QueryProvider,org.apache.calcite.schema.SchemaPlus,org.apache.calcite.schema.QueryableTable,java.lang.String)"},{"p":"org.apache.calcite.util.mapping","c":"AbstractTargetMapping","l":"AbstractTargetMapping(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor.AbstractUnifyRule","l":"AbstractUnifyRule(SubstitutionVisitor.Operand, SubstitutionVisitor.Operand, int)","u":"%3Cinit%3E(org.apache.calcite.plan.SubstitutionVisitor.Operand,org.apache.calcite.plan.SubstitutionVisitor.Operand,int)"},{"p":"org.apache.calcite.adapter.enumerable","c":"StrictAggImplementor","l":"accAdvance(AggAddContext, Expression, Expression)","u":"accAdvance(org.apache.calcite.adapter.enumerable.AggAddContext,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.schema","c":"Schema.TableType","l":"ACCEL_ONLY_TABLE"},{"p":"org.apache.calcite.util","c":"MonotonicSupplier","l":"accept(E)"},{"p":"org.apache.calcite.linq4j.tree","c":"AbstractNode","l":"accept(ExpressionWriter)","u":"accept(org.apache.calcite.linq4j.tree.ExpressionWriter)"},{"p":"org.apache.calcite.linq4j.tree","c":"ClassDeclaration","l":"accept(ExpressionWriter)","u":"accept(org.apache.calcite.linq4j.tree.ExpressionWriter)"},{"p":"org.apache.calcite.linq4j.tree","c":"ConstructorDeclaration","l":"accept(ExpressionWriter)","u":"accept(org.apache.calcite.linq4j.tree.ExpressionWriter)"},{"p":"org.apache.calcite.linq4j.tree","c":"FieldDeclaration","l":"accept(ExpressionWriter)","u":"accept(org.apache.calcite.linq4j.tree.ExpressionWriter)"},{"p":"org.apache.calcite.linq4j.tree","c":"MethodDeclaration","l":"accept(ExpressionWriter)","u":"accept(org.apache.calcite.linq4j.tree.ExpressionWriter)"},{"p":"org.apache.calcite.linq4j.tree","c":"Node","l":"accept(ExpressionWriter)","u":"accept(org.apache.calcite.linq4j.tree.ExpressionWriter)"},{"p":"org.apache.calcite.util","c":"Pair.PairWithOrdinalConsumer","l":"accept(int, K, V)","u":"accept(int,K,V)"},{"p":"org.apache.calcite.runtime","c":"PairList.IndexedBiConsumer","l":"accept(int, T, U)","u":"accept(int,T,U)"},{"p":"org.apache.calcite.model","c":"JsonColumn","l":"accept(ModelHandler)","u":"accept(org.apache.calcite.model.ModelHandler)"},{"p":"org.apache.calcite.model","c":"JsonCustomSchema","l":"accept(ModelHandler)","u":"accept(org.apache.calcite.model.ModelHandler)"},{"p":"org.apache.calcite.model","c":"JsonCustomTable","l":"accept(ModelHandler)","u":"accept(org.apache.calcite.model.ModelHandler)"},{"p":"org.apache.calcite.model","c":"JsonFunction","l":"accept(ModelHandler)","u":"accept(org.apache.calcite.model.ModelHandler)"},{"p":"org.apache.calcite.model","c":"JsonJdbcSchema","l":"accept(ModelHandler)","u":"accept(org.apache.calcite.model.ModelHandler)"},{"p":"org.apache.calcite.model","c":"JsonLattice","l":"accept(ModelHandler)","u":"accept(org.apache.calcite.model.ModelHandler)"},{"p":"org.apache.calcite.model","c":"JsonMapSchema","l":"accept(ModelHandler)","u":"accept(org.apache.calcite.model.ModelHandler)"},{"p":"org.apache.calcite.model","c":"JsonMaterialization","l":"accept(ModelHandler)","u":"accept(org.apache.calcite.model.ModelHandler)"},{"p":"org.apache.calcite.model","c":"JsonMeasure","l":"accept(ModelHandler)","u":"accept(org.apache.calcite.model.ModelHandler)"},{"p":"org.apache.calcite.model","c":"JsonSchema","l":"accept(ModelHandler)","u":"accept(org.apache.calcite.model.ModelHandler)"},{"p":"org.apache.calcite.model","c":"JsonTable","l":"accept(ModelHandler)","u":"accept(org.apache.calcite.model.ModelHandler)"},{"p":"org.apache.calcite.model","c":"JsonTile","l":"accept(ModelHandler)","u":"accept(org.apache.calcite.model.ModelHandler)"},{"p":"org.apache.calcite.model","c":"JsonType","l":"accept(ModelHandler)","u":"accept(org.apache.calcite.model.ModelHandler)"},{"p":"org.apache.calcite.model","c":"JsonView","l":"accept(ModelHandler)","u":"accept(org.apache.calcite.model.ModelHandler)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.PreparedStatementConsumer","l":"accept(PreparedStatement)","u":"accept(java.sql.PreparedStatement)"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"accept(RelShuttle)","u":"accept(org.apache.calcite.rel.RelShuttle)"},{"p":"org.apache.calcite.rel.core","c":"TableScan","l":"accept(RelShuttle)","u":"accept(org.apache.calcite.rel.RelShuttle)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalAggregate","l":"accept(RelShuttle)","u":"accept(org.apache.calcite.rel.RelShuttle)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalAsofJoin","l":"accept(RelShuttle)","u":"accept(org.apache.calcite.rel.RelShuttle)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalCalc","l":"accept(RelShuttle)","u":"accept(org.apache.calcite.rel.RelShuttle)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalCorrelate","l":"accept(RelShuttle)","u":"accept(org.apache.calcite.rel.RelShuttle)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalExchange","l":"accept(RelShuttle)","u":"accept(org.apache.calcite.rel.RelShuttle)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalFilter","l":"accept(RelShuttle)","u":"accept(org.apache.calcite.rel.RelShuttle)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalIntersect","l":"accept(RelShuttle)","u":"accept(org.apache.calcite.rel.RelShuttle)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalJoin","l":"accept(RelShuttle)","u":"accept(org.apache.calcite.rel.RelShuttle)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalMatch","l":"accept(RelShuttle)","u":"accept(org.apache.calcite.rel.RelShuttle)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalMinus","l":"accept(RelShuttle)","u":"accept(org.apache.calcite.rel.RelShuttle)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalProject","l":"accept(RelShuttle)","u":"accept(org.apache.calcite.rel.RelShuttle)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalSort","l":"accept(RelShuttle)","u":"accept(org.apache.calcite.rel.RelShuttle)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalTableModify","l":"accept(RelShuttle)","u":"accept(org.apache.calcite.rel.RelShuttle)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalUnion","l":"accept(RelShuttle)","u":"accept(org.apache.calcite.rel.RelShuttle)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalValues","l":"accept(RelShuttle)","u":"accept(org.apache.calcite.rel.RelShuttle)"},{"p":"org.apache.calcite.rel","c":"RelNode","l":"accept(RelShuttle)","u":"accept(org.apache.calcite.rel.RelShuttle)"},{"p":"org.apache.calcite.test","c":"SqlToRelTestBase.CustomCorrelate","l":"accept(RelShuttle)","u":"accept(org.apache.calcite.rel.RelShuttle)"},{"p":"org.apache.calcite.rex","c":"RexCall","l":"accept(RexBiVisitor<R, P>, P)","u":"accept(org.apache.calcite.rex.RexBiVisitor,P)"},{"p":"org.apache.calcite.rex","c":"RexCorrelVariable","l":"accept(RexBiVisitor<R, P>, P)","u":"accept(org.apache.calcite.rex.RexBiVisitor,P)"},{"p":"org.apache.calcite.rex","c":"RexDynamicParam","l":"accept(RexBiVisitor<R, P>, P)","u":"accept(org.apache.calcite.rex.RexBiVisitor,P)"},{"p":"org.apache.calcite.rex","c":"RexFieldAccess","l":"accept(RexBiVisitor<R, P>, P)","u":"accept(org.apache.calcite.rex.RexBiVisitor,P)"},{"p":"org.apache.calcite.rex","c":"RexInputRef","l":"accept(RexBiVisitor<R, P>, P)","u":"accept(org.apache.calcite.rex.RexBiVisitor,P)"},{"p":"org.apache.calcite.rex","c":"RexLambda","l":"accept(RexBiVisitor<R, P>, P)","u":"accept(org.apache.calcite.rex.RexBiVisitor,P)"},{"p":"org.apache.calcite.rex","c":"RexLambdaRef","l":"accept(RexBiVisitor<R, P>, P)","u":"accept(org.apache.calcite.rex.RexBiVisitor,P)"},{"p":"org.apache.calcite.rex","c":"RexLiteral","l":"accept(RexBiVisitor<R, P>, P)","u":"accept(org.apache.calcite.rex.RexBiVisitor,P)"},{"p":"org.apache.calcite.rex","c":"RexLocalRef","l":"accept(RexBiVisitor<R, P>, P)","u":"accept(org.apache.calcite.rex.RexBiVisitor,P)"},{"p":"org.apache.calcite.rex","c":"RexNode","l":"accept(RexBiVisitor<R, P>, P)","u":"accept(org.apache.calcite.rex.RexBiVisitor,P)"},{"p":"org.apache.calcite.rex","c":"RexOver","l":"accept(RexBiVisitor<R, P>, P)","u":"accept(org.apache.calcite.rex.RexBiVisitor,P)"},{"p":"org.apache.calcite.rex","c":"RexPatternFieldRef","l":"accept(RexBiVisitor<R, P>, P)","u":"accept(org.apache.calcite.rex.RexBiVisitor,P)"},{"p":"org.apache.calcite.rex","c":"RexRangeRef","l":"accept(RexBiVisitor<R, P>, P)","u":"accept(org.apache.calcite.rex.RexBiVisitor,P)"},{"p":"org.apache.calcite.rex","c":"RexSubQuery","l":"accept(RexBiVisitor<R, P>, P)","u":"accept(org.apache.calcite.rex.RexBiVisitor,P)"},{"p":"org.apache.calcite.rex","c":"RexTableInputRef","l":"accept(RexBiVisitor<R, P>, P)","u":"accept(org.apache.calcite.rex.RexBiVisitor,P)"},{"p":"org.apache.calcite.rex","c":"RexWindowBound","l":"accept(RexBiVisitor<R, P>, P)","u":"accept(org.apache.calcite.rex.RexBiVisitor,P)"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"accept(RexShuttle)","u":"accept(org.apache.calcite.rex.RexShuttle)"},{"p":"org.apache.calcite.rel.core","c":"Calc","l":"accept(RexShuttle)","u":"accept(org.apache.calcite.rex.RexShuttle)"},{"p":"org.apache.calcite.rel.core","c":"Filter","l":"accept(RexShuttle)","u":"accept(org.apache.calcite.rex.RexShuttle)"},{"p":"org.apache.calcite.rel.core","c":"Join","l":"accept(RexShuttle)","u":"accept(org.apache.calcite.rex.RexShuttle)"},{"p":"org.apache.calcite.rel.core","c":"Project","l":"accept(RexShuttle)","u":"accept(org.apache.calcite.rex.RexShuttle)"},{"p":"org.apache.calcite.rel.core","c":"Snapshot","l":"accept(RexShuttle)","u":"accept(org.apache.calcite.rex.RexShuttle)"},{"p":"org.apache.calcite.rel.core","c":"Sort","l":"accept(RexShuttle)","u":"accept(org.apache.calcite.rex.RexShuttle)"},{"p":"org.apache.calcite.rel.core","c":"TableFunctionScan","l":"accept(RexShuttle)","u":"accept(org.apache.calcite.rex.RexShuttle)"},{"p":"org.apache.calcite.rel","c":"RelNode","l":"accept(RexShuttle)","u":"accept(org.apache.calcite.rex.RexShuttle)"},{"p":"org.apache.calcite.rel.rules","c":"HyperGraph","l":"accept(RexShuttle)","u":"accept(org.apache.calcite.rex.RexShuttle)"},{"p":"org.apache.calcite.rel.rules","c":"MultiJoin","l":"accept(RexShuttle)","u":"accept(org.apache.calcite.rex.RexShuttle)"},{"p":"org.apache.calcite.rex","c":"RexCall","l":"accept(RexVisitor<R>)","u":"accept(org.apache.calcite.rex.RexVisitor)"},{"p":"org.apache.calcite.rex","c":"RexCorrelVariable","l":"accept(RexVisitor<R>)","u":"accept(org.apache.calcite.rex.RexVisitor)"},{"p":"org.apache.calcite.rex","c":"RexDynamicParam","l":"accept(RexVisitor<R>)","u":"accept(org.apache.calcite.rex.RexVisitor)"},{"p":"org.apache.calcite.rex","c":"RexFieldAccess","l":"accept(RexVisitor<R>)","u":"accept(org.apache.calcite.rex.RexVisitor)"},{"p":"org.apache.calcite.rex","c":"RexInputRef","l":"accept(RexVisitor<R>)","u":"accept(org.apache.calcite.rex.RexVisitor)"},{"p":"org.apache.calcite.rex","c":"RexLambda","l":"accept(RexVisitor<R>)","u":"accept(org.apache.calcite.rex.RexVisitor)"},{"p":"org.apache.calcite.rex","c":"RexLambdaRef","l":"accept(RexVisitor<R>)","u":"accept(org.apache.calcite.rex.RexVisitor)"},{"p":"org.apache.calcite.rex","c":"RexLiteral","l":"accept(RexVisitor<R>)","u":"accept(org.apache.calcite.rex.RexVisitor)"},{"p":"org.apache.calcite.rex","c":"RexLocalRef","l":"accept(RexVisitor<R>)","u":"accept(org.apache.calcite.rex.RexVisitor)"},{"p":"org.apache.calcite.rex","c":"RexNode","l":"accept(RexVisitor<R>)","u":"accept(org.apache.calcite.rex.RexVisitor)"},{"p":"org.apache.calcite.rex","c":"RexOver","l":"accept(RexVisitor<R>)","u":"accept(org.apache.calcite.rex.RexVisitor)"},{"p":"org.apache.calcite.rex","c":"RexPatternFieldRef","l":"accept(RexVisitor<R>)","u":"accept(org.apache.calcite.rex.RexVisitor)"},{"p":"org.apache.calcite.rex","c":"RexRangeRef","l":"accept(RexVisitor<R>)","u":"accept(org.apache.calcite.rex.RexVisitor)"},{"p":"org.apache.calcite.rex","c":"RexSubQuery","l":"accept(RexVisitor<R>)","u":"accept(org.apache.calcite.rex.RexVisitor)"},{"p":"org.apache.calcite.rex","c":"RexTableInputRef","l":"accept(RexVisitor<R>)","u":"accept(org.apache.calcite.rex.RexVisitor)"},{"p":"org.apache.calcite.rex","c":"RexWindowBound","l":"accept(RexVisitor<R>)","u":"accept(org.apache.calcite.rex.RexVisitor)"},{"p":"org.apache.calcite.linq4j.tree","c":"AbstractNode","l":"accept(Shuttle)","u":"accept(org.apache.calcite.linq4j.tree.Shuttle)"},{"p":"org.apache.calcite.linq4j.tree","c":"BinaryExpression","l":"accept(Shuttle)","u":"accept(org.apache.calcite.linq4j.tree.Shuttle)"},{"p":"org.apache.calcite.linq4j.tree","c":"BlockStatement","l":"accept(Shuttle)","u":"accept(org.apache.calcite.linq4j.tree.Shuttle)"},{"p":"org.apache.calcite.linq4j.tree","c":"ClassDeclaration","l":"accept(Shuttle)","u":"accept(org.apache.calcite.linq4j.tree.Shuttle)"},{"p":"org.apache.calcite.linq4j.tree","c":"ConditionalStatement","l":"accept(Shuttle)","u":"accept(org.apache.calcite.linq4j.tree.Shuttle)"},{"p":"org.apache.calcite.linq4j.tree","c":"ConstantExpression","l":"accept(Shuttle)","u":"accept(org.apache.calcite.linq4j.tree.Shuttle)"},{"p":"org.apache.calcite.linq4j.tree","c":"ConstructorDeclaration","l":"accept(Shuttle)","u":"accept(org.apache.calcite.linq4j.tree.Shuttle)"},{"p":"org.apache.calcite.linq4j.tree","c":"DeclarationStatement","l":"accept(Shuttle)","u":"accept(org.apache.calcite.linq4j.tree.Shuttle)"},{"p":"org.apache.calcite.linq4j.tree","c":"DefaultExpression","l":"accept(Shuttle)","u":"accept(org.apache.calcite.linq4j.tree.Shuttle)"},{"p":"org.apache.calcite.linq4j.tree","c":"DynamicExpression","l":"accept(Shuttle)","u":"accept(org.apache.calcite.linq4j.tree.Shuttle)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expression","l":"accept(Shuttle)","u":"accept(org.apache.calcite.linq4j.tree.Shuttle)"},{"p":"org.apache.calcite.linq4j.tree","c":"FieldDeclaration","l":"accept(Shuttle)","u":"accept(org.apache.calcite.linq4j.tree.Shuttle)"},{"p":"org.apache.calcite.linq4j.tree","c":"ForEachStatement","l":"accept(Shuttle)","u":"accept(org.apache.calcite.linq4j.tree.Shuttle)"},{"p":"org.apache.calcite.linq4j.tree","c":"ForStatement","l":"accept(Shuttle)","u":"accept(org.apache.calcite.linq4j.tree.Shuttle)"},{"p":"org.apache.calcite.linq4j.tree","c":"FunctionExpression","l":"accept(Shuttle)","u":"accept(org.apache.calcite.linq4j.tree.Shuttle)"},{"p":"org.apache.calcite.linq4j.tree","c":"GotoStatement","l":"accept(Shuttle)","u":"accept(org.apache.calcite.linq4j.tree.Shuttle)"},{"p":"org.apache.calcite.linq4j.tree","c":"IndexExpression","l":"accept(Shuttle)","u":"accept(org.apache.calcite.linq4j.tree.Shuttle)"},{"p":"org.apache.calcite.linq4j.tree","c":"InvocationExpression","l":"accept(Shuttle)","u":"accept(org.apache.calcite.linq4j.tree.Shuttle)"},{"p":"org.apache.calcite.linq4j.tree","c":"LabelStatement","l":"accept(Shuttle)","u":"accept(org.apache.calcite.linq4j.tree.Shuttle)"},{"p":"org.apache.calcite.linq4j.tree","c":"LambdaExpression","l":"accept(Shuttle)","u":"accept(org.apache.calcite.linq4j.tree.Shuttle)"},{"p":"org.apache.calcite.linq4j.tree","c":"ListInitExpression","l":"accept(Shuttle)","u":"accept(org.apache.calcite.linq4j.tree.Shuttle)"},{"p":"org.apache.calcite.linq4j.tree","c":"MemberDeclaration","l":"accept(Shuttle)","u":"accept(org.apache.calcite.linq4j.tree.Shuttle)"},{"p":"org.apache.calcite.linq4j.tree","c":"MemberExpression","l":"accept(Shuttle)","u":"accept(org.apache.calcite.linq4j.tree.Shuttle)"},{"p":"org.apache.calcite.linq4j.tree","c":"MemberInitExpression","l":"accept(Shuttle)","u":"accept(org.apache.calcite.linq4j.tree.Shuttle)"},{"p":"org.apache.calcite.linq4j.tree","c":"MethodCallExpression","l":"accept(Shuttle)","u":"accept(org.apache.calcite.linq4j.tree.Shuttle)"},{"p":"org.apache.calcite.linq4j.tree","c":"MethodDeclaration","l":"accept(Shuttle)","u":"accept(org.apache.calcite.linq4j.tree.Shuttle)"},{"p":"org.apache.calcite.linq4j.tree","c":"NewArrayExpression","l":"accept(Shuttle)","u":"accept(org.apache.calcite.linq4j.tree.Shuttle)"},{"p":"org.apache.calcite.linq4j.tree","c":"NewExpression","l":"accept(Shuttle)","u":"accept(org.apache.calcite.linq4j.tree.Shuttle)"},{"p":"org.apache.calcite.linq4j.tree","c":"Node","l":"accept(Shuttle)","u":"accept(org.apache.calcite.linq4j.tree.Shuttle)"},{"p":"org.apache.calcite.linq4j.tree","c":"ParameterExpression","l":"accept(Shuttle)","u":"accept(org.apache.calcite.linq4j.tree.Shuttle)"},{"p":"org.apache.calcite.linq4j.tree","c":"Statement","l":"accept(Shuttle)","u":"accept(org.apache.calcite.linq4j.tree.Shuttle)"},{"p":"org.apache.calcite.linq4j.tree","c":"SwitchStatement","l":"accept(Shuttle)","u":"accept(org.apache.calcite.linq4j.tree.Shuttle)"},{"p":"org.apache.calcite.linq4j.tree","c":"TernaryExpression","l":"accept(Shuttle)","u":"accept(org.apache.calcite.linq4j.tree.Shuttle)"},{"p":"org.apache.calcite.linq4j.tree","c":"ThrowStatement","l":"accept(Shuttle)","u":"accept(org.apache.calcite.linq4j.tree.Shuttle)"},{"p":"org.apache.calcite.linq4j.tree","c":"TryStatement","l":"accept(Shuttle)","u":"accept(org.apache.calcite.linq4j.tree.Shuttle)"},{"p":"org.apache.calcite.linq4j.tree","c":"TypeBinaryExpression","l":"accept(Shuttle)","u":"accept(org.apache.calcite.linq4j.tree.Shuttle)"},{"p":"org.apache.calcite.linq4j.tree","c":"UnaryExpression","l":"accept(Shuttle)","u":"accept(org.apache.calcite.linq4j.tree.Shuttle)"},{"p":"org.apache.calcite.linq4j.tree","c":"WhileStatement","l":"accept(Shuttle)","u":"accept(org.apache.calcite.linq4j.tree.Shuttle)"},{"p":"org.apache.calcite.sql","c":"SqlCall","l":"accept(SqlVisitor<R>)","u":"accept(org.apache.calcite.sql.util.SqlVisitor)"},{"p":"org.apache.calcite.sql","c":"SqlDataTypeSpec","l":"accept(SqlVisitor<R>)","u":"accept(org.apache.calcite.sql.util.SqlVisitor)"},{"p":"org.apache.calcite.sql","c":"SqlDynamicParam","l":"accept(SqlVisitor<R>)","u":"accept(org.apache.calcite.sql.util.SqlVisitor)"},{"p":"org.apache.calcite.sql","c":"SqlIdentifier","l":"accept(SqlVisitor<R>)","u":"accept(org.apache.calcite.sql.util.SqlVisitor)"},{"p":"org.apache.calcite.sql","c":"SqlIntervalQualifier","l":"accept(SqlVisitor<R>)","u":"accept(org.apache.calcite.sql.util.SqlVisitor)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"accept(SqlVisitor<R>)","u":"accept(org.apache.calcite.sql.util.SqlVisitor)"},{"p":"org.apache.calcite.sql","c":"SqlNode","l":"accept(SqlVisitor<R>)","u":"accept(org.apache.calcite.sql.util.SqlVisitor)"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"accept(SqlVisitor<R>)","u":"accept(org.apache.calcite.sql.util.SqlVisitor)"},{"p":"org.apache.calcite.sql.test","c":"SqlTester.ValidatedNodeConsumer","l":"accept(StringAndPos, SqlValidator, SqlNode)","u":"accept(org.apache.calcite.sql.parser.StringAndPos,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.util","c":"Holder","l":"accept(UnaryOperator<E>)","u":"accept(java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.linq4j.tree","c":"BinaryExpression","l":"accept(Visitor<R>)","u":"accept(org.apache.calcite.linq4j.tree.Visitor)"},{"p":"org.apache.calcite.linq4j.tree","c":"BlockStatement","l":"accept(Visitor<R>)","u":"accept(org.apache.calcite.linq4j.tree.Visitor)"},{"p":"org.apache.calcite.linq4j.tree","c":"ClassDeclaration","l":"accept(Visitor<R>)","u":"accept(org.apache.calcite.linq4j.tree.Visitor)"},{"p":"org.apache.calcite.linq4j.tree","c":"ConditionalExpression","l":"accept(Visitor<R>)","u":"accept(org.apache.calcite.linq4j.tree.Visitor)"},{"p":"org.apache.calcite.linq4j.tree","c":"ConditionalStatement","l":"accept(Visitor<R>)","u":"accept(org.apache.calcite.linq4j.tree.Visitor)"},{"p":"org.apache.calcite.linq4j.tree","c":"ConstantExpression","l":"accept(Visitor<R>)","u":"accept(org.apache.calcite.linq4j.tree.Visitor)"},{"p":"org.apache.calcite.linq4j.tree","c":"ConstructorDeclaration","l":"accept(Visitor<R>)","u":"accept(org.apache.calcite.linq4j.tree.Visitor)"},{"p":"org.apache.calcite.linq4j.tree","c":"DeclarationStatement","l":"accept(Visitor<R>)","u":"accept(org.apache.calcite.linq4j.tree.Visitor)"},{"p":"org.apache.calcite.linq4j.tree","c":"DefaultExpression","l":"accept(Visitor<R>)","u":"accept(org.apache.calcite.linq4j.tree.Visitor)"},{"p":"org.apache.calcite.linq4j.tree","c":"DynamicExpression","l":"accept(Visitor<R>)","u":"accept(org.apache.calcite.linq4j.tree.Visitor)"},{"p":"org.apache.calcite.linq4j.tree","c":"FieldDeclaration","l":"accept(Visitor<R>)","u":"accept(org.apache.calcite.linq4j.tree.Visitor)"},{"p":"org.apache.calcite.linq4j.tree","c":"ForEachStatement","l":"accept(Visitor<R>)","u":"accept(org.apache.calcite.linq4j.tree.Visitor)"},{"p":"org.apache.calcite.linq4j.tree","c":"ForStatement","l":"accept(Visitor<R>)","u":"accept(org.apache.calcite.linq4j.tree.Visitor)"},{"p":"org.apache.calcite.linq4j.tree","c":"FunctionExpression","l":"accept(Visitor<R>)","u":"accept(org.apache.calcite.linq4j.tree.Visitor)"},{"p":"org.apache.calcite.linq4j.tree","c":"GotoStatement","l":"accept(Visitor<R>)","u":"accept(org.apache.calcite.linq4j.tree.Visitor)"},{"p":"org.apache.calcite.linq4j.tree","c":"IndexExpression","l":"accept(Visitor<R>)","u":"accept(org.apache.calcite.linq4j.tree.Visitor)"},{"p":"org.apache.calcite.linq4j.tree","c":"InvocationExpression","l":"accept(Visitor<R>)","u":"accept(org.apache.calcite.linq4j.tree.Visitor)"},{"p":"org.apache.calcite.linq4j.tree","c":"LabelStatement","l":"accept(Visitor<R>)","u":"accept(org.apache.calcite.linq4j.tree.Visitor)"},{"p":"org.apache.calcite.linq4j.tree","c":"LambdaExpression","l":"accept(Visitor<R>)","u":"accept(org.apache.calcite.linq4j.tree.Visitor)"},{"p":"org.apache.calcite.linq4j.tree","c":"ListInitExpression","l":"accept(Visitor<R>)","u":"accept(org.apache.calcite.linq4j.tree.Visitor)"},{"p":"org.apache.calcite.linq4j.tree","c":"MemberExpression","l":"accept(Visitor<R>)","u":"accept(org.apache.calcite.linq4j.tree.Visitor)"},{"p":"org.apache.calcite.linq4j.tree","c":"MemberInitExpression","l":"accept(Visitor<R>)","u":"accept(org.apache.calcite.linq4j.tree.Visitor)"},{"p":"org.apache.calcite.linq4j.tree","c":"MethodCallExpression","l":"accept(Visitor<R>)","u":"accept(org.apache.calcite.linq4j.tree.Visitor)"},{"p":"org.apache.calcite.linq4j.tree","c":"MethodDeclaration","l":"accept(Visitor<R>)","u":"accept(org.apache.calcite.linq4j.tree.Visitor)"},{"p":"org.apache.calcite.linq4j.tree","c":"NewArrayExpression","l":"accept(Visitor<R>)","u":"accept(org.apache.calcite.linq4j.tree.Visitor)"},{"p":"org.apache.calcite.linq4j.tree","c":"NewExpression","l":"accept(Visitor<R>)","u":"accept(org.apache.calcite.linq4j.tree.Visitor)"},{"p":"org.apache.calcite.linq4j.tree","c":"Node","l":"accept(Visitor<R>)","u":"accept(org.apache.calcite.linq4j.tree.Visitor)"},{"p":"org.apache.calcite.linq4j.tree","c":"ParameterExpression","l":"accept(Visitor<R>)","u":"accept(org.apache.calcite.linq4j.tree.Visitor)"},{"p":"org.apache.calcite.linq4j.tree","c":"SwitchStatement","l":"accept(Visitor<R>)","u":"accept(org.apache.calcite.linq4j.tree.Visitor)"},{"p":"org.apache.calcite.linq4j.tree","c":"TernaryExpression","l":"accept(Visitor<R>)","u":"accept(org.apache.calcite.linq4j.tree.Visitor)"},{"p":"org.apache.calcite.linq4j.tree","c":"ThrowStatement","l":"accept(Visitor<R>)","u":"accept(org.apache.calcite.linq4j.tree.Visitor)"},{"p":"org.apache.calcite.linq4j.tree","c":"TryStatement","l":"accept(Visitor<R>)","u":"accept(org.apache.calcite.linq4j.tree.Visitor)"},{"p":"org.apache.calcite.linq4j.tree","c":"TypeBinaryExpression","l":"accept(Visitor<R>)","u":"accept(org.apache.calcite.linq4j.tree.Visitor)"},{"p":"org.apache.calcite.linq4j.tree","c":"UnaryExpression","l":"accept(Visitor<R>)","u":"accept(org.apache.calcite.linq4j.tree.Visitor)"},{"p":"org.apache.calcite.linq4j.tree","c":"WhileStatement","l":"accept(Visitor<R>)","u":"accept(org.apache.calcite.linq4j.tree.Visitor)"},{"p":"org.apache.calcite.linq4j.tree","c":"DeclarationStatement","l":"accept2(ExpressionWriter, boolean)","u":"accept2(org.apache.calcite.linq4j.tree.ExpressionWriter,boolean)"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"acceptCall(SqlVisitor<R>, SqlCall)","u":"acceptCall(org.apache.calcite.sql.util.SqlVisitor,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.fun","c":"SqlConvertFunction","l":"acceptCall(SqlVisitor<R>, SqlCall, boolean, SqlBasicVisitor.ArgHandler<R>)","u":"acceptCall(org.apache.calcite.sql.util.SqlVisitor,org.apache.calcite.sql.SqlCall,boolean,org.apache.calcite.sql.util.SqlBasicVisitor.ArgHandler)"},{"p":"org.apache.calcite.sql.fun","c":"SqlDotOperator","l":"acceptCall(SqlVisitor<R>, SqlCall, boolean, SqlBasicVisitor.ArgHandler<R>)","u":"acceptCall(org.apache.calcite.sql.util.SqlVisitor,org.apache.calcite.sql.SqlCall,boolean,org.apache.calcite.sql.util.SqlBasicVisitor.ArgHandler)"},{"p":"org.apache.calcite.sql","c":"SqlAsOperator","l":"acceptCall(SqlVisitor<R>, SqlCall, boolean, SqlBasicVisitor.ArgHandler<R>)","u":"acceptCall(org.apache.calcite.sql.util.SqlVisitor,org.apache.calcite.sql.SqlCall,boolean,org.apache.calcite.sql.util.SqlBasicVisitor.ArgHandler)"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize.SqlMatchRecognizeOperator","l":"acceptCall(SqlVisitor<R>, SqlCall, boolean, SqlBasicVisitor.ArgHandler<R>)","u":"acceptCall(org.apache.calcite.sql.util.SqlVisitor,org.apache.calcite.sql.SqlCall,boolean,org.apache.calcite.sql.util.SqlBasicVisitor.ArgHandler)"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"acceptCall(SqlVisitor<R>, SqlCall, boolean, SqlBasicVisitor.ArgHandler<R>)","u":"acceptCall(org.apache.calcite.sql.util.SqlVisitor,org.apache.calcite.sql.SqlCall,boolean,org.apache.calcite.sql.util.SqlBasicVisitor.ArgHandler)"},{"p":"org.apache.calcite.sql","c":"SqlOverOperator","l":"acceptCall(SqlVisitor<R>, SqlCall, boolean, SqlBasicVisitor.ArgHandler<R>)","u":"acceptCall(org.apache.calcite.sql.util.SqlVisitor,org.apache.calcite.sql.SqlCall,boolean,org.apache.calcite.sql.util.SqlBasicVisitor.ArgHandler)"},{"p":"org.apache.calcite.sql","c":"SqlSelectOperator","l":"acceptCall(SqlVisitor<R>, SqlCall, boolean, SqlBasicVisitor.ArgHandler<R>)","u":"acceptCall(org.apache.calcite.sql.util.SqlVisitor,org.apache.calcite.sql.SqlCall,boolean,org.apache.calcite.sql.util.SqlBasicVisitor.ArgHandler)"},{"p":"org.apache.calcite.sql","c":"SqlSnapshot.SqlSnapshotOperator","l":"acceptCall(SqlVisitor<R>, SqlCall, boolean, SqlBasicVisitor.ArgHandler<R>)","u":"acceptCall(org.apache.calcite.sql.util.SqlVisitor,org.apache.calcite.sql.SqlCall,boolean,org.apache.calcite.sql.util.SqlBasicVisitor.ArgHandler)"},{"p":"org.apache.calcite.sql","c":"SqlDialect.DatabaseProduct","l":"ACCESS"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"accessNotAllowed(String, String)","u":"accessNotAllowed(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysType","l":"accessors(Expression, List<Integer>)","u":"accessors(org.apache.calcite.linq4j.tree.Expression,java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysTypeImpl","l":"accessors(Expression, List<Integer>)","u":"accessors(org.apache.calcite.linq4j.tree.Expression,java.util.List)"},{"p":"org.apache.calcite.sql.dialect","c":"AccessSqlDialect","l":"AccessSqlDialect(SqlDialect.Context)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect.Context)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceDecimalsRule.RexExpander","l":"accessValue(RexNode)","u":"accessValue(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.runtime","c":"AccumOperation","l":"AccumOperation()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.enumerable","c":"BasicLazyAccumulator","l":"accumulate(Iterable<TSource>, TAccumulate)","u":"accumulate(java.lang.Iterable,TAccumulate)"},{"p":"org.apache.calcite.adapter.enumerable","c":"SourceSorter","l":"accumulate(Iterable<TSource>, TAccumulate)","u":"accumulate(java.lang.Iterable,TAccumulate)"},{"p":"org.apache.calcite.adapter.enumerable","c":"LazyAggregateLambdaFactory.LazyAccumulator","l":"accumulate(Iterable<TSource>, TOrigAccumulate)","u":"accumulate(java.lang.Iterable,TOrigAccumulate)"},{"p":"org.apache.calcite.adapter.enumerable","c":"AggResetContext","l":"accumulator()"},{"p":"org.apache.calcite.adapter.enumerable.impl","c":"AggResetContextImpl","l":"accumulator()"},{"p":"org.apache.calcite.adapter.enumerable","c":"AggImpState","l":"accumulatorAdder"},{"p":"org.apache.calcite.adapter.enumerable","c":"AggregateLambdaFactory","l":"accumulatorAdder()"},{"p":"org.apache.calcite.adapter.enumerable","c":"BasicAggregateLambdaFactory","l":"accumulatorAdder()"},{"p":"org.apache.calcite.adapter.enumerable","c":"LazyAggregateLambdaFactory","l":"accumulatorAdder()"},{"p":"org.apache.calcite.adapter.enumerable","c":"AggregateLambdaFactory","l":"accumulatorInitializer()"},{"p":"org.apache.calcite.adapter.enumerable","c":"BasicAggregateLambdaFactory","l":"accumulatorInitializer()"},{"p":"org.apache.calcite.adapter.enumerable","c":"LazyAggregateLambdaFactory","l":"accumulatorInitializer()"},{"p":"org.apache.calcite.schema.impl","c":"AggregateFunctionImpl","l":"accumulatorType"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ACOS"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"ACOS"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"acos(BigDecimal)","u":"acos(java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"acos(double)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ACOSD"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"ACOSD"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"acosd(BigDecimal)","u":"acosd(java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"acosd(double)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ACOSH"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"ACOSH"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"acosh(BigDecimal)","u":"acosh(java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"acosh(double)"},{"p":"org.apache.calcite.rel.metadata","c":"NullSentinel","l":"ACTIVE"},{"p":"org.apache.calcite.rel.rules","c":"AggregateReduceFunctionsRule.Config","l":"actualFunctionsToReduce()"},{"p":"org.apache.calcite.linq4j.function","c":"Functions","l":"adapt(DoubleFunction1<T1>)","u":"adapt(org.apache.calcite.linq4j.function.DoubleFunction1)"},{"p":"org.apache.calcite.linq4j.function","c":"Functions","l":"adapt(FloatFunction1<T1>)","u":"adapt(org.apache.calcite.linq4j.function.FloatFunction1)"},{"p":"org.apache.calcite.linq4j.function","c":"Functions","l":"adapt(IntegerFunction1<T1>)","u":"adapt(org.apache.calcite.linq4j.function.IntegerFunction1)"},{"p":"org.apache.calcite.linq4j.function","c":"Functions","l":"adapt(List<T1>, Function1<T1, R>)","u":"adapt(java.util.List,org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j.function","c":"Functions","l":"adapt(LongFunction1<T1>)","u":"adapt(org.apache.calcite.linq4j.function.LongFunction1)"},{"p":"org.apache.calcite.linq4j.function","c":"Functions","l":"adapt(T[], Function1<T, R>)","u":"adapt(T[],org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.util","c":"Glossary","l":"ADAPTER_PATTERN"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"adaptTo(RelNode, List<Integer>, int, int, int)","u":"adaptTo(org.apache.calcite.rel.RelNode,java.util.List,int,int,int)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"Add"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ADD_MONTHS"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ADD_MONTHS"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"ADD_MONTHS"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ADD_MONTHS_INT"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.BigDecimalSum","l":"add(BigDecimal, BigDecimal)","u":"add(java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.MaxBoolean","l":"add(Boolean, Boolean)","u":"add(java.lang.Boolean,java.lang.Boolean)"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.MinBoolean","l":"add(Boolean, Boolean)","u":"add(java.lang.Boolean,java.lang.Boolean)"},{"p":"org.apache.calcite.test","c":"ConnectionFactories","l":"add(CalciteAssert.SchemaSpec)","u":"add(org.apache.calcite.test.CalciteAssert.SchemaSpec)"},{"p":"org.apache.calcite.schema.impl","c":"ReflectiveFunctionBase.ParameterListBuilder","l":"add(Class<?>, String)","u":"add(java.lang.Class,java.lang.String)"},{"p":"org.apache.calcite.schema.impl","c":"ReflectiveFunctionBase.ParameterListBuilder","l":"add(Class<?>, String, boolean)","u":"add(java.lang.Class,java.lang.String,boolean)"},{"p":"org.apache.calcite.runtime","c":"Hook","l":"add(Consumer<T>)","u":"add(java.util.function.Consumer)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcCorrelationDataContextBuilderImpl","l":"add(CorrelationId, int, Type)","u":"add(org.apache.calcite.rel.core.CorrelationId,int,java.lang.reflect.Type)"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.DoubleSum","l":"add(double, double)","u":"add(double,double)"},{"p":"org.apache.calcite.util","c":"NumberUtil","l":"add(Double, Double)","u":"add(java.lang.Double,java.lang.Double)"},{"p":"org.apache.calcite.linq4j","c":"MemoryFactory","l":"add(E)"},{"p":"","c":"","l":"add(E)"},{"p":"org.apache.calcite.util","c":"ChunkList","l":"add(E)"},{"p":"org.apache.calcite.util","c":"Closer","l":"add(E)"},{"p":"org.apache.calcite.util","c":"EquivalenceSet","l":"add(E)"},{"p":"org.apache.calcite.util","c":"ImmutableNullableList.Builder","l":"add(E)"},{"p":"org.apache.calcite.util","c":"ImmutableNullableSet.Builder","l":"add(E)"},{"p":"org.apache.calcite.util","c":"PartiallyOrderedSet","l":"add(E)"},{"p":"org.apache.calcite.util","c":"ImmutableNullableList.Builder","l":"add(E...)"},{"p":"org.apache.calcite.util","c":"ImmutableNullableSet.Builder","l":"add(E...)"},{"p":"org.apache.calcite.linq4j.tree","c":"BlockBuilder","l":"add(Expression)","u":"add(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"add(Expression, Expression)","u":"add(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"add(Expression, Expression, Method)","u":"add(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.runtime","c":"Hook","l":"add(Function<T, R>)","u":"add(java.util.function.Function)"},{"p":"","c":"","l":"add(int, E)"},{"p":"org.apache.calcite.util","c":"CastingList","l":"add(int, E)","u":"add(int,E)"},{"p":"org.apache.calcite.util","c":"ChunkList","l":"add(int, E)","u":"add(int,E)"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.IntSum","l":"add(int, int)","u":"add(int,int)"},{"p":"org.apache.calcite.util","c":"Smalls.MyTwoParamsSumFunctionFilter1","l":"add(int, int, int)","u":"add(int,int,int)"},{"p":"org.apache.calcite.runtime","c":"ImmutableIntList","l":"add(int, Integer)","u":"add(int,E)"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"add(int, SqlNode)","u":"add(int,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlIdentifier","l":"add(int, String, SqlParserPos)","u":"add(int,java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"","c":"","l":"add(int, T)"},{"p":"org.apache.calcite.runtime","c":"PairList","l":"add(int, T, U)","u":"add(int,T,U)"},{"p":"org.apache.calcite.runtime","c":"ImmutableIntList","l":"add(Integer)","u":"add(E)"},{"p":"org.apache.calcite.util","c":"Smalls.MySum3","l":"add(Integer, Integer)","u":"add(java.lang.Integer,java.lang.Integer)"},{"p":"org.apache.calcite.runtime","c":"AccumOperation","l":"add(List<Geometry>, Geometry)","u":"add(java.util.List,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"CollectOperation","l":"add(List<Geometry>, Geometry)","u":"add(java.util.List,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"UnionOperation","l":"add(List<Geometry>, Geometry)","u":"add(java.util.List,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.util","c":"Smalls.MyStaticSumFunction","l":"add(long, int)","u":"add(long,int)"},{"p":"org.apache.calcite.util","c":"Smalls.MySumFunction","l":"add(long, int)","u":"add(long,int)"},{"p":"org.apache.calcite.util","c":"Smalls.MyThreeParamsSumFunctionWithFilter2","l":"add(long, int, int, int)","u":"add(long,int,int,int)"},{"p":"org.apache.calcite.util","c":"Smalls.MyTwoParamsSumFunctionFilter2","l":"add(long, int, String)","u":"add(long,int,java.lang.String)"},{"p":"org.apache.calcite.util","c":"Smalls.MyThreeParamsSumFunctionWithFilter1","l":"add(long, int, String, String)","u":"add(long,int,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.LongSum","l":"add(long, long)","u":"add(long,long)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraRel.Implementor","l":"add(Map<String, String>, List<String>)","u":"add(java.util.Map,java.util.List)"},{"p":"org.apache.calcite.util","c":"Puffin.Builder","l":"add(Predicate<Puffin.Line<G, F>>, Consumer<Puffin.Line<G, F>>)","u":"add(java.util.function.Predicate,java.util.function.Consumer)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory.Builder","l":"add(RelDataTypeField)","u":"add(org.apache.calcite.rel.type.RelDataTypeField)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory.FieldInfoBuilder","l":"add(RelDataTypeField)","u":"add(org.apache.calcite.rel.type.RelDataTypeField)"},{"p":"org.apache.calcite.util","c":"Smalls.SumFunctionBadIAdd","l":"add(short, int)","u":"add(short,int)"},{"p":"org.apache.calcite.sql.parser","c":"Span","l":"add(SqlAbstractParserImpl)","u":"add(org.apache.calcite.sql.parser.SqlAbstractParserImpl)"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"add(SqlNode)","u":"add(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.parser","c":"Span","l":"add(SqlNode)","u":"add(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.util","c":"ListSqlOperatorTable","l":"add(SqlOperator)","u":"add(org.apache.calcite.sql.SqlOperator)"},{"p":"org.apache.calcite.sql.util","c":"ChainedSqlOperatorTable","l":"add(SqlOperatorTable)","u":"add(org.apache.calcite.sql.SqlOperatorTable)"},{"p":"org.apache.calcite.sql.parser","c":"Span","l":"add(SqlParserPos)","u":"add(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.linq4j.tree","c":"BlockBuilder","l":"add(Statement)","u":"add(org.apache.calcite.linq4j.tree.Statement)"},{"p":"org.apache.calcite.util","c":"NameSet","l":"add(String)","u":"add(java.lang.String)"},{"p":"org.apache.calcite.schema","c":"SchemaPlus","l":"add(String, Function)","u":"add(java.lang.String,org.apache.calcite.schema.Function)"},{"p":"org.apache.calcite.schema","c":"SchemaPlus","l":"add(String, Lattice)","u":"add(java.lang.String,org.apache.calcite.materialize.Lattice)"},{"p":"org.apache.calcite.runtime","c":"Matcher.Builder","l":"add(String, Predicate<MemoryFactory.Memory<E>>)","u":"add(java.lang.String,java.util.function.Predicate)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory.Builder","l":"add(String, RelDataType)","u":"add(java.lang.String,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory.FieldInfoBuilder","l":"add(String, RelDataType)","u":"add(java.lang.String,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"add(String, RelProtoDataType)","u":"add(java.lang.String,org.apache.calcite.rel.type.RelProtoDataType)"},{"p":"org.apache.calcite.schema","c":"SchemaPlus","l":"add(String, RelProtoDataType)","u":"add(java.lang.String,org.apache.calcite.rel.type.RelProtoDataType)"},{"p":"org.apache.calcite.jdbc","c":"CalciteRootSchema","l":"add(String, Schema)","u":"add(java.lang.String,org.apache.calcite.schema.Schema)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"add(String, Schema)","u":"add(java.lang.String,org.apache.calcite.schema.Schema)"},{"p":"org.apache.calcite.schema","c":"SchemaPlus","l":"add(String, Schema)","u":"add(java.lang.String,org.apache.calcite.schema.Schema)"},{"p":"org.apache.calcite.test","c":"ConnectionFactories","l":"add(String, Schema)","u":"add(java.lang.String,org.apache.calcite.schema.Schema)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory.Builder","l":"add(String, SqlTypeName)","u":"add(java.lang.String,org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory.FieldInfoBuilder","l":"add(String, SqlTypeName)","u":"add(java.lang.String,org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory.Builder","l":"add(String, SqlTypeName, int)","u":"add(java.lang.String,org.apache.calcite.sql.type.SqlTypeName,int)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory.FieldInfoBuilder","l":"add(String, SqlTypeName, int)","u":"add(java.lang.String,org.apache.calcite.sql.type.SqlTypeName,int)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory.Builder","l":"add(String, SqlTypeName, int, int)","u":"add(java.lang.String,org.apache.calcite.sql.type.SqlTypeName,int,int)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory.FieldInfoBuilder","l":"add(String, SqlTypeName, int, int)","u":"add(java.lang.String,org.apache.calcite.sql.type.SqlTypeName,int,int)"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoRel.Implementor","l":"add(String, String)","u":"add(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"add(String, Table)","u":"add(java.lang.String,org.apache.calcite.schema.Table)"},{"p":"org.apache.calcite.schema","c":"SchemaPlus","l":"add(String, Table)","u":"add(java.lang.String,org.apache.calcite.schema.Table)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"add(String, Table, ImmutableList<String>)","u":"add(java.lang.String,org.apache.calcite.schema.Table,com.google.common.collect.ImmutableList)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory.Builder","l":"add(String, TimeUnit, int, TimeUnit, int)","u":"add(java.lang.String,org.apache.calcite.avatica.util.TimeUnit,int,org.apache.calcite.avatica.util.TimeUnit,int)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory.FieldInfoBuilder","l":"add(String, TimeUnit, int, TimeUnit, int)","u":"add(java.lang.String,org.apache.calcite.avatica.util.TimeUnit,int,org.apache.calcite.avatica.util.TimeUnit,int)"},{"p":"","c":"","l":"add(T)"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.NumericComparison","l":"add(T, T)","u":"add(T,T)"},{"p":"org.apache.calcite.runtime","c":"PairList","l":"add(T, U)","u":"add(T,U)"},{"p":"org.apache.calcite.runtime","c":"PairList.Builder","l":"add(T, U)","u":"add(T,U)"},{"p":"org.apache.calcite.schema.impl","c":"StarTable","l":"add(Table)","u":"add(org.apache.calcite.schema.Table)"},{"p":"org.apache.calcite.rex","c":"RexInputRef","l":"add2(PairList<RexNode, String>, int, List<RelDataTypeField>)","u":"add2(org.apache.calcite.runtime.PairList,int,java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"addAggCall(AggregateCall, int, boolean, List<AggregateCall>, Map<AggregateCall, RexNode>, List<RelDataType>)","u":"addAggCall(org.apache.calcite.rel.core.AggregateCall,int,boolean,java.util.List,java.util.Map,java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"addAggCall(AggregateCall, int, List<AggregateCall>, Map<AggregateCall, RexNode>, IntPredicate)","u":"addAggCall(org.apache.calcite.rel.core.AggregateCall,int,java.util.List,java.util.Map,java.util.function.IntPredicate)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"addAggCall(AggregateCall, int, List<AggregateCall>, Map<AggregateCall, RexNode>, List<RelDataType>)","u":"addAggCall(org.apache.calcite.rel.core.AggregateCall,int,java.util.List,java.util.Map,java.util.List)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeRel.GeodeImplementContext","l":"addAggregateFunctions(Map<String, String>)","u":"addAggregateFunctions(java.util.Map)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"addAlias(SqlNode, String)","u":"addAlias(org.apache.calcite.sql.SqlNode,java.lang.String)"},{"p":"org.apache.calcite.sql2rel","c":"ReflectiveConvertletTable","l":"addAlias(SqlOperator, SqlOperator)","u":"addAlias(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlOperator)"},{"p":"org.apache.calcite.rel.type","c":"TimeFrameSet.Builder","l":"addAlias(String, String)","u":"addAlias(java.lang.String,java.lang.String)"},{"p":"","c":"","l":"addAll(Collection<? extends E>)"},{"p":"org.apache.calcite.runtime","c":"ImmutableIntList","l":"addAll(Collection<? extends Integer>)","u":"addAll(java.util.Collection)"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"addAll(Collection<? extends SqlNode>)","u":"addAll(java.util.Collection)"},{"p":"","c":"","l":"addAll(Collection<? extends T>)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet.Builder","l":"addAll(ImmutableBitSet)","u":"addAll(org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet.Builder","l":"addAll(ImmutableIntList)","u":"addAll(org.apache.calcite.util.ImmutableIntList)"},{"p":"","c":"","l":"addAll(int, Collection<? extends E>)"},{"p":"org.apache.calcite.runtime","c":"ImmutableIntList","l":"addAll(int, Collection<? extends Integer>)","u":"addAll(int,java.util.Collection)"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"addAll(int, Collection<? extends SqlNode>)","u":"addAll(int,java.util.Collection)"},{"p":"","c":"","l":"addAll(int, Collection<? extends T>)"},{"p":"org.apache.calcite.runtime","c":"PairList","l":"addAll(int, PairList<T, U>)","u":"addAll(int,org.apache.calcite.runtime.PairList)"},{"p":"org.apache.calcite.util","c":"ImmutableNullableList.Builder","l":"addAll(Iterable<? extends E>)","u":"addAll(java.lang.Iterable)"},{"p":"org.apache.calcite.util","c":"ImmutableNullableSet.Builder","l":"addAll(Iterable<? extends E>)","u":"addAll(java.lang.Iterable)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory.Builder","l":"addAll(Iterable<? extends Map.Entry<String, RelDataType>>)","u":"addAll(java.lang.Iterable)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory.FieldInfoBuilder","l":"addAll(Iterable<? extends Map.Entry<String, RelDataType>>)","u":"addAll(java.lang.Iterable)"},{"p":"org.apache.calcite.sql.parser","c":"Span","l":"addAll(Iterable<? extends SqlNode>)","u":"addAll(java.lang.Iterable)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet.Builder","l":"addAll(Iterable<Integer>)","u":"addAll(java.lang.Iterable)"},{"p":"org.apache.calcite.util","c":"ImmutableNullableList.Builder","l":"addAll(Iterator<? extends E>)","u":"addAll(java.util.Iterator)"},{"p":"org.apache.calcite.util","c":"ImmutableNullableSet.Builder","l":"addAll(Iterator<? extends E>)","u":"addAll(java.util.Iterator)"},{"p":"org.apache.calcite.runtime","c":"PairList","l":"addAll(PairList<T, U>)","u":"addAll(org.apache.calcite.runtime.PairList)"},{"p":"org.apache.calcite.rel.type","c":"TimeFrameSet.Builder","l":"addAll(TimeFrameSet)","u":"addAll(org.apache.calcite.rel.type.TimeFrameSet)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"AddAssign"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"addAssign(Expression, Expression)","u":"addAssign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"addAssign(Expression, Expression, Method)","u":"addAssign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"addAssign(Expression, Expression, Method, LambdaExpression, LambdaExpression)","u":"addAssign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.LambdaExpression,org.apache.calcite.linq4j.tree.LambdaExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"AddAssignChecked"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"addAssignChecked(Expression, Expression)","u":"addAssignChecked(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"addAssignChecked(Expression, Expression, Method)","u":"addAssignChecked(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"addAssignChecked(Expression, Expression, Method, LambdaExpression)","u":"addAssignChecked(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.LambdaExpression)"},{"p":"org.apache.calcite.sql.parser","c":"StringAndPos","l":"addCarets()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"addCarets(String, int, int, int, int)","u":"addCarets(java.lang.String,int,int,int,int)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"addCharsetAndCollation(RelDataType, RelDataTypeFactory)","u":"addCharsetAndCollation(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"AddChecked"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"addChecked(Expression, Expression)","u":"addChecked(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"addChecked(Expression, Expression, Method)","u":"addChecked(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingScope","l":"addChild(SqlValidatorNamespace, String, boolean)","u":"addChild(org.apache.calcite.sql.validate.SqlValidatorNamespace,java.lang.String,boolean)"},{"p":"org.apache.calcite.sql.validate","c":"ParameterScope","l":"addChild(SqlValidatorNamespace, String, boolean)","u":"addChild(org.apache.calcite.sql.validate.SqlValidatorNamespace,java.lang.String,boolean)"},{"p":"org.apache.calcite.sql.validate","c":"JoinScope","l":"addChild(SqlValidatorNamespace, String, boolean)","u":"addChild(org.apache.calcite.sql.validate.SqlValidatorNamespace,java.lang.String,boolean)"},{"p":"org.apache.calcite.sql.validate","c":"ListScope","l":"addChild(SqlValidatorNamespace, String, boolean)","u":"addChild(org.apache.calcite.sql.validate.SqlValidatorNamespace,java.lang.String,boolean)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope","l":"addChild(SqlValidatorNamespace, String, boolean)","u":"addChild(org.apache.calcite.sql.validate.SqlValidatorNamespace,java.lang.String,boolean)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"addColumn(String, RelDataType)","u":"addColumn(java.lang.String,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"addColumn(String, RelDataType, boolean)","u":"addColumn(java.lang.String,org.apache.calcite.rel.type.RelDataType,boolean)"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingScope","l":"addColumnNames(SqlValidatorNamespace, List<SqlMoniker>)","u":"addColumnNames(org.apache.calcite.sql.validate.SqlValidatorNamespace,java.util.List)"},{"p":"org.apache.calcite.plan.hep","c":"HepProgramBuilder","l":"addCommonRelSubExprInstruction()"},{"p":"org.apache.calcite.rex","c":"RexProgramBuilder","l":"addCondition(RexNode)","u":"addCondition(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"addConvertedNonCorrSubqs(Map<SqlNode, RexNode>)","u":"addConvertedNonCorrSubqs(java.util.Map)"},{"p":"org.apache.calcite.plan.hep","c":"HepProgramBuilder","l":"addConverters(boolean)"},{"p":"org.apache.calcite.rel.type","c":"TimeFrameSet.Builder","l":"addCore(String)","u":"addCore(java.lang.String)"},{"p":"org.apache.calcite.rel.type","c":"TimeFrameSet","l":"addDate(int, int, TimeFrame)","u":"addDate(int,int,org.apache.calcite.rel.type.TimeFrame)"},{"p":"org.apache.calcite.test","c":"DiffTestCase","l":"addDiffMask(String)","u":"addDiffMask(java.lang.String)"},{"p":"org.apache.calcite.materialize","c":"Lattice.TileBuilder","l":"addDimension(Lattice.Column)","u":"addDimension(org.apache.calcite.materialize.Lattice.Column)"},{"p":"org.apache.calcite.rel.type","c":"TimeFrameSet.Builder","l":"addDivision(String, Number, String)","u":"addDivision(java.lang.String,java.lang.Number,java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"ClassDeclarationFinder","l":"addedDeclarations"},{"p":"org.apache.calcite.util.graph","c":"AttributedDirectedGraph","l":"addEdge(V, V)","u":"addEdge(V,V)"},{"p":"org.apache.calcite.util.graph","c":"DefaultDirectedGraph","l":"addEdge(V, V)","u":"addEdge(V,V)"},{"p":"org.apache.calcite.util.graph","c":"DirectedGraph","l":"addEdge(V, V)","u":"addEdge(V,V)"},{"p":"org.apache.calcite.util.graph","c":"AttributedDirectedGraph","l":"addEdge(V, V, Object...)","u":"addEdge(V,V,java.lang.Object...)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUtil","l":"addEpsilon(double)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule.EquivalenceClasses","l":"addEquivalenceClass(RexTableInputRef, RexTableInputRef)","u":"addEquivalenceClass(org.apache.calcite.rex.RexTableInputRef,org.apache.calcite.rex.RexTableInputRef)"},{"p":"org.apache.calcite.rex","c":"RexProgramBuilder","l":"addExpr(RexNode)","u":"addExpr(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.linq4j.tree","c":"BlockBuilder","l":"addExpressionForReuse(DeclarationStatement)","u":"addExpressionForReuse(org.apache.calcite.linq4j.tree.DeclarationStatement)"},{"p":"org.apache.calcite.util.javac","c":"JavaCompilerArgs","l":"addFile(String)","u":"addFile(java.lang.String)"},{"p":"org.apache.calcite.model","c":"ModelHandler","l":"addFunctions(SchemaPlus, String, List<String>, String, String, boolean)","u":"addFunctions(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List,java.lang.String,java.lang.String,boolean)"},{"p":"org.apache.calcite.plan.hep","c":"HepProgramBuilder","l":"addGroupBegin()"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeRel.GeodeImplementContext","l":"addGroupBy(List<String>)","u":"addGroupBy(java.util.List)"},{"p":"org.apache.calcite.plan.hep","c":"HepProgramBuilder","l":"addGroupEnd()"},{"p":"org.apache.calcite.rex","c":"RexProgramBuilder","l":"addIdentity()"},{"p":"org.apache.calcite.sql.parser","c":"Span","l":"addIf(SqlNode)","u":"addIf(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.test","c":"DiffTestCase","l":"addIgnorePattern(String)","u":"addIgnorePattern(java.lang.String)"},{"p":"org.apache.calcite.jdbc","c":"CalciteRootSchema","l":"addImplicitFuncNamesToBuilder(ImmutableSortedSet.Builder<String>)","u":"addImplicitFuncNamesToBuilder(com.google.common.collect.ImmutableSortedSet.Builder)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"addImplicitFuncNamesToBuilder(ImmutableSortedSet.Builder<String>)","u":"addImplicitFuncNamesToBuilder(com.google.common.collect.ImmutableSortedSet.Builder)"},{"p":"org.apache.calcite.jdbc","c":"CalciteRootSchema","l":"addImplicitFunctionsToBuilder(ImmutableList.Builder<Function>, String, boolean)","u":"addImplicitFunctionsToBuilder(com.google.common.collect.ImmutableList.Builder,java.lang.String,boolean)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"addImplicitFunctionsToBuilder(ImmutableList.Builder<Function>, String, boolean)","u":"addImplicitFunctionsToBuilder(com.google.common.collect.ImmutableList.Builder,java.lang.String,boolean)"},{"p":"org.apache.calcite.jdbc","c":"CalciteRootSchema","l":"addImplicitTablesBasedOnNullaryFunctionsToBuilder(ImmutableSortedMap.Builder<String, Table>)","u":"addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap.Builder)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"addImplicitTablesBasedOnNullaryFunctionsToBuilder(ImmutableSortedMap.Builder<String, Table>)","u":"addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap.Builder)"},{"p":"org.apache.calcite.jdbc","c":"CalciteRootSchema","l":"addImplicitTypeNamesToBuilder(ImmutableSortedSet.Builder<String>)","u":"addImplicitTypeNamesToBuilder(com.google.common.collect.ImmutableSortedSet.Builder)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"addImplicitTypeNamesToBuilder(ImmutableSortedSet.Builder<String>)","u":"addImplicitTypeNamesToBuilder(com.google.common.collect.ImmutableSortedSet.Builder)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"addKey(ImmutableBitSet)","u":"addKey(org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"addKey(String...)","u":"addKey(java.lang.String...)"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"addLattice(RelOptLattice)","u":"addLattice(org.apache.calcite.plan.RelOptLattice)"},{"p":"org.apache.calcite.plan","c":"RelOptPlanner","l":"addLattice(RelOptLattice)","u":"addLattice(org.apache.calcite.plan.RelOptLattice)"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"addLattice(RelOptLattice)","u":"addLattice(org.apache.calcite.plan.RelOptLattice)"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"addListener(RelOptListener)","u":"addListener(org.apache.calcite.plan.RelOptListener)"},{"p":"org.apache.calcite.plan","c":"MulticastRelOptListener","l":"addListener(RelOptListener)","u":"addListener(org.apache.calcite.plan.RelOptListener)"},{"p":"org.apache.calcite.plan","c":"RelOptPlanner","l":"addListener(RelOptListener)","u":"addListener(org.apache.calcite.plan.RelOptListener)"},{"p":"org.apache.calcite.plan.volcano","c":"RuleQueue","l":"addMatch(VolcanoRuleMatch)","u":"addMatch(org.apache.calcite.plan.volcano.VolcanoRuleMatch)"},{"p":"org.apache.calcite.plan.hep","c":"HepProgramBuilder","l":"addMatchLimit(int)"},{"p":"org.apache.calcite.plan.hep","c":"HepProgramBuilder","l":"addMatchOrder(HepMatchOrder)","u":"addMatchOrder(org.apache.calcite.plan.hep.HepMatchOrder)"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"addMaterialization(RelOptMaterialization)","u":"addMaterialization(org.apache.calcite.plan.RelOptMaterialization)"},{"p":"org.apache.calcite.plan.hep","c":"HepPlanner","l":"addMaterialization(RelOptMaterialization)","u":"addMaterialization(org.apache.calcite.plan.RelOptMaterialization)"},{"p":"org.apache.calcite.plan","c":"RelOptPlanner","l":"addMaterialization(RelOptMaterialization)","u":"addMaterialization(org.apache.calcite.plan.RelOptMaterialization)"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"addMaterialization(RelOptMaterialization)","u":"addMaterialization(org.apache.calcite.plan.RelOptMaterialization)"},{"p":"org.apache.calcite.materialize","c":"Lattice.Builder","l":"addMeasure(Lattice.Measure)","u":"addMeasure(org.apache.calcite.materialize.Lattice.Measure)"},{"p":"org.apache.calcite.materialize","c":"Lattice.TileBuilder","l":"addMeasure(Lattice.Measure)","u":"addMeasure(org.apache.calcite.materialize.Lattice.Measure)"},{"p":"org.apache.calcite.schema.impl","c":"AggregateFunctionImpl","l":"addMethod"},{"p":"org.apache.calcite.schema.impl","c":"ReflectiveFunctionBase.ParameterListBuilder","l":"addMethodParameters(Method)","u":"addMethodParameters(java.lang.reflect.Method)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"addMonotonic(String)","u":"addMonotonic(java.lang.String)"},{"p":"org.apache.calcite.rel.type","c":"TimeFrameSet.Builder","l":"addMultiple(String, Number, String)","u":"addMultiple(java.lang.String,java.lang.Number,java.lang.String)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraRel.Implementor","l":"addOrder(List<String>)","u":"addOrder(java.util.List)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeRel.GeodeImplementContext","l":"addOrderByFields(List<String>)","u":"addOrderByFields(java.util.List)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Builder","l":"addOrderItem(List<SqlNode>, RelFieldCollation)","u":"addOrderItem(java.util.List,org.apache.calcite.rel.RelFieldCollation)"},{"p":"org.apache.calcite.sql.validate","c":"MatchRecognizeScope","l":"addPatternVar(String)","u":"addPatternVar(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"AddPointOperation","l":"AddPointOperation(Geometry, int)","u":"%3Cinit%3E(org.locationtech.jts.geom.Geometry,int)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeRel.GeodeImplementContext","l":"addPredicates(List<String>)","u":"addPredicates(java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexProgramBuilder","l":"addProject(int, int, String)","u":"addProject(int,int,java.lang.String)"},{"p":"org.apache.calcite.rex","c":"RexProgramBuilder","l":"addProject(int, RexNode, String)","u":"addProject(int,org.apache.calcite.rex.RexNode,java.lang.String)"},{"p":"org.apache.calcite.rex","c":"RexProgramBuilder","l":"addProject(int, String)","u":"addProject(int,java.lang.String)"},{"p":"org.apache.calcite.rex","c":"RexProgramBuilder","l":"addProject(RexNode, String)","u":"addProject(org.apache.calcite.rex.RexNode,java.lang.String)"},{"p":"org.apache.calcite.materialize","c":"LatticeSuggester","l":"addQuery(RelNode)","u":"addQuery(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.type","c":"TimeFrameSet.Builder","l":"addQuotient(String, String, String)","u":"addQuotient(java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Config","l":"addRelBuilderConfigTransform(UnaryOperator<RelBuilder.Config>)","u":"addRelBuilderConfigTransform(java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"addRelTraitDef(RelTraitDef)","u":"addRelTraitDef(org.apache.calcite.plan.RelTraitDef)"},{"p":"org.apache.calcite.plan","c":"RelOptPlanner","l":"addRelTraitDef(RelTraitDef)","u":"addRelTraitDef(org.apache.calcite.plan.RelTraitDef)"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"addRelTraitDef(RelTraitDef)","u":"addRelTraitDef(org.apache.calcite.plan.RelTraitDef)"},{"p":"org.apache.calcite.rel.rules","c":"LoptMultiJoin","l":"addRemovableOuterJoinFactor(int)"},{"p":"org.apache.calcite.rel.rules","c":"LoptMultiJoin","l":"addRemovableSelfJoinPair(int, int)","u":"addRemovableSelfJoinPair(int,int)"},{"p":"org.apache.calcite.rel.type","c":"TimeFrameSet.Builder","l":"addRollup(String, String)","u":"addRollup(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.SparkHandler.RuleSetBuilder","l":"addRule(RelOptRule)","u":"addRule(org.apache.calcite.plan.RelOptRule)"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"addRule(RelOptRule)","u":"addRule(org.apache.calcite.plan.RelOptRule)"},{"p":"org.apache.calcite.plan","c":"RelOptPlanner","l":"addRule(RelOptRule)","u":"addRule(org.apache.calcite.plan.RelOptRule)"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"addRule(RelOptRule)","u":"addRule(org.apache.calcite.plan.RelOptRule)"},{"p":"org.apache.calcite.test","c":"MockRelOptPlanner","l":"addRule(RelOptRule)","u":"addRule(org.apache.calcite.plan.RelOptRule)"},{"p":"org.apache.calcite.plan.hep","c":"HepProgramBuilder","l":"addRuleByDescription(String)","u":"addRuleByDescription(java.lang.String)"},{"p":"org.apache.calcite.plan.hep","c":"HepProgramBuilder","l":"addRuleClass(Class<R>)","u":"addRuleClass(java.lang.Class)"},{"p":"org.apache.calcite.plan.hep","c":"HepProgramBuilder","l":"addRuleCollection(Collection<RelOptRule>)","u":"addRuleCollection(java.util.Collection)"},{"p":"org.apache.calcite.plan.hep","c":"HepProgramBuilder","l":"addRuleInstance(RelOptRule)","u":"addRuleInstance(org.apache.calcite.plan.RelOptRule)"},{"p":"org.apache.calcite.test","c":"CalciteAssert","l":"addSchema(SchemaPlus, CalciteAssert.SchemaSpec...)","u":"addSchema(org.apache.calcite.schema.SchemaPlus,org.apache.calcite.test.CalciteAssert.SchemaSpec...)"},{"p":"org.apache.calcite.rel.rel2sql","c":"RelToSqlConverter","l":"addSelect(List<SqlNode>, SqlNode, RelDataType)","u":"addSelect(java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor","l":"addSelect(List<SqlNode>, SqlNode, RelDataType)","u":"addSelect(java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeRel.GeodeImplementContext","l":"addSelectFields(Map<String, String>)","u":"addSelectFields(java.util.Map)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbRel.Implementor","l":"addSelectFields(Map<String, String>)","u":"addSelectFields(java.util.Map)"},{"p":"org.apache.calcite.server","c":"CalciteServer","l":"addStatement(CalciteConnection, Meta.StatementHandle)","u":"addStatement(org.apache.calcite.jdbc.CalciteConnection,org.apache.calcite.avatica.Meta.StatementHandle)"},{"p":"org.apache.calcite.adapter.pig","c":"PigRel.Implementor","l":"addStatement(String)","u":"addStatement(java.lang.String)"},{"p":"org.apache.calcite.plan.hep","c":"HepProgramBuilder","l":"addSubprogram(HepProgram)","u":"addSubprogram(org.apache.calcite.plan.hep.HepProgram)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockSchema","l":"addTable(String)","u":"addTable(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"Hook","l":"addThread(Consumer<T>)","u":"addThread(java.util.function.Consumer)"},{"p":"org.apache.calcite.runtime","c":"Hook","l":"addThread(Function<T, R>)","u":"addThread(com.google.common.base.Function)"},{"p":"org.apache.calcite.materialize","c":"Lattice.Builder","l":"addTile(Lattice.Tile)","u":"addTile(org.apache.calcite.materialize.Lattice.Tile)"},{"p":"org.apache.calcite.rel.type","c":"TimeFrameSet","l":"addTimestamp(long, long, TimeFrame)","u":"addTimestamp(long,long,org.apache.calcite.rel.type.TimeFrame)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"addToSelectList(List<SqlNode>, Set<String>, List<Map.Entry<String, RelDataType>>, SqlNode, SelectScope, boolean)","u":"addToSelectList(java.util.List,java.util.Set,java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SelectScope,boolean)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"addTrait(T, RelTrait)","u":"addTrait(T,org.apache.calcite.plan.RelTrait)"},{"p":"org.apache.calcite.test","c":"ConnectionFactories","l":"addType(String, RelProtoDataType)","u":"addType(java.lang.String,org.apache.calcite.rel.type.RelProtoDataType)"},{"p":"org.apache.calcite.util.graph","c":"DefaultDirectedGraph","l":"addVertex(V)"},{"p":"org.apache.calcite.util.graph","c":"DirectedGraph","l":"addVertex(V)"},{"p":"org.apache.calcite.sql.validate","c":"SelectScope","l":"addWindowName(String)","u":"addWindowName(java.lang.String)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"addWrap(Object)","u":"addWrap(java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"AddZTransformer","l":"AddZTransformer(double)","u":"%3Cinit%3E(double)"},{"p":"org.apache.calcite.util","c":"Pair","l":"adjacents(Iterable<? extends T>)","u":"adjacents(java.lang.Iterable)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"adjustInputRef(SqlToRelConverter.Blackboard, RexInputRef)","u":"adjustInputRef(org.apache.calcite.sql2rel.SqlToRelConverter.Blackboard,org.apache.calcite.rex.RexInputRef)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"adjustKeys(List<Integer>, int)","u":"adjustKeys(java.util.List,int)"},{"p":"org.apache.calcite.sql","c":"SqlBinaryOperator","l":"adjustType(SqlValidator, SqlCall, RelDataType)","u":"adjustType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"adjustType(SqlValidator, SqlCall, RelDataType)","u":"adjustType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql","c":"SqlPostfixOperator","l":"adjustType(SqlValidator, SqlCall, RelDataType)","u":"adjustType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql","c":"SqlPrefixOperator","l":"adjustType(SqlValidator, SqlCall, RelDataType)","u":"adjustType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"adjustTypeForArrayConstructor(RelDataType, SqlOperatorBinding)","u":"adjustTypeForArrayConstructor(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"adjustTypeForArrayFunctions(RelDataType, SqlOperatorBinding, int...)","u":"adjustTypeForArrayFunctions(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlOperatorBinding,int...)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"adjustTypeForMapConstructor(Pair<RelDataType, RelDataType>, SqlOperatorBinding)","u":"adjustTypeForMapConstructor(org.apache.calcite.util.Pair,org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.chinook","c":"EnvironmentFairy.User","l":"ADMIN"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"adoptConvention(Convention)","u":"adoptConvention(org.apache.calcite.plan.Convention)"},{"p":"org.apache.calcite.rel.core","c":"Match","l":"after"},{"p":"org.apache.calcite.rel.mutable","c":"MutableMatch","l":"after"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter.FrameImpl","l":"after()"},{"p":"org.apache.calcite.util","c":"Puffin.Builder","l":"after(Consumer<Puffin.Context<G, F>>)","u":"after(java.util.function.Consumer)"},{"p":"org.apache.calcite.util","c":"Puffin.Builder","l":"afterSource(Consumer<Puffin.Context<G, F>>)","u":"afterSource(java.util.function.Consumer)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"afterTableFunction(SqlToRelConverter.Blackboard, SqlCall, LogicalTableFunctionScan)","u":"afterTableFunction(org.apache.calcite.sql2rel.SqlToRelConverter.Blackboard,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.logical.LogicalTableFunctionScan)"},{"p":"org.apache.calcite.materialize","c":"Lattice.Measure","l":"agg"},{"p":"org.apache.calcite.model","c":"JsonMeasure","l":"agg"},{"p":"org.apache.calcite.rel.rules","c":"AggregateUnionAggregateRule.Config","l":"AGG_FIRST"},{"p":"org.apache.calcite.adapter.enumerable","c":"WinAggImplementor.SeekType","l":"AGG_INDEX"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"AGG_LAMBDA_FACTORY_ACC_ADDER"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"AGG_LAMBDA_FACTORY_ACC_INITIALIZER"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"AGG_LAMBDA_FACTORY_ACC_RESULT_SELECTOR"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"AGG_LAMBDA_FACTORY_ACC_SINGLE_GROUP_RESULT_SELECTOR"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"AGG_M2M"},{"p":"org.apache.calcite.sql.fun","c":"SqlInternalOperators","l":"AGG_M2M"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"AGG_M2V"},{"p":"org.apache.calcite.sql.fun","c":"SqlInternalOperators","l":"AGG_M2V"},{"p":"org.apache.calcite.rel.rules","c":"AggregateUnionAggregateRule.Config","l":"AGG_SECOND"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"AGG_SUM"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"AGG_SUM_EMPTY_IS_ZERO"},{"p":"org.apache.calcite.adapter.enumerable.impl","c":"AggAddContextImpl","l":"AggAddContextImpl(BlockBuilder, List<Expression>)","u":"%3Cinit%3E(org.apache.calcite.linq4j.tree.BlockBuilder,java.util.List)"},{"p":"org.apache.calcite.rel.core","c":"Aggregate.AggCallBinding","l":"AggCallBinding(RelDataTypeFactory, SqlAggFunction, List<RelDataType>, int, boolean)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.sql.SqlAggFunction,java.util.List,int,boolean)"},{"p":"org.apache.calcite.rel.core","c":"Aggregate.AggCallBinding","l":"AggCallBinding(RelDataTypeFactory, SqlAggFunction, List<RelDataType>, List<RelDataType>, int, boolean)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.sql.SqlAggFunction,java.util.List,java.util.List,int,boolean)"},{"p":"org.apache.calcite.rel.core","c":"Aggregate","l":"aggCalls"},{"p":"org.apache.calcite.rel.core","c":"Window.Group","l":"aggCalls"},{"p":"org.apache.calcite.rel.mutable","c":"MutableAggregate","l":"aggCalls"},{"p":"org.apache.calcite.adapter.enumerable","c":"AggImpState","l":"aggIdx"},{"p":"org.apache.calcite.adapter.enumerable","c":"AggImpState","l":"AggImpState(int, AggregateCall, boolean)","u":"%3Cinit%3E(int,org.apache.calcite.rel.core.AggregateCall,boolean)"},{"p":"org.apache.calcite.sql","c":"SqlPivot","l":"aggList"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"AGGREGATE"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules","l":"AGGREGATE"},{"p":"org.apache.calcite.rel.hint","c":"HintPredicates","l":"AGGREGATE"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRules","l":"AGGREGATE"},{"p":"org.apache.calcite.rel.rules","c":"MeasureRules","l":"AGGREGATE"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules.RemoveEmptySingleRule.RemoveEmptySingleRuleConfig","l":"AGGREGATE"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"AGGREGATE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"AGGREGATE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"AGGREGATE_ANY_PULL_UP_CONSTANTS"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"AGGREGATE_CASE_TO_FILTER"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"AGGREGATE_EXPAND_DISTINCT_AGGREGATES"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"AGGREGATE_EXPAND_DISTINCT_AGGREGATES_TO_JOIN"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"AGGREGATE_EXPAND_WITHIN_DISTINCT"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules","l":"AGGREGATE_FACTORY"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules","l":"AGGREGATE_FILTER_TRANSPOSE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"AGGREGATE_FILTER_TRANSPOSE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"AGGREGATE_FN"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules","l":"AGGREGATE_INSTANCE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"AGGREGATE_JOIN_JOIN_REMOVE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"AGGREGATE_JOIN_REMOVE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"AGGREGATE_JOIN_TRANSPOSE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"AGGREGATE_JOIN_TRANSPOSE_EXTENDED"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"AGGREGATE_MERGE"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules","l":"AGGREGATE_PROJECT"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"AGGREGATE_PROJECT_MERGE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"AGGREGATE_PROJECT_PULL_UP_CONSTANTS"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"AGGREGATE_PROJECT_STAR_TABLE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"AGGREGATE_REDUCE_FUNCTIONS"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"AGGREGATE_REMOVE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"AGGREGATE_STAR_TABLE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"AGGREGATE_UNION_AGGREGATE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"AGGREGATE_UNION_AGGREGATE_FIRST"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"AGGREGATE_UNION_AGGREGATE_SECOND"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"AGGREGATE_UNION_TRANSPOSE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"AGGREGATE_VALUES"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"aggregate(Enumerable<TSource>, Function2<TSource, TSource, TSource>)","u":"aggregate(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"aggregate(Enumerable<TSource>, TAccumulate, Function2<TAccumulate, TSource, TAccumulate>)","u":"aggregate(org.apache.calcite.linq4j.Enumerable,TAccumulate,org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"aggregate(Enumerable<TSource>, TAccumulate, Function2<TAccumulate, TSource, TAccumulate>, Function1<TAccumulate, TResult>)","u":"aggregate(org.apache.calcite.linq4j.Enumerable,TAccumulate,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"aggregate(Function2<T, T, T>)","u":"aggregate(org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"aggregate(Function2<TSource, TSource, TSource>)","u":"aggregate(org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"aggregate(FunctionExpression<Function2<T, T, T>>)","u":"aggregate(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"aggregate(FunctionExpression<Function2<T, T, T>>)","u":"aggregate(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"aggregate(FunctionExpression<Function2<TSource, TSource, TSource>>)"},{"p":"","c":"","l":"aggregate(FunctionExpression<Function2<TSource, TSource, TSource>>)"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoTable.MongoQueryable","l":"aggregate(List<Map.Entry<String, Class>>, List<String>)","u":"aggregate(java.util.List,java.util.List)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"aggregate(Queryable<T>, FunctionExpression<Function2<T, T, T>>)","u":"aggregate(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"aggregate(Queryable<T>, FunctionExpression<Function2<T, T, T>>)","u":"aggregate(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"aggregate(Queryable<T>, FunctionExpression<Function2<T, T, T>>)","u":"aggregate(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"aggregate(Queryable<T>, TAccumulate, FunctionExpression<Function2<TAccumulate, T, TAccumulate>>)","u":"aggregate(org.apache.calcite.linq4j.Queryable,TAccumulate,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"aggregate(Queryable<T>, TAccumulate, FunctionExpression<Function2<TAccumulate, T, TAccumulate>>)","u":"aggregate(org.apache.calcite.linq4j.Queryable,TAccumulate,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"aggregate(Queryable<T>, TAccumulate, FunctionExpression<Function2<TAccumulate, T, TAccumulate>>)","u":"aggregate(org.apache.calcite.linq4j.Queryable,TAccumulate,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"aggregate(Queryable<T>, TAccumulate, FunctionExpression<Function2<TAccumulate, T, TAccumulate>>, FunctionExpression<Function1<TAccumulate, TResult>>)","u":"aggregate(org.apache.calcite.linq4j.Queryable,TAccumulate,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"aggregate(Queryable<T>, TAccumulate, FunctionExpression<Function2<TAccumulate, T, TAccumulate>>, FunctionExpression<Function1<TAccumulate, TResult>>)","u":"aggregate(org.apache.calcite.linq4j.Queryable,TAccumulate,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"aggregate(Queryable<T>, TAccumulate, FunctionExpression<Function2<TAccumulate, T, TAccumulate>>, FunctionExpression<Function1<TAccumulate, TResult>>)","u":"aggregate(org.apache.calcite.linq4j.Queryable,TAccumulate,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"aggregate(RelBuilder.GroupKey, Iterable<? extends RelBuilder.AggCall>)","u":"aggregate(org.apache.calcite.tools.RelBuilder.GroupKey,java.lang.Iterable)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"aggregate(RelBuilder.GroupKey, List<AggregateCall>)","u":"aggregate(org.apache.calcite.tools.RelBuilder.GroupKey,java.util.List)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"aggregate(RelBuilder.GroupKey, RelBuilder.AggCall...)","u":"aggregate(org.apache.calcite.tools.RelBuilder.GroupKey,org.apache.calcite.tools.RelBuilder.AggCall...)"},{"p":"org.apache.calcite.rel.core","c":"Aggregate","l":"Aggregate(RelInput)","u":"%3Cinit%3E(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel.core","c":"Aggregate","l":"Aggregate(RelOptCluster, RelTraitSet, List<RelHint>, RelNode, ImmutableBitSet, List<ImmutableBitSet>, List<AggregateCall>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)"},{"p":"org.apache.calcite.rel.core","c":"Aggregate","l":"Aggregate(RelOptCluster, RelTraitSet, RelNode, boolean, ImmutableBitSet, List<ImmutableBitSet>, List<AggregateCall>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)"},{"p":"org.apache.calcite.rel.core","c":"Aggregate","l":"Aggregate(RelOptCluster, RelTraitSet, RelNode, ImmutableBitSet, List<ImmutableBitSet>, List<AggregateCall>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"aggregate(TAccumulate, Function2<TAccumulate, T, TAccumulate>)","u":"aggregate(TAccumulate,org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"aggregate(TAccumulate, Function2<TAccumulate, T, TAccumulate>, Function1<TAccumulate, TResult>)","u":"aggregate(TAccumulate,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"aggregate(TAccumulate, Function2<TAccumulate, TSource, TAccumulate>)","u":"aggregate(TAccumulate,org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"aggregate(TAccumulate, Function2<TAccumulate, TSource, TAccumulate>, Function1<TAccumulate, TResult>)","u":"aggregate(TAccumulate,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"aggregate(TAccumulate, FunctionExpression<Function2<TAccumulate, T, TAccumulate>>)","u":"aggregate(TAccumulate,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"aggregate(TAccumulate, FunctionExpression<Function2<TAccumulate, T, TAccumulate>>)","u":"aggregate(TAccumulate,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"aggregate(TAccumulate, FunctionExpression<Function2<TAccumulate, T, TAccumulate>>, FunctionExpression<Function1<TAccumulate, TResult>>)","u":"aggregate(TAccumulate,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"aggregate(TAccumulate, FunctionExpression<Function2<TAccumulate, T, TAccumulate>>, FunctionExpression<Function1<TAccumulate, TResult>>)","u":"aggregate(TAccumulate,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"aggregate(TAccumulate, FunctionExpression<Function2<TAccumulate, TSource, TAccumulate>>)"},{"p":"","c":"","l":"aggregate(TAccumulate, FunctionExpression<Function2<TAccumulate, TSource, TAccumulate>>)"},{"p":"","c":"","l":"aggregate(TAccumulate, FunctionExpression<Function2<TAccumulate, TSource, TAccumulate>>, FunctionExpression<Function1<TAccumulate, TResult>>)"},{"p":"","c":"","l":"aggregate(TAccumulate, FunctionExpression<Function2<TAccumulate, TSource, TAccumulate>>, FunctionExpression<Function1<TAccumulate, TResult>>)"},{"p":"org.apache.calcite.rel.rules","c":"MeasureRules","l":"AGGREGATE2"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil.FlatAggregate","l":"aggregateCall"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"aggregateCall(AggregateCall)","u":"aggregateCall(org.apache.calcite.rel.core.AggregateCall)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"aggregateCall(AggregateCall, Mapping)","u":"aggregateCall(org.apache.calcite.rel.core.AggregateCall,org.apache.calcite.util.mapping.Mapping)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"aggregateCall(SqlAggFunction, boolean, boolean, boolean, RexNode, ImmutableList<RexNode>, ImmutableList<RexNode>, String, ImmutableList<RexNode>, ImmutableList<RexNode>)","u":"aggregateCall(org.apache.calcite.sql.SqlAggFunction,boolean,boolean,boolean,org.apache.calcite.rex.RexNode,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList,java.lang.String,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"aggregateCall(SqlAggFunction, boolean, boolean, RexNode, String, Iterable<? extends RexNode>)","u":"aggregateCall(org.apache.calcite.sql.SqlAggFunction,boolean,boolean,org.apache.calcite.rex.RexNode,java.lang.String,java.lang.Iterable)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"aggregateCall(SqlAggFunction, boolean, boolean, RexNode, String, RexNode...)","u":"aggregateCall(org.apache.calcite.sql.SqlAggFunction,boolean,boolean,org.apache.calcite.rex.RexNode,java.lang.String,org.apache.calcite.rex.RexNode...)"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"AggregateCall(SqlAggFunction, boolean, List<Integer>, RelDataType, String)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlAggFunction,boolean,java.util.List,org.apache.calcite.rel.type.RelDataType,java.lang.String)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"aggregateCall(SqlAggFunction, boolean, RexNode, String, Iterable<? extends RexNode>)","u":"aggregateCall(org.apache.calcite.sql.SqlAggFunction,boolean,org.apache.calcite.rex.RexNode,java.lang.String,java.lang.Iterable)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"aggregateCall(SqlAggFunction, boolean, RexNode, String, RexNode...)","u":"aggregateCall(org.apache.calcite.sql.SqlAggFunction,boolean,org.apache.calcite.rex.RexNode,java.lang.String,org.apache.calcite.rex.RexNode...)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"aggregateCall(SqlAggFunction, Iterable<? extends RexNode>)","u":"aggregateCall(org.apache.calcite.sql.SqlAggFunction,java.lang.Iterable)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"aggregateCall(SqlAggFunction, RexNode...)","u":"aggregateCall(org.apache.calcite.sql.SqlAggFunction,org.apache.calcite.rex.RexNode...)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"aggregateCall(SqlParserPos, SqlAggFunction, boolean, boolean, boolean, RexNode, ImmutableList<RexNode>, ImmutableList<RexNode>, String, ImmutableList<RexNode>, ImmutableList<RexNode>)","u":"aggregateCall(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlAggFunction,boolean,boolean,boolean,org.apache.calcite.rex.RexNode,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList,java.lang.String,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"aggregateCall(SqlParserPos, SqlAggFunction, Iterable<? extends RexNode>)","u":"aggregateCall(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlAggFunction,java.lang.Iterable)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"aggregateCall(SqlParserPos, SqlAggFunction, RexNode...)","u":"aggregateCall(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlAggFunction,org.apache.calcite.rex.RexNode...)"},{"p":"org.apache.calcite.rel.core","c":"Match","l":"aggregateCalls"},{"p":"org.apache.calcite.rel.core","c":"Match","l":"aggregateCallsPreVar"},{"p":"org.apache.calcite.rel.rules","c":"AggregateCaseToFilterRule","l":"AggregateCaseToFilterRule(AggregateCaseToFilterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.AggregateCaseToFilterRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateCaseToFilterRule","l":"AggregateCaseToFilterRule(RelBuilderFactory, String)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory,java.lang.String)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateExpandDistinctAggregatesRule","l":"AggregateExpandDistinctAggregatesRule(Class<? extends Aggregate>, boolean, RelBuilderFactory)","u":"%3Cinit%3E(java.lang.Class,boolean,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateExpandDistinctAggregatesRule","l":"AggregateExpandDistinctAggregatesRule(Class<? extends LogicalAggregate>, boolean, RelFactories.JoinFactory)","u":"%3Cinit%3E(java.lang.Class,boolean,org.apache.calcite.rel.core.RelFactories.JoinFactory)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateExpandDistinctAggregatesRule","l":"AggregateExpandDistinctAggregatesRule(Class<? extends LogicalAggregate>, RelFactories.JoinFactory)","u":"%3Cinit%3E(java.lang.Class,org.apache.calcite.rel.core.RelFactories.JoinFactory)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateExpandWithinDistinctRule","l":"AggregateExpandWithinDistinctRule(AggregateExpandWithinDistinctRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.AggregateExpandWithinDistinctRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateExtractProjectRule","l":"AggregateExtractProjectRule(AggregateExtractProjectRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.AggregateExtractProjectRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateExtractProjectRule","l":"AggregateExtractProjectRule(Class<? extends Aggregate>, Class<? extends RelNode>, RelBuilderFactory)","u":"%3Cinit%3E(java.lang.Class,java.lang.Class,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateExtractProjectRule","l":"AggregateExtractProjectRule(RelOptRuleOperand, RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.Struct","l":"aggregateFactory"},{"p":"org.apache.calcite.rel.rules","c":"AggregateFilterTransposeRule","l":"AggregateFilterTransposeRule(AggregateFilterTransposeRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.AggregateFilterTransposeRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateFilterTransposeRule","l":"AggregateFilterTransposeRule(RelOptRuleOperand, RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"aggregateIllegalInClause(String)","u":"aggregateIllegalInClause(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"aggregateIllegalInOrderBy()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"aggregateInFilterIllegal()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"aggregateInWithinDistinctIllegal()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"aggregateInWithinGroupIllegal()"},{"p":"org.apache.calcite.rel.rules","c":"AggregateJoinJoinRemoveRule","l":"AggregateJoinJoinRemoveRule(AggregateJoinJoinRemoveRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.AggregateJoinJoinRemoveRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateJoinJoinRemoveRule","l":"AggregateJoinJoinRemoveRule(Class<? extends Aggregate>, Class<? extends Join>, RelBuilderFactory)","u":"%3Cinit%3E(java.lang.Class,java.lang.Class,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateJoinRemoveRule","l":"AggregateJoinRemoveRule(AggregateJoinRemoveRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.AggregateJoinRemoveRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateJoinRemoveRule","l":"AggregateJoinRemoveRule(Class<? extends Aggregate>, Class<? extends Join>, RelBuilderFactory)","u":"%3Cinit%3E(java.lang.Class,java.lang.Class,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateJoinTransposeRule","l":"AggregateJoinTransposeRule(AggregateJoinTransposeRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.AggregateJoinTransposeRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateJoinTransposeRule","l":"AggregateJoinTransposeRule(Class<? extends Aggregate>, Class<? extends Join>, RelBuilderFactory, boolean)","u":"%3Cinit%3E(java.lang.Class,java.lang.Class,org.apache.calcite.tools.RelBuilderFactory,boolean)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateJoinTransposeRule","l":"AggregateJoinTransposeRule(Class<? extends Aggregate>, RelFactories.AggregateFactory, Class<? extends Join>, RelFactories.JoinFactory)","u":"%3Cinit%3E(java.lang.Class,org.apache.calcite.rel.core.RelFactories.AggregateFactory,java.lang.Class,org.apache.calcite.rel.core.RelFactories.JoinFactory)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateJoinTransposeRule","l":"AggregateJoinTransposeRule(Class<? extends Aggregate>, RelFactories.AggregateFactory, Class<? extends Join>, RelFactories.JoinFactory, boolean)","u":"%3Cinit%3E(java.lang.Class,org.apache.calcite.rel.core.RelFactories.AggregateFactory,java.lang.Class,org.apache.calcite.rel.core.RelFactories.JoinFactory,boolean)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateJoinTransposeRule","l":"AggregateJoinTransposeRule(Class<? extends Aggregate>, RelFactories.AggregateFactory, Class<? extends Join>, RelFactories.JoinFactory, RelFactories.ProjectFactory)","u":"%3Cinit%3E(java.lang.Class,org.apache.calcite.rel.core.RelFactories.AggregateFactory,java.lang.Class,org.apache.calcite.rel.core.RelFactories.JoinFactory,org.apache.calcite.rel.core.RelFactories.ProjectFactory)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateJoinTransposeRule","l":"AggregateJoinTransposeRule(Class<? extends Aggregate>, RelFactories.AggregateFactory, Class<? extends Join>, RelFactories.JoinFactory, RelFactories.ProjectFactory, boolean)","u":"%3Cinit%3E(java.lang.Class,org.apache.calcite.rel.core.RelFactories.AggregateFactory,java.lang.Class,org.apache.calcite.rel.core.RelFactories.JoinFactory,org.apache.calcite.rel.core.RelFactories.ProjectFactory,boolean)"},{"p":"org.apache.calcite.rel.rules","c":"MeasureRules.AggregateMeasure2Rule","l":"AggregateMeasure2Rule(MeasureRules.AggregateMeasure2RuleConfig)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.MeasureRules.AggregateMeasure2RuleConfig)"},{"p":"org.apache.calcite.rel.rules","c":"MeasureRules.AggregateMeasureRule","l":"AggregateMeasureRule(MeasureRules.AggregateMeasureRuleConfig)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.MeasureRules.AggregateMeasureRuleConfig)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateMergeRule","l":"AggregateMergeRule(AggregateMergeRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.AggregateMergeRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateMergeRule","l":"AggregateMergeRule(RelOptRuleOperand, RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"aggregateMissingWithinGroupClause(String)","u":"aggregateMissingWithinGroupClause(java.lang.String)"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode","l":"AggregateNode(Compiler, Aggregate)","u":"%3Cinit%3E(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.Aggregate)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateProjectMergeRule","l":"AggregateProjectMergeRule(AggregateProjectMergeRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.AggregateProjectMergeRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateProjectMergeRule","l":"AggregateProjectMergeRule(Class<? extends Aggregate>, Class<? extends Project>, RelBuilderFactory)","u":"%3Cinit%3E(java.lang.Class,java.lang.Class,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewAggregateRule.Config","l":"aggregateProjectPullUpConstantsRule()"},{"p":"org.apache.calcite.rel.rules","c":"AggregateProjectPullUpConstantsRule","l":"AggregateProjectPullUpConstantsRule(AggregateProjectPullUpConstantsRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.AggregateProjectPullUpConstantsRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateProjectPullUpConstantsRule","l":"AggregateProjectPullUpConstantsRule(Class<? extends Aggregate>, Class<? extends RelNode>, RelBuilderFactory, String)","u":"%3Cinit%3E(java.lang.Class,java.lang.Class,org.apache.calcite.tools.RelBuilderFactory,java.lang.String)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateProjectStarTableRule","l":"AggregateProjectStarTableRule(AggregateProjectStarTableRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.AggregateProjectStarTableRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateReduceFunctionsRule","l":"AggregateReduceFunctionsRule(AggregateReduceFunctionsRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.AggregateReduceFunctionsRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateReduceFunctionsRule","l":"AggregateReduceFunctionsRule(Class<? extends Aggregate>, RelBuilderFactory, EnumSet<SqlKind>)","u":"%3Cinit%3E(java.lang.Class,org.apache.calcite.tools.RelBuilderFactory,java.util.EnumSet)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateReduceFunctionsRule","l":"AggregateReduceFunctionsRule(RelOptRuleOperand, RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateRemoveRule","l":"AggregateRemoveRule(AggregateRemoveRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.AggregateRemoveRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateRemoveRule","l":"AggregateRemoveRule(Class<? extends Aggregate>)","u":"%3Cinit%3E(java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateRemoveRule","l":"AggregateRemoveRule(Class<? extends Aggregate>, RelBuilderFactory)","u":"%3Cinit%3E(java.lang.Class,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"aggregateRex(RelBuilder.GroupKey, boolean, Iterable<? extends RexNode>)","u":"aggregateRex(org.apache.calcite.tools.RelBuilder.GroupKey,boolean,java.lang.Iterable)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"aggregateRex(RelBuilder.GroupKey, RexNode...)","u":"aggregateRex(org.apache.calcite.tools.RelBuilder.GroupKey,org.apache.calcite.rex.RexNode...)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateStarTableRule","l":"AggregateStarTableRule(AggregateStarTableRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.AggregateStarTableRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateStarTableRule","l":"AggregateStarTableRule(RelOptRuleOperand, RelBuilderFactory, String)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.tools.RelBuilderFactory,java.lang.String)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateUnionAggregateRule","l":"AggregateUnionAggregateRule(AggregateUnionAggregateRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.AggregateUnionAggregateRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateUnionAggregateRule","l":"AggregateUnionAggregateRule(Class<? extends Aggregate>, Class<? extends Union>, Class<? extends RelNode>, Class<? extends RelNode>, RelBuilderFactory, String)","u":"%3Cinit%3E(java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,org.apache.calcite.tools.RelBuilderFactory,java.lang.String)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateUnionAggregateRule","l":"AggregateUnionAggregateRule(Class<? extends Aggregate>, RelFactories.AggregateFactory, Class<? extends Union>, RelFactories.SetOpFactory)","u":"%3Cinit%3E(java.lang.Class,org.apache.calcite.rel.core.RelFactories.AggregateFactory,java.lang.Class,org.apache.calcite.rel.core.RelFactories.SetOpFactory)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateUnionTransposeRule","l":"AggregateUnionTransposeRule(AggregateUnionTransposeRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.AggregateUnionTransposeRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateUnionTransposeRule","l":"AggregateUnionTransposeRule(Class<? extends Aggregate>, Class<? extends Union>, RelBuilderFactory)","u":"%3Cinit%3E(java.lang.Class,java.lang.Class,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateUnionTransposeRule","l":"AggregateUnionTransposeRule(Class<? extends Aggregate>, RelFactories.AggregateFactory, Class<? extends Union>, RelFactories.SetOpFactory)","u":"%3Cinit%3E(java.lang.Class,org.apache.calcite.rel.core.RelFactories.AggregateFactory,java.lang.Class,org.apache.calcite.rel.core.RelFactories.SetOpFactory)"},{"p":"org.apache.calcite.tools","c":"RelBuilder.Config","l":"aggregateUnique()"},{"p":"org.apache.calcite.rel.rules","c":"AggregateValuesRule","l":"AggregateValuesRule(AggregateValuesRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.AggregateValuesRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateValuesRule","l":"AggregateValuesRule(RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.adapter.enumerable","c":"AggContext","l":"aggregation()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableAggregateBase.AggContextImpl","l":"aggregation()"},{"p":"org.apache.calcite.adapter.enumerable.impl","c":"AggResetContextImpl","l":"AggResetContextImpl(BlockBuilder, List<Expression>)","u":"%3Cinit%3E(org.apache.calcite.linq4j.tree.BlockBuilder,java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable.impl","c":"AggResultContextImpl","l":"AggResultContextImpl(BlockBuilder, AggregateCall, List<Expression>, ParameterExpression, PhysType)","u":"%3Cinit%3E(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.rel.core.AggregateCall,java.util.List,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.adapter.enumerable.PhysType)"},{"p":"org.apache.calcite.test.schemata.bookstore","c":"BookstoreSchema.Author","l":"aid"},{"p":"org.apache.calcite.materialize","c":"Lattice","l":"algorithm"},{"p":"org.apache.calcite.model","c":"JsonLattice","l":"algorithm"},{"p":"org.apache.calcite.materialize","c":"Lattice.Builder","l":"algorithm(boolean)"},{"p":"org.apache.calcite.materialize","c":"Lattice","l":"algorithmMaxMillis"},{"p":"org.apache.calcite.model","c":"JsonLattice","l":"algorithmMaxMillis"},{"p":"org.apache.calcite.materialize","c":"Lattice.Builder","l":"algorithmMaxMillis(long)"},{"p":"org.apache.calcite.materialize","c":"Lattice.Column","l":"alias"},{"p":"org.apache.calcite.materialize","c":"LatticeNode","l":"alias"},{"p":"org.apache.calcite.materialize","c":"LatticeTable","l":"alias"},{"p":"org.apache.calcite.schema","c":"Schema.TableType","l":"ALIAS"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"alias(RexNode, String)","u":"alias(org.apache.calcite.rex.RexNode,java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"alias(SqlNode)","u":"alias(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"alias(SqlNode, int)","u":"alias(org.apache.calcite.sql.SqlNode,int)"},{"p":"org.apache.calcite.tools","c":"RelBuilder.GroupKey","l":"alias(String)","u":"alias(java.lang.String)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor","l":"aliasContext(Map<String, RelDataType>, boolean)","u":"aliasContext(java.util.Map,boolean)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.AliasContext","l":"AliasContext(SqlDialect, Map<String, RelDataType>, boolean)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect,java.util.Map,boolean)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"aliasListDegree(int, String, int)","u":"aliasListDegree(int,java.lang.String,int)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"aliasListDuplicate(String)","u":"aliasListDuplicate(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"aliasMustBeSimpleIdentifier()"},{"p":"org.apache.calcite.sql.validate","c":"AliasNamespace","l":"AliasNamespace(SqlValidatorImpl, SqlCall, SqlNode)","u":"%3Cinit%3E(org.apache.calcite.sql.validate.SqlValidatorImpl,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor","l":"aliasSet"},{"p":"org.apache.calcite.sql","c":"SqlUnpivot","l":"aliasValue(SqlNodeList)","u":"aliasValue(org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.rel.core","c":"RepeatUnion","l":"all"},{"p":"org.apache.calcite.rel.core","c":"SetOp","l":"all"},{"p":"org.apache.calcite.rel.mutable","c":"MutableSetOp","l":"all"},{"p":"org.apache.calcite.adapter.druid","c":"Granularity.Type","l":"ALL"},{"p":"org.apache.calcite.adapter.enumerable","c":"NullPolicy","l":"ALL"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeComparability","l":"ALL"},{"p":"org.apache.calcite.sql.babel.postgres","c":"SqlSetOptions.Names","l":"ALL"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateTableLike.LikeOption","l":"ALL"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibrary","l":"ALL"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ALL"},{"p":"org.apache.calcite.sql","c":"SqlSelectKeyword","l":"ALL"},{"p":"org.apache.calcite.sql","c":"SqlAccessType","l":"ALL"},{"p":"org.apache.calcite.sql","c":"SqlExplainLevel","l":"ALL_ATTRIBUTES"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"ALL_EQ"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"ALL_GE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"ALL_GT"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"ALL_LE"},{"p":"org.apache.calcite.util.format.postgresql","c":"CapitalizationEnum","l":"ALL_LOWER"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"ALL_LT"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"ALL_NE"},{"p":"org.apache.calcite.adapter.pig","c":"PigRules","l":"ALL_PIG_OPT_RULES"},{"p":"org.apache.calcite.adapter.pig","c":"PigRelFactories","l":"ALL_PIG_REL_FACTORIES"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ALL_PREDICATES"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize.RowsPerMatchOption","l":"ALL_ROWS"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"ALL_TYPES"},{"p":"org.apache.calcite.util.format.postgresql","c":"CapitalizationEnum","l":"ALL_UPPER"},{"p":"org.apache.calcite.adapter.druid","c":"Granularities","l":"all()"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser","l":"all()"},{"p":"org.apache.calcite.util","c":"RangeSets.Consumer","l":"all()"},{"p":"org.apache.calcite.util","c":"RangeSets.Handler","l":"all()"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"all(Enumerable<TSource>, Predicate1<TSource>)","u":"all(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"all(FunctionExpression<Predicate1<T>>)","u":"all(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"all(FunctionExpression<Predicate1<T>>)","u":"all(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"all(FunctionExpression<Predicate1<TSource>>)"},{"p":"","c":"","l":"all(FunctionExpression<Predicate1<TSource>>)"},{"p":"org.apache.calcite.linq4j.function","c":"Functions","l":"all(List<? extends E>, Predicate1<E>)","u":"all(java.util.List,org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"all(List<? extends E>, Predicate1<E>)","u":"all(java.util.List,org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"all(Predicate1<T>)","u":"all(org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"all(Predicate1<TSource>)","u":"all(org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"all(Queryable<T>, FunctionExpression<Predicate1<T>>)","u":"all(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"all(Queryable<T>, FunctionExpression<Predicate1<T>>)","u":"all(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"all(Queryable<T>, FunctionExpression<Predicate1<T>>)","u":"all(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"all(RexNode, SqlOperator, Function<RelBuilder, RelNode>)","u":"all(org.apache.calcite.rex.RexNode,org.apache.calcite.sql.SqlOperator,java.util.function.Function)"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"all(SqlKind)","u":"all(org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.linq4j.tree","c":"Types","l":"allAssignable(boolean, Class<?>[], Class<?>[])","u":"allAssignable(boolean,java.lang.Class[],java.lang.Class[])"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"allContain(Collection<ImmutableBitSet>, int)","u":"allContain(java.util.Collection,int)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRelImplementor","l":"allCorrelateVariables"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"allLiterals(List<RexNode>)","u":"allLiterals(java.util.List)"},{"p":"org.apache.calcite.runtime","c":"PairList","l":"allMatch(BiPredicate<T, U>)","u":"allMatch(java.util.function.BiPredicate)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"allMatch(IntPredicate)","u":"allMatch(java.util.function.IntPredicate)"},{"p":"org.apache.calcite.linq4j.tree","c":"DeterministicCodeOptimizer","l":"allMethodsDeterministic(Class)","u":"allMethodsDeterministic(java.lang.Class)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"allNullable(List<RelDataType>)","u":"allNullable(java.util.List)"},{"p":"org.apache.calcite.config","c":"CalciteSystemProperty","l":"ALLOW_INFINITE_COST_CONVERTERS"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeSchemaFactory","l":"ALLOW_SPATIAL_FUNCTIONS"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFamily","l":"allowableDifferenceTypes()"},{"p":"org.apache.calcite.sql.validate","c":"SqlAbstractConformance","l":"allowAliasUnnestItems()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformance","l":"allowAliasUnnestItems()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"allowAliasUnnestItems()"},{"p":"org.apache.calcite.sql.validate","c":"SqlDelegatingConformance","l":"allowAliasUnnestItems()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser.Config","l":"allowBangEqual()"},{"p":"org.apache.calcite.sql.validate","c":"SqlAbstractConformance","l":"allowCharLiteralAlias()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformance","l":"allowCharLiteralAlias()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"allowCharLiteralAlias()"},{"p":"org.apache.calcite.sql.validate","c":"SqlDelegatingConformance","l":"allowCharLiteralAlias()"},{"p":"org.apache.calcite.sql.type","c":"CompositeOperandTypeChecker","l":"allowedRules"},{"p":"org.apache.calcite.sql.validate","c":"SqlAbstractConformance","l":"allowExplicitRowValueConstructor()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformance","l":"allowExplicitRowValueConstructor()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"allowExplicitRowValueConstructor()"},{"p":"org.apache.calcite.sql.validate","c":"SqlDelegatingConformance","l":"allowExplicitRowValueConstructor()"},{"p":"org.apache.calcite.sql.validate","c":"SqlAbstractConformance","l":"allowExtend()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformance","l":"allowExtend()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"allowExtend()"},{"p":"org.apache.calcite.sql.validate","c":"SqlDelegatingConformance","l":"allowExtend()"},{"p":"org.apache.calcite.sql.validate","c":"SqlAbstractConformance","l":"allowExtendedTrim()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformance","l":"allowExtendedTrim()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"allowExtendedTrim()"},{"p":"org.apache.calcite.sql.validate","c":"SqlDelegatingConformance","l":"allowExtendedTrim()"},{"p":"org.apache.calcite.sql.validate","c":"SqlAbstractConformance","l":"allowGeometry()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformance","l":"allowGeometry()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"allowGeometry()"},{"p":"org.apache.calcite.sql.validate","c":"SqlDelegatingConformance","l":"allowGeometry()"},{"p":"org.apache.calcite.sql.validate","c":"SqlAbstractConformance","l":"allowHyphenInUnquotedTableName()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformance","l":"allowHyphenInUnquotedTableName()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"allowHyphenInUnquotedTableName()"},{"p":"org.apache.calcite.sql.validate","c":"SqlDelegatingConformance","l":"allowHyphenInUnquotedTableName()"},{"p":"org.apache.calcite.util","c":"SaffronProperties","l":"allowInfiniteCostConverters()"},{"p":"org.apache.calcite.sql.validate","c":"SqlAbstractConformance","l":"allowLenientCoercion()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformance","l":"allowLenientCoercion()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"allowLenientCoercion()"},{"p":"org.apache.calcite.sql.validate","c":"SqlDelegatingConformance","l":"allowLenientCoercion()"},{"p":"org.apache.calcite.sql.validate","c":"SqlAbstractConformance","l":"allowNiladicConstantWithoutParentheses()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformance","l":"allowNiladicConstantWithoutParentheses()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"allowNiladicConstantWithoutParentheses()"},{"p":"org.apache.calcite.sql.validate","c":"SqlDelegatingConformance","l":"allowNiladicConstantWithoutParentheses()"},{"p":"org.apache.calcite.sql.validate","c":"SqlAbstractConformance","l":"allowNiladicParentheses()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformance","l":"allowNiladicParentheses()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"allowNiladicParentheses()"},{"p":"org.apache.calcite.sql.validate","c":"SqlDelegatingConformance","l":"allowNiladicParentheses()"},{"p":"org.apache.calcite.tools","c":"RelBuilder.OverCall","l":"allowPartial(boolean)"},{"p":"org.apache.calcite.sql.validate","c":"SqlAbstractConformance","l":"allowPluralTimeUnits()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformance","l":"allowPluralTimeUnits()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"allowPluralTimeUnits()"},{"p":"org.apache.calcite.sql.validate","c":"SqlDelegatingConformance","l":"allowPluralTimeUnits()"},{"p":"org.apache.calcite.sql.validate","c":"SqlAbstractConformance","l":"allowQualifyingCommonColumn()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformance","l":"allowQualifyingCommonColumn()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"allowQualifyingCommonColumn()"},{"p":"org.apache.calcite.sql.validate","c":"SqlDelegatingConformance","l":"allowQualifyingCommonColumn()"},{"p":"org.apache.calcite.sql","c":"SqlAccessType","l":"allowsAccess(SqlAccessEnum)","u":"allowsAccess(org.apache.calcite.sql.SqlAccessEnum)"},{"p":"org.apache.calcite.sql.dialect","c":"HiveSqlDialect","l":"allowsAs()"},{"p":"org.apache.calcite.sql.dialect","c":"OracleSqlDialect","l":"allowsAs()"},{"p":"org.apache.calcite.sql.dialect","c":"SparkSqlDialect","l":"allowsAs()"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"allowsAs()"},{"p":"org.apache.calcite.sql.fun","c":"SqlAbstractGroupFunction","l":"allowsFilter()"},{"p":"org.apache.calcite.sql.fun","c":"SqlSingleValueAggFunction","l":"allowsFilter()"},{"p":"org.apache.calcite.sql","c":"SqlAggFunction","l":"allowsFilter()"},{"p":"org.apache.calcite.sql.fun","c":"SqlBasicAggFunction","l":"allowsFraming()"},{"p":"org.apache.calcite.sql.fun","c":"SqlLeadLagAggFunction","l":"allowsFraming()"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"allowsFraming()"},{"p":"org.apache.calcite.sql","c":"SqlRankFunction","l":"allowsFraming()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"allowsIdentifier(String[], int[][])","u":"allowsIdentifier(java.lang.String[],int[][])"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"allowsNoPrecNoScale()"},{"p":"org.apache.calcite.sql.fun","c":"SqlBasicAggFunction","l":"allowsNullTreatment()"},{"p":"org.apache.calcite.sql.fun","c":"SqlFirstLastValueAggFunction","l":"allowsNullTreatment()"},{"p":"org.apache.calcite.sql.fun","c":"SqlLeadLagAggFunction","l":"allowsNullTreatment()"},{"p":"org.apache.calcite.sql.fun","c":"SqlNthValueAggFunction","l":"allowsNullTreatment()"},{"p":"org.apache.calcite.sql","c":"SqlAggFunction","l":"allowsNullTreatment()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"allowsPrec()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"allowsPrecNoScale()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"allowsPrecScale(boolean, boolean)","u":"allowsPrecScale(boolean,boolean)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"allowsScale()"},{"p":"org.apache.calcite.sql.fun","c":"SqlBasicAggFunction","l":"allowsSeparator()"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema.AllPrivate","l":"AllPrivate()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema","l":"allPrivates"},{"p":"org.apache.calcite.rel.core","c":"Match","l":"allRows"},{"p":"org.apache.calcite.rel.mutable","c":"MutableMatch","l":"allRows"},{"p":"org.apache.calcite.plan","c":"RelTraitSet","l":"allSimple()"},{"p":"org.apache.calcite.plan","c":"Strong","l":"allStrong(List<RexNode>)","u":"allStrong(java.util.List)"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaImpl","l":"allTypeInfo()"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ALTER_INDEX"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ALTER_MATERIALIZED_VIEW"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ALTER_SEQUENCE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ALTER_SESSION"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ALTER_TABLE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ALTER_VIEW"},{"p":"org.apache.calcite.rex","c":"RexDigestIncludeType","l":"ALWAYS"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"alwaysUseParentheses()"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"am_pm"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"AM_PM"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"ambiguousSortOrderInJsonArrayAggFunc()"},{"p":"org.apache.calcite.test","c":"DiffRepository","l":"amend(String, String)","u":"amend(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"ampm"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"AMPM"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"AmPmCompiledPattern","l":"AmPmCompiledPattern(Set<PatternModifier>, boolean, boolean)","u":"%3Cinit%3E(java.util.Set,boolean,boolean)"},{"p":"org.apache.calcite.util.format.postgresql.format","c":"AmPmFormatPattern","l":"AmPmFormatPattern(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.InputFinder","l":"analyze(RexNode)","u":"analyze(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.ReducibleExprLocator","l":"analyze(RexNode)","u":"analyze(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.sql.validate","c":"AggregatingSelectScope","l":"analyze(SqlValidatorUtil.GroupAnalyzer)","u":"analyze(org.apache.calcite.sql.validate.SqlValidatorUtil.GroupAnalyzer)"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingScope","l":"analyze(SqlValidatorUtil.GroupAnalyzer)","u":"analyze(org.apache.calcite.sql.validate.SqlValidatorUtil.GroupAnalyzer)"},{"p":"org.apache.calcite.rel.core","c":"Join","l":"analyzeCondition()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"analyzeGroupItem(SqlValidatorScope, SqlValidatorUtil.GroupAnalyzer, ImmutableList.Builder<ImmutableList<ImmutableBitSet>>, SqlNode)","u":"analyzeGroupItem(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorUtil.GroupAnalyzer,com.google.common.collect.ImmutableList.Builder,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"analyzeSimpleEquiJoin(LogicalJoin, int[])","u":"analyzeSimpleEquiJoin(org.apache.calcite.rel.logical.LogicalJoin,int[])"},{"p":"org.apache.calcite.schema","c":"Schemas","l":"analyzeView(CalciteConnection, CalciteSchema, List<String>, String, List<String>, boolean)","u":"analyzeView(org.apache.calcite.jdbc.CalciteConnection,org.apache.calcite.jdbc.CalciteSchema,java.util.List,java.lang.String,java.util.List,boolean)"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare","l":"analyzeView(CalcitePrepare.Context, String, boolean)","u":"analyzeView(org.apache.calcite.jdbc.CalcitePrepare.Context,java.lang.String,boolean)"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl","l":"analyzeView(CalcitePrepare.Context, String, boolean)","u":"analyzeView(org.apache.calcite.jdbc.CalcitePrepare.Context,java.lang.String,boolean)"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.AnalyzeViewResult","l":"AnalyzeViewResult(CalcitePrepareImpl, SqlValidator, String, SqlNode, RelDataType, RelRoot, Table, ImmutableList<String>, RexNode, ImmutableIntList, boolean)","u":"%3Cinit%3E(org.apache.calcite.prepare.CalcitePrepareImpl,org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelRoot,org.apache.calcite.schema.Table,com.google.common.collect.ImmutableList,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableIntList,boolean)"},{"p":"org.apache.calcite.runtime","c":"Pattern.Op","l":"ANCHOR_END"},{"p":"org.apache.calcite.runtime","c":"Pattern.Op","l":"ANCHOR_START"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"And"},{"p":"org.apache.calcite.piglet","c":"Ast.Op","l":"AND"},{"p":"org.apache.calcite.rel.hint","c":"CompositeHintPredicate.Composition","l":"AND"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"AND"},{"p":"org.apache.calcite.sql.type","c":"CompositeOperandTypeChecker.Composition","l":"AND"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"AND"},{"p":"org.apache.calcite.sql.babel.postgres","c":"TransactionChainingMode","l":"AND_CHAIN"},{"p":"org.apache.calcite.sql.babel.postgres","c":"TransactionChainingMode","l":"AND_NO_CHAIN"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"and(Expression, Expression)","u":"and(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"and(Expression, Expression, Method)","u":"and(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.rel.hint","c":"HintPredicates","l":"and(HintPredicate...)","u":"and(org.apache.calcite.rel.hint.HintPredicate...)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"and(Iterable<? extends RexNode>)","u":"and(java.lang.Iterable)"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"and(RexNode...)","u":"and(org.apache.calcite.rex.RexNode...)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"and(RexNode...)","u":"and(org.apache.calcite.rex.RexNode...)"},{"p":"org.apache.calcite.sql.type","c":"SqlOperandTypeChecker","l":"and(SqlOperandTypeChecker)","u":"and(org.apache.calcite.sql.type.SqlOperandTypeChecker)"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"and(SqlOperandTypeChecker...)","u":"and(org.apache.calcite.sql.type.SqlOperandTypeChecker...)"},{"p":"org.apache.calcite.sql.type","c":"SqlSingleOperandTypeChecker","l":"and(SqlSingleOperandTypeChecker)","u":"and(org.apache.calcite.sql.type.SqlSingleOperandTypeChecker)"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"and(SqlSingleOperandTypeChecker...)","u":"and(org.apache.calcite.sql.type.SqlSingleOperandTypeChecker...)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"AndAlso"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"andAlso(Expression, Expression)","u":"andAlso(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"andAlso(Expression, Expression, Method)","u":"andAlso(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"AndAssign"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"andAssign(Expression, Expression)","u":"andAssign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"andAssign(Expression, Expression, Method)","u":"andAssign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"andAssign(Expression, Expression, Method, LambdaExpression)","u":"andAssign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.LambdaExpression)"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"andExpressions(SqlNode, SqlNode)","u":"andExpressions(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"andJoinFilters(RexBuilder, RexNode, RexNode)","u":"andJoinFilters(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"andNot(RexBuilder, RexNode, Iterable<? extends RexNode>)","u":"andNot(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,java.lang.Iterable)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"andNot(RexBuilder, RexNode, RexNode...)","u":"andNot(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode...)"},{"p":"org.apache.calcite.util","c":"RangeSets.Handler","l":"andThen(Consumer<R>)","u":"andThen(java.util.function.Consumer)"},{"p":"org.apache.calcite.sql.type","c":"SqlReturnTypeInference","l":"andThen(SqlTypeTransform)","u":"andThen(org.apache.calcite.sql.type.SqlTypeTransform)"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"andThen(UnaryOperator<SqlOperatorBinding>, SqlReturnTypeInference)","u":"andThen(java.util.function.UnaryOperator,org.apache.calcite.sql.type.SqlReturnTypeInference)"},{"p":"org.apache.calcite.util","c":"Util","l":"andThen(UnaryOperator<X>, UnaryOperator<X>)","u":"andThen(java.util.function.UnaryOperator,java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.rel.core","c":"Project.Flags","l":"ANON_FIELDS"},{"p":"org.apache.calcite.sql.fun","c":"SqlInternalOperators","l":"ANONYMOUS_ROW"},{"p":"org.apache.calcite.sql.fun","c":"SqlInternalOperators","l":"ANONYMOUS_ROW_NO_PARENTHESES"},{"p":"org.apache.calcite.util","c":"Smalls.AnotherTableMacroFunctionWithNamedParameters","l":"AnotherTableMacroFunctionWithNamedParameters()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.dialect","c":"AnsiSqlDialect","l":"AnsiSqlDialect(SqlDialect.Context)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect.Context)"},{"p":"org.apache.calcite.linq4j","c":"JoinType","l":"ANTI"},{"p":"org.apache.calcite.rel.core","c":"JoinRelType","l":"ANTI"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ANTI_JOIN"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"antiJoin(Enumerable<TSource>, Enumerable<TInner>, Function1<TSource, TKey>, Function1<TInner, TKey>)","u":"antiJoin(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"antiJoin(Enumerable<TSource>, Enumerable<TInner>, Function1<TSource, TKey>, Function1<TInner, TKey>, EqualityComparer<TKey>)","u":"antiJoin(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"antiJoin(Enumerable<TSource>, Enumerable<TInner>, Function1<TSource, TKey>, Function1<TInner, TKey>, EqualityComparer<TKey>, Predicate2<TSource, TInner>)","u":"antiJoin(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.EqualityComparer,org.apache.calcite.linq4j.function.Predicate2)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"antiJoin(Iterable<? extends RexNode>)","u":"antiJoin(java.lang.Iterable)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"antiJoin(RexNode...)","u":"antiJoin(org.apache.calcite.rex.RexNode...)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRel.Prefer","l":"ANY"},{"p":"org.apache.calcite.adapter.enumerable","c":"NullPolicy","l":"ANY"},{"p":"org.apache.calcite.plan","c":"RelOptRuleOperandChildPolicy","l":"ANY"},{"p":"org.apache.calcite.plan","c":"Strong.Policy","l":"ANY"},{"p":"org.apache.calcite.rel","c":"RelDistribution.Type","l":"ANY"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFamily","l":"ANY"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"ANY"},{"p":"org.apache.calcite.rel","c":"RelDistributions","l":"ANY"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"ANY"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"ANY_ANY"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"ANY_COMPARABLE"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"ANY_IGNORE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ANY_ITEM"},{"p":"org.apache.calcite.sql.type","c":"InferTypes","l":"ANY_NULLABLE"},{"p":"org.apache.calcite.sql.test","c":"SqlTests","l":"ANY_NULLABLE_TYPE_CHECKER"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"ANY_NUMERIC"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"ANY_NUMERIC_ANY"},{"p":"org.apache.calcite.sql.test","c":"SqlTests","l":"ANY_PARAMETER_CHECKER"},{"p":"org.apache.calcite.sql.test","c":"SqlTests","l":"ANY_RESULT_CHECKER"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"ANY_STRING_OPTIONAL_STRING"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"ANY_STRING_STRING"},{"p":"org.apache.calcite.sql.test","c":"SqlTests","l":"ANY_TYPE_CHECKER"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ANY_VALUE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"ANY_VALUE"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"any()"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"any()"},{"p":"org.apache.calcite.plan","c":"RelOptRule","l":"any()"},{"p":"org.apache.calcite.schema.lookup","c":"LikePattern","l":"any()"},{"p":"org.apache.calcite.sql.type","c":"SqlOperandCountRanges","l":"any()"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor.AbstractUnifyRule","l":"any(Class<? extends MutableRel>)","u":"any(java.lang.Class)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"any(Enumerable)","u":"any(org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"any(Enumerable<TSource>, Predicate1<TSource>)","u":"any(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"any(FunctionExpression<Predicate1<T>>)","u":"any(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"any(FunctionExpression<Predicate1<T>>)","u":"any(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"any(FunctionExpression<Predicate1<TSource>>)"},{"p":"","c":"","l":"any(FunctionExpression<Predicate1<TSource>>)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"any(Predicate1<T>)","u":"any(org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"any(Predicate1<TSource>)","u":"any(org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"any(Queryable<T>)","u":"any(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"any(Queryable<T>)","u":"any(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"any(Queryable<T>)","u":"any(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"any(Queryable<T>, FunctionExpression<Predicate1<T>>)","u":"any(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"any(Queryable<T>, FunctionExpression<Predicate1<T>>)","u":"any(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"any(Queryable<T>, FunctionExpression<Predicate1<T>>)","u":"any(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.rex","c":"RexUtil.RexFinder","l":"anyContain(Iterable<? extends RexNode>)","u":"anyContain(java.lang.Iterable)"},{"p":"org.apache.calcite.plan","c":"RelRule.OperandDetailBuilder","l":"anyInputs()"},{"p":"org.apache.calcite.runtime","c":"PairList","l":"anyMatch(BiPredicate<T, U>)","u":"anyMatch(java.util.function.BiPredicate)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"anyMatch(IntPredicate)","u":"anyMatch(java.util.function.IntPredicate)"},{"p":"org.apache.calcite.sql.util","c":"SqlBuilder","l":"append(char)"},{"p":"org.apache.calcite.linq4j.tree","c":"BlockBuilder","l":"append(Expression)","u":"append(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.runtime","c":"FlatLists","l":"append(ImmutableList<E>, E)","u":"append(com.google.common.collect.ImmutableList,E)"},{"p":"org.apache.calcite.util","c":"ImmutableIntList","l":"append(int)"},{"p":"org.apache.calcite.util","c":"ImmutableIntList","l":"append(Integer)","u":"append(java.lang.Integer)"},{"p":"org.apache.calcite.runtime","c":"FlatLists","l":"append(List<E>, E)","u":"append(java.util.List,E)"},{"p":"org.apache.calcite.sql.util","c":"SqlBuilder","l":"append(long)"},{"p":"org.apache.calcite.runtime","c":"FlatLists","l":"append(Map<K, V>, K, V)","u":"append(java.util.Map,K,V)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings","l":"append(Mappings.TargetMapping, Mappings.TargetMapping)","u":"append(org.apache.calcite.util.mapping.Mappings.TargetMapping,org.apache.calcite.util.mapping.Mappings.TargetMapping)"},{"p":"org.apache.calcite.util","c":"Source","l":"append(Source)","u":"append(org.apache.calcite.util.Source)"},{"p":"org.apache.calcite.sql.util","c":"SqlBuilder","l":"append(SqlString)","u":"append(org.apache.calcite.sql.util.SqlString)"},{"p":"org.apache.calcite.sql.util","c":"SqlBuilder","l":"append(String)","u":"append(java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"BlockBuilder","l":"append(String, BlockStatement)","u":"append(java.lang.String,org.apache.calcite.linq4j.tree.BlockStatement)"},{"p":"org.apache.calcite.linq4j.tree","c":"BlockBuilder","l":"append(String, BlockStatement, boolean)","u":"append(java.lang.String,org.apache.calcite.linq4j.tree.BlockStatement,boolean)"},{"p":"org.apache.calcite.linq4j.tree","c":"BlockBuilder","l":"append(String, Expression)","u":"append(java.lang.String,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"BlockBuilder","l":"append(String, Expression, boolean)","u":"append(java.lang.String,org.apache.calcite.linq4j.tree.Expression,boolean)"},{"p":"org.apache.calcite.util","c":"JsonBuilder","l":"append(StringBuilder, int, Object)","u":"append(java.lang.StringBuilder,int,java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions.FluentList","l":"append(T)"},{"p":"org.apache.calcite.runtime","c":"FlatLists.AbstractFlatList","l":"append(T)"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat1List","l":"append(T)"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat2List","l":"append(T)"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat3List","l":"append(T)"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat4List","l":"append(T)"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat5List","l":"append(T)"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat6List","l":"append(T)"},{"p":"org.apache.calcite.util","c":"ImmutableIntList","l":"appendAll(Iterable<Integer>)","u":"appendAll(java.lang.Iterable)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions.FluentList","l":"appendAll(Iterable<T>)","u":"appendAll(java.lang.Iterable)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions.FluentList","l":"appendAll(T...)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions.FluentList","l":"appendIf(boolean, T)","u":"appendIf(boolean,T)"},{"p":"org.apache.calcite.linq4j.tree","c":"BlockBuilder","l":"appendIfNotNull(String, Expression)","u":"appendIfNotNull(java.lang.String,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions.FluentList","l":"appendIfNotNull(T)"},{"p":"org.apache.calcite.rex","c":"RexCall","l":"appendOperands(StringBuilder)","u":"appendOperands(java.lang.StringBuilder)"},{"p":"org.apache.calcite.adapter.splunk","c":"SplunkPushDownRule","l":"appendSearchString(String, SplunkTableScan, LogicalProject, LogicalProject, RelDataType, RelDataType)","u":"appendSearchString(java.lang.String,org.apache.calcite.adapter.splunk.SplunkTableScan,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.runtime","c":"HttpUtils","l":"appendURLEncodedArgs(StringBuilder, CharSequence...)","u":"appendURLEncodedArgs(java.lang.StringBuilder,java.lang.CharSequence...)"},{"p":"org.apache.calcite.runtime","c":"HttpUtils","l":"appendURLEncodedArgs(StringBuilder, Map<String, String>)","u":"appendURLEncodedArgs(java.lang.StringBuilder,java.util.Map)"},{"p":"org.apache.calcite.linq4j.function","c":"Function0","l":"apply()"},{"p":"org.apache.calcite.rel.metadata","c":"ReflectiveRelMetadataProvider","l":"apply(Class<? extends RelNode>)","u":"apply(java.lang.Class)"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoRelMetadataProvider","l":"apply(Class<? extends RelNode>, Class<? extends M>)","u":"apply(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.metadata","c":"CachingRelMetadataProvider","l":"apply(Class<? extends RelNode>, Class<? extends M>)","u":"apply(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.metadata","c":"ChainedRelMetadataProvider","l":"apply(Class<? extends RelNode>, Class<? extends M>)","u":"apply(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.metadata","c":"JaninoRelMetadataProvider","l":"apply(Class<? extends RelNode>, Class<? extends M>)","u":"apply(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.metadata","c":"ReflectiveRelMetadataProvider","l":"apply(Class<? extends RelNode>, Class<? extends M>)","u":"apply(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataProvider","l":"apply(Class<? extends RelNode>, Class<? extends M>)","u":"apply(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.ConnectionPostProcessor","l":"apply(Connection)","u":"apply(java.sql.Connection)"},{"p":"org.apache.calcite.rel.rules","c":"FilterJoinRule.Predicate","l":"apply(Join, JoinRelType, RexNode)","u":"apply(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.util","c":"Smalls.SimpleTableMacro","l":"apply(List<?>)","u":"apply(java.util.List)"},{"p":"org.apache.calcite.schema.impl","c":"MaterializedViewTable.MaterializedViewTableMacro","l":"apply(List<? extends Object>)","u":"apply(java.util.List)"},{"p":"org.apache.calcite.schema.impl","c":"TableMacroImpl","l":"apply(List<? extends Object>)","u":"apply(java.util.List)"},{"p":"org.apache.calcite.schema.impl","c":"ViewTableMacro","l":"apply(List<? extends Object>)","u":"apply(java.util.List)"},{"p":"org.apache.calcite.schema","c":"TableMacro","l":"apply(List<? extends Object>)","u":"apply(java.util.List)"},{"p":"org.apache.calcite.rel.hint","c":"HintStrategyTable","l":"apply(List<RelHint>, RelNode)","u":"apply(java.util.List,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rex","c":"RexShuttle","l":"apply(List<T>)","u":"apply(java.util.List)"},{"p":"org.apache.calcite.linq4j.function","c":"Functions","l":"apply(List<T1>, Function1<T1, R>)","u":"apply(java.util.List,org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings","l":"apply(Mapping, BitSet)","u":"apply(org.apache.calcite.util.mapping.Mapping,java.util.BitSet)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings","l":"apply(Mapping, ImmutableBitSet)","u":"apply(org.apache.calcite.util.mapping.Mapping,org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings","l":"apply(Mapping, List<T>)","u":"apply(org.apache.calcite.util.mapping.Mapping,java.util.List)"},{"p":"org.apache.calcite.plan","c":"RelTrait","l":"apply(Mappings.TargetMapping)","u":"apply(org.apache.calcite.util.mapping.Mappings.TargetMapping)"},{"p":"org.apache.calcite.plan","c":"RelTraitSet","l":"apply(Mappings.TargetMapping)","u":"apply(org.apache.calcite.util.mapping.Mappings.TargetMapping)"},{"p":"org.apache.calcite.rel","c":"RelCollationImpl","l":"apply(Mappings.TargetMapping)","u":"apply(org.apache.calcite.util.mapping.Mappings.TargetMapping)"},{"p":"org.apache.calcite.rel","c":"RelDistribution","l":"apply(Mappings.TargetMapping)","u":"apply(org.apache.calcite.util.mapping.Mappings.TargetMapping)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings","l":"apply(Mappings.TargetMapping, int)","u":"apply(org.apache.calcite.util.mapping.Mappings.TargetMapping,int)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"apply(Mappings.TargetMapping, Iterable<? extends RexNode>)","u":"apply(org.apache.calcite.util.mapping.Mappings.TargetMapping,java.lang.Iterable)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"apply(Mappings.TargetMapping, List<RelCollation>)","u":"apply(org.apache.calcite.util.mapping.Mappings.TargetMapping,java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"apply(Mappings.TargetMapping, RelCollation)","u":"apply(org.apache.calcite.util.mapping.Mappings.TargetMapping,org.apache.calcite.rel.RelCollation)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"apply(Mappings.TargetMapping, RelFieldCollation)","u":"apply(org.apache.calcite.util.mapping.Mappings.TargetMapping,org.apache.calcite.rel.RelFieldCollation)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"apply(Mappings.TargetMapping, RexNode)","u":"apply(org.apache.calcite.util.mapping.Mappings.TargetMapping,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser.Special","l":"apply(PrecedenceClimbingParser, PrecedenceClimbingParser.SpecialOp)","u":"apply(org.apache.calcite.util.PrecedenceClimbingParser,org.apache.calcite.util.PrecedenceClimbingParser.SpecialOp)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeField.ToFieldIndex","l":"apply(RelDataTypeField)","u":"apply(org.apache.calcite.rel.type.RelDataTypeField)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeField.ToFieldName","l":"apply(RelDataTypeField)","u":"apply(org.apache.calcite.rel.type.RelDataTypeField)"},{"p":"org.apache.calcite.rel.hint","c":"CompositeHintPredicate","l":"apply(RelHint, RelNode)","u":"apply(org.apache.calcite.rel.hint.RelHint,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.hint","c":"HintPredicate","l":"apply(RelHint, RelNode)","u":"apply(org.apache.calcite.rel.hint.RelHint,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.hint","c":"NodeTypeHintPredicate","l":"apply(RelHint, RelNode)","u":"apply(org.apache.calcite.rel.hint.RelHint,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.tools","c":"Frameworks.PlannerAction","l":"apply(RelOptCluster, RelOptSchema, SchemaPlus)","u":"apply(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelOptSchema,org.apache.calcite.schema.SchemaPlus)"},{"p":"org.apache.calcite.tools","c":"Frameworks.BasePrepareAction","l":"apply(RelOptCluster, RelOptSchema, SchemaPlus, CalciteServerStatement)","u":"apply(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelOptSchema,org.apache.calcite.schema.SchemaPlus,org.apache.calcite.server.CalciteServerStatement)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateProjectMergeRule","l":"apply(RelOptRuleCall, Aggregate, Project)","u":"apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)"},{"p":"org.apache.calcite.rel.rules","c":"FilterTableScanRule","l":"apply(RelOptRuleCall, Filter, TableScan)","u":"apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.TableScan)"},{"p":"org.apache.calcite.rel.rules","c":"MaterializedViewFilterScanRule","l":"apply(RelOptRuleCall, Filter, TableScan)","u":"apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.TableScan)"},{"p":"org.apache.calcite.rel.rules","c":"ValuesReduceRule","l":"apply(RelOptRuleCall, LogicalProject, LogicalFilter, LogicalValues)","u":"apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateStarTableRule","l":"apply(RelOptRuleCall, Project, Aggregate, StarTable.StarTableScan)","u":"apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable.StarTableScan)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectTableScanRule","l":"apply(RelOptRuleCall, Project, TableScan)","u":"apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.TableScan)"},{"p":"org.apache.calcite.rex","c":"RexShuttle","l":"apply(RexNode)","u":"apply(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.rules","c":"SubQueryRemoveRule","l":"apply(RexSubQuery, Set<CorrelationId>, RelOptUtil.Logic, RelBuilder, int, int, int)","u":"apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil.Logic,org.apache.calcite.tools.RelBuilder,int,int,int)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"apply(RexVisitor<T>, T[])","u":"apply(org.apache.calcite.rex.RexVisitor,T[])"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"apply(RexVisitor<Void>, List<? extends RexNode>, RexNode)","u":"apply(org.apache.calcite.rex.RexVisitor,java.util.List,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"apply(RexVisitor<Void>, RexNode[], RexNode)","u":"apply(org.apache.calcite.rex.RexVisitor,org.apache.calcite.rex.RexNode[],org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeTransform","l":"apply(SqlOperatorBinding)","u":"apply(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.adapter.os","c":"PsTableFunction.LineParser","l":"apply(String)","u":"apply(java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil.Suggester","l":"apply(String, int, int)","u":"apply(java.lang.String,int,int)"},{"p":"org.apache.calcite.util.format.postgresql","c":"CapitalizationEnum","l":"apply(String, Locale)","u":"apply(java.lang.String,java.util.Locale)"},{"p":"org.apache.calcite.sql.test","c":"SqlTester.ValidatedNodeFunction","l":"apply(StringAndPos, SqlValidator, SqlNode)","u":"apply(org.apache.calcite.sql.parser.StringAndPos,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor.UnifyRule","l":"apply(SubstitutionVisitor.UnifyRuleCall)","u":"apply(org.apache.calcite.plan.SubstitutionVisitor.UnifyRuleCall)"},{"p":"org.apache.calcite.runtime","c":"PredicateImpl","l":"apply(T)"},{"p":"org.apache.calcite.linq4j.function","c":"DoubleFunction1","l":"apply(T0)"},{"p":"org.apache.calcite.linq4j.function","c":"FloatFunction1","l":"apply(T0)"},{"p":"org.apache.calcite.linq4j.function","c":"Function1","l":"apply(T0)"},{"p":"org.apache.calcite.linq4j.function","c":"IntegerFunction1","l":"apply(T0)"},{"p":"org.apache.calcite.linq4j.function","c":"LongFunction1","l":"apply(T0)"},{"p":"org.apache.calcite.linq4j.function","c":"Predicate1","l":"apply(T0)"},{"p":"org.apache.calcite.linq4j.function","c":"Function2","l":"apply(T0, T1)","u":"apply(T0,T1)"},{"p":"org.apache.calcite.linq4j.function","c":"Predicate2","l":"apply(T0, T1)","u":"apply(T0,T1)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings","l":"apply2(Mapping, Iterable<ImmutableBitSet>)","u":"apply2(org.apache.calcite.util.mapping.Mapping,java.lang.Iterable)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings","l":"apply2(Mapping, List<Integer>)","u":"apply2(org.apache.calcite.util.mapping.Mapping,java.util.List)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings","l":"apply3(Mapping, List<T>)","u":"apply3(org.apache.calcite.util.mapping.Mapping,java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"applyFields(Mappings.TargetMapping, List<RelFieldCollation>)","u":"applyFields(org.apache.calcite.util.mapping.Mappings.TargetMapping,java.util.List)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"applyNotAllowed()"},{"p":"org.apache.calcite.linq4j","c":"Lookup","l":"applyResultSelector(Function2<K, Enumerable<V>, TResult>)","u":"applyResultSelector(org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.runtime","c":"SocketFactoryImpl","l":"applySettings(Socket)","u":"applySettings(java.net.Socket)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidExpressions","l":"applyTimeExtract(String, String, TimeZone)","u":"applyTimeExtract(java.lang.String,java.lang.String,java.util.TimeZone)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidExpressions","l":"applyTimestampCeil(String, String, String, TimeZone)","u":"applyTimestampCeil(java.lang.String,java.lang.String,java.lang.String,java.util.TimeZone)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidExpressions","l":"applyTimestampFloor(String, String, String, TimeZone)","u":"applyTimestampFloor(java.lang.String,java.lang.String,java.lang.String,java.util.TimeZone)"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"APPROX_COUNT_DISTINCT"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"APPROX_TYPES"},{"p":"org.apache.calcite.config","c":"CalciteConnectionProperty","l":"APPROXIMATE_DECIMAL"},{"p":"org.apache.calcite.config","c":"CalciteConnectionProperty","l":"APPROXIMATE_DISTINCT_COUNT"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFamily","l":"APPROXIMATE_NUMERIC"},{"p":"org.apache.calcite.config","c":"CalciteConnectionProperty","l":"APPROXIMATE_TOP_N"},{"p":"org.apache.calcite.tools","c":"RelBuilder.AggCall","l":"approximate(boolean)"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfig","l":"approximateDecimal()"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfigImpl","l":"approximateDecimal()"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfig","l":"approximateDistinctCount()"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfigImpl","l":"approximateDistinctCount()"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfig","l":"approximateTopN()"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfigImpl","l":"approximateTopN()"},{"p":"org.apache.calcite.plan.hep","c":"HepMatchOrder","l":"ARBITRARY"},{"p":"org.apache.calcite.sql.ddl","c":"SqlDdlNodes.FileType","l":"ARCHIVE"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"areCharacterSetsMismatched(RelDataType, RelDataType)","u":"areCharacterSetsMismatched(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUtil","l":"areColumnsDefinitelyUnique(RelMetadataQuery, RelNode, ImmutableBitSet)","u":"areColumnsDefinitelyUnique(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUtil","l":"areColumnsDefinitelyUnique(RelMetadataQuery, RelNode, List<RexInputRef>)","u":"areColumnsDefinitelyUnique(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUtil","l":"areColumnsDefinitelyUniqueWhenNullsFiltered(RelMetadataQuery, RelNode, ImmutableBitSet)","u":"areColumnsDefinitelyUniqueWhenNullsFiltered(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUtil","l":"areColumnsDefinitelyUniqueWhenNullsFiltered(RelMetadataQuery, RelNode, List<RexInputRef>)","u":"areColumnsDefinitelyUniqueWhenNullsFiltered(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdColumnUniqueness","l":"areColumnsUnique(Aggregate, RelMetadataQuery, ImmutableBitSet, boolean)","u":"areColumnsUnique(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdColumnUniqueness","l":"areColumnsUnique(Calc, RelMetadataQuery, ImmutableBitSet, boolean)","u":"areColumnsUnique(org.apache.calcite.rel.core.Calc,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdColumnUniqueness","l":"areColumnsUnique(Converter, RelMetadataQuery, ImmutableBitSet, boolean)","u":"areColumnsUnique(org.apache.calcite.rel.convert.Converter,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdColumnUniqueness","l":"areColumnsUnique(Correlate, RelMetadataQuery, ImmutableBitSet, boolean)","u":"areColumnsUnique(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdColumnUniqueness","l":"areColumnsUnique(Exchange, RelMetadataQuery, ImmutableBitSet, boolean)","u":"areColumnsUnique(org.apache.calcite.rel.core.Exchange,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdColumnUniqueness","l":"areColumnsUnique(Filter, RelMetadataQuery, ImmutableBitSet, boolean)","u":"areColumnsUnique(org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.ColumnUniqueness","l":"areColumnsUnique(ImmutableBitSet, boolean)","u":"areColumnsUnique(org.apache.calcite.util.ImmutableBitSet,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdColumnUniqueness","l":"areColumnsUnique(Intersect, RelMetadataQuery, ImmutableBitSet, boolean)","u":"areColumnsUnique(org.apache.calcite.rel.core.Intersect,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdColumnUniqueness","l":"areColumnsUnique(Join, RelMetadataQuery, ImmutableBitSet, boolean)","u":"areColumnsUnique(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdColumnUniqueness","l":"areColumnsUnique(Minus, RelMetadataQuery, ImmutableBitSet, boolean)","u":"areColumnsUnique(org.apache.calcite.rel.core.Minus,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdColumnUniqueness","l":"areColumnsUnique(Project, RelMetadataQuery, ImmutableBitSet, boolean)","u":"areColumnsUnique(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUtil","l":"areColumnsUnique(RelMetadataQuery, RelNode, List<RexInputRef>)","u":"areColumnsUnique(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"areColumnsUnique(RelNode, ImmutableBitSet)","u":"areColumnsUnique(org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"areColumnsUnique(RelNode, ImmutableBitSet, boolean)","u":"areColumnsUnique(org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.ColumnUniqueness.Handler","l":"areColumnsUnique(RelNode, RelMetadataQuery, ImmutableBitSet, boolean)","u":"areColumnsUnique(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdColumnUniqueness","l":"areColumnsUnique(RelNode, RelMetadataQuery, ImmutableBitSet, boolean)","u":"areColumnsUnique(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdColumnUniqueness","l":"areColumnsUnique(RelSubset, RelMetadataQuery, ImmutableBitSet, boolean)","u":"areColumnsUnique(org.apache.calcite.plan.volcano.RelSubset,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdColumnUniqueness","l":"areColumnsUnique(SetOp, RelMetadataQuery, ImmutableBitSet, boolean)","u":"areColumnsUnique(org.apache.calcite.rel.core.SetOp,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdColumnUniqueness","l":"areColumnsUnique(Sort, RelMetadataQuery, ImmutableBitSet, boolean)","u":"areColumnsUnique(org.apache.calcite.rel.core.Sort,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdColumnUniqueness","l":"areColumnsUnique(TableModify, RelMetadataQuery, ImmutableBitSet, boolean)","u":"areColumnsUnique(org.apache.calcite.rel.core.TableModify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdColumnUniqueness","l":"areColumnsUnique(TableScan, RelMetadataQuery, ImmutableBitSet, boolean)","u":"areColumnsUnique(org.apache.calcite.rel.core.TableScan,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdColumnUniqueness","l":"areColumnsUnique(Values, RelMetadataQuery, ImmutableBitSet, boolean)","u":"areColumnsUnique(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUtil","l":"areColumnsUniqueWhenNullsFiltered(RelMetadataQuery, RelNode, List<RexInputRef>)","u":"areColumnsUniqueWhenNullsFiltered(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)"},{"p":"org.apache.calcite.util","c":"EquivalenceSet","l":"areEquivalent(E, E)","u":"areEquivalent(E,E)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"areRowsUnique(RelNode)","u":"areRowsUnique(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"areRowsUnique(RelNode, boolean)","u":"areRowsUnique(org.apache.calcite.rel.RelNode,boolean)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"areRowTypesEqual(RelDataType, RelDataType, boolean)","u":"areRowTypesEqual(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,boolean)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"areSameFamily(Iterable<RelDataType>)","u":"areSameFamily(java.lang.Iterable)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ARG_MAX"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"ARG_MAX"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ARG_MIN"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"ARG_MIN"},{"p":"org.apache.calcite.adapter.enumerable","c":"NullPolicy","l":"ARG0"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"ARG0"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"ARG0_ARRAY_NULLABLE_VARYING"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"ARG0_EXCEPT_DATE"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"ARG0_EXCEPT_DATE_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"ARG0_EXCEPT_INTEGER"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"ARG0_EXCEPT_INTEGER_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"ARG0_FORCE_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"ARG0_INTERVAL"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"ARG0_INTERVAL_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"ARG0_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeTransforms","l":"ARG0_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"ARG0_NULLABLE_IF_ARG0_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"ARG0_NULLABLE_IF_EMPTY"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"ARG0_NULLABLE_VARYING"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"ARG0_OR_EXACT_NO_SCALE"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"ARG0_OR_INTEGER"},{"p":"org.apache.calcite.sql","c":"SqlWindowTableFunction","l":"ARG0_TABLE_FUNCTION_WINDOWING"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"ARG1"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"ARG1_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"ARG2"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"ARG2_NULLABLE"},{"p":"org.apache.calcite.materialize","c":"Lattice.Measure","l":"argBitSet()"},{"p":"org.apache.calcite.sql.util","c":"SqlBasicVisitor.ArgHandlerImpl","l":"ArgHandlerImpl()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.materialize","c":"Lattice.Measure","l":"argOrdinals()"},{"p":"org.apache.calcite.materialize","c":"Lattice.Measure","l":"args"},{"p":"org.apache.calcite.model","c":"JsonMeasure","l":"args"},{"p":"org.apache.calcite.util.javac","c":"JaninoCompiler","l":"args"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser.Call","l":"args"},{"p":"org.apache.calcite.sql.fun","c":"SqlMinMaxAggFunction","l":"argTypes"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ARGUMENT_ASSIGNMENT"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"ARGUMENT_ASSIGNMENT"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"argumentMustBeBooleanLiteral(String)","u":"argumentMustBeBooleanLiteral(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"argumentMustBeLiteral(String)","u":"argumentMustBeLiteral(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"argumentMustBeMeasure(String)","u":"argumentMustBeMeasure(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"argumentMustBeNumericLiteralInRange(String, int, int)","u":"argumentMustBeNumericLiteralInRange(java.lang.String,int,int)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"argumentMustBePositiveInteger(String)","u":"argumentMustBePositiveInteger(java.lang.String)"},{"p":"org.apache.calcite.sql.fun","c":"SqlCursorConstructor","l":"argumentMustBeScalar(int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlInOperator","l":"argumentMustBeScalar(int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlMultisetQueryConstructor","l":"argumentMustBeScalar(int)"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"argumentMustBeScalar(int)"},{"p":"org.apache.calcite.sql","c":"SqlSelectOperator","l":"argumentMustBeScalar(int)"},{"p":"org.apache.calcite.sql","c":"SqlSetSemanticsTableOperator","l":"argumentMustBeScalar(int)"},{"p":"org.apache.calcite.sql","c":"SqlUnnestOperator","l":"argumentMustBeScalar(int)"},{"p":"org.apache.calcite.sql","c":"SqlWindowTableFunction","l":"argumentMustBeScalar(int)"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.InvalidTableFunction","l":"argumentMustBeScalar(int)"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.ScoreTableFunction","l":"argumentMustBeScalar(int)"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.SimilarlityTableFunction","l":"argumentMustBeScalar(int)"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.TopNTableFunction","l":"argumentMustBeScalar(int)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"argumentMustBeValidPrecision(String, int, int)","u":"argumentMustBeValidPrecision(java.lang.String,int,int)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"argumentMustHaveScaleZero(String)","u":"argumentMustHaveScaleZero(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"argumentMustNotBeNull(String)","u":"argumentMustNotBeNull(java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"NewExpression","l":"arguments"},{"p":"org.apache.calcite.adapter.enumerable","c":"AggAddContext","l":"arguments()"},{"p":"org.apache.calcite.adapter.enumerable.impl","c":"AggAddContextImpl","l":"arguments()"},{"p":"org.apache.calcite.adapter.enumerable.impl","c":"WinAggAddContextImpl","l":"arguments()"},{"p":"org.apache.calcite.adapter.enumerable.impl","c":"WinAggResultContextImpl","l":"arguments(Expression)","u":"arguments(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.adapter.enumerable","c":"WinAggResultContext","l":"arguments(Expression)","u":"arguments(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"IndexExpression","l":"array"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRel.Prefer","l":"ARRAY"},{"p":"org.apache.calcite.adapter.enumerable","c":"JavaRowFormat","l":"ARRAY"},{"p":"org.apache.calcite.runtime.rtti","c":"RuntimeTypeInformation.RuntimeSqlTypeName","l":"ARRAY"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFamily","l":"ARRAY"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"ARRAY"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ARRAY"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"ARRAY"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"ARRAY"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ARRAY_AGG"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"ARRAY_AGG"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ARRAY_APPEND"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ARRAY_APPEND"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"ARRAY_APPEND"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"ARRAY_ARRAY"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"ARRAY_BOOLEAN_LITERAL"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ARRAY_COMPACT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ARRAY_COMPACT"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"ARRAY_COMPACT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ARRAY_COMPARER"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ARRAY_CONCAT"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"ARRAY_CONCAT"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ARRAY_CONCAT_AGG"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"ARRAY_CONCAT_AGG"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ARRAY_CONTAINS"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"ARRAY_CONTAINS"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ARRAY_COPY"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ARRAY_DISTINCT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ARRAY_DISTINCT"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"ARRAY_DISTINCT"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"ARRAY_ELEMENT"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"ARRAY_ELEMENT_NONNULL"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ARRAY_EXCEPT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ARRAY_EXCEPT"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"ARRAY_EXCEPT"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"ARRAY_FUNCTION"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ARRAY_INSERT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ARRAY_INSERT"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"ARRAY_INSERT"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"ARRAY_INSERT"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ARRAY_INTERSECT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ARRAY_INTERSECT"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"ARRAY_INTERSECT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ARRAY_ITEM"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ARRAY_JOIN"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"ARRAY_JOIN"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ARRAY_LENGTH"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"ARRAY_LENGTH"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ARRAY_MAX"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ARRAY_MAX"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"ARRAY_MAX"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ARRAY_MIN"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ARRAY_MIN"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"ARRAY_MIN"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRel.Prefer","l":"ARRAY_NICE"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"ARRAY_NONNULL"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"ARRAY_OF_INTEGER"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"ARRAY_OR_MAP"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"ARRAY_OR_MAP_OR_VARIANT"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ARRAY_POSITION"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ARRAY_POSITION"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"ARRAY_POSITION"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ARRAY_PREPEND"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ARRAY_PREPEND"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"ARRAY_PREPEND"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"ARRAY_QUERY"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ARRAY_QUERY_CONSTRUCTOR"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ARRAY_REMOVE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ARRAY_REMOVE"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"ARRAY_REMOVE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ARRAY_REPEAT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ARRAY_REPEAT"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"ARRAY_REPEAT"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ARRAY_REVERSE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ARRAY_REVERSE"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"ARRAY_REVERSE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ARRAY_SIZE"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"ARRAY_SIZE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ARRAY_SLICE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ARRAY_SLICE"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"ARRAY_SLICE"},{"p":"org.apache.calcite.adapter.spark","c":"SparkMethod","l":"ARRAY_TO_RDD"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ARRAY_TO_STRING"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ARRAY_TO_STRING"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"ARRAY_TO_STRING"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ARRAY_UNION"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ARRAY_UNION"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"ARRAY_UNION"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ARRAY_VALUE_CONSTRUCTOR"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"ARRAY_VALUE_CONSTRUCTOR"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"array(Object...)","u":"array(java.lang.Object...)"},{"p":"org.apache.calcite.rex","c":"RexSubQuery","l":"array(RelNode)","u":"array(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"arrayAppend(List, Object)","u":"arrayAppend(java.util.List,java.lang.Object)"},{"p":"org.apache.calcite.util","c":"Smalls.AllTypesFunction","l":"arrayAppendFun(List, Integer)","u":"arrayAppendFun(java.util.List,java.lang.Integer)"},{"p":"org.apache.calcite.runtime","c":"ArrayComparator","l":"ArrayComparator(boolean...)","u":"%3Cinit%3E(boolean...)"},{"p":"org.apache.calcite.runtime","c":"ArrayComparator","l":"ArrayComparator(Comparator...)","u":"%3Cinit%3E(java.util.Comparator...)"},{"p":"org.apache.calcite.linq4j.function","c":"Functions","l":"arrayComparer()"},{"p":"org.apache.calcite.adapter.file","c":"CsvEnumerator","l":"arrayConverter(List<RelDataType>, List<Integer>, boolean)","u":"arrayConverter(java.util.List,java.util.List,boolean)"},{"p":"org.apache.calcite.sql.type","c":"ArrayElementOperandTypeChecker","l":"ArrayElementOperandTypeChecker(boolean, boolean)","u":"%3Cinit%3E(boolean,boolean)"},{"p":"org.apache.calcite.runtime","c":"ArrayEnumeratorCursor","l":"ArrayEnumeratorCursor(Enumerator<Object[]>)","u":"%3Cinit%3E(org.apache.calcite.linq4j.Enumerator)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"arrayExcept(List, List)","u":"arrayExcept(java.util.List,java.util.List)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"ArrayIndex"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"arrayIndex(Expression, Expression)","u":"arrayIndex(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"arrayIndexOutOfBounds(int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"arrayInsert(List, Object, Object)","u":"arrayInsert(java.util.List,java.lang.Object,java.lang.Object)"},{"p":"org.apache.calcite.sql.type","c":"ArrayInsertOperandTypeChecker","l":"ArrayInsertOperandTypeChecker()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"arrayIntersect(List, List)","u":"arrayIntersect(java.util.List,java.util.List)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"arrayItem(List, int, int, boolean)","u":"arrayItem(java.util.List,int,int,boolean)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"arrayItem(Object, int)","u":"arrayItem(java.lang.Object,int)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"arrayItem(Object, int, Primitive.Sink)","u":"arrayItem(java.lang.Object,int,org.apache.calcite.linq4j.tree.Primitive.Sink)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"arrayItem(Primitive.Source, Object, int)","u":"arrayItem(org.apache.calcite.linq4j.tree.Primitive.Source,java.lang.Object,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"arrayItemOptional(List, int, int, boolean)","u":"arrayItemOptional(java.util.List,int,int,boolean)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"ArrayLength"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"arrayLength(Expression)","u":"arrayLength(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"ArrayLengthRecordField","l":"ArrayLengthRecordField(String, Class)","u":"%3Cinit%3E(java.lang.String,java.lang.Class)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"arrayMax(List<? extends T>)","u":"arrayMax(java.util.List)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"arrayMin(List<? extends T>)","u":"arrayMin(java.util.List)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"arrayOrObjectValueRequiredInStrictModeOfJsonQueryFunc(String)","u":"arrayOrObjectValueRequiredInStrictModeOfJsonQueryFunc(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"arrayPosition(List, Object)","u":"arrayPosition(java.util.List,java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"arrayPrepend(List, Object)","u":"arrayPrepend(java.util.List,java.lang.Object)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"arrayQuery(Function<RelBuilder, RelNode>)","u":"arrayQuery(java.util.function.Function)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"arrayRemove(List, Object)","u":"arrayRemove(java.util.List,java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"arrayRepeat(Object, Object)","u":"arrayRepeat(java.lang.Object,java.lang.Object)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ARRAYS_AS_LIST"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ARRAYS_OVERLAP"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ARRAYS_OVERLAP"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"ARRAYS_OVERLAP"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ARRAYS_ZIP"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ARRAYS_ZIP"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"ARRAYS_ZIP"},{"p":"org.apache.calcite.runtime","c":"SortedMultiMap","l":"arrays(Comparator<V>)","u":"arrays(java.util.Comparator)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"arraySlice(List, int, int)","u":"arraySlice(java.util.List,int,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"arraysOverlap(List, List)","u":"arraysOverlap(java.util.List,java.util.List)"},{"p":"org.apache.calcite.sql.type","c":"ArraySqlType","l":"ArraySqlType(RelDataType, boolean)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataType,boolean)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"arraysZip(List...)","u":"arraysZip(java.util.List...)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"arrayToList(Array)","u":"arrayToList(java.sql.Array)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"arrayToString(List, String)","u":"arrayToString(java.util.List,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"arrayToString(List, String, String)","u":"arrayToString(java.util.List,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"arrayToString(Object)","u":"arrayToString(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"Types.ArrayType","l":"ArrayType(Type)","u":"%3Cinit%3E(java.lang.reflect.Type)"},{"p":"org.apache.calcite.linq4j.tree","c":"Types.ArrayType","l":"ArrayType(Type, boolean, long)","u":"%3Cinit%3E(java.lang.reflect.Type,boolean,long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"arrayUnion(List, List)","u":"arrayUnion(java.util.List,java.util.List)"},{"p":"org.apache.calcite.adapter.arrow","c":"ArrowRules.ArrowFilterRule","l":"ArrowFilterRule(ArrowRules.ArrowFilterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.adapter.arrow.ArrowRules.ArrowFilterRule.Config)"},{"p":"org.apache.calcite.adapter.arrow","c":"ArrowRules.ArrowProjectRule","l":"ArrowProjectRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.adapter.arrow","c":"ArrowSchemaFactory","l":"ArrowSchemaFactory()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUtil","l":"ARTIFICIAL_SELECTIVITY_FUNC"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"AS"},{"p":"org.apache.calcite.sql","c":"SqlWriter.FrameTypeEnum","l":"AS"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"AS"},{"p":"org.apache.calcite.adapter.spark","c":"SparkMethod","l":"AS_ENUMERABLE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"AS_ENUMERABLE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"AS_ENUMERABLE2"},{"p":"org.apache.calcite.plan","c":"Strong.Policy","l":"AS_IS"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"AS_LIST"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"AS_QUERYABLE"},{"p":"org.apache.calcite.plan","c":"RelRule.Config","l":"as(Class<T>)","u":"as(java.lang.Class)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor","l":"as(SqlNode, String, String...)","u":"as(org.apache.calcite.sql.SqlNode,java.lang.String,java.lang.String...)"},{"p":"org.apache.calcite.tools","c":"RelBuilder.AggCall","l":"as(String)","u":"as(java.lang.String)"},{"p":"org.apache.calcite.tools","c":"PigRelBuilder","l":"as(String)","u":"as(java.lang.String)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"as(String)","u":"as(java.lang.String)"},{"p":"org.apache.calcite.tools","c":"RelBuilder.OverCall","l":"as(String)","u":"as(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"BufferStyle","l":"asBufferParameters()"},{"p":"org.apache.calcite.piglet","c":"Ast.Direction","l":"ASC"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeSort","l":"ASC"},{"p":"org.apache.calcite.rel","c":"RelFieldCollation.Direction","l":"ASCENDING"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ASCII"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"ASCII"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"ascii(String)","u":"ascii(java.lang.String)"},{"p":"org.apache.calcite.interpreter","c":"Row","l":"asCopy(Object...)","u":"asCopy(java.lang.Object...)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"asEnumerable()"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"asEnumerable()"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"asEnumerable()"},{"p":"org.apache.calcite.linq4j","c":"Linq4j","l":"asEnumerable(Collection<T>)","u":"asEnumerable(java.util.Collection)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"asEnumerable(Enumerable<TSource>)","u":"asEnumerable(org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"Linq4j","l":"asEnumerable(Iterable<T>)","u":"asEnumerable(java.lang.Iterable)"},{"p":"org.apache.calcite.adapter.spark","c":"SparkRuntime","l":"asEnumerable(JavaRDD<T>)","u":"asEnumerable(org.apache.spark.api.java.JavaRDD)"},{"p":"org.apache.calcite.linq4j","c":"Linq4j","l":"asEnumerable(List<T>)","u":"asEnumerable(java.util.List)"},{"p":"org.apache.calcite.linq4j","c":"Linq4j","l":"asEnumerable(T[])"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeUtils","l":"asEwkt(Geometry)","u":"asEwkt(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Result","l":"asFrom()"},{"p":"org.apache.calcite.runtime.rtti","c":"RuntimeTypeInformation","l":"asGeneric()"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeUtils","l":"asGeoJson(Geometry)","u":"asGeoJson(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeUtils","l":"asGml(Geometry)","u":"asGml(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.sql","c":"SqlIntervalQualifier","l":"asIdentifier(SqlNode)","u":"asIdentifier(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.util","c":"IntList","l":"asImmutable()"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ASIN"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"ASIN"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"asin(BigDecimal)","u":"asin(java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"asin(double)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ASIND"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"ASIND"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"asind(BigDecimal)","u":"asind(java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"asind(double)"},{"p":"org.apache.calcite.util","c":"Util","l":"asIndexMap(Collection<V>, Function<V, K>)","u":"asIndexMap(java.util.Collection,com.google.common.base.Function)"},{"p":"org.apache.calcite.util","c":"Util","l":"asIndexMapJ(Collection<V>, Function<V, K>)","u":"asIndexMapJ(java.util.Collection,java.util.function.Function)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ASINH"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"ASINH"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"asinh(BigDecimal)","u":"asinh(java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"asinh(double)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"asList()"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"asList(boolean[])"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"asList(byte[])"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"asList(char[])"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"asList(double[])"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"asList(float[])"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"asList(int[])"},{"p":"org.apache.calcite.util","c":"IntList","l":"asList(int[])"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"asList(long[])"},{"p":"org.apache.calcite.util.mapping","c":"Mappings","l":"asList(Mappings.TargetMapping)","u":"asList(org.apache.calcite.util.mapping.Mappings.TargetMapping)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"asList(Object)","u":"asList(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"asList(short[])"},{"p":"org.apache.calcite.util.mapping","c":"Mappings","l":"asListNonNull(Mappings.TargetMapping)","u":"asListNonNull(org.apache.calcite.util.mapping.Mappings.TargetMapping)"},{"p":"org.apache.calcite.linq4j","c":"JoinType","l":"ASOF"},{"p":"org.apache.calcite.rel.core","c":"JoinRelType","l":"ASOF"},{"p":"org.apache.calcite.sql","c":"JoinType","l":"ASOF"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ASOF_JOIN"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"asofCannotBeCorrelated()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"asofConditionMustBeComparison()"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"asofJoin(Enumerable<TInner>, Function1<T, TKey>, Function1<TInner, TKey>, Function2<T, TInner, TResult>, Predicate2<T, TInner>, Comparator<TInner>, boolean)","u":"asofJoin(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.Predicate2,java.util.Comparator,boolean)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"asofJoin(Enumerable<TInner>, Function1<TSource, TKey>, Function1<TInner, TKey>, Function2<TSource, TInner, TResult>, Predicate2<TSource, TInner>, Comparator<TInner>, boolean)","u":"asofJoin(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.Predicate2,java.util.Comparator,boolean)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"asofJoin(Enumerable<TSource>, Enumerable<TInner>, Function1<TSource, TKey>, Function1<TInner, TKey>, Function2<TSource, TInner, TResult>, Predicate2<TSource, TInner>, Comparator<TInner>, boolean)","u":"asofJoin(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.Predicate2,java.util.Comparator,boolean)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"asofJoin(JoinRelType, RexNode, RexNode)","u":"asofJoin(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.core","c":"AsofJoin","l":"AsofJoin(RelOptCluster, RelTraitSet, List<RelHint>, RelNode, RelNode, RexNode, RexNode, Set<CorrelationId>, JoinRelType)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.util.Set,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.Struct","l":"asofJoinFactory"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"asofMatchMustBeComparison()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"asofRequiresMatchCondition()"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"asOrderedQueryable()"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"asOrderedQueryable(Enumerable<T>)","u":"asOrderedQueryable(org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.runtime.rtti","c":"RuntimeTypeInformation","l":"asPrimitive()"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"asQueryable()"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"asQueryable()"},{"p":"org.apache.calcite.linq4j","c":"Enumerable","l":"asQueryable()"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"asQueryable()"},{"p":"org.apache.calcite.linq4j","c":"Extensions","l":"asQueryable(DefaultEnumerable<T>)","u":"asQueryable(org.apache.calcite.linq4j.DefaultEnumerable)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"asQueryable(Enumerable<TSource>)","u":"asQueryable(org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"asQueryable(Queryable<T>)","u":"asQueryable(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.adapter.arrow","c":"ArrowTable","l":"asQueryable(QueryProvider, SchemaPlus, String)","u":"asQueryable(org.apache.calcite.linq4j.QueryProvider,org.apache.calcite.schema.SchemaPlus,java.lang.String)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraTable","l":"asQueryable(QueryProvider, SchemaPlus, String)","u":"asQueryable(org.apache.calcite.linq4j.QueryProvider,org.apache.calcite.schema.SchemaPlus,java.lang.String)"},{"p":"org.apache.calcite.adapter.csv","c":"CsvTranslatableTable","l":"asQueryable(QueryProvider, SchemaPlus, String)","u":"asQueryable(org.apache.calcite.linq4j.QueryProvider,org.apache.calcite.schema.SchemaPlus,java.lang.String)"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchTable","l":"asQueryable(QueryProvider, SchemaPlus, String)","u":"asQueryable(org.apache.calcite.linq4j.QueryProvider,org.apache.calcite.schema.SchemaPlus,java.lang.String)"},{"p":"org.apache.calcite.adapter.file","c":"CsvTranslatableTable","l":"asQueryable(QueryProvider, SchemaPlus, String)","u":"asQueryable(org.apache.calcite.linq4j.QueryProvider,org.apache.calcite.schema.SchemaPlus,java.lang.String)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeTable","l":"asQueryable(QueryProvider, SchemaPlus, String)","u":"asQueryable(org.apache.calcite.linq4j.QueryProvider,org.apache.calcite.schema.SchemaPlus,java.lang.String)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbTable","l":"asQueryable(QueryProvider, SchemaPlus, String)","u":"asQueryable(org.apache.calcite.linq4j.QueryProvider,org.apache.calcite.schema.SchemaPlus,java.lang.String)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcTable","l":"asQueryable(QueryProvider, SchemaPlus, String)","u":"asQueryable(org.apache.calcite.linq4j.QueryProvider,org.apache.calcite.schema.SchemaPlus,java.lang.String)"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoTable","l":"asQueryable(QueryProvider, SchemaPlus, String)","u":"asQueryable(org.apache.calcite.linq4j.QueryProvider,org.apache.calcite.schema.SchemaPlus,java.lang.String)"},{"p":"org.apache.calcite.schema.impl","c":"ListTransientTable","l":"asQueryable(QueryProvider, SchemaPlus, String)","u":"asQueryable(org.apache.calcite.linq4j.QueryProvider,org.apache.calcite.schema.SchemaPlus,java.lang.String)"},{"p":"org.apache.calcite.schema.impl","c":"ViewTable","l":"asQueryable(QueryProvider, SchemaPlus, String)","u":"asQueryable(org.apache.calcite.linq4j.QueryProvider,org.apache.calcite.schema.SchemaPlus,java.lang.String)"},{"p":"org.apache.calcite.schema","c":"QueryableTable","l":"asQueryable(QueryProvider, SchemaPlus, String)","u":"asQueryable(org.apache.calcite.linq4j.QueryProvider,org.apache.calcite.schema.SchemaPlus,java.lang.String)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockDynamicTable","l":"asQueryable(QueryProvider, SchemaPlus, String)","u":"asQueryable(org.apache.calcite.linq4j.QueryProvider,org.apache.calcite.schema.SchemaPlus,java.lang.String)"},{"p":"org.apache.calcite.util","c":"Smalls.SimpleTable","l":"asQueryable(QueryProvider, SchemaPlus, String)","u":"asQueryable(org.apache.calcite.linq4j.QueryProvider,org.apache.calcite.schema.SchemaPlus,java.lang.String)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Result","l":"asQueryOrValues()"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Result","l":"asSelect()"},{"p":"org.apache.calcite.test","c":"CalciteAssert","l":"assertArrayEqual(String, Object[], Object[])","u":"assertArrayEqual(java.lang.String,java.lang.Object[],java.lang.Object[])"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"assertBindType(Matcher<String>)","u":"assertBindType(org.hamcrest.Matcher)"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"assertCharset(Matcher<Charset>)","u":"assertCharset(org.hamcrest.Matcher)"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"assertCollation(Matcher<String>, Matcher<SqlCollation.Coercibility>)","u":"assertCollation(org.hamcrest.Matcher,org.hamcrest.Matcher)"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture","l":"assertColumnOriginDouble(String, String, String, String, boolean)","u":"assertColumnOriginDouble(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture","l":"assertColumnOriginIsEmpty()"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture","l":"assertColumnOriginSingle(String, String, boolean)","u":"assertColumnOriginSingle(java.lang.String,java.lang.String,boolean)"},{"p":"org.apache.calcite.sql.test","c":"AbstractSqlTester","l":"assertConvertsTo(SqlTestFactory, DiffRepository, String, String, boolean, boolean, boolean)","u":"assertConvertsTo(org.apache.calcite.sql.test.SqlTestFactory,org.apache.calcite.test.DiffRepository,java.lang.String,java.lang.String,boolean,boolean,boolean)"},{"p":"org.apache.calcite.sql.test","c":"SqlTester","l":"assertConvertsTo(SqlTestFactory, DiffRepository, String, String, boolean, boolean, boolean)","u":"assertConvertsTo(org.apache.calcite.sql.test.SqlTestFactory,org.apache.calcite.test.DiffRepository,java.lang.String,java.lang.String,boolean,boolean,boolean)"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture","l":"assertCpuCost(Matcher<Double>, String)","u":"assertCpuCost(org.hamcrest.Matcher,java.lang.String)"},{"p":"org.apache.calcite.test","c":"DiffRepository","l":"assertEquals(String, String, String)","u":"assertEquals(java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.util","c":"TestUtil","l":"assertEqualsVerbose(String, String)","u":"assertEqualsVerbose(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.sql.test","c":"AbstractSqlTester","l":"assertExceptionIsThrown(SqlTestFactory, StringAndPos, String)","u":"assertExceptionIsThrown(org.apache.calcite.sql.test.SqlTestFactory,org.apache.calcite.sql.parser.StringAndPos,java.lang.String)"},{"p":"org.apache.calcite.sql.test","c":"SqlTester","l":"assertExceptionIsThrown(SqlTestFactory, StringAndPos, String)","u":"assertExceptionIsThrown(org.apache.calcite.sql.test.SqlTestFactory,org.apache.calcite.sql.parser.StringAndPos,java.lang.String)"},{"p":"org.apache.calcite.test","c":"SqlOperatorTest.TesterImpl","l":"assertExceptionIsThrown(SqlTestFactory, StringAndPos, String)","u":"assertExceptionIsThrown(org.apache.calcite.sql.test.SqlTestFactory,org.apache.calcite.sql.parser.StringAndPos,java.lang.String)"},{"p":"org.apache.calcite.test","c":"SqlOperatorTest.TesterImpl","l":"assertExceptionIsThrown(SqlTestFactory, StringAndPos, String, boolean)","u":"assertExceptionIsThrown(org.apache.calcite.sql.test.SqlTestFactory,org.apache.calcite.sql.parser.StringAndPos,java.lang.String,boolean)"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"assertFieldOrigin(Matcher<String>)","u":"assertFieldOrigin(org.hamcrest.Matcher)"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"assertInterval(Matcher<Long>)","u":"assertInterval(org.hamcrest.Matcher)"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"assertMeasure(int, Matcher<Boolean>)","u":"assertMeasure(int,org.hamcrest.Matcher)"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"assertMonotonicity(Matcher<SqlMonotonicity>)","u":"assertMonotonicity(org.hamcrest.Matcher)"},{"p":"org.apache.calcite.test","c":"IntervalTest.Fixture2","l":"assertParse(String)","u":"assertParse(java.lang.String)"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture","l":"assertPercentageOriginalRows(Matcher<Double>)","u":"assertPercentageOriginalRows(org.hamcrest.Matcher)"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture","l":"assertRowsUnique(boolean, Matcher<Boolean>, String)","u":"assertRowsUnique(boolean,org.hamcrest.Matcher,java.lang.String)"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture","l":"assertRowsUnique(Matcher<Boolean>, String)","u":"assertRowsUnique(org.hamcrest.Matcher,java.lang.String)"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture","l":"assertThatAreColumnsUnique(Function<RelNode, ImmutableBitSet>, UnaryOperator<RelNode>, Matcher<Boolean>)","u":"assertThatAreColumnsUnique(java.util.function.Function,java.util.function.UnaryOperator,org.hamcrest.Matcher)"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture","l":"assertThatAreColumnsUnique(ImmutableBitSet, Matcher<Boolean>)","u":"assertThatAreColumnsUnique(org.apache.calcite.util.ImmutableBitSet,org.hamcrest.Matcher)"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture","l":"assertThatAreRowsUnique(Matcher<Boolean>)","u":"assertThatAreRowsUnique(org.hamcrest.Matcher)"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture","l":"assertThatDistinctRowCount(Function<RelNode, ImmutableBitSet>, Matcher<Double>)","u":"assertThatDistinctRowCount(java.util.function.Function,org.hamcrest.Matcher)"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture","l":"assertThatDistinctRowCount(ImmutableBitSet, Matcher<Double>)","u":"assertThatDistinctRowCount(org.apache.calcite.util.ImmutableBitSet,org.hamcrest.Matcher)"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture","l":"assertThatNodeTypeCount(Matcher<Map<Class<? extends RelNode>, Integer>>)","u":"assertThatNodeTypeCount(org.hamcrest.Matcher)"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture","l":"assertThatNodeTypeCountIs(Class<? extends RelNode>, Integer, Object...)","u":"assertThatNodeTypeCountIs(java.lang.Class,java.lang.Integer,java.lang.Object...)"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture","l":"assertThatRel(Matcher<RelNode>)","u":"assertThatRel(org.hamcrest.Matcher)"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture","l":"assertThatRowCount(Matcher<Number>, Matcher<Number>, Matcher<Number>)","u":"assertThatRowCount(org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher)"},{"p":"org.apache.calcite.util","c":"TestUtil","l":"assertThatScientific(String, Matcher<String>)","u":"assertThatScientific(java.lang.String,org.hamcrest.Matcher)"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture","l":"assertThatSelectivity(Matcher<Double>)","u":"assertThatSelectivity(org.hamcrest.Matcher)"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture","l":"assertThatUniqueKeys(Matcher<Iterable<ImmutableBitSet>>)","u":"assertThatUniqueKeys(org.hamcrest.Matcher)"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture","l":"assertThatUniqueKeysAre(boolean, ImmutableBitSet...)","u":"assertThatUniqueKeysAre(boolean,org.apache.calcite.util.ImmutableBitSet...)"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture","l":"assertThatUniqueKeysAre(ImmutableBitSet...)","u":"assertThatUniqueKeysAre(org.apache.calcite.util.ImmutableBitSet...)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"asSet()"},{"p":"org.apache.calcite.runtime","c":"BufferStyle","l":"asSidedDistance(double)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"Assign"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"assign(Expression, Expression)","u":"assign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"assignableFrom(Primitive)","u":"assignableFrom(org.apache.calcite.linq4j.tree.Primitive)"},{"p":"org.apache.calcite.sql.type","c":"AssignableOperandTypeChecker","l":"AssignableOperandTypeChecker(List<RelDataType>, List<String>)","u":"%3Cinit%3E(java.util.List,java.util.List)"},{"p":"org.apache.calcite.piglet","c":"Ast.Assignment","l":"Assignment(SqlParserPos, Ast.Op, Ast.Identifier)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.piglet.Ast.Op,org.apache.calcite.piglet.Ast.Identifier)"},{"p":"org.apache.calcite.piglet","c":"Ast.Assignment1","l":"Assignment1(SqlParserPos, Ast.Op, Ast.Identifier, Ast.Identifier)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.piglet.Ast.Op,org.apache.calcite.piglet.Ast.Identifier,org.apache.calcite.piglet.Ast.Identifier)"},{"p":"org.apache.calcite.rex","c":"RexAnalyzer","l":"assignments()"},{"p":"org.apache.calcite.sql","c":"SqlIdentifier","l":"assignNamesFrom(SqlIdentifier)","u":"assignNamesFrom(org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.util","c":"NlsString","l":"asSql(boolean, boolean)","u":"asSql(boolean,boolean)"},{"p":"org.apache.calcite.util","c":"NlsString","l":"asSql(boolean, boolean, SqlDialect)","u":"asSql(boolean,boolean,org.apache.calcite.sql.SqlDialect)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Result","l":"asStatement()"},{"p":"org.apache.calcite.rel.externalize","c":"RelJsonWriter","l":"asString()"},{"p":"org.apache.calcite.util","c":"Util","l":"asStringBuilder(Appendable, Consumer<StringBuilder>)","u":"asStringBuilder(java.lang.Appendable,java.util.function.Consumer)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeUtils","l":"asWkb(Geometry)","u":"asWkb(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeUtils","l":"asWkt(Geometry)","u":"asWkt(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.sql.fun","c":"SqlBetweenOperator.Flag","l":"ASYMMETRIC"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"AT_LEAST_ONE_SAME_VARIADIC"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ATAN"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"ATAN"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"atan(BigDecimal)","u":"atan(java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"atan(double)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ATAN2"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"ATAN2"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"atan2(BigDecimal, BigDecimal)","u":"atan2(java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"atan2(BigDecimal, double)","u":"atan2(java.math.BigDecimal,double)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"atan2(double, BigDecimal)","u":"atan2(double,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"atan2(double, double)","u":"atan2(double,double)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ATAND"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"ATAND"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"atand(BigDecimal)","u":"atand(java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"atand(double)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ATANH"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"ATANH"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"atanh(BigDecimal)","u":"atanh(java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"atanh(double)"},{"p":"org.apache.calcite.util","c":"RangeSets.Consumer","l":"atLeast(V)"},{"p":"org.apache.calcite.util","c":"RangeSets.Handler","l":"atLeast(V)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"atLeastOneArgumentMustNotBeNull(String)","u":"atLeastOneArgumentMustNotBeNull(java.lang.String)"},{"p":"org.apache.calcite.util","c":"RangeSets.Consumer","l":"atMost(V)"},{"p":"org.apache.calcite.util","c":"RangeSets.Handler","l":"atMost(V)"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser.Type","l":"ATOM"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser","l":"atom(Object)","u":"atom(java.lang.Object)"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser.Builder","l":"atom(Object)","u":"atom(java.lang.Object)"},{"p":"org.apache.calcite.util","c":"CancelFlag","l":"atomicBoolean"},{"p":"org.apache.calcite.rel.hint","c":"Hintable","l":"attachHints(List<RelHint>)","u":"attachHints(java.util.List)"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"attachRelHint(HintStrategyTable, List<RelHint>, Hintable)","u":"attachRelHint(org.apache.calcite.rel.hint.HintStrategyTable,java.util.List,org.apache.calcite.rel.hint.Hintable)"},{"p":"org.apache.calcite.plan.visualizer","c":"RuleMatchVisualizer","l":"attachTo(RelOptPlanner)","u":"attachTo(org.apache.calcite.plan.RelOptPlanner)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"ATTEMPT_SUGGESTER"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ATTRIBUTE_DEF"},{"p":"org.apache.calcite.sql.ddl","c":"SqlDdlNodes","l":"attribute(SqlParserPos, SqlIdentifier, SqlDataTypeSpec, SqlNode, SqlCollation)","u":"attribute(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlDataTypeSpec,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCollation)"},{"p":"org.apache.calcite.util","c":"XmlOutput","l":"attribute(String, String)","u":"attribute(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.util.graph","c":"AttributedDirectedGraph","l":"AttributedDirectedGraph(AttributedDirectedGraph.AttributedEdgeFactory<V, E>)","u":"%3Cinit%3E(org.apache.calcite.util.graph.AttributedDirectedGraph.AttributedEdgeFactory)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateType","l":"attributeDefs"},{"p":"org.apache.calcite.model","c":"JsonType","l":"attributes"},{"p":"org.apache.calcite.test.schemata.bookstore","c":"BookstoreSchema.Author","l":"Author(int, String, BookstoreSchema.Place, List<BookstoreSchema.Book>)","u":"%3Cinit%3E(int,java.lang.String,org.apache.calcite.test.schemata.bookstore.BookstoreSchema.Place,java.util.List)"},{"p":"org.apache.calcite.test.schemata.bookstore","c":"BookstoreSchema","l":"authors"},{"p":"org.apache.calcite.materialize","c":"Lattice","l":"auto"},{"p":"org.apache.calcite.model","c":"JsonLattice","l":"auto"},{"p":"org.apache.calcite.config","c":"CalciteConnectionProperty","l":"AUTO_TEMP"},{"p":"org.apache.calcite.materialize","c":"Lattice.Builder","l":"auto(boolean)"},{"p":"org.apache.calcite.adapter.geode.util","c":"GeodeUtils","l":"autodetectRelTypeFromRegion(Region<?, ?>)","u":"autodetectRelTypeFromRegion(org.apache.geode.cache.Region)"},{"p":"org.apache.calcite.model","c":"JsonSchema","l":"autoLattice"},{"p":"org.apache.calcite.runtime","c":"Pattern.PatternBuilder","l":"automaton()"},{"p":"org.apache.calcite.runtime","c":"AutomatonBuilder","l":"AutomatonBuilder()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.rules","c":"ProjectRemoveRule","l":"autoPruneOld()"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules.PruneEmptyRule","l":"autoPruneOld()"},{"p":"org.apache.calcite.rel.rules","c":"SingleValuesOptimizationRules.PruneSingleValueRule","l":"autoPruneOld()"},{"p":"org.apache.calcite.rel.rules","c":"SubstitutionRule","l":"autoPruneOld()"},{"p":"org.apache.calcite.rel.rules","c":"UnionEliminatorRule","l":"autoPruneOld()"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfig","l":"autoTemp()"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfigImpl","l":"autoTemp()"},{"p":"org.apache.calcite.test","c":"CalciteAssert.Config","l":"AUX"},{"p":"org.apache.calcite.test","c":"CalciteAssert.SchemaSpec","l":"AUX"},{"p":"org.apache.calcite.schema","c":"Schema.TableType","l":"AUXILIARY_TABLE"},{"p":"org.apache.calcite.sql","c":"SqlGroupedWindowFunction","l":"auxiliary(SqlKind)","u":"auxiliary(org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.sql","c":"SqlGroupedWindowFunction","l":"auxiliary(String, SqlKind)","u":"auxiliary(java.lang.String,org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"auxiliaryToGroup(SqlKind)","u":"auxiliaryToGroup(org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"auxiliaryWithoutMatchingGroupCall(String, String)","u":"auxiliaryWithoutMatchingGroupCall(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.util","c":"TestUtil","l":"AVATICA_VERSION"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"AVERAGE_COLUMN_SIZES"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"AVERAGE_ROW_SIZE"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"average(BigDecimalFunction1<T>)","u":"average(org.apache.calcite.linq4j.function.BigDecimalFunction1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"average(BigDecimalFunction1<TSource>)","u":"average(org.apache.calcite.linq4j.function.BigDecimalFunction1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"average(DoubleFunction1<T>)","u":"average(org.apache.calcite.linq4j.function.DoubleFunction1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"average(DoubleFunction1<TSource>)","u":"average(org.apache.calcite.linq4j.function.DoubleFunction1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"average(Enumerable<TSource>, BigDecimalFunction1<TSource>)","u":"average(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.BigDecimalFunction1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"average(Enumerable<TSource>, DoubleFunction1<TSource>)","u":"average(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.DoubleFunction1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"average(Enumerable<TSource>, FloatFunction1<TSource>)","u":"average(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.FloatFunction1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"average(Enumerable<TSource>, IntegerFunction1<TSource>)","u":"average(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.IntegerFunction1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"average(Enumerable<TSource>, LongFunction1<TSource>)","u":"average(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.LongFunction1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"average(Enumerable<TSource>, NullableBigDecimalFunction1<TSource>)","u":"average(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.NullableBigDecimalFunction1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"average(Enumerable<TSource>, NullableDoubleFunction1<TSource>)","u":"average(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.NullableDoubleFunction1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"average(Enumerable<TSource>, NullableFloatFunction1<TSource>)","u":"average(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.NullableFloatFunction1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"average(Enumerable<TSource>, NullableIntegerFunction1<TSource>)","u":"average(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.NullableIntegerFunction1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"average(Enumerable<TSource>, NullableLongFunction1<TSource>)","u":"average(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.NullableLongFunction1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"average(FloatFunction1<T>)","u":"average(org.apache.calcite.linq4j.function.FloatFunction1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"average(FloatFunction1<TSource>)","u":"average(org.apache.calcite.linq4j.function.FloatFunction1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"average(IntegerFunction1<T>)","u":"average(org.apache.calcite.linq4j.function.IntegerFunction1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"average(IntegerFunction1<TSource>)","u":"average(org.apache.calcite.linq4j.function.IntegerFunction1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"average(LongFunction1<T>)","u":"average(org.apache.calcite.linq4j.function.LongFunction1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"average(LongFunction1<TSource>)","u":"average(org.apache.calcite.linq4j.function.LongFunction1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"average(NullableBigDecimalFunction1<T>)","u":"average(org.apache.calcite.linq4j.function.NullableBigDecimalFunction1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"average(NullableBigDecimalFunction1<TSource>)","u":"average(org.apache.calcite.linq4j.function.NullableBigDecimalFunction1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"average(NullableDoubleFunction1<T>)","u":"average(org.apache.calcite.linq4j.function.NullableDoubleFunction1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"average(NullableDoubleFunction1<TSource>)","u":"average(org.apache.calcite.linq4j.function.NullableDoubleFunction1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"average(NullableFloatFunction1<T>)","u":"average(org.apache.calcite.linq4j.function.NullableFloatFunction1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"average(NullableFloatFunction1<TSource>)","u":"average(org.apache.calcite.linq4j.function.NullableFloatFunction1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"average(NullableIntegerFunction1<T>)","u":"average(org.apache.calcite.linq4j.function.NullableIntegerFunction1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"average(NullableIntegerFunction1<TSource>)","u":"average(org.apache.calcite.linq4j.function.NullableIntegerFunction1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"average(NullableLongFunction1<T>)","u":"average(org.apache.calcite.linq4j.function.NullableLongFunction1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"average(NullableLongFunction1<TSource>)","u":"average(org.apache.calcite.linq4j.function.NullableLongFunction1)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"averageBigDecimal(FunctionExpression<BigDecimalFunction1<T>>)","u":"averageBigDecimal(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"averageBigDecimal(FunctionExpression<BigDecimalFunction1<T>>)","u":"averageBigDecimal(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"averageBigDecimal(FunctionExpression<BigDecimalFunction1<TSource>>)"},{"p":"","c":"","l":"averageBigDecimal(FunctionExpression<BigDecimalFunction1<TSource>>)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"averageBigDecimal(Queryable<T>, FunctionExpression<BigDecimalFunction1<T>>)","u":"averageBigDecimal(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"averageBigDecimal(Queryable<T>, FunctionExpression<BigDecimalFunction1<T>>)","u":"averageBigDecimal(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"averageBigDecimal(Queryable<T>, FunctionExpression<BigDecimalFunction1<T>>)","u":"averageBigDecimal(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Size","l":"averageColumnSizes()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdSize","l":"averageColumnSizes(Aggregate, RelMetadataQuery)","u":"averageColumnSizes(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdSize","l":"averageColumnSizes(Calc, RelMetadataQuery)","u":"averageColumnSizes(org.apache.calcite.rel.core.Calc,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdSize","l":"averageColumnSizes(Exchange, RelMetadataQuery)","u":"averageColumnSizes(org.apache.calcite.rel.core.Exchange,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdSize","l":"averageColumnSizes(Filter, RelMetadataQuery)","u":"averageColumnSizes(org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdSize","l":"averageColumnSizes(Intersect, RelMetadataQuery)","u":"averageColumnSizes(org.apache.calcite.rel.core.Intersect,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdSize","l":"averageColumnSizes(Join, RelMetadataQuery)","u":"averageColumnSizes(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdSize","l":"averageColumnSizes(Minus, RelMetadataQuery)","u":"averageColumnSizes(org.apache.calcite.rel.core.Minus,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdSize","l":"averageColumnSizes(Project, RelMetadataQuery)","u":"averageColumnSizes(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Size.Handler","l":"averageColumnSizes(RelNode, RelMetadataQuery)","u":"averageColumnSizes(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdSize","l":"averageColumnSizes(RelNode, RelMetadataQuery)","u":"averageColumnSizes(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdSize","l":"averageColumnSizes(Sort, RelMetadataQuery)","u":"averageColumnSizes(org.apache.calcite.rel.core.Sort,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdSize","l":"averageColumnSizes(TableModify, RelMetadataQuery)","u":"averageColumnSizes(org.apache.calcite.rel.core.TableModify,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdSize","l":"averageColumnSizes(TableScan, RelMetadataQuery)","u":"averageColumnSizes(org.apache.calcite.rel.core.TableScan,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdSize","l":"averageColumnSizes(Union, RelMetadataQuery)","u":"averageColumnSizes(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdSize","l":"averageColumnSizes(Values, RelMetadataQuery)","u":"averageColumnSizes(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"averageDouble(FunctionExpression<DoubleFunction1<T>>)","u":"averageDouble(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"averageDouble(FunctionExpression<DoubleFunction1<T>>)","u":"averageDouble(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"averageDouble(FunctionExpression<DoubleFunction1<TSource>>)"},{"p":"","c":"","l":"averageDouble(FunctionExpression<DoubleFunction1<TSource>>)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"averageDouble(Queryable<T>, FunctionExpression<DoubleFunction1<T>>)","u":"averageDouble(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"averageDouble(Queryable<T>, FunctionExpression<DoubleFunction1<T>>)","u":"averageDouble(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"averageDouble(Queryable<T>, FunctionExpression<DoubleFunction1<T>>)","u":"averageDouble(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdSize","l":"averageFieldValueSize(RelDataTypeField)","u":"averageFieldValueSize(org.apache.calcite.rel.type.RelDataTypeField)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"averageFloat(FunctionExpression<FloatFunction1<T>>)","u":"averageFloat(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"averageFloat(FunctionExpression<FloatFunction1<T>>)","u":"averageFloat(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"averageFloat(FunctionExpression<FloatFunction1<TSource>>)"},{"p":"","c":"","l":"averageFloat(FunctionExpression<FloatFunction1<TSource>>)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"averageFloat(Queryable<T>, FunctionExpression<FloatFunction1<T>>)","u":"averageFloat(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"averageFloat(Queryable<T>, FunctionExpression<FloatFunction1<T>>)","u":"averageFloat(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"averageFloat(Queryable<T>, FunctionExpression<FloatFunction1<T>>)","u":"averageFloat(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"averageInteger(FunctionExpression<IntegerFunction1<T>>)","u":"averageInteger(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"averageInteger(FunctionExpression<IntegerFunction1<T>>)","u":"averageInteger(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"averageInteger(FunctionExpression<IntegerFunction1<TSource>>)"},{"p":"","c":"","l":"averageInteger(FunctionExpression<IntegerFunction1<TSource>>)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"averageInteger(Queryable<T>, FunctionExpression<IntegerFunction1<T>>)","u":"averageInteger(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"averageInteger(Queryable<T>, FunctionExpression<IntegerFunction1<T>>)","u":"averageInteger(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"averageInteger(Queryable<T>, FunctionExpression<IntegerFunction1<T>>)","u":"averageInteger(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"averageLong(FunctionExpression<LongFunction1<T>>)","u":"averageLong(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"averageLong(FunctionExpression<LongFunction1<T>>)","u":"averageLong(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"averageLong(FunctionExpression<LongFunction1<TSource>>)"},{"p":"","c":"","l":"averageLong(FunctionExpression<LongFunction1<TSource>>)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"averageLong(Queryable<T>, FunctionExpression<LongFunction1<T>>)","u":"averageLong(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"averageLong(Queryable<T>, FunctionExpression<LongFunction1<T>>)","u":"averageLong(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"averageLong(Queryable<T>, FunctionExpression<LongFunction1<T>>)","u":"averageLong(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"averageNullableBigDecimal(FunctionExpression<NullableBigDecimalFunction1<T>>)","u":"averageNullableBigDecimal(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"averageNullableBigDecimal(FunctionExpression<NullableBigDecimalFunction1<T>>)","u":"averageNullableBigDecimal(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"averageNullableBigDecimal(FunctionExpression<NullableBigDecimalFunction1<TSource>>)"},{"p":"","c":"","l":"averageNullableBigDecimal(FunctionExpression<NullableBigDecimalFunction1<TSource>>)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"averageNullableBigDecimal(Queryable<T>, FunctionExpression<NullableBigDecimalFunction1<T>>)","u":"averageNullableBigDecimal(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"averageNullableBigDecimal(Queryable<T>, FunctionExpression<NullableBigDecimalFunction1<T>>)","u":"averageNullableBigDecimal(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"averageNullableBigDecimal(Queryable<T>, FunctionExpression<NullableBigDecimalFunction1<T>>)","u":"averageNullableBigDecimal(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"averageNullableDouble(FunctionExpression<NullableDoubleFunction1<T>>)","u":"averageNullableDouble(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"averageNullableDouble(FunctionExpression<NullableDoubleFunction1<T>>)","u":"averageNullableDouble(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"averageNullableDouble(FunctionExpression<NullableDoubleFunction1<TSource>>)"},{"p":"","c":"","l":"averageNullableDouble(FunctionExpression<NullableDoubleFunction1<TSource>>)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"averageNullableDouble(Queryable<T>, FunctionExpression<NullableDoubleFunction1<T>>)","u":"averageNullableDouble(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"averageNullableDouble(Queryable<T>, FunctionExpression<NullableDoubleFunction1<T>>)","u":"averageNullableDouble(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"averageNullableDouble(Queryable<T>, FunctionExpression<NullableDoubleFunction1<T>>)","u":"averageNullableDouble(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"averageNullableFloat(FunctionExpression<NullableFloatFunction1<T>>)","u":"averageNullableFloat(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"averageNullableFloat(FunctionExpression<NullableFloatFunction1<T>>)","u":"averageNullableFloat(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"averageNullableFloat(FunctionExpression<NullableFloatFunction1<TSource>>)"},{"p":"","c":"","l":"averageNullableFloat(FunctionExpression<NullableFloatFunction1<TSource>>)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"averageNullableFloat(Queryable<T>, FunctionExpression<NullableFloatFunction1<T>>)","u":"averageNullableFloat(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"averageNullableFloat(Queryable<T>, FunctionExpression<NullableFloatFunction1<T>>)","u":"averageNullableFloat(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"averageNullableFloat(Queryable<T>, FunctionExpression<NullableFloatFunction1<T>>)","u":"averageNullableFloat(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"averageNullableInteger(FunctionExpression<NullableIntegerFunction1<T>>)","u":"averageNullableInteger(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"averageNullableInteger(FunctionExpression<NullableIntegerFunction1<T>>)","u":"averageNullableInteger(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"averageNullableInteger(FunctionExpression<NullableIntegerFunction1<TSource>>)"},{"p":"","c":"","l":"averageNullableInteger(FunctionExpression<NullableIntegerFunction1<TSource>>)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"averageNullableInteger(Queryable<T>, FunctionExpression<NullableIntegerFunction1<T>>)","u":"averageNullableInteger(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"averageNullableInteger(Queryable<T>, FunctionExpression<NullableIntegerFunction1<T>>)","u":"averageNullableInteger(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"averageNullableInteger(Queryable<T>, FunctionExpression<NullableIntegerFunction1<T>>)","u":"averageNullableInteger(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"averageNullableLong(FunctionExpression<NullableLongFunction1<T>>)","u":"averageNullableLong(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"averageNullableLong(FunctionExpression<NullableLongFunction1<T>>)","u":"averageNullableLong(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"averageNullableLong(FunctionExpression<NullableLongFunction1<TSource>>)"},{"p":"","c":"","l":"averageNullableLong(FunctionExpression<NullableLongFunction1<TSource>>)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"averageNullableLong(Queryable<T>, FunctionExpression<NullableLongFunction1<T>>)","u":"averageNullableLong(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"averageNullableLong(Queryable<T>, FunctionExpression<NullableLongFunction1<T>>)","u":"averageNullableLong(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"averageNullableLong(Queryable<T>, FunctionExpression<NullableLongFunction1<T>>)","u":"averageNullableLong(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdSize","l":"averageRexSize(RexNode, List<? extends Double>)","u":"averageRexSize(org.apache.calcite.rex.RexNode,java.util.List)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Size","l":"averageRowSize()"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Size.Handler","l":"averageRowSize(RelNode, RelMetadataQuery)","u":"averageRowSize(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdSize","l":"averageRowSize(RelNode, RelMetadataQuery)","u":"averageRowSize(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdSize","l":"averageTypeValueSize(RelDataType)","u":"averageTypeValueSize(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.fun","c":"SqlAvgAggFunction.Subtype","l":"AVG"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"AVG"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"AVG"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"AVG_AGG_FUNCTION"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"AVG_AGG_FUNCTIONS"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"avg(boolean, String, RexNode)","u":"avg(boolean,java.lang.String,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"avg(RexNode)","u":"avg(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"avg(SqlParserPos, boolean, String, RexNode)","u":"avg(org.apache.calcite.sql.parser.SqlParserPos,boolean,java.lang.String,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"avg(SqlParserPos, RexNode)","u":"avg(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.sql","c":"SqlPivot","l":"axisList"},{"p":"org.apache.calcite.sql","c":"SqlUnpivot","l":"axisList"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"BABEL"},{"p":"org.apache.calcite.runtime","c":"PairList","l":"backedBy(List<Object>)","u":"backedBy(java.util.List)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"BAD_DATETIME_MESSAGE"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"badFormat(String)","u":"badFormat(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"badLowerBoundary()"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.BadTableFunction","l":"BadTableFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema.BadType","l":"BadType()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema","l":"badTypes"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"badUpperBoundary()"},{"p":"org.apache.calcite.piglet","c":"Ast.Op","l":"BAG"},{"p":"org.apache.calcite.piglet","c":"Ast.Op","l":"BAG_TYPE"},{"p":"org.apache.calcite.piglet","c":"Ast.BagType","l":"BagType(SqlParserPos, Ast.Type)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.piglet.Ast.Type)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"bangEqualNotAllowed()"},{"p":"org.apache.calcite.util","c":"BarfingInvocationHandler","l":"BarfingInvocationHandler()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.model","c":"ModelHandler.ExtraOperand","l":"BASE_DIRECTORY"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"BASE64"},{"p":"org.apache.calcite.test.schemata.orderstream","c":"BaseOrderStreamTable","l":"BaseOrderStreamTable()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.linq4j","c":"BaseQueryable","l":"BaseQueryable(QueryProvider, Type, Expression)","u":"%3Cinit%3E(org.apache.calcite.linq4j.QueryProvider,java.lang.reflect.Type,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"baseUnit(SqlTypeName)","u":"baseUnit(org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"BASIC_AGGREGATE_LAMBDA_FACTORY"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"BASIC_LAZY_ACCUMULATOR"},{"p":"org.apache.calcite.adapter.enumerable","c":"BasicAggregateLambdaFactory","l":"BasicAggregateLambdaFactory(Function0<TAccumulate>, List<Function2<TAccumulate, TSource, TAccumulate>>)","u":"%3Cinit%3E(org.apache.calcite.linq4j.function.Function0,java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"BasicLazyAccumulator","l":"BasicLazyAccumulator(Function2<TAccumulate, TSource, TAccumulate>)","u":"%3Cinit%3E(org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.sql.type","c":"BasicSqlType","l":"BasicSqlType(RelDataTypeSystem, SqlTypeName)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataTypeSystem,org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.sql.type","c":"BasicSqlType","l":"BasicSqlType(RelDataTypeSystem, SqlTypeName, boolean)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataTypeSystem,org.apache.calcite.sql.type.SqlTypeName,boolean)"},{"p":"org.apache.calcite.sql.type","c":"BasicSqlType","l":"BasicSqlType(RelDataTypeSystem, SqlTypeName, int)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataTypeSystem,org.apache.calcite.sql.type.SqlTypeName,int)"},{"p":"org.apache.calcite.sql.type","c":"BasicSqlType","l":"BasicSqlType(RelDataTypeSystem, SqlTypeName, int, int)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataTypeSystem,org.apache.calcite.sql.type.SqlTypeName,int,int)"},{"p":"org.apache.calcite.runtime.rtti","c":"BasicSqlTypeRtti","l":"BasicSqlTypeRtti(RuntimeTypeInformation.RuntimeSqlTypeName)","u":"%3Cinit%3E(org.apache.calcite.runtime.rtti.RuntimeTypeInformation.RuntimeSqlTypeName)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableBatchNestedLoopJoinRule.Config","l":"batchSize()"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"BcAdCompiledPattern","l":"BcAdCompiledPattern(Set<PatternModifier>, boolean, boolean)","u":"%3Cinit%3E(java.util.Set,boolean,boolean)"},{"p":"org.apache.calcite.util.format.postgresql.format","c":"BcAdFormatPattern","l":"BcAdFormatPattern(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter.FrameImpl","l":"before()"},{"p":"org.apache.calcite.util","c":"Puffin.Builder","l":"before(Consumer<Puffin.Context<G, F>>)","u":"before(java.util.function.Consumer)"},{"p":"org.apache.calcite.util","c":"Puffin.Builder","l":"beforeSource(Consumer<Puffin.Context<G, F>>)","u":"beforeSource(java.util.function.Consumer)"},{"p":"org.apache.calcite.util","c":"XmlOutput","l":"beginBeginTag(String)","u":"beginBeginTag(java.lang.String)"},{"p":"org.apache.calcite.util","c":"XmlOutput","l":"beginNode()"},{"p":"org.apache.calcite.util","c":"XmlOutput","l":"beginTag(String, XmlOutput.XMLAttrVector)","u":"beginTag(java.lang.String,org.apache.calcite.util.XmlOutput.XMLAttrVector)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"belongsTo(Collection<SqlKind>)","u":"belongsTo(java.util.Collection)"},{"p":"org.apache.calcite.util","c":"Benchmark","l":"Benchmark(String, Function1<Benchmark.Statistician, Void>, int)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.linq4j.function.Function1,int)"},{"p":"org.apache.calcite.sql.validate","c":"SqlNameMatcher","l":"bestString()"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"BETWEEN"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"BETWEEN"},{"p":"org.apache.calcite.sql.type","c":"SqlOperandCountRanges","l":"between(int, int)","u":"between(int,int)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"between(RexNode, RexNode, RexNode)","u":"between(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.test","c":"Matchers","l":"between(T, T)","u":"between(T,T)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"betweenWithoutAnd()"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"BI_PREDICATE_TEST"},{"p":"org.apache.calcite.util","c":"JdbcType","l":"BIG_DECIMAL"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"BIG_DECIMAL_ADD"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"BIG_DECIMAL_NEGATE"},{"p":"org.apache.calcite.util","c":"JdbcType","l":"BIG_DECIMAL_NULLABLE"},{"p":"org.apache.calcite.config","c":"Lex","l":"BIG_QUERY"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibrary","l":"BIG_QUERY"},{"p":"org.apache.calcite.sql","c":"SqlDialect.DatabaseProduct","l":"BIG_QUERY"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"BIG_QUERY"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest","l":"BIG_QUERY"},{"p":"org.apache.calcite.util.format","c":"FormatModels","l":"BIG_QUERY"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema.EveryType","l":"bigDecimal"},{"p":"org.apache.calcite.piglet","c":"PigUdfs","l":"bigdecimalmax(Tuple)","u":"bigdecimalmax(org.apache.pig.data.Tuple)"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.BigDecimalSum","l":"BigDecimalSum()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.piglet","c":"PigUdfs","l":"bigdecimalsum(Tuple)","u":"bigdecimalsum(org.apache.pig.data.Tuple)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"bigDecimalValue()"},{"p":"org.apache.calcite.runtime.rtti","c":"RuntimeTypeInformation.RuntimeSqlTypeName","l":"BIGINT"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"BIGINT"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"BIGINT"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"BIGINT_FORCE_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"BIGINT_NULLABLE"},{"p":"org.apache.calcite.sql.dialect","c":"BigQuerySqlDialect","l":"BigQuerySqlDialect(SqlDialect.Context)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect.Context)"},{"p":"org.apache.calcite.util.mapping","c":"MappingType","l":"BIJECTION"},{"p":"org.apache.calcite.util.mapping","c":"Mappings","l":"bijection(List<Integer>)","u":"bijection(java.util.List)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings","l":"bijection(Map<Integer, Integer>)","u":"bijection(java.util.Map)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"BIN"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"BIN"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"bin(long)"},{"p":"org.apache.calcite.sql","c":"SqlSyntax","l":"BINARY"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFamily","l":"BINARY"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"BINARY"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"BINARY"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"BINARY_ARITHMETIC"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"BINARY_BINARY"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"BINARY_COMPARISON"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"BINARY_EQUALITY"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"BINARY_SEARCH5_LOWER"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"BINARY_SEARCH5_UPPER"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"BINARY_SEARCH6_LOWER"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"BINARY_SEARCH6_UPPER"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"BINARY_TO_UUID"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"BINARY_TYPES"},{"p":"org.apache.calcite.sql.validate.implicit","c":"TypeCoercion","l":"binaryArithmeticCoercion(SqlCallBinding)","u":"binaryArithmeticCoercion(org.apache.calcite.sql.SqlCallBinding)"},{"p":"org.apache.calcite.sql.validate.implicit","c":"TypeCoercionImpl","l":"binaryArithmeticCoercion(SqlCallBinding)","u":"binaryArithmeticCoercion(org.apache.calcite.sql.SqlCallBinding)"},{"p":"org.apache.calcite.sql.validate.implicit","c":"TypeCoercionImpl","l":"binaryArithmeticWithStrings(SqlCallBinding, RelDataType, RelDataType)","u":"binaryArithmeticWithStrings(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate.implicit","c":"TypeCoercion","l":"binaryComparisonCoercion(SqlCallBinding)","u":"binaryComparisonCoercion(org.apache.calcite.sql.SqlCallBinding)"},{"p":"org.apache.calcite.sql.validate.implicit","c":"TypeCoercionImpl","l":"binaryComparisonCoercion(SqlCallBinding)","u":"binaryComparisonCoercion(org.apache.calcite.sql.SqlCallBinding)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"binaryLiteralInvalid()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"binaryLiteralOdd()"},{"p":"org.apache.calcite.adapter.druid","c":"BinaryOperatorConversion","l":"BinaryOperatorConversion(SqlOperator, String)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlOperator,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"BinarySearch","l":"BinarySearch()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"binaryToUuid(ByteString)","u":"binaryToUuid(org.apache.calcite.avatica.util.ByteString)"},{"p":"org.apache.calcite.rel.rules","c":"LoptJoinTree.BinaryTree","l":"BinaryTree(LoptJoinTree)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.LoptJoinTree)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery","l":"bind(DataContext)","u":"bind(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableBindable","l":"bind(DataContext)","u":"bind(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableAggregate","l":"bind(DataContext)","u":"bind(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableFilter","l":"bind(DataContext)","u":"bind(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableIntersect","l":"bind(DataContext)","u":"bind(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableJoin","l":"bind(DataContext)","u":"bind(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableMatch","l":"bind(DataContext)","u":"bind(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableMinus","l":"bind(DataContext)","u":"bind(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableProject","l":"bind(DataContext)","u":"bind(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableSort","l":"bind(DataContext)","u":"bind(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableTableScan","l":"bind(DataContext)","u":"bind(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableUnion","l":"bind(DataContext)","u":"bind(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableValues","l":"bind(DataContext)","u":"bind(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableWindow","l":"bind(DataContext)","u":"bind(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.interpreter","c":"InterpretableConverter","l":"bind(DataContext)","u":"bind(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.runtime","c":"Bindable","l":"bind(DataContext)","u":"bind(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"bind(Member, Expression)","u":"bind(java.lang.reflect.Member,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"bind(Method, Expression)","u":"bind(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.rel.metadata","c":"UnboundMetadata","l":"bind(RelNode, RelMetadataQuery)","u":"bind(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.interpreter","c":"Bindables","l":"BINDABLE_AGGREGATE_RULE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"BINDABLE_BIND"},{"p":"org.apache.calcite.config","c":"CalciteSystemProperty","l":"BINDABLE_CACHE_CONCURRENCY_LEVEL"},{"p":"org.apache.calcite.config","c":"CalciteSystemProperty","l":"BINDABLE_CACHE_MAX_SIZE"},{"p":"org.apache.calcite.interpreter","c":"Bindables","l":"BINDABLE_FILTER_RULE"},{"p":"org.apache.calcite.interpreter","c":"Bindables","l":"BINDABLE_JOIN_RULE"},{"p":"org.apache.calcite.interpreter","c":"Bindables","l":"BINDABLE_MATCH_RULE"},{"p":"org.apache.calcite.interpreter","c":"Bindables","l":"BINDABLE_PROJECT_RULE"},{"p":"org.apache.calcite.interpreter","c":"Bindables","l":"BINDABLE_SET_OP_RULE"},{"p":"org.apache.calcite.interpreter","c":"Bindables","l":"BINDABLE_SETOP_RULE"},{"p":"org.apache.calcite.interpreter","c":"Bindables","l":"BINDABLE_SORT_RULE"},{"p":"org.apache.calcite.interpreter","c":"Bindables","l":"BINDABLE_TABLE_SCAN_RULE"},{"p":"org.apache.calcite.interpreter","c":"Bindables","l":"BINDABLE_VALUES_RULE"},{"p":"org.apache.calcite.interpreter","c":"Bindables","l":"BINDABLE_WINDOW_RULE"},{"p":"org.apache.calcite.interpreter","c":"Interpreters","l":"bindable(RelNode)","u":"bindable(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableAggregate","l":"BindableAggregate(RelOptCluster, RelTraitSet, RelNode, boolean, ImmutableBitSet, List<ImmutableBitSet>, List<AggregateCall>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableAggregate","l":"BindableAggregate(RelOptCluster, RelTraitSet, RelNode, ImmutableBitSet, List<ImmutableBitSet>, List<AggregateCall>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableAggregateRule","l":"BindableAggregateRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableFilter","l":"BindableFilter(RelOptCluster, RelTraitSet, RelNode, RexNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableFilterRule","l":"BindableFilterRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableIntersect","l":"BindableIntersect(RelOptCluster, RelTraitSet, List<RelNode>, boolean)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,boolean)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableJoin","l":"BindableJoin(RelOptCluster, RelTraitSet, RelNode, RelNode, RexNode, JoinRelType, Set<String>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType,java.util.Set)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableJoin","l":"BindableJoin(RelOptCluster, RelTraitSet, RelNode, RelNode, RexNode, Set<CorrelationId>, JoinRelType)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,java.util.Set,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableJoinRule","l":"BindableJoinRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableMatchRule","l":"BindableMatchRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableMinus","l":"BindableMinus(RelOptCluster, RelTraitSet, List<RelNode>, boolean)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,boolean)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableProject","l":"BindableProject(RelOptCluster, RelTraitSet, RelNode, List<? extends RexNode>, RelDataType)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableProjectRule","l":"BindableProjectRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableSetOpRule","l":"BindableSetOpRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableSort","l":"BindableSort(RelOptCluster, RelTraitSet, RelNode, RelCollation, RexNode, RexNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableSortRule","l":"BindableSortRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableTableScanRule","l":"BindableTableScanRule(Bindables.BindableTableScanRule.Config)","u":"%3Cinit%3E(org.apache.calcite.interpreter.Bindables.BindableTableScanRule.Config)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableTableScanRule","l":"BindableTableScanRule(RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableUnion","l":"BindableUnion(RelOptCluster, RelTraitSet, List<RelNode>, boolean)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,boolean)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableValuesRule","l":"BindableValuesRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableWindowRule","l":"BindableWindowRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.rel","c":"BiRel","l":"BiRel(RelOptCluster, RelTraitSet, RelNode, RelNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.test.schemata.bookstore","c":"BookstoreSchema.Author","l":"birthPlace"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"BIT_AND"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"BIT_AND"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"BIT_AND"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"BIT_COUNT_BIG_QUERY"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"BIT_COUNT_MYSQL"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"BIT_GET"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"BIT_GET"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"BIT_LENGTH"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"BIT_LENGTH"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"BIT_NOT"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"BIT_OR"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"BIT_OR"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"BIT_OR"},{"p":"org.apache.calcite.util","c":"PartiallyOrderedSet","l":"BIT_SET_INCLUSION_ORDERING"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"BIT_XOR"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"BIT_XOR"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"BIT_XOR"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"BITAND"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"BITAND"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"BITAND_AGG"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"bitAnd(ByteString, ByteString)","u":"bitAnd(org.apache.calcite.avatica.util.ByteString,org.apache.calcite.avatica.util.ByteString)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"bitAnd(int, Long)","u":"bitAnd(int,java.lang.Long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"bitAnd(Long, int)","u":"bitAnd(java.lang.Long,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"bitAnd(long, long)","u":"bitAnd(long,long)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"BITCOUNT"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"BITCOUNT"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"bitCount(BigDecimal)","u":"bitCount(java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"bitCount(ByteString)","u":"bitCount(org.apache.calcite.avatica.util.ByteString)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"bitCount(long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"bitCountMySQL(Boolean)","u":"bitCountMySQL(java.lang.Boolean)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"bitCountMySQL(Date)","u":"bitCountMySQL(java.sql.Date)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"bitCountMySQL(Number)","u":"bitCountMySQL(java.lang.Number)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"bitCountMySQL(String)","u":"bitCountMySQL(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"bitCountMySQL(Time)","u":"bitCountMySQL(java.sql.Time)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"bitCountMySQL(Timestamp)","u":"bitCountMySQL(java.sql.Timestamp)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"bitGet(byte, int)","u":"bitGet(byte,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"bitGet(int, int)","u":"bitGet(int,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"bitGet(long, int)","u":"bitGet(long,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"bitGet(short, int)","u":"bitGet(short,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"bitLength(ByteString)","u":"bitLength(org.apache.calcite.avatica.util.ByteString)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"bitLength(String)","u":"bitLength(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"BITNOT"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"BITNOT"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"bitNot(ByteString)","u":"bitNot(org.apache.calcite.avatica.util.ByteString)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"bitNot(long)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"BITOR"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"BITOR"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"BITOR_AGG"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"bitOr(ByteString, ByteString)","u":"bitOr(org.apache.calcite.avatica.util.ByteString,org.apache.calcite.avatica.util.ByteString)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"bitOr(int, Long)","u":"bitOr(int,java.lang.Long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"bitOr(Long, int)","u":"bitOr(java.lang.Long,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"bitOr(long, long)","u":"bitOr(long,long)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.InputFinder","l":"bits(List<RexNode>, RexNode)","u":"bits(java.util.List,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.InputFinder","l":"bits(RexNode)","u":"bits(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.materialize","c":"Lattice.Tile","l":"bitSet"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema.BadType","l":"bitSet"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema","l":"bitSet"},{"p":"org.apache.calcite.materialize","c":"Lattice.Tile","l":"bitSet()"},{"p":"org.apache.calcite.util","c":"BitString","l":"BitString(String, int)","u":"%3Cinit%3E(java.lang.String,int)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"BITXOR"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"BITXOR"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"bitXor(ByteString, ByteString)","u":"bitXor(org.apache.calcite.avatica.util.ByteString,org.apache.calcite.avatica.util.ByteString)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"bitXor(int, Long)","u":"bitXor(int,java.lang.Long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"bitXor(Long, int)","u":"bitXor(java.lang.Long,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"bitXor(long, long)","u":"bitXor(long,long)"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"bl"},{"p":"org.apache.calcite.sql","c":"SqlWriter.SubQueryStyle","l":"BLACK"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Blackboard","l":"Blackboard(SqlValidatorScope, Map<String, RexNode>, boolean)","u":"%3Cinit%3E(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.Map,boolean)"},{"p":"org.apache.calcite.util","c":"Util","l":"blackholeMap()"},{"p":"org.apache.calcite.test","c":"CalciteAssert.SchemaSpec","l":"BLANK"},{"p":"org.apache.calcite.rel.rules","c":"FilterProjectTransposeRule.Config","l":"bloat()"},{"p":"org.apache.calcite.rel.rules","c":"ProjectMergeRule.Config","l":"bloat()"},{"p":"org.apache.calcite.tools","c":"RelBuilder.Config","l":"bloat()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRel.Result","l":"block"},{"p":"org.apache.calcite.adapter.spark","c":"SparkRel.Result","l":"block"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"Block"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"block(Iterable<? extends Statement>)","u":"block(java.lang.Iterable)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"block(Statement...)","u":"block(org.apache.calcite.linq4j.tree.Statement...)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"block(Type, Iterable<? extends Statement>)","u":"block(java.lang.reflect.Type,java.lang.Iterable)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"block(Type, Statement...)","u":"block(java.lang.reflect.Type,org.apache.calcite.linq4j.tree.Statement...)"},{"p":"org.apache.calcite.linq4j.tree","c":"BlockBuilder","l":"BlockBuilder()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.linq4j.tree","c":"BlockBuilder","l":"BlockBuilder(boolean)","u":"%3Cinit%3E(boolean)"},{"p":"org.apache.calcite.linq4j.tree","c":"BlockBuilder","l":"BlockBuilder(boolean, BlockBuilder)","u":"%3Cinit%3E(boolean,org.apache.calcite.linq4j.tree.BlockBuilder)"},{"p":"org.apache.calcite.linq4j.tree","c":"CatchBlock","l":"body"},{"p":"org.apache.calcite.linq4j.tree","c":"ConstructorDeclaration","l":"body"},{"p":"org.apache.calcite.linq4j.tree","c":"ForEachStatement","l":"body"},{"p":"org.apache.calcite.linq4j.tree","c":"ForStatement","l":"body"},{"p":"org.apache.calcite.linq4j.tree","c":"FunctionExpression","l":"body"},{"p":"org.apache.calcite.linq4j.tree","c":"MethodDeclaration","l":"body"},{"p":"org.apache.calcite.linq4j.tree","c":"TryStatement","l":"body"},{"p":"org.apache.calcite.linq4j.tree","c":"WhileStatement","l":"body"},{"p":"org.apache.calcite.sql","c":"SqlWith","l":"body"},{"p":"org.apache.calcite.test.schemata.bookstore","c":"BookstoreSchema.Book","l":"Book(String, int, List<BookstoreSchema.Page>)","u":"%3Cinit%3E(java.lang.String,int,java.util.List)"},{"p":"org.apache.calcite.test.schemata.bookstore","c":"BookstoreSchema.Author","l":"books"},{"p":"org.apache.calcite.test","c":"CalciteAssert.SchemaSpec","l":"BOOKSTORE"},{"p":"org.apache.calcite.test.schemata.bookstore","c":"BookstoreSchema","l":"BookstoreSchema()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"BOOL_AND"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"BOOL_OR"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"BOOLAND_AGG"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"BOOLEAN"},{"p":"org.apache.calcite.runtime.rtti","c":"RuntimeTypeInformation.RuntimeSqlTypeName","l":"BOOLEAN"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFamily","l":"BOOLEAN"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"BOOLEAN"},{"p":"org.apache.calcite.sql.type","c":"InferTypes","l":"BOOLEAN"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"BOOLEAN"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"BOOLEAN"},{"p":"org.apache.calcite.util","c":"JdbcType","l":"BOOLEAN"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"BOOLEAN_BOOLEAN"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"BOOLEAN_FORCE_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"BOOLEAN_LITERAL"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"BOOLEAN_NOT_NULL"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"BOOLEAN_NULLABLE"},{"p":"org.apache.calcite.util","c":"JdbcType","l":"BOOLEAN_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"BOOLEAN_NULLABLE_IF_ARG0_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"BOOLEAN_NULLABLE_OPTIMIZED"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"BOOLEAN_TO_STRING"},{"p":"org.apache.calcite.sql.test","c":"SqlTests","l":"BOOLEAN_TYPE_CHECKER"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"BOOLEAN_TYPES"},{"p":"org.apache.calcite.sql.validate.implicit","c":"TypeCoercionImpl","l":"booleanEquality(SqlCallBinding, RelDataType, RelDataType)","u":"booleanEquality(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"booleanValue()"},{"p":"org.apache.calcite.rex","c":"RexLiteral","l":"booleanValue(RexNode)","u":"booleanValue(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"BOOLOR_AGG"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"boolRelDataType"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema","l":"bools"},{"p":"org.apache.calcite.plan","c":"DeriveMode","l":"BOTH"},{"p":"org.apache.calcite.sql.fun","c":"SqlTrimFunction.Flag","l":"BOTH"},{"p":"org.apache.calcite.rel.rules","c":"MultiJoinProjectTransposeRule.Config","l":"BOTH_PROJECT"},{"p":"org.apache.calcite.plan.hep","c":"HepMatchOrder","l":"BOTTOM_UP"},{"p":"org.apache.calcite.linq4j.tree","c":"NewArrayExpression","l":"bound"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive.Flavor","l":"BOX"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"box(Class)","u":"box(java.lang.Class)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"box(Expression)","u":"box(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"box(Expression, Primitive)","u":"box(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Primitive)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"box(Type)","u":"box(java.lang.reflect.Type)"},{"p":"org.apache.calcite.linq4j.tree","c":"Types","l":"box(Type)","u":"box(java.lang.reflect.Type)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"boxClass"},{"p":"org.apache.calcite.rel.core","c":"Project.Flags","l":"BOXED"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexImpTable","l":"BOXED_FALSE_EXPR"},{"p":"org.apache.calcite.linq4j.tree","c":"OptimizeShuttle","l":"BOXED_FALSE_EXPR"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexImpTable","l":"BOXED_TRUE_EXPR"},{"p":"org.apache.calcite.linq4j.tree","c":"OptimizeShuttle","l":"BOXED_TRUE_EXPR"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"boxName"},{"p":"org.apache.calcite.config","c":"CharLiteralStyle","l":"BQ_DOUBLE"},{"p":"org.apache.calcite.config","c":"CharLiteralStyle","l":"BQ_SINGLE"},{"p":"org.apache.calcite.util.graph","c":"BreadthFirstIterator","l":"BreadthFirstIterator(DirectedGraph<V, E>, V)","u":"%3Cinit%3E(org.apache.calcite.util.graph.DirectedGraph,V)"},{"p":"org.apache.calcite.linq4j.tree","c":"GotoExpressionKind","l":"Break"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"break_(LabelTarget)","u":"break_(org.apache.calcite.linq4j.tree.LabelTarget)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"break_(LabelTarget, Expression)","u":"break_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"break_(LabelTarget, Expression, Type)","u":"break_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"break_(LabelTarget, Type)","u":"break_(org.apache.calcite.linq4j.tree.LabelTarget,java.lang.reflect.Type)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRules","l":"BRIDGE_METHODS"},{"p":"org.apache.calcite.util","c":"Glossary","l":"BRIDGE_PATTERN"},{"p":"org.apache.calcite.rel","c":"RelDistribution.Type","l":"BROADCAST_DISTRIBUTED"},{"p":"org.apache.calcite.rel","c":"RelDistributions","l":"BROADCAST_DISTRIBUTED"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"brokenTestsEnabled()"},{"p":"org.apache.calcite.materialize","c":"Lattice.SqlWriter","l":"buf"},{"p":"org.apache.calcite.runtime","c":"BufferStyle","l":"BufferStyle(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.util","c":"Bug","l":"Bug()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.druid","c":"VirtualColumn.Builder","l":"build()"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcCorrelationDataContextBuilderImpl","l":"build()"},{"p":"org.apache.calcite.interpreter","c":"Row.RowBuilder","l":"build()"},{"p":"org.apache.calcite.materialize","c":"Lattice.Builder","l":"build()"},{"p":"org.apache.calcite.materialize","c":"Lattice.TileBuilder","l":"build()"},{"p":"org.apache.calcite.plan.hep","c":"HepProgramBuilder","l":"build()"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.InputFinder","l":"build()"},{"p":"org.apache.calcite.profile","c":"ProfilerImpl.Builder","l":"build()"},{"p":"org.apache.calcite.rel.hint","c":"HintStrategy.Builder","l":"build()"},{"p":"org.apache.calcite.rel.hint","c":"HintStrategyTable.Builder","l":"build()"},{"p":"org.apache.calcite.rel.hint","c":"RelHint.Builder","l":"build()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory.Builder","l":"build()"},{"p":"org.apache.calcite.rel.type","c":"TimeFrameSet.Builder","l":"build()"},{"p":"org.apache.calcite.runtime","c":"AutomatonBuilder","l":"build()"},{"p":"org.apache.calcite.runtime","c":"Matcher.Builder","l":"build()"},{"p":"org.apache.calcite.runtime","c":"PairList.Builder","l":"build()"},{"p":"org.apache.calcite.runtime","c":"Pattern.PatternBuilder","l":"build()"},{"p":"org.apache.calcite.schema.impl","c":"ReflectiveFunctionBase.ParameterListBuilder","l":"build()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser.ConfigBuilder","l":"build()"},{"p":"org.apache.calcite.sql","c":"TableCharacteristic.Builder","l":"build()"},{"p":"org.apache.calcite.tools","c":"Frameworks.ConfigBuilder","l":"build()"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"build()"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet.Builder","l":"build()"},{"p":"org.apache.calcite.util","c":"ImmutableNullableList.Builder","l":"build()"},{"p":"org.apache.calcite.util","c":"ImmutableNullableSet.Builder","l":"build()"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser.Builder","l":"build()"},{"p":"org.apache.calcite.util","c":"Puffin.Builder","l":"build()"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet.Builder","l":"build(ImmutableBitSet)","u":"build(org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope.Path","l":"build(ImmutableList.Builder<SqlValidatorScope.Step>)","u":"build(com.google.common.collect.ImmutableList.Builder)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope.Step","l":"build(ImmutableList.Builder<SqlValidatorScope.Step>)","u":"build(com.google.common.collect.ImmutableList.Builder)"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator.CorelMapBuilder","l":"build(RelNode...)","u":"build(org.apache.calcite.rel.RelNode...)"},{"p":"org.apache.calcite.rel.rel2sql","c":"RelToSqlConverter","l":"buildAggGroupList(Aggregate, SqlImplementor.Builder, List<SqlNode>, List<SqlNode>)","u":"buildAggGroupList(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.rel2sql.SqlImplementor.Builder,java.util.List,java.util.List)"},{"p":"org.apache.calcite.rel.rel2sql","c":"RelToSqlConverter","l":"buildAggregate(Aggregate, SqlImplementor.Builder, List<SqlNode>, List<SqlNode>)","u":"buildAggregate(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.rel2sql.SqlImplementor.Builder,java.util.List,java.util.List)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet.Builder","l":"buildAndReset()"},{"p":"org.apache.calcite.piglet","c":"PigRelSqlUdfs","l":"buildBag(Object...)","u":"buildBag(java.lang.Object...)"},{"p":"org.apache.calcite.util.format.postgresql.format","c":"AmPmFormatPattern","l":"buildCompiledPattern(Set<PatternModifier>)","u":"buildCompiledPattern(java.util.Set)"},{"p":"org.apache.calcite.util.format.postgresql.format","c":"BcAdFormatPattern","l":"buildCompiledPattern(Set<PatternModifier>)","u":"buildCompiledPattern(java.util.Set)"},{"p":"org.apache.calcite.util.format.postgresql.format","c":"DayOfWeekFormatPattern","l":"buildCompiledPattern(Set<PatternModifier>)","u":"buildCompiledPattern(java.util.Set)"},{"p":"org.apache.calcite.util.format.postgresql.format","c":"FormatPattern","l":"buildCompiledPattern(Set<PatternModifier>)","u":"buildCompiledPattern(java.util.Set)"},{"p":"org.apache.calcite.util.format.postgresql.format","c":"MonthFormatPattern","l":"buildCompiledPattern(Set<PatternModifier>)","u":"buildCompiledPattern(java.util.Set)"},{"p":"org.apache.calcite.util.format.postgresql.format","c":"NumberFormatPattern","l":"buildCompiledPattern(Set<PatternModifier>)","u":"buildCompiledPattern(java.util.Set)"},{"p":"org.apache.calcite.util.format.postgresql.format","c":"RomanNumeralsFormatPattern","l":"buildCompiledPattern(Set<PatternModifier>)","u":"buildCompiledPattern(java.util.Set)"},{"p":"org.apache.calcite.util.format.postgresql.format","c":"TimeZoneFormatPattern","l":"buildCompiledPattern(Set<PatternModifier>)","u":"buildCompiledPattern(java.util.Set)"},{"p":"org.apache.calcite.util.format.postgresql.format","c":"TimeZoneHoursFormatPattern","l":"buildCompiledPattern(Set<PatternModifier>)","u":"buildCompiledPattern(java.util.Set)"},{"p":"org.apache.calcite.util.format.postgresql.format","c":"TimeZoneMinutesFormatPattern","l":"buildCompiledPattern(Set<PatternModifier>)","u":"buildCompiledPattern(java.util.Set)"},{"p":"org.apache.calcite.util.format.postgresql.format","c":"TimeZoneOffsetFormatPattern","l":"buildCompiledPattern(Set<PatternModifier>)","u":"buildCompiledPattern(java.util.Set)"},{"p":"org.apache.calcite.util.format.postgresql.format","c":"YearWithCommasFormatPattern","l":"buildCompiledPattern(Set<PatternModifier>)","u":"buildCompiledPattern(java.util.Set)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory.Builder","l":"buildDynamic()"},{"p":"org.apache.calcite.util","c":"Glossary","l":"BUILDER_PATTERN"},{"p":"org.apache.calcite.adapter.druid","c":"VirtualColumn","l":"builder()"},{"p":"org.apache.calcite.materialize","c":"Lattice.Tile","l":"builder()"},{"p":"org.apache.calcite.plan.hep","c":"HepProgram","l":"builder()"},{"p":"org.apache.calcite.plan","c":"RelOptRuleCall","l":"builder()"},{"p":"org.apache.calcite.profile","c":"ProfilerImpl","l":"builder()"},{"p":"org.apache.calcite.rel.hint","c":"HintStrategyTable","l":"builder()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory","l":"builder()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactoryImpl","l":"builder()"},{"p":"org.apache.calcite.rel.type","c":"TimeFrameSet","l":"builder()"},{"p":"org.apache.calcite.runtime","c":"PairList","l":"builder()"},{"p":"org.apache.calcite.runtime","c":"Pattern","l":"builder()"},{"p":"org.apache.calcite.schema.impl","c":"ReflectiveFunctionBase","l":"builder()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeMappingRules","l":"builder()"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"builder()"},{"p":"org.apache.calcite.util","c":"ImmutableNullableList","l":"builder()"},{"p":"org.apache.calcite.util","c":"ImmutableNullableSet","l":"builder()"},{"p":"org.apache.calcite.util","c":"Puffin","l":"builder()"},{"p":"org.apache.calcite.adapter.druid","c":"VirtualColumn.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.profile","c":"ProfilerImpl.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.hint","c":"HintStrategyTable.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.runtime","c":"PairList.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util","c":"ImmutableNullableList.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util","c":"ImmutableNullableSet.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.runtime","c":"Matcher","l":"builder(Automaton)","u":"builder(org.apache.calcite.runtime.Automaton)"},{"p":"org.apache.calcite.materialize","c":"Lattice","l":"builder(CalciteSchema, String)","u":"builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)"},{"p":"org.apache.calcite.rel.hint","c":"HintStrategy","l":"builder(HintPredicate)","u":"builder(org.apache.calcite.rel.hint.HintPredicate)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"builder(ImmutableBitSet)","u":"builder(org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.materialize","c":"Lattice.Builder","l":"Builder(LatticeSpace, CalciteSchema, String)","u":"%3Cinit%3E(org.apache.calcite.materialize.LatticeSpace,org.apache.calcite.jdbc.CalciteSchema,java.lang.String)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory.Builder","l":"Builder(RelDataTypeFactory)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Result","l":"builder(RelNode)","u":"builder(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Builder","l":"Builder(RelNode, List<SqlImplementor.Clause>, SqlSelect, SqlImplementor.Context, boolean, Map<String, RelDataType>)","u":"%3Cinit%3E(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.rel2sql.SqlImplementor.Context,boolean,java.util.Map)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Result","l":"builder(RelNode, SqlImplementor.Clause, SqlImplementor.Clause...)","u":"builder(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rel2sql.SqlImplementor.Clause,org.apache.calcite.rel.rel2sql.SqlImplementor.Clause...)"},{"p":"org.apache.calcite.rel.hint","c":"RelHint","l":"builder(String)","u":"builder(java.lang.String)"},{"p":"org.apache.calcite.util","c":"Puffin","l":"builder(Supplier<G>, Function<G, F>)","u":"builder(java.util.function.Supplier,java.util.function.Function)"},{"p":"org.apache.calcite.sql","c":"TableCharacteristic","l":"builder(TableCharacteristic.Semantics)","u":"builder(org.apache.calcite.sql.TableCharacteristic.Semantics)"},{"p":"org.apache.calcite.runtime","c":"PairList.Builder","l":"buildImmutable()"},{"p":"org.apache.calcite.sql.util","c":"ReflectiveSqlOperatorTable","l":"buildIndex(Iterable<? extends SqlOperator>)","u":"buildIndex(java.lang.Iterable)"},{"p":"org.apache.calcite.sql.test","c":"AbstractSqlTester","l":"buildQuery(String)","u":"buildQuery(java.lang.String)"},{"p":"org.apache.calcite.sql.test","c":"AbstractSqlTester","l":"buildQuery2(SqlTestFactory, String)","u":"buildQuery2(org.apache.calcite.sql.test.SqlTestFactory,java.lang.String)"},{"p":"org.apache.calcite.sql.test","c":"AbstractSqlTester","l":"buildQueryAgg(String)","u":"buildQueryAgg(java.lang.String)"},{"p":"org.apache.calcite.piglet","c":"PigRelSqlUdfs","l":"buildTuple(Object...)","u":"buildTuple(java.lang.Object...)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"BUILT_IN_OPERATORS_LIST"},{"p":"org.apache.calcite.sql.validate.implicit","c":"TypeCoercion","l":"builtinFunctionCoercion(SqlCallBinding, List<RelDataType>, List<SqlTypeFamily>)","u":"builtinFunctionCoercion(org.apache.calcite.sql.SqlCallBinding,java.util.List,java.util.List)"},{"p":"org.apache.calcite.sql.validate.implicit","c":"TypeCoercionImpl","l":"builtinFunctionCoercion(SqlCallBinding, List<RelDataType>, List<SqlTypeFamily>)","u":"builtinFunctionCoercion(org.apache.calcite.sql.SqlCallBinding,java.util.List,java.util.List)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata","l":"BuiltInMetadata()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"by"},{"p":"org.apache.calcite.sql.validate","c":"SemanticTable","l":"bypassFieldList()"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MustFilterMockTable","l":"bypassFieldList()"},{"p":"org.apache.calcite.sql.validate","c":"FilterRequirement","l":"bypassFields"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"BYTE"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"byteDataType"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdSize","l":"BYTES_PER_CHARACTER"},{"p":"org.apache.calcite.test.schemata.tpch","c":"TpchSchema","l":"c(int)"},{"p":"org.apache.calcite.model","c":"JsonSchema","l":"cache"},{"p":"org.apache.calcite.materialize","c":"Lattices","l":"CACHED_SQL"},{"p":"org.apache.calcite.rel.metadata","c":"CachingRelMetadataProvider","l":"CachingRelMetadataProvider(RelMetadataProvider, RelOptPlanner)","u":"%3Cinit%3E(org.apache.calcite.rel.metadata.RelMetadataProvider,org.apache.calcite.plan.RelOptPlanner)"},{"p":"org.apache.calcite.statistic","c":"CachingSqlStatisticProvider","l":"CachingSqlStatisticProvider(SqlStatisticProvider, Cache<List, Object>)","u":"%3Cinit%3E(org.apache.calcite.materialize.SqlStatisticProvider,com.google.common.cache.Cache)"},{"p":"org.apache.calcite.rel.hint","c":"HintPredicates","l":"CALC"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"CALC_MERGE"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"CALC_PREDICATE"},{"p":"org.apache.calcite.tools","c":"Programs","l":"CALC_PROGRAM"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"CALC_REDUCE_DECIMALS"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"CALC_REDUCE_EXPRESSIONS"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"CALC_REMOVE"},{"p":"org.apache.calcite.plan","c":"RelOptRules","l":"CALC_RULES"},{"p":"org.apache.calcite.tools","c":"Programs","l":"CALC_RULES"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"CALC_SPLIT"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"CALC_TO_WINDOW"},{"p":"org.apache.calcite.tools","c":"Programs","l":"calc(RelMetadataProvider)","u":"calc(org.apache.calcite.rel.metadata.RelMetadataProvider)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdCollation","l":"calc(RelMetadataQuery, RelNode, RexProgram)","u":"calc(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdDistribution","l":"calc(RelMetadataQuery, RelNode, RexProgram)","u":"calc(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)"},{"p":"org.apache.calcite.rel.core","c":"Calc","l":"Calc(RelOptCluster, RelTraitSet, List<RelHint>, RelNode, RexProgram)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)"},{"p":"org.apache.calcite.rel.core","c":"Calc","l":"Calc(RelOptCluster, RelTraitSet, RelNode, RexProgram)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)"},{"p":"org.apache.calcite.rel.core","c":"Calc","l":"Calc(RelOptCluster, RelTraitSet, RelNode, RexProgram, List<RelCollation>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram,java.util.List)"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibrary","l":"CALCITE"},{"p":"org.apache.calcite.sql","c":"SqlDialect.DatabaseProduct","l":"CALCITE"},{"p":"org.apache.calcite.util","c":"Bug","l":"CALCITE_1045_FIXED"},{"p":"org.apache.calcite.util","c":"Bug","l":"CALCITE_1048_FIXED"},{"p":"org.apache.calcite.util","c":"Bug","l":"CALCITE_194_FIXED"},{"p":"org.apache.calcite.util","c":"Bug","l":"CALCITE_2400_FIXED"},{"p":"org.apache.calcite.util","c":"Bug","l":"CALCITE_2401_FIXED"},{"p":"org.apache.calcite.util","c":"Bug","l":"CALCITE_2869_FIXED"},{"p":"org.apache.calcite.util","c":"Bug","l":"CALCITE_3243_FIXED"},{"p":"org.apache.calcite.util","c":"Bug","l":"CALCITE_4204_FIXED"},{"p":"org.apache.calcite.util","c":"Bug","l":"CALCITE_4205_FIXED"},{"p":"org.apache.calcite.util","c":"Bug","l":"CALCITE_4213_FIXED"},{"p":"org.apache.calcite.util","c":"Bug","l":"CALCITE_4645_FIXED"},{"p":"org.apache.calcite.util","c":"Bug","l":"CALCITE_4868_FIXED"},{"p":"org.apache.calcite.util","c":"Bug","l":"CALCITE_5422_FIXED"},{"p":"org.apache.calcite.util","c":"Bug","l":"CALCITE_6092_FIXED"},{"p":"org.apache.calcite.util","c":"Bug","l":"CALCITE_6270_FIXED"},{"p":"org.apache.calcite.util","c":"Bug","l":"CALCITE_6293_FIXED"},{"p":"org.apache.calcite.util","c":"Bug","l":"CALCITE_6294_FIXED"},{"p":"org.apache.calcite.util","c":"Bug","l":"CALCITE_6328_FIXED"},{"p":"org.apache.calcite.util","c":"Bug","l":"CALCITE_6367_FIXED"},{"p":"org.apache.calcite.util","c":"Bug","l":"CALCITE_6391_FIXED"},{"p":"org.apache.calcite.util","c":"Bug","l":"CALCITE_6611_FIXED"},{"p":"org.apache.calcite.util","c":"Bug","l":"CALCITE_673_FIXED"},{"p":"org.apache.calcite.chinook","c":"ConnectionFactory.DatabaseWrapper","l":"CALCITE_AS_ADMIN"},{"p":"org.apache.calcite.chinook","c":"ConnectionFactory.DatabaseWrapper","l":"CALCITE_AS_SPECIFIC_USER"},{"p":"org.apache.calcite.prepare","c":"CalciteCatalogReader","l":"CalciteCatalogReader(CalciteSchema, List<String>, RelDataTypeFactory, CalciteConnectionConfig)","u":"%3Cinit%3E(org.apache.calcite.jdbc.CalciteSchema,java.util.List,org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.config.CalciteConnectionConfig)"},{"p":"org.apache.calcite.prepare","c":"CalciteCatalogReader","l":"CalciteCatalogReader(CalciteSchema, SqlNameMatcher, List<List<String>>, RelDataTypeFactory, CalciteConnectionConfig)","u":"%3Cinit%3E(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.sql.validate.SqlNameMatcher,java.util.List,org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.config.CalciteConnectionConfig)"},{"p":"org.apache.calcite.chinook","c":"ChinookAvaticaServer.CalciteChinookMetaFactory","l":"CalciteChinookMetaFactory()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfigImpl","l":"CalciteConnectionConfigImpl(Properties)","u":"%3Cinit%3E(java.util.Properties)"},{"p":"org.apache.calcite.chinook","c":"CalciteConnectionProvider","l":"CalciteConnectionProvider()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.runtime","c":"CalciteContextException","l":"CalciteContextException(String, Throwable)","u":"%3Cinit%3E(java.lang.String,java.lang.Throwable)"},{"p":"org.apache.calcite.runtime","c":"CalciteContextException","l":"CalciteContextException(String, Throwable, int, int, int, int)","u":"%3Cinit%3E(java.lang.String,java.lang.Throwable,int,int,int,int)"},{"p":"org.apache.calcite.runtime","c":"CalciteContextException","l":"CalciteContextException(String, Throwable, String)","u":"%3Cinit%3E(java.lang.String,java.lang.Throwable,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteException","l":"CalciteException(String, Throwable)","u":"%3Cinit%3E(java.lang.String,java.lang.Throwable)"},{"p":"org.apache.calcite.jdbc","c":"CalciteFactory","l":"CalciteFactory(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"org.apache.calcite.adapter.spark","c":"SparkRuntime.CalciteFlatMapFunction","l":"CalciteFlatMapFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.jdbc","c":"CalciteJdbc41Factory","l":"CalciteJdbc41Factory()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.jdbc","c":"CalciteJdbc41Factory","l":"CalciteJdbc41Factory(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"org.apache.calcite.util.trace","c":"CalciteLogger","l":"CalciteLogger(Logger)","u":"%3Cinit%3E(org.slf4j.Logger)"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaColumnFactoryImpl","l":"CalciteMetaColumnFactoryImpl()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaImpl","l":"CalciteMetaImpl(CalciteConnectionImpl)","u":"%3Cinit%3E(org.apache.calcite.jdbc.CalciteConnectionImpl)"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaImpl","l":"CalciteMetaImpl(CalciteConnectionImpl, CalciteMetaTableFactory, CalciteMetaColumnFactory)","u":"%3Cinit%3E(org.apache.calcite.jdbc.CalciteConnectionImpl,org.apache.calcite.jdbc.CalciteMetaTableFactory,org.apache.calcite.jdbc.CalciteMetaColumnFactory)"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaImpl.CalciteMetaTable","l":"CalciteMetaTable(Table, String, String, String)","u":"%3Cinit%3E(org.apache.calcite.schema.Table,java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaTableFactoryImpl","l":"CalciteMetaTableFactoryImpl()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.druid","c":"BinaryOperatorConversion","l":"calciteOperator()"},{"p":"org.apache.calcite.adapter.druid","c":"CeilOperatorConversion","l":"calciteOperator()"},{"p":"org.apache.calcite.adapter.druid","c":"DirectOperatorConversion","l":"calciteOperator()"},{"p":"org.apache.calcite.adapter.druid","c":"DruidSqlCastConverter","l":"calciteOperator()"},{"p":"org.apache.calcite.adapter.druid","c":"DruidSqlOperatorConverter","l":"calciteOperator()"},{"p":"org.apache.calcite.adapter.druid","c":"ExtractOperatorConversion","l":"calciteOperator()"},{"p":"org.apache.calcite.adapter.druid","c":"FloorOperatorConversion","l":"calciteOperator()"},{"p":"org.apache.calcite.adapter.druid","c":"NaryOperatorConverter","l":"calciteOperator()"},{"p":"org.apache.calcite.adapter.druid","c":"SubstringOperatorConversion","l":"calciteOperator()"},{"p":"org.apache.calcite.adapter.druid","c":"UnaryPrefixOperatorConversion","l":"calciteOperator()"},{"p":"org.apache.calcite.adapter.druid","c":"UnarySuffixOperatorConversion","l":"calciteOperator()"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl","l":"CalcitePrepareImpl()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl.CalcitePreparingStmt","l":"CalcitePreparingStmt(CalcitePrepareImpl, CalcitePrepare.Context, Prepare.CatalogReader, RelDataTypeFactory, CalciteSchema, EnumerableRel.Prefer, RelOptCluster, Convention, SqlRexConvertletTable)","u":"%3Cinit%3E(org.apache.calcite.prepare.CalcitePrepareImpl,org.apache.calcite.jdbc.CalcitePrepare.Context,org.apache.calcite.prepare.Prepare.CatalogReader,org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer,org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.Convention,org.apache.calcite.sql2rel.SqlRexConvertletTable)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"CalciteSchema(CalciteSchema, Schema, String, NameMap<CalciteSchema>, NameMap<CalciteSchema.TableEntry>, NameMap<CalciteSchema.LatticeEntry>, NameMap<CalciteSchema.TypeEntry>, NameMultimap<CalciteSchema.FunctionEntry>, NameSet, NameMap<CalciteSchema.FunctionEntry>, List<? extends List<String>>)","u":"%3Cinit%3E(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.schema.Schema,java.lang.String,org.apache.calcite.util.NameMap,org.apache.calcite.util.NameMap,org.apache.calcite.util.NameMap,org.apache.calcite.util.NameMap,org.apache.calcite.util.NameMultimap,org.apache.calcite.util.NameSet,org.apache.calcite.util.NameMap,java.util.List)"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.CalciteSignature","l":"CalciteSignature(String, List<AvaticaParameter>, Map<String, Object>, RelDataType, List<ColumnMetaData>, Meta.CursorFactory, CalciteSchema, List<RelCollation>, long, Bindable<T>)","u":"%3Cinit%3E(java.lang.String,java.util.List,java.util.Map,org.apache.calcite.rel.type.RelDataType,java.util.List,org.apache.calcite.avatica.Meta.CursorFactory,org.apache.calcite.jdbc.CalciteSchema,java.util.List,long,org.apache.calcite.runtime.Bindable)"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.CalciteSignature","l":"CalciteSignature(String, List<AvaticaParameter>, Map<String, Object>, RelDataType, List<ColumnMetaData>, Meta.CursorFactory, CalciteSchema, List<RelCollation>, long, Bindable<T>, Meta.StatementType)","u":"%3Cinit%3E(java.lang.String,java.util.List,java.util.Map,org.apache.calcite.rel.type.RelDataType,java.util.List,org.apache.calcite.avatica.Meta.CursorFactory,org.apache.calcite.jdbc.CalciteSchema,java.util.List,long,org.apache.calcite.runtime.Bindable,org.apache.calcite.avatica.Meta.StatementType)"},{"p":"org.apache.calcite.sql.dialect","c":"CalciteSqlDialect","l":"CalciteSqlDialect(SqlDialect.Context)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect.Context)"},{"p":"org.apache.calcite.prepare","c":"CalciteSqlValidator","l":"CalciteSqlValidator(SqlOperatorTable, CalciteCatalogReader, JavaTypeFactory, SqlValidator.Config)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlOperatorTable,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.sql.validate.SqlValidator.Config)"},{"p":"org.apache.calcite.util.trace","c":"CalciteTimingTracer","l":"CalciteTimingTracer(Logger, String)","u":"%3Cinit%3E(org.slf4j.Logger,java.lang.String)"},{"p":"org.apache.calcite.util.trace","c":"CalciteTrace","l":"CalciteTrace()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.rules","c":"CalcMergeRule","l":"CalcMergeRule(CalcMergeRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.CalcMergeRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"CalcMergeRule","l":"CalcMergeRule(RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.CalcReduceExpressionsRule","l":"CalcReduceExpressionsRule(Class<? extends Calc>, boolean, RelBuilderFactory)","u":"%3Cinit%3E(java.lang.Class,boolean,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.CalcReduceExpressionsRule","l":"CalcReduceExpressionsRule(Class<? extends Calc>, RelBuilderFactory)","u":"%3Cinit%3E(java.lang.Class,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.CalcReduceExpressionsRule","l":"CalcReduceExpressionsRule(ReduceExpressionsRule.CalcReduceExpressionsRule.CalcReduceExpressionsRuleConfig)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.ReduceExpressionsRule.CalcReduceExpressionsRule.CalcReduceExpressionsRuleConfig)"},{"p":"org.apache.calcite.rel.rules","c":"CalcRemoveRule","l":"CalcRemoveRule(CalcRemoveRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.CalcRemoveRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"CalcRemoveRule","l":"CalcRemoveRule(RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"CalcSplitRule","l":"CalcSplitRule(CalcSplitRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.CalcSplitRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"CalcSplitRule","l":"CalcSplitRule(RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectToWindowRule.CalcToWindowRule","l":"CalcToWindowRule(ProjectToWindowRule.CalcToWindowRule.CalcToWindowRuleConfig)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.ProjectToWindowRule.CalcToWindowRule.CalcToWindowRuleConfig)"},{"p":"org.apache.calcite.util","c":"Util","l":"calendar()"},{"p":"org.apache.calcite.util","c":"Util","l":"calendar(long)"},{"p":"org.apache.calcite.util","c":"Util","l":"calendar(long, TimeZone)","u":"calendar(long,java.util.TimeZone)"},{"p":"org.apache.calcite.adapter.enumerable","c":"AggImpState","l":"call"},{"p":"org.apache.calcite.sql.validate","c":"AliasNamespace","l":"call"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"Call"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser.Type","l":"CALL"},{"p":"org.apache.calcite.adapter.enumerable","c":"AggResultContext","l":"call()"},{"p":"org.apache.calcite.adapter.enumerable.impl","c":"AggResetContextImpl","l":"call()"},{"p":"org.apache.calcite.adapter.enumerable.impl","c":"AggResultContextImpl","l":"call()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumUtils","l":"call(Expression, Class, String, List<? extends Expression>)","u":"call(org.apache.calcite.linq4j.tree.Expression,java.lang.Class,java.lang.String,java.util.List)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"call(Expression, Method, Expression...)","u":"call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression...)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"call(Expression, Method, Iterable<? extends Expression>)","u":"call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,java.lang.Iterable)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"call(Expression, String, Expression...)","u":"call(org.apache.calcite.linq4j.tree.Expression,java.lang.String,org.apache.calcite.linq4j.tree.Expression...)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"call(Expression, String, Iterable<? extends Expression>)","u":"call(org.apache.calcite.linq4j.tree.Expression,java.lang.String,java.lang.Iterable)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"call(Method, Expression...)","u":"call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression...)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"call(Method, Iterable<? extends Expression>)","u":"call(java.lang.reflect.Method,java.lang.Iterable)"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser","l":"call(PrecedenceClimbingParser.Op, ImmutableList<PrecedenceClimbingParser.Token>)","u":"call(org.apache.calcite.util.PrecedenceClimbingParser.Op,com.google.common.collect.ImmutableList)"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser.Builder","l":"call(PrecedenceClimbingParser.Op, PrecedenceClimbingParser.Token, PrecedenceClimbingParser.Token)","u":"call(org.apache.calcite.util.PrecedenceClimbingParser.Op,org.apache.calcite.util.PrecedenceClimbingParser.Token,org.apache.calcite.util.PrecedenceClimbingParser.Token)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"call(SqlOperator, Iterable<? extends RexNode>)","u":"call(org.apache.calcite.sql.SqlOperator,java.lang.Iterable)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"call(SqlOperator, RexNode...)","u":"call(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rex.RexNode...)"},{"p":"org.apache.calcite.piglet","c":"Ast.Call","l":"Call(SqlParserPos, Ast.Op, Ast.Node...)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.piglet.Ast.Op,org.apache.calcite.piglet.Ast.Node...)"},{"p":"org.apache.calcite.piglet","c":"Ast.Call","l":"Call(SqlParserPos, Ast.Op, Iterable<? extends Ast.Node>)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.piglet.Ast.Op,java.lang.Iterable)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"call(Type, Expression, Method, Expression...)","u":"call(java.lang.reflect.Type,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression...)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"call(Type, Expression, Method, Iterable<? extends Expression>)","u":"call(java.lang.reflect.Type,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,java.lang.Iterable)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"call(Type, String, Expression...)","u":"call(java.lang.reflect.Type,java.lang.String,org.apache.calcite.linq4j.tree.Expression...)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"call(Type, String, Iterable<? extends Expression>)","u":"call(java.lang.reflect.Type,java.lang.String,java.lang.Iterable)"},{"p":"org.apache.calcite.sql.util","c":"SqlShuttle.CallCopyingArgHandler","l":"CallCopyingArgHandler(SqlCall, boolean)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlCall,boolean)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator.Config","l":"callRewrite()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"callToOperandTypesMap"},{"p":"org.apache.calcite","c":"DataContext.Variable","l":"camelName"},{"p":"org.apache.calcite.model","c":"ModelHandler.ExtraOperand","l":"camelName"},{"p":"org.apache.calcite.config","c":"CalciteConnectionProperty","l":"camelName()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeMappingRule","l":"canApplyFrom(SqlTypeName, SqlTypeName)","u":"canApplyFrom(org.apache.calcite.sql.type.SqlTypeName,org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"canAssignFrom(RelDataType, RelDataType)","u":"canAssignFrom(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"canBeRepresentedExactly(BigDecimal, RelDataType)","u":"canBeRepresentedExactly(java.math.BigDecimal,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.adapter.druid","c":"ComplexMetric","l":"canBeUsed(AggregateCall)","u":"canBeUsed(org.apache.calcite.rel.core.AggregateCall)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"canCastFrom(RelDataType, RelDataType, boolean)","u":"canCastFrom(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,boolean)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"canCastFrom(RelDataType, RelDataType, SqlTypeMappingRule)","u":"canCastFrom(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeMappingRule)"},{"p":"org.apache.calcite","c":"DataContext.Variable","l":"CANCEL_FLAG"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"cancelFlag"},{"p":"org.apache.calcite.util","c":"CancelFlag","l":"CancelFlag(AtomicBoolean)","u":"%3Cinit%3E(java.util.concurrent.atomic.AtomicBoolean)"},{"p":"org.apache.calcite.rel.core","c":"JoinRelType","l":"cancelNullsOnLeft()"},{"p":"org.apache.calcite.rel.core","c":"JoinRelType","l":"cancelNullsOnRight()"},{"p":"org.apache.calcite.plan","c":"ConventionTraitDef","l":"canConvert(RelOptPlanner, Convention, Convention)","u":"canConvert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.plan.Convention,org.apache.calcite.plan.Convention)"},{"p":"org.apache.calcite.rel","c":"RelCollationTraitDef","l":"canConvert(RelOptPlanner, RelCollation, RelCollation)","u":"canConvert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelCollation,org.apache.calcite.rel.RelCollation)"},{"p":"org.apache.calcite.rel","c":"RelDistributionTraitDef","l":"canConvert(RelOptPlanner, RelDistribution, RelDistribution)","u":"canConvert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelDistribution,org.apache.calcite.rel.RelDistribution)"},{"p":"org.apache.calcite.plan","c":"RelTraitDef","l":"canConvert(RelOptPlanner, T, T)","u":"canConvert(org.apache.calcite.plan.RelOptPlanner,T,T)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableConvention","l":"canConvertConvention(Convention)","u":"canConvertConvention(org.apache.calcite.plan.Convention)"},{"p":"org.apache.calcite.interpreter","c":"BindableConvention","l":"canConvertConvention(Convention)","u":"canConvertConvention(org.apache.calcite.plan.Convention)"},{"p":"org.apache.calcite.interpreter","c":"InterpretableConvention","l":"canConvertConvention(Convention)","u":"canConvertConvention(org.apache.calcite.plan.Convention)"},{"p":"org.apache.calcite.plan","c":"Convention","l":"canConvertConvention(Convention)","u":"canConvertConvention(org.apache.calcite.plan.Convention)"},{"p":"org.apache.calcite.plan","c":"Convention.Impl","l":"canConvertConvention(Convention)","u":"canConvertConvention(org.apache.calcite.plan.Convention)"},{"p":"org.apache.calcite.sql2rel","c":"SubQueryConverter","l":"canConvertSubQuery()"},{"p":"org.apache.calcite.rel.rules","c":"ReduceDecimalsRule.RexExpander","l":"canExpand(RexCall)","u":"canExpand(org.apache.calcite.rex.RexCall)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateRemoveRule","l":"canFlattenStatic(AggregateCall)","u":"canFlattenStatic(org.apache.calcite.rel.core.AggregateCall)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableTableScan","l":"canHandle(RelOptTable)","u":"canHandle(org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableTableScan","l":"canHandle(RelOptTable)","u":"canHandle(org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableTableScan","l":"canHandle(Table)","u":"canHandle(org.apache.calcite.schema.Table)"},{"p":"org.apache.calcite.rel.rules","c":"CalcRelSplitter","l":"canImplement(LogicalCalc, String)","u":"canImplement(org.apache.calcite.rel.logical.LogicalCalc,java.lang.String)"},{"p":"org.apache.calcite.rel.rules","c":"CalcRelSplitter.RelType","l":"canImplement(RexCall)","u":"canImplement(org.apache.calcite.rex.RexCall)"},{"p":"org.apache.calcite.rel.rules","c":"CalcRelSplitter.RelType","l":"canImplement(RexDynamicParam)","u":"canImplement(org.apache.calcite.rex.RexDynamicParam)"},{"p":"org.apache.calcite.rel.rules","c":"CalcRelSplitter.RelType","l":"canImplement(RexFieldAccess)","u":"canImplement(org.apache.calcite.rex.RexFieldAccess)"},{"p":"org.apache.calcite.rel.rules","c":"CalcRelSplitter.RelType","l":"canImplement(RexLiteral)","u":"canImplement(org.apache.calcite.rex.RexLiteral)"},{"p":"org.apache.calcite.rel.rules","c":"CalcRelSplitter.RelType","l":"canImplement(RexNode, boolean)","u":"canImplement(org.apache.calcite.rex.RexNode,boolean)"},{"p":"org.apache.calcite.rel.rules","c":"CalcRelSplitter.RelType","l":"canImplement(RexProgram)","u":"canImplement(org.apache.calcite.rex.RexProgram)"},{"p":"org.apache.calcite.schema","c":"ColumnStrategy","l":"canInsertInto()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"canNotApplyOp2Type(String, String, String)","u":"canNotApplyOp2Type(java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"cannotCallTableFunctionHere(String)","u":"cannotCallTableFunctionHere(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"cannotCastValue(String, String)","u":"cannotCastValue(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"cannotConvert(String, String)","u":"cannotConvert(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"cannotConvertToRelation(String)","u":"cannotConvertToRelation(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"cannotConvertToStream(String)","u":"cannotConvertToStream(java.lang.String)"},{"p":"org.apache.calcite.rel.convert","c":"ConverterImpl","l":"cannotImplement()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"cannotOverrideWindowAttribute()"},{"p":"org.apache.calcite.plan","c":"RelOptPlanner.CannotPlanException","l":"CannotPlanException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"cannotStreamResultsForNonStreamingInputs(String)","u":"cannotStreamResultsForNonStreamingInputs(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"cannotStreamValues()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"cannotUseDisallowPartialWithRange()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"cannotUseWithinWithoutOrderBy()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactoryImpl","l":"canonize(RelDataType)","u":"canonize(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFactoryImpl","l":"canonize(RelDataType)","u":"canonize(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactoryImpl","l":"canonize(StructKind, List<String>, List<RelDataType>)","u":"canonize(org.apache.calcite.rel.type.StructKind,java.util.List,java.util.List)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactoryImpl","l":"canonize(StructKind, List<String>, List<RelDataType>, boolean)","u":"canonize(org.apache.calcite.rel.type.StructKind,java.util.List,java.util.List,boolean)"},{"p":"org.apache.calcite.plan","c":"RelTraitDef","l":"canonize(T)"},{"p":"org.apache.calcite.plan","c":"RelTraitSet","l":"canonize(T)"},{"p":"org.apache.calcite.rel.core","c":"JoinRelType","l":"canPushIntoFromAbove()"},{"p":"org.apache.calcite.rel.core","c":"JoinRelType","l":"canPushLeftFromAbove()"},{"p":"org.apache.calcite.rel.core","c":"JoinRelType","l":"canPushLeftFromWithin()"},{"p":"org.apache.calcite.rel.core","c":"JoinRelType","l":"canPushRightFromAbove()"},{"p":"org.apache.calcite.rel.core","c":"JoinRelType","l":"canPushRightFromWithin()"},{"p":"org.apache.calcite.linq4j.tree","c":"Expression","l":"canReduce()"},{"p":"org.apache.calcite.rel.rules","c":"AggregateReduceFunctionsRule","l":"canReduce(AggregateCall)","u":"canReduce(org.apache.calcite.rel.core.AggregateCall)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateReduceFunctionsRule","l":"canReduceAggCallByGrouping(Aggregate, AggregateCall)","u":"canReduceAggCallByGrouping(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"canReinterpretOverflow(RexCall)","u":"canReinterpretOverflow(org.apache.calcite.rex.RexCall)"},{"p":"org.apache.calcite.rel.type","c":"TimeFrame","l":"canRollUpTo(TimeFrame)","u":"canRollUpTo(org.apache.calcite.rel.type.TimeFrame)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUtil","l":"capInfinity(Double)","u":"capInfinity(java.lang.Double)"},{"p":"org.apache.calcite.util.format.postgresql","c":"CapitalizationEnum","l":"CAPITALIZED"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"CARDINALITY"},{"p":"org.apache.calcite.sql","c":"SqlStateCodes","l":"CARDINALITY_VIOLATION"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet.Builder","l":"cardinality()"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"cardinality()"},{"p":"org.apache.calcite.profile","c":"Profiler.Profile","l":"cardinality(ImmutableBitSet)","u":"cardinality(org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.materialize","c":"DelegatingLatticeStatisticProvider","l":"cardinality(List<Lattice.Column>)","u":"cardinality(java.util.List)"},{"p":"org.apache.calcite.materialize","c":"LatticeStatisticProvider","l":"cardinality(List<Lattice.Column>)","u":"cardinality(java.util.List)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUtil","l":"cardOfProjExpr(RelMetadataQuery, Project, RexNode)","u":"cardOfProjExpr(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.core.Project,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.linq4j","c":"CartesianProductEnumerator","l":"CartesianProductEnumerator(List<Enumerator<T>>)","u":"%3Cinit%3E(java.util.List)"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"cascade(SqlReturnTypeInference, SqlTypeTransform...)","u":"cascade(org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlTypeTransform...)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"CASE"},{"p":"org.apache.calcite.sql","c":"SqlWriter.FrameTypeEnum","l":"CASE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"CASE"},{"p":"org.apache.calcite.config","c":"CalciteConnectionProperty","l":"CASE_SENSITIVE"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"caseClausesOnNewLines()"},{"p":"org.apache.calcite.config","c":"Lex","l":"caseSensitive"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfig","l":"caseSensitive()"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfigImpl","l":"caseSensitive()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser.Config","l":"caseSensitive()"},{"p":"org.apache.calcite.sql","c":"SqlDialect.Context","l":"caseSensitive()"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.CaseShuttle","l":"CaseShuttle()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.validate.implicit","c":"TypeCoercion","l":"caseWhenCoercion(SqlCallBinding)","u":"caseWhenCoercion(org.apache.calcite.sql.SqlCallBinding)"},{"p":"org.apache.calcite.sql.validate.implicit","c":"TypeCoercionImpl","l":"caseWhenCoercion(SqlCallBinding)","u":"caseWhenCoercion(org.apache.calcite.sql.SqlCallBinding)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraMethod","l":"CASSANDRA_QUERYABLE_QUERY"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraFilter","l":"CassandraFilter(RelOptCluster, RelTraitSet, RelNode, RexNode, List<String>, List<String>, List<RelFieldCollation>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraRules.CassandraFilterRule","l":"CassandraFilterRule(CassandraRules.CassandraFilterRule.CassandraFilterRuleConfig)","u":"%3Cinit%3E(org.apache.calcite.adapter.cassandra.CassandraRules.CassandraFilterRule.CassandraFilterRuleConfig)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraLimit","l":"CassandraLimit(RelOptCluster, RelTraitSet, RelNode, RexNode, RexNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraRules.CassandraLimitRule","l":"CassandraLimitRule(CassandraRules.CassandraLimitRule.CassandraLimitRuleConfig)","u":"%3Cinit%3E(org.apache.calcite.adapter.cassandra.CassandraRules.CassandraLimitRule.CassandraLimitRuleConfig)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraProject","l":"CassandraProject(RelOptCluster, RelTraitSet, RelNode, List<? extends RexNode>, RelDataType)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraRules.CassandraProjectRule","l":"CassandraProjectRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraTable.CassandraQueryable","l":"CassandraQueryable(QueryProvider, SchemaPlus, CassandraTable, String)","u":"%3Cinit%3E(org.apache.calcite.linq4j.QueryProvider,org.apache.calcite.schema.SchemaPlus,org.apache.calcite.adapter.cassandra.CassandraTable,java.lang.String)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraSchema","l":"CassandraSchema(CqlSession, SchemaPlus, String)","u":"%3Cinit%3E(com.datastax.oss.driver.api.core.CqlSession,org.apache.calcite.schema.SchemaPlus,java.lang.String)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraSchema","l":"CassandraSchema(CqlSession, SchemaPlus, String, String)","u":"%3Cinit%3E(com.datastax.oss.driver.api.core.CqlSession,org.apache.calcite.schema.SchemaPlus,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraSchemaFactory","l":"CassandraSchemaFactory()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraSort","l":"CassandraSort(RelOptCluster, RelTraitSet, RelNode, RelCollation)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraRules.CassandraSortRule","l":"CassandraSortRule(CassandraRules.CassandraSortRule.CassandraSortRuleConfig)","u":"%3Cinit%3E(org.apache.calcite.adapter.cassandra.CassandraRules.CassandraSortRule.CassandraSortRuleConfig)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraTable","l":"CassandraTable(CassandraSchema, String)","u":"%3Cinit%3E(org.apache.calcite.adapter.cassandra.CassandraSchema,java.lang.String)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraTable","l":"CassandraTable(CassandraSchema, String, boolean)","u":"%3Cinit%3E(org.apache.calcite.adapter.cassandra.CassandraSchema,java.lang.String,boolean)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraTable","l":"CassandraTable(CassandraSchema, String, String)","u":"%3Cinit%3E(org.apache.calcite.adapter.cassandra.CassandraSchema,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraTable","l":"CassandraTable(CassandraSchema, String, String, boolean)","u":"%3Cinit%3E(org.apache.calcite.adapter.cassandra.CassandraSchema,java.lang.String,java.lang.String,boolean)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraTableScan","l":"CassandraTableScan(RelOptCluster, RelTraitSet, RelOptTable, CassandraTable, RelDataType)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.plan.RelOptTable,org.apache.calcite.adapter.cassandra.CassandraTable,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraToEnumerableConverter","l":"CassandraToEnumerableConverter(RelOptCluster, RelTraitSet, RelNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraToEnumerableConverterRule","l":"CassandraToEnumerableConverterRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"CAST"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture.CastType","l":"CAST"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"CAST"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"cast(Class<T2>)","u":"cast(java.lang.Class)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"cast(Class<T2>)","u":"cast(java.lang.Class)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"cast(Class<T2>)","u":"cast(java.lang.Class)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"cast(Class<T2>)","u":"cast(java.lang.Class)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"cast(Enumerable<TSource>, Class<T2>)","u":"cast(org.apache.calcite.linq4j.Enumerable,java.lang.Class)"},{"p":"org.apache.calcite.util","c":"Util","l":"cast(Iterable<? super E>, Class<E>)","u":"cast(java.lang.Iterable,java.lang.Class)"},{"p":"org.apache.calcite.linq4j","c":"Linq4j","l":"cast(Iterable<TSource>, Class<TResult>)","u":"cast(java.lang.Iterable,java.lang.Class)"},{"p":"org.apache.calcite.util","c":"Util","l":"cast(Iterator<? extends Object>, Class<E>)","u":"cast(java.util.Iterator,java.lang.Class)"},{"p":"org.apache.calcite.util","c":"Util","l":"cast(List<? super E>, Class<E>)","u":"cast(java.util.List,java.lang.Class)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"cast(Queryable<T>, Class<T2>)","u":"cast(org.apache.calcite.linq4j.Queryable,java.lang.Class)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"cast(Queryable<T>, Class<T2>)","u":"cast(org.apache.calcite.linq4j.Queryable,java.lang.Class)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"cast(Queryable<T>, Class<T2>)","u":"cast(org.apache.calcite.linq4j.Queryable,java.lang.Class)"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"cast(RelDataType, RexNode)","u":"cast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"cast(RexNode, SqlTypeName)","u":"cast(org.apache.calcite.rex.RexNode,org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"cast(RexNode, SqlTypeName, int)","u":"cast(org.apache.calcite.rex.RexNode,org.apache.calcite.sql.type.SqlTypeName,int)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"cast(RexNode, SqlTypeName, int, int)","u":"cast(org.apache.calcite.rex.RexNode,org.apache.calcite.sql.type.SqlTypeName,int,int)"},{"p":"org.apache.calcite.runtime.variant","c":"VariantNonNull","l":"cast(RuntimeTypeInformation)","u":"cast(org.apache.calcite.runtime.rtti.RuntimeTypeInformation)"},{"p":"org.apache.calcite.runtime.variant","c":"VariantNull","l":"cast(RuntimeTypeInformation)","u":"cast(org.apache.calcite.runtime.rtti.RuntimeTypeInformation)"},{"p":"org.apache.calcite.runtime.variant","c":"VariantSqlNull","l":"cast(RuntimeTypeInformation)","u":"cast(org.apache.calcite.runtime.rtti.RuntimeTypeInformation)"},{"p":"org.apache.calcite.runtime.variant","c":"VariantValue","l":"cast(RuntimeTypeInformation)","u":"cast(org.apache.calcite.runtime.rtti.RuntimeTypeInformation)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"cast(SqlParserPos, RexNode, SqlTypeName)","u":"cast(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.rex.RexNode,org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"cast(SqlParserPos, RexNode, SqlTypeName, int)","u":"cast(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.rex.RexNode,org.apache.calcite.sql.type.SqlTypeName,int)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"cast(SqlParserPos, RexNode, SqlTypeName, int, int)","u":"cast(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.rex.RexNode,org.apache.calcite.sql.type.SqlTypeName,int,int)"},{"p":"org.apache.calcite.linq4j.tree","c":"Types","l":"castIfNecessary(Type, Expression)","u":"castIfNecessary(java.lang.reflect.Type,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.util","c":"CastingList","l":"CastingList(List<? super E>, Class<E>)","u":"%3Cinit%3E(java.util.List,java.lang.Class)"},{"p":"org.apache.calcite.test","c":"DiffRepository","l":"castNonNull(DiffRepository)","u":"castNonNull(org.apache.calcite.test.DiffRepository)"},{"p":"org.apache.calcite.linq4j","c":"Nullness","l":"castNonNull(T)"},{"p":"org.apache.calcite.linq4j","c":"Nullness","l":"castNonNullArray(T[])"},{"p":"org.apache.calcite.linq4j","c":"Nullness","l":"castNonNullList(List<? extends T>)","u":"castNonNullList(java.util.List)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults.ReplayableQueryable","l":"castQueryable()"},{"p":"org.apache.calcite.linq4j","c":"Nullness","l":"castToInitialized(T)"},{"p":"org.apache.calcite.sql2rel","c":"StandardConvertletTable","l":"castToValidatedType(SqlNode, RexNode, SqlValidator, RexBuilder)","u":"castToValidatedType(org.apache.calcite.sql.SqlNode,org.apache.calcite.rex.RexNode,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.rex.RexBuilder)"},{"p":"org.apache.calcite.sql2rel","c":"StandardConvertletTable","l":"castToValidatedType(SqlParserPos, SqlNode, RexNode, SqlValidator, RexBuilder, boolean)","u":"castToValidatedType(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode,org.apache.calcite.rex.RexNode,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.rex.RexBuilder,boolean)"},{"p":"org.apache.calcite.sql2rel","c":"StandardConvertletTable","l":"castToValidatedType(SqlRexContext, SqlCall, RexNode)","u":"castToValidatedType(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.test","c":"ConnectionSpec","l":"catalog"},{"p":"org.apache.calcite.sql.validate","c":"SqlMonikerType","l":"CATALOG"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaImpl","l":"CATALOG_COLUMNS"},{"p":"org.apache.calcite.prepare","c":"Prepare","l":"catalogReader"},{"p":"org.apache.calcite.rel.core","c":"TableModify","l":"catalogReader"},{"p":"org.apache.calcite.rel.mutable","c":"MutableTableModify","l":"catalogReader"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingSqlValidatorCatalogReader","l":"catalogReader"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"catalogReader"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"catalogReader"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"catch_(ParameterExpression, Statement)","u":"catch_(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Statement)"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema","l":"CatchallSchema()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.linq4j.tree","c":"CatchBlock","l":"CatchBlock(ParameterExpression, Statement)","u":"%3Cinit%3E(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Statement)"},{"p":"org.apache.calcite.linq4j.tree","c":"TryStatement","l":"catchBlocks"},{"p":"org.apache.calcite.sql.util","c":"ListSqlOperatorTable","l":"category(SqlOperator)","u":"category(org.apache.calcite.sql.SqlOperator)"},{"p":"org.apache.calcite.util","c":"Util","l":"causeOrSelf(Throwable)","u":"causeOrSelf(java.lang.Throwable)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"CBRT"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"CBRT"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"cbrt(BigDecimal)","u":"cbrt(java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"cbrt(double)"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"CBSTRING_INTEGER"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"CC"},{"p":"org.apache.calcite.util","c":"XmlOutput","l":"cdata(String)","u":"cdata(java.lang.String)"},{"p":"org.apache.calcite.util","c":"XmlOutput","l":"cdata(String, boolean)","u":"cdata(java.lang.String,boolean)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"CEIL"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"CEIL"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"CEIL"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"CEIL_BIG_QUERY"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"ceil(BigDecimal)","u":"ceil(java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"ceil(BigDecimal, BigDecimal)","u":"ceil(java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"ceil(BigDecimal, int)","u":"ceil(java.math.BigDecimal,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"ceil(byte, byte)","u":"ceil(byte,byte)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"ceil(double)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"ceil(float)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"ceil(int, BigDecimal)","u":"ceil(int,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"ceil(int, int)","u":"ceil(int,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"ceil(long, long)","u":"ceil(long,long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"ceil(short, short)","u":"ceil(short,short)"},{"p":"org.apache.calcite.rel.type","c":"TimeFrameSet","l":"ceilDate(int, TimeFrame)","u":"ceilDate(int,org.apache.calcite.rel.type.TimeFrame)"},{"p":"org.apache.calcite.adapter.druid","c":"CeilOperatorConversion","l":"CeilOperatorConversion()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.type","c":"TimeFrameSet","l":"ceilTimestamp(long, TimeFrame)","u":"ceilTimestamp(long,org.apache.calcite.rel.type.TimeFrame)"},{"p":"org.apache.calcite.util.format.postgresql","c":"ChronoUnitEnum","l":"CENTURIES"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"ch"},{"p":"org.apache.calcite.util","c":"Glossary","l":"CHAIN_OF_RESPONSIBILITY_PATTERN"},{"p":"org.apache.calcite.plan","c":"Contexts","l":"chain(Context...)","u":"chain(org.apache.calcite.plan.Context...)"},{"p":"org.apache.calcite.sql.util","c":"SqlOperatorTables","l":"chain(Iterable<SqlOperatorTable>)","u":"chain(java.lang.Iterable)"},{"p":"org.apache.calcite.sql.util","c":"SqlOperatorTables","l":"chain(SqlOperatorTable...)","u":"chain(org.apache.calcite.sql.SqlOperatorTable...)"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"chain(SqlReturnTypeInference...)","u":"chain(org.apache.calcite.sql.type.SqlReturnTypeInference...)"},{"p":"org.apache.calcite.rel.metadata","c":"ChainedRelMetadataProvider","l":"ChainedRelMetadataProvider(ImmutableList<RelMetadataProvider>)","u":"%3Cinit%3E(com.google.common.collect.ImmutableList)"},{"p":"org.apache.calcite.sql.util","c":"ChainedSqlOperatorTable","l":"ChainedSqlOperatorTable(ImmutableList<SqlOperatorTable>)","u":"%3Cinit%3E(com.google.common.collect.ImmutableList)"},{"p":"org.apache.calcite.sql.util","c":"ChainedSqlOperatorTable","l":"ChainedSqlOperatorTable(List<SqlOperatorTable>)","u":"%3Cinit%3E(java.util.List)"},{"p":"org.apache.calcite.plan.hep","c":"HepPlanner","l":"changeTraits(RelNode, RelTraitSet)","u":"changeTraits(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.plan","c":"RelOptPlanner","l":"changeTraits(RelNode, RelTraitSet)","u":"changeTraits(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"changeTraits(RelNode, RelTraitSet)","u":"changeTraits(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.test","c":"MockRelOptPlanner","l":"changeTraits(RelNode, RelTraitSet)","u":"changeTraits(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"CHAR"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"CHAR"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"CHAR"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"CHAR"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"CHAR_DECIMAL_CAST"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"CHAR_DECIMAL_CAST_ROUNDING_MODE"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"CHAR_FORCE_NULLABLE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"CHAR_FROM_ASCII"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"CHAR_FROM_UTF8"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"CHAR_LENGTH"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"CHAR_LENGTH"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"CHAR_LENGTH"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"CHAR_NULLABLE_IF_ARGS_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"CHAR_TYPES"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFamily","l":"CHARACTER"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"CHARACTER"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"CHARACTER_CHARACTER"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"CHARACTER_CHARACTER_DATETIME"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"CHARACTER_DATE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"CHARACTER_LENGTH"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"CHARACTER_TIME"},{"p":"org.apache.calcite.adapter.pig","c":"PigDataType","l":"CHARARRAY"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"charDataType"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"charFromAscii(int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"charFromUtf8(int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"charLength(String)","u":"charLength(java.lang.String)"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"charLiteral(String)","u":"charLiteral(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"charLiteralAliasNotValid()"},{"p":"org.apache.calcite.config","c":"Lex","l":"charLiteralStyles"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser.Config","l":"charLiteralStyles()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"charsetEncoding(String, String)","u":"charsetEncoding(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"charToDecimalCast(String, int, int)","u":"charToDecimalCast(java.lang.String,int,int)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"charToDecimalCast(String, int, int, RoundingMode)","u":"charToDecimalCast(java.lang.String,int,int,java.math.RoundingMode)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"CHECK"},{"p":"org.apache.calcite.test","c":"RelOptFixture","l":"check()"},{"p":"org.apache.calcite.util","c":"Litmus","l":"check(boolean, String, Object...)","u":"check(boolean,java.lang.String,java.lang.Object...)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlDdlNodes","l":"check(SqlParserPos, SqlIdentifier, SqlNode)","u":"check(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.test","c":"AbstractSqlTester","l":"check(SqlTestFactory, String, SqlTester.TypeChecker, SqlTester.ParameterChecker, SqlTester.ResultChecker)","u":"check(org.apache.calcite.sql.test.SqlTestFactory,java.lang.String,org.apache.calcite.sql.test.SqlTester.TypeChecker,org.apache.calcite.sql.test.SqlTester.ParameterChecker,org.apache.calcite.sql.test.SqlTester.ResultChecker)"},{"p":"org.apache.calcite.sql.test","c":"SqlTester","l":"check(SqlTestFactory, String, SqlTester.TypeChecker, SqlTester.ParameterChecker, SqlTester.ResultChecker)","u":"check(org.apache.calcite.sql.test.SqlTestFactory,java.lang.String,org.apache.calcite.sql.test.SqlTester.TypeChecker,org.apache.calcite.sql.test.SqlTester.ParameterChecker,org.apache.calcite.sql.test.SqlTester.ResultChecker)"},{"p":"org.apache.calcite.test","c":"SqlOperatorTest.TesterImpl","l":"check(SqlTestFactory, String, SqlTester.TypeChecker, SqlTester.ParameterChecker, SqlTester.ResultChecker)","u":"check(org.apache.calcite.sql.test.SqlTestFactory,java.lang.String,org.apache.calcite.sql.test.SqlTester.TypeChecker,org.apache.calcite.sql.test.SqlTester.ParameterChecker,org.apache.calcite.sql.test.SqlTester.ResultChecker)"},{"p":"org.apache.calcite.sql.test","c":"SqlTester","l":"check(SqlTestFactory, String, SqlTester.TypeChecker, SqlTester.ResultChecker)","u":"check(org.apache.calcite.sql.test.SqlTestFactory,java.lang.String,org.apache.calcite.sql.test.SqlTester.TypeChecker,org.apache.calcite.sql.test.SqlTester.ResultChecker)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest.Tester","l":"check(SqlTestFactory, StringAndPos, SqlDialect, UnaryOperator<String>, String, Consumer<SqlParser>)","u":"check(org.apache.calcite.sql.test.SqlTestFactory,org.apache.calcite.sql.parser.StringAndPos,org.apache.calcite.sql.SqlDialect,java.util.function.UnaryOperator,java.lang.String,java.util.function.Consumer)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest.TesterImpl","l":"check(SqlTestFactory, StringAndPos, SqlDialect, UnaryOperator<String>, String, Consumer<SqlParser>)","u":"check(org.apache.calcite.sql.test.SqlTestFactory,org.apache.calcite.sql.parser.StringAndPos,org.apache.calcite.sql.SqlDialect,java.util.function.UnaryOperator,java.lang.String,java.util.function.Consumer)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest.UnparsingTesterImpl","l":"check(SqlTestFactory, StringAndPos, SqlDialect, UnaryOperator<String>, String, Consumer<SqlParser>)","u":"check(org.apache.calcite.sql.test.SqlTestFactory,org.apache.calcite.sql.parser.StringAndPos,org.apache.calcite.sql.SqlDialect,java.util.function.UnaryOperator,java.lang.String,java.util.function.Consumer)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"check(String, SqlTester.TypeChecker, Object)","u":"check(java.lang.String,org.apache.calcite.sql.test.SqlTester.TypeChecker,java.lang.Object)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"check(String, SqlTester.TypeChecker, SqlTester.ParameterChecker, SqlTester.ResultChecker)","u":"check(java.lang.String,org.apache.calcite.sql.test.SqlTester.TypeChecker,org.apache.calcite.sql.test.SqlTester.ParameterChecker,org.apache.calcite.sql.test.SqlTester.ResultChecker)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"check(String, String, Object)","u":"check(java.lang.String,java.lang.String,java.lang.Object)"},{"p":"org.apache.calcite.test","c":"DiffRepository","l":"checkActualAndReferenceFiles()"},{"p":"org.apache.calcite.sql.test","c":"AbstractSqlTester","l":"checkAgg(SqlTestFactory, String, String[], SqlTester.ResultChecker)","u":"checkAgg(org.apache.calcite.sql.test.SqlTestFactory,java.lang.String,java.lang.String[],org.apache.calcite.sql.test.SqlTester.ResultChecker)"},{"p":"org.apache.calcite.sql.test","c":"SqlTester","l":"checkAgg(SqlTestFactory, String, String[], SqlTester.ResultChecker)","u":"checkAgg(org.apache.calcite.sql.test.SqlTestFactory,java.lang.String,java.lang.String[],org.apache.calcite.sql.test.SqlTester.ResultChecker)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"checkAgg(String, String[], SqlTester.ResultChecker)","u":"checkAgg(java.lang.String,java.lang.String[],org.apache.calcite.sql.test.SqlTester.ResultChecker)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"checkAgg(String, String[], String, SqlTester.ResultChecker)","u":"checkAgg(java.lang.String,java.lang.String[],java.lang.String,org.apache.calcite.sql.test.SqlTester.ResultChecker)"},{"p":"org.apache.calcite.sql.test","c":"AbstractSqlTester","l":"checkAggFails(SqlTestFactory, String, String[], String, boolean)","u":"checkAggFails(org.apache.calcite.sql.test.SqlTestFactory,java.lang.String,java.lang.String[],java.lang.String,boolean)"},{"p":"org.apache.calcite.sql.test","c":"SqlTester","l":"checkAggFails(SqlTestFactory, String, String[], String, boolean)","u":"checkAggFails(org.apache.calcite.sql.test.SqlTestFactory,java.lang.String,java.lang.String[],java.lang.String,boolean)"},{"p":"org.apache.calcite.test","c":"SqlOperatorTest.TesterImpl","l":"checkAggFails(SqlTestFactory, String, String[], String, boolean)","u":"checkAggFails(org.apache.calcite.sql.test.SqlTestFactory,java.lang.String,java.lang.String[],java.lang.String,boolean)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"checkAggFails(String, String[], String, boolean)","u":"checkAggFails(java.lang.String,java.lang.String[],java.lang.String,boolean)"},{"p":"org.apache.calcite.sql.validate","c":"AggregatingScope","l":"checkAggregateExpr(SqlNode, boolean)","u":"checkAggregateExpr(org.apache.calcite.sql.SqlNode,boolean)"},{"p":"org.apache.calcite.sql.validate","c":"AggregatingSelectScope","l":"checkAggregateExpr(SqlNode, boolean)","u":"checkAggregateExpr(org.apache.calcite.sql.SqlNode,boolean)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"checkAggType(String, String)","u":"checkAggType(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"checkAggWithMultipleArgs(String, String[][], SqlTester.ResultChecker)","u":"checkAggWithMultipleArgs(java.lang.String,java.lang.String[][],org.apache.calcite.sql.test.SqlTester.ResultChecker)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"checkBoolean(String, Boolean)","u":"checkBoolean(java.lang.String,java.lang.Boolean)"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"checkCancel()"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"checkCancel()"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"checkCastFails(String, String, String, boolean, SqlOperatorFixture.CastType)","u":"checkCastFails(java.lang.String,java.lang.String,java.lang.String,boolean,org.apache.calcite.sql.test.SqlOperatorFixture.CastType)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"checkCastToApproxOkay(String, String, Object, SqlOperatorFixture.CastType)","u":"checkCastToApproxOkay(java.lang.String,java.lang.String,java.lang.Object,org.apache.calcite.sql.test.SqlOperatorFixture.CastType)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"checkCastToScalarOkay(String, String, SqlOperatorFixture.CastType)","u":"checkCastToScalarOkay(java.lang.String,java.lang.String,org.apache.calcite.sql.test.SqlOperatorFixture.CastType)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"checkCastToScalarOkay(String, String, String, SqlOperatorFixture.CastType)","u":"checkCastToScalarOkay(java.lang.String,java.lang.String,java.lang.String,org.apache.calcite.sql.test.SqlOperatorFixture.CastType)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"checkCastToString(String, String, String, SqlOperatorFixture.CastType)","u":"checkCastToString(java.lang.String,java.lang.String,java.lang.String,org.apache.calcite.sql.test.SqlOperatorFixture.CastType)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"checkCastToStringOkay(String, String, String, SqlOperatorFixture.CastType)","u":"checkCastToStringOkay(java.lang.String,java.lang.String,java.lang.String,org.apache.calcite.sql.test.SqlOperatorFixture.CastType)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"checkCharsetAndCollateConsistentIfCharType(RelDataType)","u":"checkCharsetAndCollateConsistentIfCharType(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.util","c":"UnsafeX509ExtendedTrustManager","l":"checkClientTrusted(X509Certificate[], String)","u":"checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String)"},{"p":"org.apache.calcite.util","c":"UnsafeX509ExtendedTrustManager","l":"checkClientTrusted(X509Certificate[], String, Socket)","u":"checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String,java.net.Socket)"},{"p":"org.apache.calcite.util","c":"UnsafeX509ExtendedTrustManager","l":"checkClientTrusted(X509Certificate[], String, SSLEngine)","u":"checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String,javax.net.ssl.SSLEngine)"},{"p":"org.apache.calcite.sql.test","c":"AbstractSqlTester","l":"checkColumnType(SqlTestFactory, String, String)","u":"checkColumnType(org.apache.calcite.sql.test.SqlTestFactory,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.sql.test","c":"SqlTester","l":"checkColumnType(SqlTestFactory, String, String)","u":"checkColumnType(org.apache.calcite.sql.test.SqlTestFactory,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"checkColumnType(String, String)","u":"checkColumnType(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"checkDateFormat(String)","u":"checkDateFormat(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"CHECKED_ARITHMETIC"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"CHECKED_DIVIDE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"CHECKED_DIVIDE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"CHECKED_DIVIDE_INTEGER"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"CHECKED_MINUS"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"CHECKED_MINUS"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"CHECKED_MINUS_PREFIX"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"CHECKED_MULTIPLY"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"CHECKED_PLUS"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"CHECKED_PLUS"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"CHECKED_TIMES"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"CHECKED_UNARY_MINUS"},{"p":"org.apache.calcite.sql.validate","c":"SqlAbstractConformance","l":"checkedArithmetic()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformance","l":"checkedArithmetic()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"checkedArithmetic()"},{"p":"org.apache.calcite.sql.validate","c":"SqlDelegatingConformance","l":"checkedArithmetic()"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"checkedDivide(byte, byte)","u":"checkedDivide(byte,byte)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"checkedDivide(int, int)","u":"checkedDivide(int,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"checkedDivide(long, long)","u":"checkedDivide(long,long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"checkedDivide(short, short)","u":"checkedDivide(short,short)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"checkedMinus(byte, byte)","u":"checkedMinus(byte,byte)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"checkedMinus(int, int)","u":"checkedMinus(int,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"checkedMinus(long, long)","u":"checkedMinus(long,long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"checkedMinus(short, short)","u":"checkedMinus(short,short)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"checkedMultiply(byte, byte)","u":"checkedMultiply(byte,byte)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"checkedMultiply(int, int)","u":"checkedMultiply(int,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"checkedMultiply(long, long)","u":"checkedMultiply(long,long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"checkedMultiply(short, short)","u":"checkedMultiply(short,short)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"checkedPlus(byte, byte)","u":"checkedPlus(byte,byte)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"checkedPlus(int, int)","u":"checkedPlus(int,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"checkedPlus(long, long)","u":"checkedPlus(long,long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"checkedPlus(short, short)","u":"checkedPlus(short,short)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"checkedUnaryMinus(byte)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"checkedUnaryMinus(int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"checkedUnaryMinus(long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"checkedUnaryMinus(short)"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"checker"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest.TesterImpl","l":"checkEx(String, StringAndPos, Throwable)","u":"checkEx(java.lang.String,org.apache.calcite.sql.parser.StringAndPos,java.lang.Throwable)"},{"p":"org.apache.calcite.sql.test","c":"SqlTests","l":"checkEx(Throwable, String, StringAndPos, SqlTests.Stage)","u":"checkEx(java.lang.Throwable,java.lang.String,org.apache.calcite.sql.parser.StringAndPos,org.apache.calcite.sql.test.SqlTests.Stage)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest.Tester","l":"checkExp(SqlTestFactory, StringAndPos, UnaryOperator<String>, String, Consumer<SqlParser>)","u":"checkExp(org.apache.calcite.sql.test.SqlTestFactory,org.apache.calcite.sql.parser.StringAndPos,java.util.function.UnaryOperator,java.lang.String,java.util.function.Consumer)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest.TesterImpl","l":"checkExp(SqlTestFactory, StringAndPos, UnaryOperator<String>, String, Consumer<SqlParser>)","u":"checkExp(org.apache.calcite.sql.test.SqlTestFactory,org.apache.calcite.sql.parser.StringAndPos,java.util.function.UnaryOperator,java.lang.String,java.util.function.Consumer)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest.UnparsingTesterImpl","l":"checkExp(SqlTestFactory, StringAndPos, UnaryOperator<String>, String, Consumer<SqlParser>)","u":"checkExp(org.apache.calcite.sql.test.SqlTestFactory,org.apache.calcite.sql.parser.StringAndPos,java.util.function.UnaryOperator,java.lang.String,java.util.function.Consumer)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest.Tester","l":"checkExpFails(SqlTestFactory, StringAndPos, String)","u":"checkExpFails(org.apache.calcite.sql.test.SqlTestFactory,org.apache.calcite.sql.parser.StringAndPos,java.lang.String)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest.TesterImpl","l":"checkExpFails(SqlTestFactory, StringAndPos, String)","u":"checkExpFails(org.apache.calcite.sql.test.SqlTestFactory,org.apache.calcite.sql.parser.StringAndPos,java.lang.String)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest.UnparsingTesterImpl","l":"checkExpFails(SqlTestFactory, StringAndPos, String)","u":"checkExpFails(org.apache.calcite.sql.test.SqlTestFactory,org.apache.calcite.sql.parser.StringAndPos,java.lang.String)"},{"p":"org.apache.calcite.sql.test","c":"SqlTester","l":"checkFails(SqlTestFactory, String, String, boolean)","u":"checkFails(org.apache.calcite.sql.test.SqlTestFactory,java.lang.String,java.lang.String,boolean)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest.Tester","l":"checkFails(SqlTestFactory, StringAndPos, boolean, String)","u":"checkFails(org.apache.calcite.sql.test.SqlTestFactory,org.apache.calcite.sql.parser.StringAndPos,boolean,java.lang.String)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest.TesterImpl","l":"checkFails(SqlTestFactory, StringAndPos, boolean, String)","u":"checkFails(org.apache.calcite.sql.test.SqlTestFactory,org.apache.calcite.sql.parser.StringAndPos,boolean,java.lang.String)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest.UnparsingTesterImpl","l":"checkFails(SqlTestFactory, StringAndPos, boolean, String)","u":"checkFails(org.apache.calcite.sql.test.SqlTestFactory,org.apache.calcite.sql.parser.StringAndPos,boolean,java.lang.String)"},{"p":"org.apache.calcite.sql.test","c":"AbstractSqlTester","l":"checkFails(SqlTestFactory, StringAndPos, String, boolean)","u":"checkFails(org.apache.calcite.sql.test.SqlTestFactory,org.apache.calcite.sql.parser.StringAndPos,java.lang.String,boolean)"},{"p":"org.apache.calcite.sql.test","c":"SqlTester","l":"checkFails(SqlTestFactory, StringAndPos, String, boolean)","u":"checkFails(org.apache.calcite.sql.test.SqlTestFactory,org.apache.calcite.sql.parser.StringAndPos,java.lang.String,boolean)"},{"p":"org.apache.calcite.test","c":"SqlOperatorTest.TesterImpl","l":"checkFails(SqlTestFactory, StringAndPos, String, boolean)","u":"checkFails(org.apache.calcite.sql.test.SqlTestFactory,org.apache.calcite.sql.parser.StringAndPos,java.lang.String,boolean)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"checkFails(String, String, boolean)","u":"checkFails(java.lang.String,java.lang.String,boolean)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"checkFails(StringAndPos, String, boolean)","u":"checkFails(org.apache.calcite.sql.parser.StringAndPos,java.lang.String,boolean)"},{"p":"org.apache.calcite.rel.core","c":"Aggregate","l":"checkIndicator(boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUtil","l":"checkInputForCollationAndLimit(RelMetadataQuery, RelNode, RelCollation, RexNode, RexNode)","u":"checkInputForCollationAndLimit(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest.Tester","l":"checkList(SqlTestFactory, StringAndPos, SqlDialect, UnaryOperator<String>, List<String>)","u":"checkList(org.apache.calcite.sql.test.SqlTestFactory,org.apache.calcite.sql.parser.StringAndPos,org.apache.calcite.sql.SqlDialect,java.util.function.UnaryOperator,java.util.List)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest.TesterImpl","l":"checkList(SqlTestFactory, StringAndPos, SqlDialect, UnaryOperator<String>, List<String>)","u":"checkList(org.apache.calcite.sql.test.SqlTestFactory,org.apache.calcite.sql.parser.StringAndPos,org.apache.calcite.sql.SqlDialect,java.util.function.UnaryOperator,java.util.List)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest.UnparsingTesterImpl","l":"checkList(SqlTestFactory, StringAndPos, SqlDialect, UnaryOperator<String>, List<String>)","u":"checkList(org.apache.calcite.sql.test.SqlTestFactory,org.apache.calcite.sql.parser.StringAndPos,org.apache.calcite.sql.SqlDialect,java.util.function.UnaryOperator,java.util.List)"},{"p":"org.apache.calcite.piglet","c":"PigRelBuilder","l":"checkMap(LogicalRelationalOperator)","u":"checkMap(org.apache.pig.newplan.logical.relational.LogicalRelationalOperator)"},{"p":"org.apache.calcite.test","c":"CalciteAssert","l":"checkMaskedResultContains(String)","u":"checkMaskedResultContains(java.lang.String)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest.Tester","l":"checkNode(SqlTestFactory, StringAndPos, Matcher<SqlNode>)","u":"checkNode(org.apache.calcite.sql.test.SqlTestFactory,org.apache.calcite.sql.parser.StringAndPos,org.hamcrest.Matcher)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest.TesterImpl","l":"checkNode(SqlTestFactory, StringAndPos, Matcher<SqlNode>)","u":"checkNode(org.apache.calcite.sql.test.SqlTestFactory,org.apache.calcite.sql.parser.StringAndPos,org.hamcrest.Matcher)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"checkNull(String)","u":"checkNull(java.lang.String)"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonArrayFunction","l":"checkOperandCount(SqlValidator, SqlOperandTypeChecker, SqlCall)","u":"checkOperandCount(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.type.SqlOperandTypeChecker,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonDepthFunction","l":"checkOperandCount(SqlValidator, SqlOperandTypeChecker, SqlCall)","u":"checkOperandCount(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.type.SqlOperandTypeChecker,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonModifyFunction","l":"checkOperandCount(SqlValidator, SqlOperandTypeChecker, SqlCall)","u":"checkOperandCount(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.type.SqlOperandTypeChecker,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonObjectFunction","l":"checkOperandCount(SqlValidator, SqlOperandTypeChecker, SqlCall)","u":"checkOperandCount(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.type.SqlOperandTypeChecker,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonPrettyFunction","l":"checkOperandCount(SqlValidator, SqlOperandTypeChecker, SqlCall)","u":"checkOperandCount(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.type.SqlOperandTypeChecker,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonTypeFunction","l":"checkOperandCount(SqlValidator, SqlOperandTypeChecker, SqlCall)","u":"checkOperandCount(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.type.SqlOperandTypeChecker,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"checkOperandCount(SqlValidator, SqlOperandTypeChecker, SqlCall)","u":"checkOperandCount(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.type.SqlOperandTypeChecker,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.fun","c":"SqlCaseOperator","l":"checkOperandTypes(SqlCallBinding, boolean)","u":"checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)"},{"p":"org.apache.calcite.sql.fun","c":"SqlCastFunction","l":"checkOperandTypes(SqlCallBinding, boolean)","u":"checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)"},{"p":"org.apache.calcite.sql.fun","c":"SqlConvertFunction","l":"checkOperandTypes(SqlCallBinding, boolean)","u":"checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)"},{"p":"org.apache.calcite.sql.fun","c":"SqlDatePartFunction","l":"checkOperandTypes(SqlCallBinding, boolean)","u":"checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)"},{"p":"org.apache.calcite.sql.fun","c":"SqlDotOperator","l":"checkOperandTypes(SqlCallBinding, boolean)","u":"checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)"},{"p":"org.apache.calcite.sql.fun","c":"SqlItemOperator","l":"checkOperandTypes(SqlCallBinding, boolean)","u":"checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonModifyFunction","l":"checkOperandTypes(SqlCallBinding, boolean)","u":"checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonObjectFunction","l":"checkOperandTypes(SqlCallBinding, boolean)","u":"checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonRemoveFunction","l":"checkOperandTypes(SqlCallBinding, boolean)","u":"checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)"},{"p":"org.apache.calcite.sql.fun","c":"SqlLikeOperator","l":"checkOperandTypes(SqlCallBinding, boolean)","u":"checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)"},{"p":"org.apache.calcite.sql.fun","c":"SqlLiteralChainOperator","l":"checkOperandTypes(SqlCallBinding, boolean)","u":"checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)"},{"p":"org.apache.calcite.sql.fun","c":"SqlMapValueConstructor","l":"checkOperandTypes(SqlCallBinding, boolean)","u":"checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)"},{"p":"org.apache.calcite.sql.fun","c":"SqlMultisetMemberOfOperator","l":"checkOperandTypes(SqlCallBinding, boolean)","u":"checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)"},{"p":"org.apache.calcite.sql.fun","c":"SqlMultisetQueryConstructor","l":"checkOperandTypes(SqlCallBinding, boolean)","u":"checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)"},{"p":"org.apache.calcite.sql.fun","c":"SqlMultisetValueConstructor","l":"checkOperandTypes(SqlCallBinding, boolean)","u":"checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)"},{"p":"org.apache.calcite.sql.fun","c":"SqlOverlapsOperator","l":"checkOperandTypes(SqlCallBinding, boolean)","u":"checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)"},{"p":"org.apache.calcite.sql.fun","c":"SqlPositionFunction","l":"checkOperandTypes(SqlCallBinding, boolean)","u":"checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)"},{"p":"org.apache.calcite.sql.fun","c":"SqlPosixRegexOperator","l":"checkOperandTypes(SqlCallBinding, boolean)","u":"checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)"},{"p":"org.apache.calcite.sql.fun","c":"SqlSubstringFunction","l":"checkOperandTypes(SqlCallBinding, boolean)","u":"checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)"},{"p":"org.apache.calcite.sql.fun","c":"SqlTranslateFunction","l":"checkOperandTypes(SqlCallBinding, boolean)","u":"checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)"},{"p":"org.apache.calcite.sql.fun","c":"SqlTrimFunction","l":"checkOperandTypes(SqlCallBinding, boolean)","u":"checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)"},{"p":"org.apache.calcite.sql","c":"SqlDescriptorOperator","l":"checkOperandTypes(SqlCallBinding, boolean)","u":"checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"checkOperandTypes(SqlCallBinding, boolean)","u":"checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)"},{"p":"org.apache.calcite.sql.type","c":"ArrayElementOperandTypeChecker","l":"checkOperandTypes(SqlCallBinding, boolean)","u":"checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)"},{"p":"org.apache.calcite.sql.type","c":"ArrayInsertOperandTypeChecker","l":"checkOperandTypes(SqlCallBinding, boolean)","u":"checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)"},{"p":"org.apache.calcite.sql.type","c":"AssignableOperandTypeChecker","l":"checkOperandTypes(SqlCallBinding, boolean)","u":"checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)"},{"p":"org.apache.calcite.sql.type","c":"ComparableOperandTypeChecker","l":"checkOperandTypes(SqlCallBinding, boolean)","u":"checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)"},{"p":"org.apache.calcite.sql.type","c":"CompositeOperandTypeChecker","l":"checkOperandTypes(SqlCallBinding, boolean)","u":"checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)"},{"p":"org.apache.calcite.sql.type","c":"ExplicitOperandTypeChecker","l":"checkOperandTypes(SqlCallBinding, boolean)","u":"checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)"},{"p":"org.apache.calcite.sql.type","c":"FamilyOperandTypeChecker","l":"checkOperandTypes(SqlCallBinding, boolean)","u":"checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)"},{"p":"org.apache.calcite.sql.type","c":"MultisetOperandTypeChecker","l":"checkOperandTypes(SqlCallBinding, boolean)","u":"checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)"},{"p":"org.apache.calcite.sql.type","c":"NotNullOperandTypeChecker","l":"checkOperandTypes(SqlCallBinding, boolean)","u":"checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)"},{"p":"org.apache.calcite.sql.type","c":"SameOperandTypeChecker","l":"checkOperandTypes(SqlCallBinding, boolean)","u":"checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)"},{"p":"org.apache.calcite.sql.type","c":"SetopOperandTypeChecker","l":"checkOperandTypes(SqlCallBinding, boolean)","u":"checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)"},{"p":"org.apache.calcite.sql.type","c":"SqlOperandTypeChecker","l":"checkOperandTypes(SqlCallBinding, boolean)","u":"checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)"},{"p":"org.apache.calcite.sql.type","c":"SqlSingleOperandTypeChecker","l":"checkOperandTypes(SqlCallBinding, boolean)","u":"checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)"},{"p":"org.apache.calcite.sql.type","c":"ComparableOperandTypeChecker","l":"checkOperandTypes(SqlOperatorBinding, SqlCallBinding)","u":"checkOperandTypes(org.apache.calcite.sql.SqlOperatorBinding,org.apache.calcite.sql.SqlCallBinding)"},{"p":"org.apache.calcite.sql.type","c":"SameOperandTypeChecker","l":"checkOperandTypes(SqlOperatorBinding, SqlCallBinding)","u":"checkOperandTypes(org.apache.calcite.sql.SqlOperatorBinding,org.apache.calcite.sql.SqlCallBinding)"},{"p":"org.apache.calcite.sql.type","c":"SameOperandTypeChecker","l":"checkOperandTypesImpl(SqlOperatorBinding, boolean, SqlCallBinding)","u":"checkOperandTypesImpl(org.apache.calcite.sql.SqlOperatorBinding,boolean,org.apache.calcite.sql.SqlCallBinding)"},{"p":"org.apache.calcite.sql.type","c":"SameOperandTypeExceptLastOperandChecker","l":"checkOperandTypesImpl(SqlOperatorBinding, boolean, SqlCallBinding)","u":"checkOperandTypesImpl(org.apache.calcite.sql.SqlOperatorBinding,boolean,org.apache.calcite.sql.SqlCallBinding)"},{"p":"org.apache.calcite.sql.type","c":"FamilyOperandTypeChecker","l":"checkOperandTypesWithoutTypeCoercion(SqlCallBinding, boolean)","u":"checkOperandTypesWithoutTypeCoercion(org.apache.calcite.sql.SqlCallBinding,boolean)"},{"p":"org.apache.calcite.sql.type","c":"ImplicitCastOperandTypeChecker","l":"checkOperandTypesWithoutTypeCoercion(SqlCallBinding, boolean)","u":"checkOperandTypesWithoutTypeCoercion(org.apache.calcite.sql.SqlCallBinding,boolean)"},{"p":"org.apache.calcite.rel.hint","c":"HintOptionChecker","l":"checkOptions(RelHint, Litmus)","u":"checkOptions(org.apache.calcite.rel.hint.RelHint,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.sql.test","c":"SqlTester.ParameterChecker","l":"checkParameters(RelDataType)","u":"checkParameters(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.test","c":"AbstractSqlTester","l":"checkParseEx(Throwable, String, StringAndPos)","u":"checkParseEx(java.lang.Throwable,java.lang.String,org.apache.calcite.sql.parser.StringAndPos)"},{"p":"org.apache.calcite.sql.type","c":"BasicSqlType","l":"checkPrecScale(SqlTypeName, boolean, boolean)","u":"checkPrecScale(org.apache.calcite.sql.type.SqlTypeName,boolean,boolean)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"checkProjAndChildInputs(Project, boolean)","u":"checkProjAndChildInputs(org.apache.calcite.rel.core.Project,boolean)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"checkQuery(String)","u":"checkQuery(java.lang.String)"},{"p":"org.apache.calcite.sql.test","c":"AbstractSqlTester","l":"checkQueryFails(SqlTestFactory, StringAndPos, String)","u":"checkQueryFails(org.apache.calcite.sql.test.SqlTestFactory,org.apache.calcite.sql.parser.StringAndPos,java.lang.String)"},{"p":"org.apache.calcite.sql.test","c":"SqlTester","l":"checkQueryFails(SqlTestFactory, StringAndPos, String)","u":"checkQueryFails(org.apache.calcite.sql.test.SqlTestFactory,org.apache.calcite.sql.parser.StringAndPos,java.lang.String)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"checkQueryFails(StringAndPos, String)","u":"checkQueryFails(org.apache.calcite.sql.parser.StringAndPos,java.lang.String)"},{"p":"org.apache.calcite.sql.test","c":"SqlTester.ResultChecker","l":"checkResult(String, ResultSet)","u":"checkResult(java.lang.String,java.sql.ResultSet)"},{"p":"org.apache.calcite.test","c":"CalciteAssert","l":"checkResultContains(String, int)","u":"checkResultContains(java.lang.String,int)"},{"p":"org.apache.calcite.test","c":"CalciteAssert","l":"checkResultContains(String...)","u":"checkResultContains(java.lang.String...)"},{"p":"org.apache.calcite.test","c":"CalciteAssert","l":"checkResultCount(Matcher<Integer>)","u":"checkResultCount(org.hamcrest.Matcher)"},{"p":"org.apache.calcite.test","c":"CalciteAssert","l":"checkResultType(String)","u":"checkResultType(java.lang.String)"},{"p":"org.apache.calcite.test","c":"QuidemTest","l":"checkRun(String)","u":"checkRun(java.lang.String)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"checkScalar(String, Object, String)","u":"checkScalar(java.lang.String,java.lang.Object,java.lang.String)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"checkScalar(String, SqlTester.TypeChecker, SqlTester.ResultChecker)","u":"checkScalar(java.lang.String,org.apache.calcite.sql.test.SqlTester.TypeChecker,org.apache.calcite.sql.test.SqlTester.ResultChecker)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"checkScalarApprox(String, String, Object)","u":"checkScalarApprox(java.lang.String,java.lang.String,java.lang.Object)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"checkScalarExact(String, int)","u":"checkScalarExact(java.lang.String,int)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"checkScalarExact(String, String, SqlTester.ResultChecker)","u":"checkScalarExact(java.lang.String,java.lang.String,org.apache.calcite.sql.test.SqlTester.ResultChecker)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"checkScalarExact(String, String, String)","u":"checkScalarExact(java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.util","c":"UnsafeX509ExtendedTrustManager","l":"checkServerTrusted(X509Certificate[], String)","u":"checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String)"},{"p":"org.apache.calcite.util","c":"UnsafeX509ExtendedTrustManager","l":"checkServerTrusted(X509Certificate[], String, Socket)","u":"checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String,java.net.Socket)"},{"p":"org.apache.calcite.util","c":"UnsafeX509ExtendedTrustManager","l":"checkServerTrusted(X509Certificate[], String, SSLEngine)","u":"checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String,javax.net.ssl.SSLEngine)"},{"p":"org.apache.calcite.sql.type","c":"CompositeSingleOperandTypeChecker","l":"checkSingleOperandType(SqlCallBinding, SqlNode, int, boolean)","u":"checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)"},{"p":"org.apache.calcite.sql.type","c":"FamilyOperandTypeChecker","l":"checkSingleOperandType(SqlCallBinding, SqlNode, int, boolean)","u":"checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)"},{"p":"org.apache.calcite.sql.type","c":"IntervalOperandTypeChecker","l":"checkSingleOperandType(SqlCallBinding, SqlNode, int, boolean)","u":"checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)"},{"p":"org.apache.calcite.sql.type","c":"LiteralOperandTypeChecker","l":"checkSingleOperandType(SqlCallBinding, SqlNode, int, boolean)","u":"checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)"},{"p":"org.apache.calcite.sql.type","c":"SameOperandTypeChecker","l":"checkSingleOperandType(SqlCallBinding, SqlNode, int, boolean)","u":"checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)"},{"p":"org.apache.calcite.sql.type","c":"SqlSingleOperandTypeChecker","l":"checkSingleOperandType(SqlCallBinding, SqlNode, int, boolean)","u":"checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)"},{"p":"org.apache.calcite.sql.type","c":"FamilyOperandTypeChecker","l":"checkSingleOperandType(SqlCallBinding, SqlNode, int, SqlTypeFamily, boolean)","u":"checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,org.apache.calcite.sql.type.SqlTypeFamily,boolean)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"checkString(String, String, String)","u":"checkString(java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"checkType(String, String)","u":"checkType(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.sql.test","c":"SqlTester.TypeChecker","l":"checkType(Supplier<String>, RelDataType)","u":"checkType(java.util.function.Supplier,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.test","c":"SqlTests.StringTypeChecker","l":"checkType(Supplier<String>, RelDataType)","u":"checkType(java.util.function.Supplier,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"checkTypeAssignment(SqlValidatorScope, SqlValidatorTable, RelDataType, RelDataType, SqlNode)","u":"checkTypeAssignment(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.test","c":"RelOptFixture","l":"checkUnchanged()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"checkUnicodeEscapeChar(String)","u":"checkUnicodeEscapeChar(java.lang.String)"},{"p":"org.apache.calcite.test","c":"CalciteAssert","l":"checkUpdateCount(int)"},{"p":"org.apache.calcite.materialize","c":"MaterializationService","l":"checkValid(MaterializationKey)","u":"checkValid(org.apache.calcite.materialize.MaterializationKey)"},{"p":"org.apache.calcite.sql.test","c":"AbstractSqlTester","l":"checkWinAgg(SqlTestFactory, String, String[], String, String, SqlTester.ResultChecker)","u":"checkWinAgg(org.apache.calcite.sql.test.SqlTestFactory,java.lang.String,java.lang.String[],java.lang.String,java.lang.String,org.apache.calcite.sql.test.SqlTester.ResultChecker)"},{"p":"org.apache.calcite.sql.test","c":"SqlTester","l":"checkWinAgg(SqlTestFactory, String, String[], String, String, SqlTester.ResultChecker)","u":"checkWinAgg(org.apache.calcite.sql.test.SqlTestFactory,java.lang.String,java.lang.String[],java.lang.String,java.lang.String,org.apache.calcite.sql.test.SqlTester.ResultChecker)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"checkWinAgg(String, String[], String, String, SqlTester.ResultChecker)","u":"checkWinAgg(java.lang.String,java.lang.String[],java.lang.String,java.lang.String,org.apache.calcite.sql.test.SqlTester.ResultChecker)"},{"p":"org.apache.calcite.rel.stream","c":"Chi","l":"Chi(RelOptCluster, RelTraitSet, RelNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan","c":"RelOptRuleOperand","l":"childPolicy"},{"p":"org.apache.calcite.sql.validate","c":"ListScope","l":"children"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibrary","l":"children()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableJoin","l":"childrenAccept(MutableRelVisitor)","u":"childrenAccept(org.apache.calcite.rel.mutable.MutableRelVisitor)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableValues","l":"childrenAccept(MutableRelVisitor)","u":"childrenAccept(org.apache.calcite.rel.mutable.MutableRelVisitor)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableSetOp","l":"childrenAccept(MutableRelVisitor)","u":"childrenAccept(org.apache.calcite.rel.mutable.MutableRelVisitor)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableRel","l":"childrenAccept(MutableRelVisitor)","u":"childrenAccept(org.apache.calcite.rel.mutable.MutableRelVisitor)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableSort","l":"childrenAccept(MutableRelVisitor)","u":"childrenAccept(org.apache.calcite.rel.mutable.MutableRelVisitor)"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"childrenAccept(RelVisitor)","u":"childrenAccept(org.apache.calcite.rel.RelVisitor)"},{"p":"org.apache.calcite.rel","c":"BiRel","l":"childrenAccept(RelVisitor)","u":"childrenAccept(org.apache.calcite.rel.RelVisitor)"},{"p":"org.apache.calcite.rel","c":"RelNode","l":"childrenAccept(RelVisitor)","u":"childrenAccept(org.apache.calcite.rel.RelVisitor)"},{"p":"org.apache.calcite.rel","c":"SingleRel","l":"childrenAccept(RelVisitor)","u":"childrenAccept(org.apache.calcite.rel.RelVisitor)"},{"p":"org.apache.calcite.chinook","c":"ChinookAvaticaServer","l":"ChinookAvaticaServer()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.rules","c":"LoptSemiJoinOptimizer","l":"chooseBestSemiJoin(LoptMultiJoin)","u":"chooseBestSemiJoin(org.apache.calcite.rel.rules.LoptMultiJoin)"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"chooseDelegate()"},{"p":"org.apache.calcite.plan","c":"RelOptPlanner","l":"chooseDelegate()"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"chooseDelegate()"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig.LineFolding","l":"CHOP"},{"p":"org.apache.calcite.chinook","c":"ChosenCustomerEmail","l":"ChosenCustomerEmail()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"CHR"},{"p":"org.apache.calcite.util","c":"ChunkList","l":"ChunkList()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util","c":"ChunkList","l":"ChunkList(Collection<E>)","u":"%3Cinit%3E(java.util.Collection)"},{"p":"org.apache.calcite.test.schemata.bookstore","c":"BookstoreSchema.Place","l":"city"},{"p":"org.apache.calcite.linq4j.tree","c":"ClassDeclaration","l":"classClass"},{"p":"org.apache.calcite.util","c":"EquivalenceSet","l":"classCount()"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"classDecl(int, String, Type, List<Type>, List<MemberDeclaration>)","u":"classDecl(int,java.lang.String,java.lang.reflect.Type,java.util.List,java.util.List)"},{"p":"org.apache.calcite.linq4j.tree","c":"ClassDeclaration","l":"ClassDeclaration(int, String, Type, List<Type>, List<MemberDeclaration>)","u":"%3Cinit%3E(int,java.lang.String,java.lang.reflect.Type,java.util.List,java.util.List)"},{"p":"org.apache.calcite.linq4j.tree","c":"ClassDeclarationFinder","l":"ClassDeclarationFinder(ClassDeclarationFinder)","u":"%3Cinit%3E(org.apache.calcite.linq4j.tree.ClassDeclarationFinder)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"CLASSIFIER"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"CLASSIFIER"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"classifyFilters(RelNode, List<RexNode>, boolean, boolean, boolean, List<RexNode>, List<RexNode>, List<RexNode>)","u":"classifyFilters(org.apache.calcite.rel.RelNode,java.util.List,boolean,boolean,boolean,java.util.List,java.util.List,java.util.List)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"classifyFilters(RelNode, List<RexNode>, JoinRelType, boolean, boolean, boolean, List<RexNode>, List<RexNode>, List<RexNode>)","u":"classifyFilters(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.JoinRelType,boolean,boolean,boolean,java.util.List,java.util.List,java.util.List)"},{"p":"org.apache.calcite.model","c":"JsonFunction","l":"className"},{"p":"org.apache.calcite.rel.externalize","c":"RelJson","l":"classToTypeName(Class<? extends RelNode>)","u":"classToTypeName(java.lang.Class)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"clauseEndsLine()"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"clauseStartsLine()"},{"p":"org.apache.calcite","c":"DataContext.Variable","l":"clazz"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor.Operand","l":"clazz"},{"p":"org.apache.calcite.linq4j.tree","c":"BlockBuilder","l":"clear()"},{"p":"org.apache.calcite.materialize","c":"MaterializationService","l":"clear()"},{"p":"org.apache.calcite.piglet","c":"PigRelBuilder","l":"clear()"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"clear()"},{"p":"org.apache.calcite.plan.hep","c":"HepPlanner","l":"clear()"},{"p":"org.apache.calcite.plan","c":"RelDigest","l":"clear()"},{"p":"org.apache.calcite.plan","c":"RelOptPlanner","l":"clear()"},{"p":"org.apache.calcite.plan.volcano","c":"RuleQueue","l":"clear()"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"clear()"},{"p":"org.apache.calcite.runtime","c":"ImmutableIntList","l":"clear()"},{"p":"org.apache.calcite.sql.parser","c":"Span","l":"clear()"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"clear()"},{"p":"org.apache.calcite.sql.util","c":"SqlBuilder","l":"clear()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope.ResolvedImpl","l":"clear()"},{"p":"org.apache.calcite.test","c":"MockRelOptPlanner","l":"clear()"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"clear()"},{"p":"org.apache.calcite.util","c":"ChunkList","l":"clear()"},{"p":"org.apache.calcite.util","c":"CompositeMap","l":"clear()"},{"p":"org.apache.calcite.util","c":"EquivalenceSet","l":"clear()"},{"p":"org.apache.calcite.util.javac","c":"JavaCompilerArgs","l":"clear()"},{"p":"org.apache.calcite.util.mapping","c":"AbstractSourceMapping","l":"clear()"},{"p":"org.apache.calcite.util.mapping","c":"AbstractTargetMapping","l":"clear()"},{"p":"org.apache.calcite.util.mapping","c":"Mapping","l":"clear()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.IdentityMapping","l":"clear()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.OverridingSourceMapping","l":"clear()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.OverridingTargetMapping","l":"clear()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.PartialMapping","l":"clear()"},{"p":"org.apache.calcite.util","c":"PartiallyOrderedSet","l":"clear()"},{"p":"org.apache.calcite.util","c":"Permutation","l":"clear()"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet.Builder","l":"clear(int)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"clear(int)"},{"p":"org.apache.calcite.util","c":"Unsafe","l":"clear(StringWriter)","u":"clear(java.io.StringWriter)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUtil","l":"clearCache(RelNode)","u":"clearCache(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQueryBase","l":"clearCache(RelNode)","u":"clearCache(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.util","c":"CancelFlag","l":"clearCancel()"},{"p":"org.apache.calcite.rex","c":"RexProgramBuilder","l":"clearCondition()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRelImplementor","l":"clearCorrelVariable(String)","u":"clearCorrelVariable(java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"clearDebugInfo()"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"clearIf(int, boolean)","u":"clearIf(int,boolean)"},{"p":"org.apache.calcite.rex","c":"RexProgramBuilder","l":"clearProjects()"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"clearRelTraitDefs()"},{"p":"org.apache.calcite.plan","c":"RelOptPlanner","l":"clearRelTraitDefs()"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"clearRelTraitDefs()"},{"p":"org.apache.calcite.rel.metadata","c":"JaninoRelMetadataProvider","l":"clearStaticCache()"},{"p":"org.apache.calcite.sql","c":"SqlDialect.DatabaseProduct","l":"CLICKHOUSE"},{"p":"org.apache.calcite.sql.dialect","c":"ClickHouseSqlDialect","l":"ClickHouseSqlDialect(SqlDialect.Context)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect.Context)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.SchemaSpec","l":"CLONE_FOODMART"},{"p":"org.apache.calcite.rel.mutable","c":"Holder","l":"clone()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableAggregate","l":"clone()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableCalc","l":"clone()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableCollect","l":"clone()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableCorrelate","l":"clone()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableExchange","l":"clone()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableFilter","l":"clone()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableIntersect","l":"clone()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableJoin","l":"clone()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableMatch","l":"clone()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableMinus","l":"clone()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableProject","l":"clone()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableRel","l":"clone()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableSample","l":"clone()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableScan","l":"clone()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableSort","l":"clone()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableTableFunctionScan","l":"clone()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableTableModify","l":"clone()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableUncollect","l":"clone()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableUnion","l":"clone()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableValues","l":"clone()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableWindow","l":"clone()"},{"p":"org.apache.calcite.sql","c":"SqlNode","l":"clone()"},{"p":"org.apache.calcite.util","c":"NlsString","l":"clone()"},{"p":"org.apache.calcite.util","c":"Permutation","l":"clone()"},{"p":"org.apache.calcite.sql","c":"SqlNode","l":"clone(E)"},{"p":"org.apache.calcite.rel.core","c":"Window.RexWinAggCall","l":"clone(RelDataType, List<RexNode>)","u":"clone(org.apache.calcite.rel.type.RelDataType,java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexCall","l":"clone(RelDataType, List<RexNode>)","u":"clone(org.apache.calcite.rel.type.RelDataType,java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexOver","l":"clone(RelDataType, List<RexNode>)","u":"clone(org.apache.calcite.rel.type.RelDataType,java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexSubQuery","l":"clone(RelDataType, List<RexNode>)","u":"clone(org.apache.calcite.rel.type.RelDataType,java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexSubQuery","l":"clone(RelNode)","u":"clone(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.sql","c":"SqlBasicCall","l":"clone(SqlParserPos)","u":"clone(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlBinaryStringLiteral","l":"clone(SqlParserPos)","u":"clone(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlCall","l":"clone(SqlParserPos)","u":"clone(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlCharStringLiteral","l":"clone(SqlParserPos)","u":"clone(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlDataTypeSpec","l":"clone(SqlParserPos)","u":"clone(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlDateLiteral","l":"clone(SqlParserPos)","u":"clone(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlDynamicParam","l":"clone(SqlParserPos)","u":"clone(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlIdentifier","l":"clone(SqlParserPos)","u":"clone(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlIntervalLiteral","l":"clone(SqlParserPos)","u":"clone(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlIntervalQualifier","l":"clone(SqlParserPos)","u":"clone(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"clone(SqlParserPos)","u":"clone(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlNode","l":"clone(SqlParserPos)","u":"clone(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"clone(SqlParserPos)","u":"clone(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlNumericLiteral","l":"clone(SqlParserPos)","u":"clone(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlTimeLiteral","l":"clone(SqlParserPos)","u":"clone(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlTimestampLiteral","l":"clone(SqlParserPos)","u":"clone(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlTimestampTzLiteral","l":"clone(SqlParserPos)","u":"clone(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlTimeTzLiteral","l":"clone(SqlParserPos)","u":"clone(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlUnknownLiteral","l":"clone(SqlParserPos)","u":"clone(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlUuidLiteral","l":"clone(SqlParserPos)","u":"clone(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlNode","l":"cloneArray(SqlNode[])","u":"cloneArray(org.apache.calcite.sql.SqlNode[])"},{"p":"org.apache.calcite.rel.mutable","c":"MutableSetOp","l":"cloneChildren()"},{"p":"org.apache.calcite.adapter.clone","c":"CloneSchema","l":"CloneSchema(SchemaPlus)","u":"%3Cinit%3E(org.apache.calcite.schema.SchemaPlus)"},{"p":"org.apache.calcite.jdbc","c":"CalciteStatement","l":"close_()"},{"p":"org.apache.calcite.util","c":"StackWriter","l":"CLOSE_SQL_IDENTIFIER"},{"p":"org.apache.calcite.util","c":"StackWriter","l":"CLOSE_SQL_STRING_LITERAL"},{"p":"org.apache.calcite.adapter.file","c":"CsvEnumerator","l":"close()"},{"p":"org.apache.calcite.adapter.file","c":"FileReader","l":"close()"},{"p":"org.apache.calcite.adapter.file","c":"JsonEnumerator","l":"close()"},{"p":"org.apache.calcite.adapter.geode.simple","c":"GeodeSimpleEnumerator","l":"close()"},{"p":"org.apache.calcite.adapter.kafka","c":"KafkaMessageEnumerator","l":"close()"},{"p":"org.apache.calcite.adapter.os","c":"OsQuery","l":"close()"},{"p":"org.apache.calcite.adapter.redis","c":"RedisJedisManager","l":"close()"},{"p":"org.apache.calcite.adapter.splunk.search","c":"SplunkConnectionImpl.SplunkResultEnumerator","l":"close()"},{"p":"org.apache.calcite.interpreter","c":"MatchNode","l":"close()"},{"p":"org.apache.calcite.interpreter","c":"Interpreter","l":"close()"},{"p":"org.apache.calcite.interpreter","c":"JoinNode","l":"close()"},{"p":"org.apache.calcite.interpreter","c":"Node","l":"close()"},{"p":"org.apache.calcite.interpreter","c":"SetOpNode","l":"close()"},{"p":"org.apache.calcite.interpreter","c":"Source","l":"close()"},{"p":"org.apache.calcite.linq4j","c":"CartesianProductEnumerator","l":"close()"},{"p":"org.apache.calcite.linq4j","c":"DelegatingEnumerator","l":"close()"},{"p":"org.apache.calcite.linq4j","c":"Enumerator","l":"close()"},{"p":"org.apache.calcite.linq4j","c":"MemoryEnumerator","l":"close()"},{"p":"org.apache.calcite.linq4j","c":"TransformedEnumerator","l":"close()"},{"p":"org.apache.calcite.prepare","c":"PlannerImpl","l":"close()"},{"p":"org.apache.calcite.runtime","c":"EnumeratorCursor","l":"close()"},{"p":"org.apache.calcite.runtime","c":"Hook.Closeable","l":"close()"},{"p":"org.apache.calcite.runtime","c":"ObjectEnumeratorCursor","l":"close()"},{"p":"org.apache.calcite.sql.test","c":"AbstractSqlTester","l":"close()"},{"p":"org.apache.calcite.tools","c":"Planner","l":"close()"},{"p":"org.apache.calcite.util","c":"Closer","l":"close()"},{"p":"org.apache.calcite.util","c":"TryThreadLocal.Memo","l":"close()"},{"p":"org.apache.calcite.adapter.geode.util","c":"GeodeUtils","l":"closeClientCache()"},{"p":"org.apache.calcite.util","c":"RangeSets.Consumer","l":"closed(V, V)","u":"closed(V,V)"},{"p":"org.apache.calcite.util","c":"RangeSets.Handler","l":"closed(V, V)","u":"closed(V,V)"},{"p":"org.apache.calcite.util","c":"RangeSets.Consumer","l":"closedOpen(V, V)","u":"closedOpen(V,V)"},{"p":"org.apache.calcite.util","c":"RangeSets.Handler","l":"closedOpen(V, V)","u":"closedOpen(V,V)"},{"p":"org.apache.calcite.util","c":"Closer","l":"Closer()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaImpl","l":"closeStatement(Meta.StatementHandle)","u":"closeStatement(org.apache.calcite.avatica.Meta.StatementHandle)"},{"p":"org.apache.calcite.util","c":"BitSets","l":"closure(SortedMap<Integer, BitSet>)","u":"closure(java.util.SortedMap)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"closure(SortedMap<Integer, ImmutableBitSet>)","u":"closure(java.util.SortedMap)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableRel","l":"cluster"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"cluster"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"cluster"},{"p":"org.apache.calcite.rel","c":"RelFieldCollation.Direction","l":"CLUSTERED"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator","l":"cm"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"Coalesce"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"COALESCE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"COALESCE"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"coalesce(Expression, Expression)","u":"coalesce(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"coalesce(Expression, Expression, LambdaExpression)","u":"coalesce(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.LambdaExpression)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"CODE_POINTS_TO_BYTES"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"CODE_POINTS_TO_BYTES"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"CODE_POINTS_TO_STRING"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"CODE_POINTS_TO_STRING"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeUtils.SpatialType","l":"code()"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"codePointsToBytes(List)","u":"codePointsToBytes(java.util.List)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"codePointsToString(List)","u":"codePointsToString(java.util.List)"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"COERCE_INPUTS"},{"p":"org.apache.calcite.sql.validate.implicit","c":"AbstractTypeCoercion","l":"coerceColumnType(SqlValidatorScope, SqlNodeList, int, RelDataType)","u":"coerceColumnType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNodeList,int,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.rules","c":"CoerceInputsRule","l":"CoerceInputsRule(Class<? extends RelNode>, boolean)","u":"%3Cinit%3E(java.lang.Class,boolean)"},{"p":"org.apache.calcite.rel.rules","c":"CoerceInputsRule","l":"CoerceInputsRule(Class<? extends RelNode>, boolean, RelBuilderFactory)","u":"%3Cinit%3E(java.lang.Class,boolean,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"CoerceInputsRule","l":"CoerceInputsRule(CoerceInputsRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.CoerceInputsRule.Config)"},{"p":"org.apache.calcite.sql.validate.implicit","c":"AbstractTypeCoercion","l":"coerceOperandsType(SqlValidatorScope, SqlCall, RelDataType)","u":"coerceOperandsType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate.implicit","c":"AbstractTypeCoercion","l":"coerceOperandType(SqlValidatorScope, SqlCall, int, RelDataType)","u":"coerceOperandType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,int,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate.implicit","c":"AbstractTypeCoercion","l":"coerceStringToArray(SqlCall, SqlNode, int, RelDataType, RelDataType)","u":"coerceStringToArray(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql","c":"SqlCollation.Coercibility","l":"COERCIBLE"},{"p":"org.apache.calcite.sql","c":"SqlCollation","l":"COERCIBLE"},{"p":"org.apache.calcite.piglet","c":"PigRelBuilder","l":"cogroup(Iterable<? extends RelBuilder.GroupKey>)","u":"cogroup(java.lang.Iterable)"},{"p":"org.apache.calcite.test.schemata.hr","c":"NullableTest","l":"col1"},{"p":"org.apache.calcite.test.schemata.hr","c":"NullableTest","l":"col2"},{"p":"org.apache.calcite.test.schemata.hr","c":"NullableTest","l":"col3"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"collapseExpandedIsNotDistinctFromExpr(RexCall, RexBuilder)","u":"collapseExpandedIsNotDistinctFromExpr(org.apache.calcite.rex.RexCall,org.apache.calcite.rex.RexBuilder)"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"collation"},{"p":"org.apache.calcite.rel.core","c":"Sort","l":"collation"},{"p":"org.apache.calcite.rel.core","c":"SortExchange","l":"collation"},{"p":"org.apache.calcite.rel.mutable","c":"MutableSort","l":"collation"},{"p":"org.apache.calcite.rel","c":"RelRoot","l":"collation"},{"p":"org.apache.calcite.rel.core","c":"Window.Group","l":"collation()"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"collationList"},{"p":"org.apache.calcite.sql","c":"SqlCollation","l":"collationName"},{"p":"org.apache.calcite.prepare","c":"Prepare.PreparedResultImpl","l":"collations"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"COLLATIONS"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Collation","l":"collations()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdCollation","l":"collations(Calc, RelMetadataQuery)","u":"collations(org.apache.calcite.rel.core.Calc,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdCollation","l":"collations(EnumerableCorrelate, RelMetadataQuery)","u":"collations(org.apache.calcite.adapter.enumerable.EnumerableCorrelate,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdCollation","l":"collations(EnumerableHashJoin, RelMetadataQuery)","u":"collations(org.apache.calcite.adapter.enumerable.EnumerableHashJoin,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdCollation","l":"collations(EnumerableLimit, RelMetadataQuery)","u":"collations(org.apache.calcite.adapter.enumerable.EnumerableLimit,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdCollation","l":"collations(EnumerableMergeJoin, RelMetadataQuery)","u":"collations(org.apache.calcite.adapter.enumerable.EnumerableMergeJoin,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdCollation","l":"collations(EnumerableMergeUnion, RelMetadataQuery)","u":"collations(org.apache.calcite.adapter.enumerable.EnumerableMergeUnion,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdCollation","l":"collations(EnumerableNestedLoopJoin, RelMetadataQuery)","u":"collations(org.apache.calcite.adapter.enumerable.EnumerableNestedLoopJoin,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdCollation","l":"collations(Filter, RelMetadataQuery)","u":"collations(org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdCollation","l":"collations(HepRelVertex, RelMetadataQuery)","u":"collations(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdCollation","l":"collations(JdbcToEnumerableConverter, RelMetadataQuery)","u":"collations(org.apache.calcite.adapter.jdbc.JdbcToEnumerableConverter,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdCollation","l":"collations(Match, RelMetadataQuery)","u":"collations(org.apache.calcite.rel.core.Match,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdCollation","l":"collations(Project, RelMetadataQuery)","u":"collations(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"collations(RelNode)","u":"collations(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Collation.Handler","l":"collations(RelNode, RelMetadataQuery)","u":"collations(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdCollation","l":"collations(RelNode, RelMetadataQuery)","u":"collations(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdCollation","l":"collations(RelSubset, RelMetadataQuery)","u":"collations(org.apache.calcite.plan.volcano.RelSubset,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdCollation","l":"collations(Sort, RelMetadataQuery)","u":"collations(org.apache.calcite.rel.core.Sort,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdCollation","l":"collations(SortExchange, RelMetadataQuery)","u":"collations(org.apache.calcite.rel.core.SortExchange,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdCollation","l":"collations(TableModify, RelMetadataQuery)","u":"collations(org.apache.calcite.rel.core.TableModify,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdCollation","l":"collations(TableScan, RelMetadataQuery)","u":"collations(org.apache.calcite.rel.core.TableScan,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdCollation","l":"collations(Values, RelMetadataQuery)","u":"collations(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdCollation","l":"collations(Window, RelMetadataQuery)","u":"collations(org.apache.calcite.rel.core.Window,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbRules.InnodbSortTableScanRule","l":"collationsCompatible(RelCollation, RelCollation)","u":"collationsCompatible(org.apache.calcite.rel.RelCollation,org.apache.calcite.rel.RelCollation)"},{"p":"org.apache.calcite.rel","c":"RelCollations","l":"collationsContainKeysOrderless(List<RelCollation>, List<Integer>)","u":"collationsContainKeysOrderless(java.util.List,java.util.List)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"COLLECT"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"COLLECT"},{"p":"org.apache.calcite.piglet","c":"PigRelBuilder","l":"collect()"},{"p":"org.apache.calcite.rex","c":"RexUtil.SubQueryCollector","l":"collect(Project)","u":"collect(org.apache.calcite.rel.core.Project)"},{"p":"org.apache.calcite.rel.core","c":"Collect","l":"Collect(RelInput)","u":"%3Cinit%3E(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel.core","c":"Collect","l":"Collect(RelOptCluster, RelTraitSet, RelNode, RelDataType)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.core","c":"Collect","l":"Collect(RelOptCluster, RelTraitSet, RelNode, String)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,java.lang.String)"},{"p":"org.apache.calcite.rex","c":"LogicVisitor","l":"collect(RexNode, RexNode, RelOptUtil.Logic, List<RelOptUtil.Logic>)","u":"collect(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,org.apache.calcite.plan.RelOptUtil.Logic,java.util.List)"},{"p":"org.apache.calcite.tools","c":"PigRelBuilder.GroupOption","l":"COLLECTED"},{"p":"org.apache.calcite.rex","c":"RexProgram","l":"collectExplainTerms(String, RelWriter)","u":"collectExplainTerms(java.lang.String,org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.rex","c":"RexProgram","l":"collectExplainTerms(String, RelWriter, SqlExplainLevel)","u":"collectExplainTerms(java.lang.String,org.apache.calcite.rel.RelWriter,org.apache.calcite.sql.SqlExplainLevel)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"collectInsertTargets(SqlInsert, RexNode, List<String>, List<RexNode>)","u":"collectInsertTargets(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rex.RexNode,java.util.List,java.util.List)"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"COLLECTION"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"COLLECTION_ADD"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"COLLECTION_ADDALL"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"COLLECTION_ALL"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeTransforms","l":"COLLECTION_ELEMENT_TYPE_NULLABLE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"COLLECTION_EXISTS"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"COLLECTION_NULLABLE_ALL"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"COLLECTION_NULLABLE_EXISTS"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"COLLECTION_OR_MAP"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"COLLECTION_RETAIN_ALL"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"COLLECTION_SIZE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"COLLECTION_TABLE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"COLLECTION_TABLE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"COLLECTIONS_EMPTY_LIST"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"COLLECTIONS_REVERSE_ORDER"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"COLLECTIONS_SINGLETON_LIST"},{"p":"org.apache.calcite.interpreter","c":"CollectNode","l":"CollectNode(Compiler, Collect)","u":"%3Cinit%3E(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.Collect)"},{"p":"org.apache.calcite.sql","c":"SqlOperatorBinding","l":"collectOperandTypes()"},{"p":"org.apache.calcite.runtime","c":"CollectOperation","l":"CollectOperation()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisor","l":"collectParserError(String, List<SqlAdvisor.ValidateErrorInfo>)","u":"collectParserError(java.lang.String,java.util.List)"},{"p":"org.apache.calcite.plan.volcano","c":"RelSubset","l":"collectVariablesSet(Set<CorrelationId>)","u":"collectVariablesSet(java.util.Set)"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"collectVariablesSet(Set<CorrelationId>)","u":"collectVariablesSet(java.util.Set)"},{"p":"org.apache.calcite.rel","c":"RelNode","l":"collectVariablesSet(Set<CorrelationId>)","u":"collectVariablesSet(java.util.Set)"},{"p":"org.apache.calcite.plan.volcano","c":"RelSubset","l":"collectVariablesUsed(Set<CorrelationId>)","u":"collectVariablesUsed(java.util.Set)"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"collectVariablesUsed(Set<CorrelationId>)","u":"collectVariablesUsed(java.util.Set)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalCalc","l":"collectVariablesUsed(Set<CorrelationId>)","u":"collectVariablesUsed(java.util.Set)"},{"p":"org.apache.calcite.rel","c":"RelNode","l":"collectVariablesUsed(Set<CorrelationId>)","u":"collectVariablesUsed(java.util.Set)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexImpTable","l":"COLON_EXPR"},{"p":"org.apache.calcite.materialize","c":"Lattice.BaseColumn","l":"column"},{"p":"org.apache.calcite.sql.validate","c":"SqlMonikerType","l":"COLUMN"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaImpl","l":"COLUMN_COLUMNS"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"COLUMN_DECL"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"COLUMN_LIST"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFamily","l":"COLUMN_LIST"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"COLUMN_LIST"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"COLUMN_LIST"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"COLUMN_LIST"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"COLUMN_ORIGIN"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"COLUMN_UNIQUENESS"},{"p":"org.apache.calcite.materialize","c":"Lattice.Builder","l":"column(int, int)","u":"column(int,int)"},{"p":"org.apache.calcite.profile","c":"Profiler.Column","l":"Column(int, String)","u":"%3Cinit%3E(int,java.lang.String)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlDdlNodes","l":"column(SqlParserPos, SqlIdentifier, SqlDataTypeSpec, SqlNode, ColumnStrategy)","u":"column(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlDataTypeSpec,org.apache.calcite.sql.SqlNode,org.apache.calcite.schema.ColumnStrategy)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"columnAmbiguous(String)","u":"columnAmbiguous(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"columnCountMismatch()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"columnCountMismatchInSetop(String)","u":"columnCountMismatchInSetop(java.lang.String)"},{"p":"org.apache.calcite.prepare","c":"Prepare.AbstractPreparingTable","l":"columnHasDefaultValue(RelDataType, int, InitializerContext)","u":"columnHasDefaultValue(org.apache.calcite.rel.type.RelDataType,int,org.apache.calcite.sql2rel.InitializerContext)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorTable","l":"columnHasDefaultValue(RelDataType, int, InitializerContext)","u":"columnHasDefaultValue(org.apache.calcite.rel.type.RelDataType,int,org.apache.calcite.sql2rel.InitializerContext)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"columnInUsingNotUnique(String)","u":"columnInUsingNotUnique(java.lang.String)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateMaterializedView","l":"columnList"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateTable","l":"columnList"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateView","l":"columnList"},{"p":"org.apache.calcite.sql","c":"SqlWithItem","l":"columnList"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"columnList"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl.FunctionParamInfo","l":"columnListParamToParentCursorMap"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.AnalyzeViewResult","l":"columnMapping"},{"p":"org.apache.calcite.rel.core","c":"TableFunctionScan","l":"columnMappings"},{"p":"org.apache.calcite.rel.mutable","c":"MutableTableFunctionScan","l":"columnMappings"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"columnNotFound(String)","u":"columnNotFound(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"columnNotFoundDidYouMean(String, String)","u":"columnNotFoundDidYouMean(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"columnNotFoundInTable(String, String)","u":"columnNotFoundInTable(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"columnNotFoundInTableDidYouMean(String, String, String)","u":"columnNotFoundInTableDidYouMean(java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"columnNotNullable(String)","u":"columnNotNullable(java.lang.String)"},{"p":"org.apache.calcite.schema.impl","c":"StarTable","l":"columnOffset(Table)","u":"columnOffset(org.apache.calcite.schema.Table)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator.Config","l":"columnReferenceExpansion()"},{"p":"org.apache.calcite.materialize","c":"Lattice","l":"columns"},{"p":"org.apache.calcite.model","c":"JsonTable","l":"columns"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaImpl","l":"columns(MetaImpl.MetaTable)","u":"columns(org.apache.calcite.avatica.MetaImpl.MetaTable)"},{"p":"org.apache.calcite.prepare","c":"RelOptTableImpl","l":"columnStrategies(RelOptTable)","u":"columnStrategies(org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.test","c":"IntervalTest.Fixture2","l":"columnType(String)","u":"columnType(java.lang.String)"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"columnType(String)","u":"columnType(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"columnTypeMismatchInSetop(int, String)","u":"columnTypeMismatchInSetop(int,java.lang.String)"},{"p":"org.apache.calcite.adapter.innodb","c":"ColumnTypeToSqlTypeConversionRules","l":"ColumnTypeToSqlTypeConversionRules()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.materialize","c":"Lattice","l":"columnUses"},{"p":"org.apache.calcite.util","c":"Util","l":"combine(ArrayList<E>, ArrayList<E>)","u":"combine(java.util.ArrayList,java.util.ArrayList)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet.Builder","l":"combine(ImmutableBitSet.Builder)","u":"combine(org.apache.calcite.util.ImmutableBitSet.Builder)"},{"p":"org.apache.calcite.util","c":"Util","l":"combine(ImmutableList.Builder<E>, ImmutableList.Builder<E>)","u":"combine(com.google.common.collect.ImmutableList.Builder,com.google.common.collect.ImmutableList.Builder)"},{"p":"org.apache.calcite.sql.type","c":"IntervalSqlType","l":"combine(RelDataTypeFactoryImpl, IntervalSqlType)","u":"combine(org.apache.calcite.rel.type.RelDataTypeFactoryImpl,org.apache.calcite.sql.type.IntervalSqlType)"},{"p":"org.apache.calcite.interpreter","c":"Compiler","l":"combinedRowType(List<RelNode>)","u":"combinedRowType(java.util.List)"},{"p":"org.apache.calcite.interpreter","c":"Nodes.CoreCompiler","l":"combinedRowType(List<RelNode>)","u":"combinedRowType(java.util.List)"},{"p":"org.apache.calcite.sql","c":"SqlIntervalQualifier","l":"combineFractionalSecondPrecisionPreservingDefault(RelDataTypeSystem, SqlIntervalQualifier, SqlIntervalQualifier)","u":"combineFractionalSecondPrecisionPreservingDefault(org.apache.calcite.rel.type.RelDataTypeSystem,org.apache.calcite.sql.SqlIntervalQualifier,org.apache.calcite.sql.SqlIntervalQualifier)"},{"p":"org.apache.calcite.sql","c":"SqlIntervalQualifier","l":"combineStartPrecisionPreservingDefault(RelDataTypeSystem, SqlIntervalQualifier, SqlIntervalQualifier)","u":"combineStartPrecisionPreservingDefault(org.apache.calcite.rel.type.RelDataTypeSystem,org.apache.calcite.sql.SqlIntervalQualifier,org.apache.calcite.sql.SqlIntervalQualifier)"},{"p":"org.apache.calcite.sql","c":"JoinType","l":"COMMA"},{"p":"org.apache.calcite.sql","c":"SqlWriter","l":"COMMA"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeSchemaFactory","l":"COMMA_DELIMITER"},{"p":"org.apache.calcite.adapter.geode.simple","c":"GeodeSimpleSchemaFactory","l":"COMMA_DELIMITER"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexImpTable","l":"COMMA_EXPR"},{"p":"org.apache.calcite.util","c":"Util","l":"commaList(List<T>)","u":"commaList(java.util.List)"},{"p":"org.apache.calcite.util","c":"Glossary","l":"COMMAND_PATTERN"},{"p":"org.apache.calcite.test.schemata.hr","c":"Employee","l":"commission"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"COMMIT"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaImpl","l":"commit(Meta.ConnectionHandle)","u":"commit(org.apache.calcite.avatica.Meta.ConnectionHandle)"},{"p":"org.apache.calcite.plan","c":"CommonRelSubExprRule","l":"CommonRelSubExprRule(CommonRelSubExprRule.Config)","u":"%3Cinit%3E(org.apache.calcite.plan.CommonRelSubExprRule.Config)"},{"p":"org.apache.calcite.sql.validate.implicit","c":"AbstractTypeCoercion","l":"commonTypeForBinaryComparison(RelDataType, RelDataType)","u":"commonTypeForBinaryComparison(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate.implicit","c":"TypeCoercion","l":"commonTypeForBinaryComparison(RelDataType, RelDataType)","u":"commonTypeForBinaryComparison(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate.implicit","c":"TypeCoercionImpl","l":"commonTypeForComparison(List<RelDataType>)","u":"commonTypeForComparison(java.util.List)"},{"p":"org.apache.calcite.config","c":"CalciteSystemProperty","l":"COMMUTE"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"compact(List)","u":"compact(java.util.List)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"COMPARABLE_EMPTY_LIST"},{"p":"org.apache.calcite.runtime","c":"FlatLists","l":"COMPARABLE_EMPTY_LIST"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"COMPARABLE_ORDERED"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"COMPARABLE_ORDERED_COMPARABLE_ORDERED"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"COMPARABLE_UNORDERED_COMPARABLE_UNORDERED"},{"p":"org.apache.calcite.sql.type","c":"ComparableOperandTypeChecker","l":"ComparableOperandTypeChecker(int, RelDataTypeComparability)","u":"%3Cinit%3E(int,org.apache.calcite.rel.type.RelDataTypeComparability)"},{"p":"org.apache.calcite.sql.type","c":"ComparableOperandTypeChecker","l":"ComparableOperandTypeChecker(int, RelDataTypeComparability, SqlOperandTypeChecker.Consistency)","u":"%3Cinit%3E(int,org.apache.calcite.rel.type.RelDataTypeComparability,org.apache.calcite.sql.type.SqlOperandTypeChecker.Consistency)"},{"p":"org.apache.calcite.rel","c":"RelNodes","l":"COMPARATOR"},{"p":"org.apache.calcite.sql.validate","c":"SqlMoniker","l":"COMPARATOR"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"COMPARATOR"},{"p":"org.apache.calcite.util","c":"NameSet","l":"COMPARATOR"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"COMPARATOR_COMPARE"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdCollation","l":"comparator(RelFieldCollation)","u":"comparator(org.apache.calcite.rel.RelFieldCollation)"},{"p":"org.apache.calcite.sql.type","c":"SqlOperandTypeChecker.Consistency","l":"COMPARE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"COMPARE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"COMPARE_NULLS_FIRST"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"COMPARE_NULLS_FIRST2"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"COMPARE_NULLS_LAST"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"COMPARE_NULLS_LAST2"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"COMPARE_TO"},{"p":"org.apache.calcite.runtime","c":"Utilities","l":"compare(boolean, boolean)","u":"compare(boolean,boolean)"},{"p":"org.apache.calcite.runtime","c":"Utilities","l":"compare(byte, byte)","u":"compare(byte,byte)"},{"p":"org.apache.calcite.runtime","c":"Utilities","l":"compare(char, char)","u":"compare(char,char)"},{"p":"org.apache.calcite.runtime","c":"Utilities","l":"compare(Comparable, Comparable)","u":"compare(java.lang.Comparable,java.lang.Comparable)"},{"p":"org.apache.calcite.runtime","c":"Utilities","l":"compare(Comparable, Comparable, Comparator)","u":"compare(java.lang.Comparable,java.lang.Comparable,java.util.Comparator)"},{"p":"org.apache.calcite.rel","c":"RelFieldCollation","l":"compare(Comparable, Comparable, int)","u":"compare(java.lang.Comparable,java.lang.Comparable,int)"},{"p":"org.apache.calcite.runtime","c":"Utilities","l":"compare(double, double)","u":"compare(double,double)"},{"p":"org.apache.calcite.runtime","c":"Utilities","l":"compare(float, float)","u":"compare(float,float)"},{"p":"org.apache.calcite.runtime","c":"Utilities","l":"compare(int, int)","u":"compare(int,int)"},{"p":"org.apache.calcite.runtime","c":"Utilities","l":"compare(List, List)","u":"compare(java.util.List,java.util.List)"},{"p":"org.apache.calcite.runtime","c":"Utilities","l":"compare(long, long)","u":"compare(long,long)"},{"p":"org.apache.calcite.runtime","c":"ArrayComparator","l":"compare(Object[], Object[])","u":"compare(java.lang.Object[],java.lang.Object[])"},{"p":"org.apache.calcite.util","c":"RangeSets","l":"compare(Range<C>, Range<C>)","u":"compare(com.google.common.collect.Range,com.google.common.collect.Range)"},{"p":"org.apache.calcite.util","c":"RangeSets","l":"compare(RangeSet<C>, RangeSet<C>)","u":"compare(com.google.common.collect.RangeSet,com.google.common.collect.RangeSet)"},{"p":"org.apache.calcite.runtime","c":"Utilities","l":"compare(short, short)","u":"compare(short,short)"},{"p":"org.apache.calcite.runtime","c":"SpaceFillingCurve2D.IndexRangeOrdering","l":"compare(SpaceFillingCurve2D.IndexRange, SpaceFillingCurve2D.IndexRange)","u":"compare(org.apache.calcite.runtime.SpaceFillingCurve2D.IndexRange,org.apache.calcite.runtime.SpaceFillingCurve2D.IndexRange)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserFixture","l":"compare(String)","u":"compare(java.lang.String)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"COMPARE2"},{"p":"org.apache.calcite.linq4j.function","c":"Functions","l":"compareLists(List<?>, List<?>)","u":"compareLists(java.util.List,java.util.List)"},{"p":"org.apache.calcite.runtime","c":"Utilities","l":"compareNullsFirst(Comparable, Comparable)","u":"compareNullsFirst(java.lang.Comparable,java.lang.Comparable)"},{"p":"org.apache.calcite.runtime","c":"Utilities","l":"compareNullsFirst(Comparable, Comparable, Comparator)","u":"compareNullsFirst(java.lang.Comparable,java.lang.Comparable,java.util.Comparator)"},{"p":"org.apache.calcite.runtime","c":"Utilities","l":"compareNullsLast(Comparable, Comparable)","u":"compareNullsLast(java.lang.Comparable,java.lang.Comparable)"},{"p":"org.apache.calcite.runtime","c":"Utilities","l":"compareNullsLast(Comparable, Comparable, Comparator)","u":"compareNullsLast(java.lang.Comparable,java.lang.Comparable,java.util.Comparator)"},{"p":"org.apache.calcite.runtime","c":"Utilities","l":"compareNullsLast(List, List)","u":"compareNullsLast(java.util.List,java.util.List)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"compareNullsLastForMergeJoin(Comparable, Comparable)","u":"compareNullsLastForMergeJoin(java.lang.Comparable,java.lang.Comparable)"},{"p":"org.apache.calcite.runtime","c":"Utilities","l":"compareNullsLastForMergeJoin(Comparable, Comparable)","u":"compareNullsLastForMergeJoin(java.lang.Comparable,java.lang.Comparable)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"compareNullsLastForMergeJoin(Comparable, Comparable, Comparator)","u":"compareNullsLastForMergeJoin(java.lang.Comparable,java.lang.Comparable,java.util.Comparator)"},{"p":"org.apache.calcite.runtime","c":"Utilities","l":"compareNullsLastForMergeJoin(Comparable, Comparable, Comparator)","u":"compareNullsLastForMergeJoin(java.lang.Comparable,java.lang.Comparable,java.util.Comparator)"},{"p":"org.apache.calcite.linq4j.function","c":"Functions","l":"compareObjectArrays(Object[], Object[])","u":"compareObjectArrays(java.lang.Object[],java.lang.Object[])"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"comparePrecision(int, int)","u":"comparePrecision(int,int)"},{"p":"org.apache.calcite.adapter.enumerable","c":"JavaRowFormat","l":"comparer()"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysType","l":"comparer()"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysTypeImpl","l":"comparer()"},{"p":"org.apache.calcite.rel","c":"RelNodes","l":"compareRels(RelNode[], RelNode[])","u":"compareRels(org.apache.calcite.rel.RelNode[],org.apache.calcite.rel.RelNode[])"},{"p":"org.apache.calcite.adapter.enumerable.impl","c":"WinAggResultContextImpl","l":"compareRows(Expression, Expression)","u":"compareRows(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.adapter.enumerable","c":"WinAggFrameResultContext","l":"compareRows(Expression, Expression)","u":"compareRows(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.CompareStringsOrNumericValues","l":"CompareStringsOrNumericValues()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.core","c":"CorrelationId","l":"compareTo(CorrelationId)","u":"compareTo(org.apache.calcite.rel.core.CorrelationId)"},{"p":"org.apache.calcite.util","c":"DateString","l":"compareTo(DateString)","u":"compareTo(org.apache.calcite.util.DateString)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"compareTo(ImmutableBitSet)","u":"compareTo(org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.materialize","c":"Lattice.Column","l":"compareTo(Lattice.Column)","u":"compareTo(org.apache.calcite.materialize.Lattice.Column)"},{"p":"org.apache.calcite.materialize","c":"Lattice.Measure","l":"compareTo(Lattice.Measure)","u":"compareTo(org.apache.calcite.materialize.Lattice.Measure)"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat1List","l":"compareTo(List)","u":"compareTo(java.util.List)"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat2List","l":"compareTo(List)","u":"compareTo(java.util.List)"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat3List","l":"compareTo(List)","u":"compareTo(java.util.List)"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat4List","l":"compareTo(List)","u":"compareTo(java.util.List)"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat5List","l":"compareTo(List)","u":"compareTo(java.util.List)"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat6List","l":"compareTo(List)","u":"compareTo(java.util.List)"},{"p":"org.apache.calcite.rel.core","c":"Match.RexMRAggCall","l":"compareTo(Match.RexMRAggCall)","u":"compareTo(org.apache.calcite.rel.core.Match.RexMRAggCall)"},{"p":"org.apache.calcite.util","c":"NlsString","l":"compareTo(NlsString)","u":"compareTo(org.apache.calcite.util.NlsString)"},{"p":"org.apache.calcite.util","c":"Pair","l":"compareTo(Pair<T1, T2>)","u":"compareTo(org.apache.calcite.util.Pair)"},{"p":"org.apache.calcite.profile","c":"Profiler.Column","l":"compareTo(Profiler.Column)","u":"compareTo(org.apache.calcite.profile.Profiler.Column)"},{"p":"org.apache.calcite.rel","c":"RelCollationImpl","l":"compareTo(RelMultipleTrait)","u":"compareTo(org.apache.calcite.plan.RelMultipleTrait)"},{"p":"org.apache.calcite.rex","c":"RexTableInputRef.RelTableRef","l":"compareTo(RexTableInputRef.RelTableRef)","u":"compareTo(org.apache.calcite.rex.RexTableInputRef.RelTableRef)"},{"p":"org.apache.calcite.util","c":"Sarg","l":"compareTo(Sarg<C>)","u":"compareTo(org.apache.calcite.util.Sarg)"},{"p":"org.apache.calcite.util","c":"TimestampString","l":"compareTo(TimestampString)","u":"compareTo(org.apache.calcite.util.TimestampString)"},{"p":"org.apache.calcite.util","c":"TimestampWithTimeZoneString","l":"compareTo(TimestampWithTimeZoneString)","u":"compareTo(org.apache.calcite.util.TimestampWithTimeZoneString)"},{"p":"org.apache.calcite.util","c":"TimeString","l":"compareTo(TimeString)","u":"compareTo(org.apache.calcite.util.TimeString)"},{"p":"org.apache.calcite.util","c":"TimeWithTimeZoneString","l":"compareTo(TimeWithTimeZoneString)","u":"compareTo(org.apache.calcite.util.TimeWithTimeZoneString)"},{"p":"org.apache.calcite.runtime","c":"Unit","l":"compareTo(Unit)","u":"compareTo(org.apache.calcite.runtime.Unit)"},{"p":"org.apache.calcite.util","c":"Version","l":"compareTo(Version)","u":"compareTo(org.apache.calcite.util.Version)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypePrecedenceList","l":"compareTypePrecedence(RelDataType, RelDataType)","u":"compareTypePrecedence(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeExplicitPrecedenceList","l":"compareTypePrecedence(RelDataType, RelDataType)","u":"compareTypePrecedence(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"COMPARISON"},{"p":"org.apache.calcite.sql.fun","c":"SqlQuantifyOperator","l":"comparisonKind"},{"p":"org.apache.calcite.schema.lookup","c":"CompatibilityLookup","l":"CompatibilityLookup(Function<String, T>, Supplier<Set<String>>)","u":"%3Cinit%3E(java.util.function.Function,java.util.function.Supplier)"},{"p":"org.apache.calcite.piglet","c":"PigRelBuilder","l":"compatibleType(RelDataType, RelDataType)","u":"compatibleType(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"compatibleTypes(List<RexNode>, RelDataType, Litmus)","u":"compatibleTypes(java.util.List,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule","l":"compensatePartial(Set<RexTableInputRef.RelTableRef>, MaterializedViewRule.EquivalenceClasses, Set<RexTableInputRef.RelTableRef>, Multimap<RexTableInputRef, RexTableInputRef>)","u":"compensatePartial(java.util.Set,org.apache.calcite.rel.rules.materialize.MaterializedViewRule.EquivalenceClasses,java.util.Set,com.google.common.collect.Multimap)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewAggregateRule","l":"compensateViewPartial(RelBuilder, RexBuilder, RelMetadataQuery, RelNode, Project, RelNode, Set<RexTableInputRef.RelTableRef>, MaterializedViewRule.EquivalenceClasses, Project, RelNode, Set<RexTableInputRef.RelTableRef>)","u":"compensateViewPartial(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set,org.apache.calcite.rel.rules.materialize.MaterializedViewRule.EquivalenceClasses,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewJoinRule","l":"compensateViewPartial(RelBuilder, RexBuilder, RelMetadataQuery, RelNode, Project, RelNode, Set<RexTableInputRef.RelTableRef>, MaterializedViewRule.EquivalenceClasses, Project, RelNode, Set<RexTableInputRef.RelTableRef>)","u":"compensateViewPartial(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set,org.apache.calcite.rel.rules.materialize.MaterializedViewRule.EquivalenceClasses,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule","l":"compensateViewPartial(RelBuilder, RexBuilder, RelMetadataQuery, RelNode, Project, RelNode, Set<RexTableInputRef.RelTableRef>, MaterializedViewRule.EquivalenceClasses, Project, RelNode, Set<RexTableInputRef.RelTableRef>)","u":"compensateViewPartial(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set,org.apache.calcite.rel.rules.materialize.MaterializedViewRule.EquivalenceClasses,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set)"},{"p":"org.apache.calcite.linq4j.tree","c":"FunctionExpression","l":"compile()"},{"p":"org.apache.calcite.util.javac","c":"JaninoCompiler","l":"compile()"},{"p":"org.apache.calcite.util.javac","c":"JavaCompiler","l":"compile()"},{"p":"org.apache.calcite.adapter.spark","c":"SparkHandlerImpl","l":"compile(ClassDeclaration, String)","u":"compile(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.SparkHandler","l":"compile(ClassDeclaration, String)","u":"compile(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)"},{"p":"org.apache.calcite.interpreter","c":"Compiler","l":"compile(List<RexNode>, RelDataType)","u":"compile(java.util.List,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.interpreter","c":"Nodes.CoreCompiler","l":"compile(List<RexNode>, RelDataType)","u":"compile(java.util.List,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.interpreter","c":"JaninoRexCompiler","l":"compile(List<RexNode>, RelDataType)","u":"compile(java.util.List,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.util.format.postgresql","c":"CompiledDateTimeFormat","l":"CompiledDateTimeFormat(ImmutableList<CompiledItem>)","u":"%3Cinit%3E(com.google.common.collect.ImmutableList)"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"CompiledPattern","l":"CompiledPattern(ChronoUnitEnum, Set<PatternModifier>)","u":"%3Cinit%3E(org.apache.calcite.util.format.postgresql.ChronoUnitEnum,java.util.Set)"},{"p":"org.apache.calcite.util.format.postgresql","c":"PostgresqlDateTimeFormatter","l":"compilePattern(String)","u":"compilePattern(java.lang.String)"},{"p":"org.apache.calcite.util.format.postgresql.format","c":"FormatPattern","l":"compilePattern(String, ParsePosition)","u":"compilePattern(java.lang.String,java.text.ParsePosition)"},{"p":"org.apache.calcite.interpreter","c":"InterpretableRel.InterpreterImplementor","l":"compiler"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule.MatchModality","l":"COMPLETE"},{"p":"org.apache.calcite.adapter.druid","c":"DruidType","l":"COMPLEX"},{"p":"org.apache.calcite.util","c":"Sarg","l":"complexity()"},{"p":"org.apache.calcite.adapter.druid","c":"ComplexMetric","l":"ComplexMetric(String, DruidType)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.adapter.druid.DruidType)"},{"p":"org.apache.calcite.adapter.java","c":"Array","l":"component()"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysType","l":"component(int)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysTypeImpl","l":"component(int)"},{"p":"org.apache.calcite.adapter.java","c":"Array","l":"componentIsNullable()"},{"p":"org.apache.calcite.linq4j.tree","c":"Types.ArrayType","l":"componentIsNullable()"},{"p":"org.apache.calcite.sql.test","c":"SqlTests.Stage","l":"componentName"},{"p":"org.apache.calcite.sql","c":"SqlIdentifier","l":"componentPositions"},{"p":"org.apache.calcite.test","c":"Matchers","l":"compose(Matcher<T>, Function<F, T>)","u":"compose(org.hamcrest.Matcher,java.util.function.Function)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"composeConjunction(RexBuilder, Iterable<? extends RexNode>)","u":"composeConjunction(org.apache.calcite.rex.RexBuilder,java.lang.Iterable)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"composeConjunction(RexBuilder, Iterable<? extends RexNode>, boolean)","u":"composeConjunction(org.apache.calcite.rex.RexBuilder,java.lang.Iterable,boolean)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"composeDisjunction(RexBuilder, Iterable<? extends RexNode>)","u":"composeDisjunction(org.apache.calcite.rex.RexBuilder,java.lang.Iterable)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"composeDisjunction(RexBuilder, Iterable<? extends RexNode>, boolean)","u":"composeDisjunction(org.apache.calcite.rex.RexBuilder,java.lang.Iterable,boolean)"},{"p":"org.apache.calcite.util","c":"Glossary","l":"COMPOSITE_PATTERN"},{"p":"org.apache.calcite.util.format","c":"FormatModels","l":"compositeElement(String, FormatElement...)","u":"compositeElement(java.lang.String,org.apache.calcite.util.format.FormatElement...)"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.CompositeFunction","l":"CompositeFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util","c":"CompositeMap","l":"CompositeMap(ImmutableList<Map<K, V>>)","u":"%3Cinit%3E(com.google.common.collect.ImmutableList)"},{"p":"org.apache.calcite.sql.type","c":"CompositeOperandTypeChecker","l":"CompositeOperandTypeChecker(CompositeOperandTypeChecker.Composition, ImmutableList<? extends SqlOperandTypeChecker>, String, BiFunction<SqlOperator, String, String>, SqlOperandCountRange)","u":"%3Cinit%3E(org.apache.calcite.sql.type.CompositeOperandTypeChecker.Composition,com.google.common.collect.ImmutableList,java.lang.String,java.util.function.BiFunction,org.apache.calcite.sql.SqlOperandCountRange)"},{"p":"org.apache.calcite.sql.type","c":"CompositeOperandTypeChecker","l":"composition"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"compoundOrderByProhibitsRange()"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"COMPRESS"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"COMPRESS"},{"p":"org.apache.calcite.runtime","c":"CompressionFunctions","l":"compress(String)","u":"compress(java.lang.String)"},{"p":"org.apache.calcite.plan","c":"RelTraitSet","l":"comprises(RelTrait...)","u":"comprises(org.apache.calcite.plan.RelTrait...)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule","l":"computeCompensationPredicates(RexBuilder, RexSimplify, MaterializedViewRule.EquivalenceClasses, Pair<RexNode, RexNode>, MaterializedViewRule.EquivalenceClasses, Pair<RexNode, RexNode>, BiMap<RexTableInputRef.RelTableRef, RexTableInputRef.RelTableRef>)","u":"computeCompensationPredicates(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.rules.materialize.MaterializedViewRule.EquivalenceClasses,org.apache.calcite.util.Pair,org.apache.calcite.rel.rules.materialize.MaterializedViewRule.EquivalenceClasses,org.apache.calcite.util.Pair,com.google.common.collect.BiMap)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeImpl","l":"computeDigest()"},{"p":"org.apache.calcite.rex","c":"RexCall","l":"computeDigest(boolean)"},{"p":"org.apache.calcite.rex","c":"RexOver","l":"computeDigest(boolean)"},{"p":"org.apache.calcite.rex","c":"RexSubQuery","l":"computeDigest(boolean)"},{"p":"org.apache.calcite.rex","c":"RexLiteral","l":"computeDigest(RexDigestIncludeType)","u":"computeDigest(org.apache.calcite.rex.RexDigestIncludeType)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery","l":"computeDruidJsonAgg(List<AggregateCall>, List<String>, Project, DruidQuery)","u":"computeDruidJsonAgg(java.util.List,java.util.List,org.apache.calcite.rel.core.Project,org.apache.calcite.adapter.druid.DruidQuery)"},{"p":"org.apache.calcite.adapter.enumerable.impl","c":"WinAggResultContextImpl","l":"computeIndex(Expression, WinAggImplementor.SeekType)","u":"computeIndex(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.WinAggImplementor.SeekType)"},{"p":"org.apache.calcite.adapter.enumerable","c":"WinAggFrameResultContext","l":"computeIndex(Expression, WinAggImplementor.SeekType)","u":"computeIndex(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.WinAggImplementor.SeekType)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery","l":"computeProjectAsScan(Project, RelDataType, DruidQuery)","u":"computeProjectAsScan(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.druid.DruidQuery)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery","l":"computeProjectGroupSet(Project, ImmutableBitSet, RelDataType, DruidQuery)","u":"computeProjectGroupSet(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.druid.DruidQuery)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraFilter","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraLimit","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraProject","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraSort","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraToEnumerableConverter","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.csv","c":"CsvTableScan","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchAggregate","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchFilter","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchProject","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchSort","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchTableScan","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchToEnumerableConverter","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableAsofJoin","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableBatchNestedLoopJoin","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableHashJoin","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableInterpreter","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableMergeJoin","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableNestedLoopJoin","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableWindow","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.file","c":"CsvTableScan","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeAggregate","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeFilter","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeProject","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeSort","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeToEnumerableConverter","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbFilter","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbProject","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbSort","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbToEnumerableConverter","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcCalc","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcJoin","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcProject","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcSort","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcTableModify","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcUnion","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcToEnumerableConverter","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoFilter","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoProject","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoSort","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoTableScan","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoToEnumerableConverter","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.spark","c":"EnumerableToSparkConverter","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.spark","c":"JdbcToSparkConverter","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.spark","c":"SparkRules.SparkCalc","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.spark","c":"SparkToEnumerableConverter","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableTableScan","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableWindow","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.plan.hep","c":"HepRelVertex","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.plan.volcano","c":"AbstractConverter","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.plan.volcano","c":"RelSubset","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.convert","c":"ConverterImpl","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.core","c":"Aggregate","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.core","c":"Calc","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.core","c":"Correlate","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.core","c":"Exchange","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.core","c":"Filter","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.core","c":"Join","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.core","c":"Project","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.core","c":"Sort","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.core","c":"TableModify","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.core","c":"TableScan","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.core","c":"Values","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.core","c":"Window","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalTableFunctionScan","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel","c":"RelNode","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.schema.impl","c":"StarTable.StarTableScan","l":"computeSelfCost(RelOptPlanner, RelMetadataQuery)","u":"computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUtil","l":"computeSemiJoinSelectivity(RelMetadataQuery, RelNode, RelNode, Join)","u":"computeSemiJoinSelectivity(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Join)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUtil","l":"computeSemiJoinSelectivity(RelMetadataQuery, RelNode, RelNode, List<Integer>, List<Integer>)","u":"computeSemiJoinSelectivity(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List,java.util.List)"},{"p":"org.apache.calcite.materialize","c":"Lattice","l":"computeTiles()"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"CONCAT"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"CONCAT"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"CONCAT_FUNCTION"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"CONCAT_FUNCTION_WITH_NULL"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"CONCAT_WITH_NULL"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"CONCAT_WS"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"CONCAT_WS_MSSQL"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"CONCAT_WS_MSSQL"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"CONCAT_WS_POSTGRESQL"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"CONCAT_WS_POSTGRESQL"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"CONCAT_WS_SPARK"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"CONCAT_WS_SPARK"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"concat(ByteString, ByteString)","u":"concat(org.apache.calcite.avatica.util.ByteString,org.apache.calcite.avatica.util.ByteString)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"concat(Enumerable<T>)","u":"concat(org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"concat(Enumerable<T>)","u":"concat(org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"concat(Enumerable<T>)","u":"concat(org.apache.calcite.linq4j.Enumerable)"},{"p":"","c":"","l":"concat(Enumerable<TSource>)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"concat(Enumerable<TSource>)","u":"concat(org.apache.calcite.linq4j.Enumerable)"},{"p":"","c":"","l":"concat(Enumerable<TSource>)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"concat(Enumerable<TSource>, Enumerable<TSource>)","u":"concat(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.util","c":"BitString","l":"concat(List<BitString>)","u":"concat(java.util.List)"},{"p":"org.apache.calcite.linq4j","c":"Linq4j","l":"concat(List<Enumerable<E>>)","u":"concat(java.util.List)"},{"p":"org.apache.calcite.util","c":"NlsString","l":"concat(List<NlsString>)","u":"concat(java.util.List)"},{"p":"org.apache.calcite.schema.lookup","c":"Lookup","l":"concat(Lookup<T>...)","u":"concat(org.apache.calcite.schema.lookup.Lookup...)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"concat(Queryable<T>, Enumerable<T>)","u":"concat(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"concat(Queryable<T>, Enumerable<T>)","u":"concat(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"concat(Queryable<T>, Enumerable<T>)","u":"concat(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"concat(String, String)","u":"concat(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlBinaryStringLiteral","l":"concat1(List<SqlLiteral>)","u":"concat1(java.util.List)"},{"p":"org.apache.calcite.sql","c":"SqlCharStringLiteral","l":"concat1(List<SqlLiteral>)","u":"concat1(java.util.List)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"CONCAT2"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"CONCAT2"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"concatenateLiterals(List<SqlLiteral>)","u":"concatenateLiterals(java.util.List)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings","l":"concatenateMappings(List<Mapping>)","u":"concatenateMappings(java.util.List)"},{"p":"org.apache.calcite.sql.fun","c":"SqlLiteralChainOperator","l":"concatenateOperands(SqlCall)","u":"concatenateOperands(org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"concatMulti(String...)","u":"concatMulti(java.lang.String...)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"concatMultiObjectWithSeparator(String, Object...)","u":"concatMultiObjectWithSeparator(java.lang.String,java.lang.Object...)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"concatMultiTypeWithSeparator(String, Object...)","u":"concatMultiTypeWithSeparator(java.lang.String,java.lang.Object...)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"concatMultiWithNull(String...)","u":"concatMultiWithNull(java.lang.String...)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"concatMultiWithSeparator(String...)","u":"concatMultiWithSeparator(java.lang.String...)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"concatWithNull(String, String)","u":"concatWithNull(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"ForStatement","l":"condition"},{"p":"org.apache.calcite.linq4j.tree","c":"WhileStatement","l":"condition"},{"p":"org.apache.calcite.rel.core","c":"Filter","l":"condition"},{"p":"org.apache.calcite.rel.core","c":"Join","l":"condition"},{"p":"org.apache.calcite.rel.mutable","c":"MutableFilter","l":"condition"},{"p":"org.apache.calcite.rel.mutable","c":"MutableJoin","l":"condition"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"condition(Expression, Expression, Expression)","u":"condition(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"condition(Expression, Expression, Expression, Type)","u":"condition(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"Conditional"},{"p":"org.apache.calcite.tools","c":"Programs","l":"conditional(Predicate<RelNode>, Program)","u":"conditional(java.util.function.Predicate,org.apache.calcite.tools.Program)"},{"p":"org.apache.calcite.linq4j.tree","c":"ConditionalExpression","l":"ConditionalExpression(List<Node>, Type)","u":"%3Cinit%3E(java.util.List,java.lang.reflect.Type)"},{"p":"org.apache.calcite.linq4j.tree","c":"ConditionalStatement","l":"ConditionalStatement(List<Node>)","u":"%3Cinit%3E(java.util.List)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"condMustBeBoolean(String)","u":"condMustBeBoolean(java.lang.String)"},{"p":"org.apache.calcite.plan","c":"RelRule","l":"config"},{"p":"org.apache.calcite.prepare","c":"CalciteCatalogReader","l":"config"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"config"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"CONFIG"},{"p":"org.apache.calcite.jdbc","c":"CalciteConnection","l":"config()"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.Context","l":"config()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser","l":"config()"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"config()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"config()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"config()"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"config()"},{"p":"org.apache.calcite.tools","c":"Hoist","l":"config()"},{"p":"org.apache.calcite.rel.convert","c":"TraitMatchingRule","l":"config(ConverterRule, RelBuilderFactory)","u":"config(org.apache.calcite.rel.convert.ConverterRule,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser","l":"configBuilder()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser","l":"configBuilder(SqlParser.Config)","u":"configBuilder(org.apache.calcite.sql.parser.SqlParser.Config)"},{"p":"org.apache.calcite.sql.dialect","c":"BigQuerySqlDialect","l":"configureParser(SqlParser.Config)","u":"configureParser(org.apache.calcite.sql.parser.SqlParser.Config)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"configureParser(SqlParser.Config)","u":"configureParser(org.apache.calcite.sql.parser.SqlParser.Config)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"configureParser(SqlParser.ConfigBuilder)","u":"configureParser(org.apache.calcite.sql.parser.SqlParser.ConfigBuilder)"},{"p":"org.apache.calcite.config","c":"CalciteConnectionProperty","l":"CONFORMANCE"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfig","l":"conformance()"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfigImpl","l":"conformance()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser.Config","l":"conformance()"},{"p":"org.apache.calcite.sql","c":"SqlDialect.Context","l":"conformance()"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"conformance()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator.Config","l":"conformance()"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"conformance()"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"conjunctions(RexNode)","u":"conjunctions(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.jdbc","c":"Driver","l":"CONNECT_STRING_PREFIX"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertThat","l":"connect()"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaImpl","l":"connect(CalciteSchema, JavaTypeFactory)","u":"connect(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.adapter.java.JavaTypeFactory)"},{"p":"org.apache.calcite.test","c":"QuidemTest.QuidemConnectionFactory","l":"connect(String)","u":"connect(java.lang.String)"},{"p":"org.apache.calcite.chinook","c":"ConnectionFactory","l":"connect(String, boolean)","u":"connect(java.lang.String,boolean)"},{"p":"org.apache.calcite.test","c":"QuidemTest.QuidemConnectionFactory","l":"connect(String, boolean)","u":"connect(java.lang.String,boolean)"},{"p":"org.apache.calcite.adapter.splunk","c":"SplunkDriver","l":"connect(String, Properties)","u":"connect(java.lang.String,java.util.Properties)"},{"p":"org.apache.calcite.rel.rules","c":"HyperGraph","l":"connectCsgCmp(long, long)","u":"connectCsgCmp(long,long)"},{"p":"org.apache.calcite.chinook","c":"CalciteConnectionProvider","l":"connection()"},{"p":"org.apache.calcite.chinook","c":"ConnectionFactory.DatabaseWrapper","l":"connection()"},{"p":"org.apache.calcite.sql.test","c":"SqlTestFactory","l":"connectionFactory"},{"p":"org.apache.calcite.chinook","c":"ConnectionFactory","l":"ConnectionFactory()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.test","c":"ConnectionSpec","l":"ConnectionSpec(String, String, String, String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertThat","l":"connectThrows(Consumer<Throwable>)","u":"connectThrows(java.util.function.Consumer)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertThat","l":"connectThrows(String)","u":"connectThrows(java.lang.String)"},{"p":"org.apache.calcite.util","c":"Static","l":"cons(E, List<? extends E>)","u":"cons(E,java.util.List)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"Constant"},{"p":"org.apache.calcite.sql.validate","c":"SqlMonotonicity","l":"CONSTANT"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"constant(Object)","u":"constant(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"constant(Object, Type)","u":"constant(java.lang.Object,java.lang.reflect.Type)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"constant(Object, Type, RoundingMode)","u":"constant(java.lang.Object,java.lang.reflect.Type,java.math.RoundingMode)"},{"p":"org.apache.calcite.linq4j.function","c":"Functions","l":"constant(R)"},{"p":"org.apache.calcite.sql","c":"SqlStaticAggFunction","l":"constant(RexBuilder, ImmutableBitSet, ImmutableList<ImmutableBitSet>, AggregateCall)","u":"constant(org.apache.calcite.rex.RexBuilder,org.apache.calcite.util.ImmutableBitSet,com.google.common.collect.ImmutableList,org.apache.calcite.rel.core.AggregateCall)"},{"p":"org.apache.calcite.linq4j.tree","c":"ConstantExpression","l":"ConstantExpression(Type, Object)","u":"%3Cinit%3E(java.lang.reflect.Type,java.lang.Object)"},{"p":"org.apache.calcite.plan","c":"RelOptPredicateList","l":"constantMap"},{"p":"org.apache.calcite.linq4j.function","c":"Functions","l":"constantNull()"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"constantNull()"},{"p":"org.apache.calcite.linq4j.tree","c":"DeterministicCodeOptimizer","l":"constants"},{"p":"org.apache.calcite.rel.core","c":"Window","l":"constants"},{"p":"org.apache.calcite.rel.mutable","c":"MutableWindow","l":"constants"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.AnalyzeViewResult","l":"constraint"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"constructArgNameList(SqlCall)","u":"constructArgNameList(org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"constructArgTypeList(SqlValidator, SqlValidatorScope, SqlCall, List<SqlNode>, boolean)","u":"constructArgTypeList(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,java.util.List,boolean)"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"constructOperandList(SqlValidator, SqlCall, List<String>)","u":"constructOperandList(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall,java.util.List)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"constructor"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"constructorDecl(int, Type, Iterable<? extends ParameterExpression>, BlockStatement)","u":"constructorDecl(int,java.lang.reflect.Type,java.lang.Iterable,org.apache.calcite.linq4j.tree.BlockStatement)"},{"p":"org.apache.calcite.linq4j.tree","c":"ConstructorDeclaration","l":"ConstructorDeclaration(int, Type, List<ParameterExpression>, BlockStatement)","u":"%3Cinit%3E(int,java.lang.reflect.Type,java.util.List,org.apache.calcite.linq4j.tree.BlockStatement)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"CONSUMER_ACCEPT"},{"p":"org.apache.calcite.rel.rules","c":"CoerceInputsRule.Config","l":"consumerRelClass()"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertQuery","l":"consumesPreparedStatement(CalciteAssert.PreparedStatementConsumer)","u":"consumesPreparedStatement(org.apache.calcite.test.CalciteAssert.PreparedStatementConsumer)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"containComplexExprs(List<RexNode>)","u":"containComplexExprs(java.util.List)"},{"p":"org.apache.calcite.runtime","c":"SpaceFillingCurve2D.CoveredRange","l":"contained()"},{"p":"org.apache.calcite.runtime","c":"SpaceFillingCurve2D.IndexRange","l":"contained()"},{"p":"org.apache.calcite.runtime","c":"SpaceFillingCurve2D.OverlappingRange","l":"contained()"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"containIdentity(List<? extends RexNode>, RelDataType, Litmus)","u":"containIdentity(java.util.List,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"containNoCommonExprs(List<RexNode>, Litmus)","u":"containNoCommonExprs(java.util.List,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"containNoForwardRefs(List<RexNode>, RelDataType, Litmus)","u":"containNoForwardRefs(java.util.List,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"CONTAINS"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"CONTAINS"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"CONTAINS_SUBSTR"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"CONTAINS_SUBSTR"},{"p":"org.apache.calcite.util","c":"BitSets","l":"contains(BitSet, BitSet)","u":"contains(java.util.BitSet,java.util.BitSet)"},{"p":"org.apache.calcite.util","c":"BitSets","l":"contains(BitSet, ImmutableBitSet)","u":"contains(java.util.BitSet,org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.util","c":"Puffin.Line","l":"contains(CharSequence)","u":"contains(java.lang.CharSequence)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"contains(Enumerable<TSource>, TSource)","u":"contains(org.apache.calcite.linq4j.Enumerable,TSource)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"contains(Enumerable<TSource>, TSource, EqualityComparer<TSource>)","u":"contains(org.apache.calcite.linq4j.Enumerable,TSource,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"contains(ImmutableBitSet)","u":"contains(org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.util","c":"IntegerIntervalSet","l":"contains(int)"},{"p":"org.apache.calcite.materialize","c":"LatticeRootNode","l":"contains(LatticeRootNode)","u":"contains(org.apache.calcite.materialize.LatticeRootNode)"},{"p":"org.apache.calcite.rel","c":"RelCollations","l":"contains(List<RelCollation>, ImmutableIntList)","u":"contains(java.util.List,org.apache.calcite.util.ImmutableIntList)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableRels","l":"contains(MutableRel, MutableRel)","u":"contains(org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.mutable.MutableRel)"},{"p":"org.apache.calcite.runtime","c":"ImmutableIntList","l":"contains(Object)","u":"contains(java.lang.Object)"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"contains(Object)","u":"contains(java.lang.Object)"},{"p":"org.apache.calcite.util","c":"ImmutableNullableSet","l":"contains(Object)","u":"contains(java.lang.Object)"},{"p":"org.apache.calcite.util","c":"IntegerIntervalSet","l":"contains(Object)","u":"contains(java.lang.Object)"},{"p":"org.apache.calcite.util","c":"PartiallyOrderedSet","l":"contains(Object)","u":"contains(java.lang.Object)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"contains(Queryable<T>, T)","u":"contains(org.apache.calcite.linq4j.Queryable,T)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"contains(Queryable<T>, T)","u":"contains(org.apache.calcite.linq4j.Queryable,T)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"contains(Queryable<T>, T)","u":"contains(org.apache.calcite.linq4j.Queryable,T)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"contains(Queryable<T>, T, EqualityComparer)","u":"contains(org.apache.calcite.linq4j.Queryable,T,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"contains(Queryable<T>, T, EqualityComparer<T>)","u":"contains(org.apache.calcite.linq4j.Queryable,T,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"contains(Queryable<T>, T, EqualityComparer<T>)","u":"contains(org.apache.calcite.linq4j.Queryable,T,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.rel","c":"RelCollations","l":"contains(RelCollation, Iterable<Integer>)","u":"contains(org.apache.calcite.rel.RelCollation,java.lang.Iterable)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFamily","l":"contains(RelDataType)","u":"contains(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.plan.volcano","c":"RelSubset","l":"contains(RelNode)","u":"contains(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel","c":"RelNodes","l":"contains(RelNode, Predicate<AggregateCall>, RexUtil.RexFinder)","u":"contains(org.apache.calcite.rel.RelNode,java.util.function.Predicate,org.apache.calcite.rex.RexUtil.RexFinder)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"contains(RelNode, RelNode)","u":"contains(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan","c":"RelTraitSet","l":"contains(RelTrait)","u":"contains(org.apache.calcite.plan.RelTrait)"},{"p":"org.apache.calcite.rex","c":"RexUtil.RexFinder","l":"contains(RexNode)","u":"contains(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.util","c":"NameSet","l":"contains(String, boolean)","u":"contains(java.lang.String,boolean)"},{"p":"org.apache.calcite.util","c":"Util","l":"contains(String[], int, String)","u":"contains(java.lang.String[],int,java.lang.String)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"contains(T)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"contains(T, EqualityComparer<T>)","u":"contains(T,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"contains(TSource)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"contains(TSource, EqualityComparer<TSource>)","u":"contains(TSource,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"containsAgg(SqlNode)","u":"containsAgg(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.rex","c":"RexProgram","l":"containsAggs()"},{"p":"org.apache.calcite.runtime","c":"ImmutableIntList","l":"containsAll(Collection<?>)","u":"containsAll(java.util.Collection)"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"containsAll(Collection<?>)","u":"containsAll(java.util.Collection)"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"containsCall(SqlNode, Predicate<SqlCall>)","u":"containsCall(org.apache.calcite.sql.SqlNode,java.util.function.Predicate)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"containsCorrelation(RexNode)","u":"containsCorrelation(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"containsDefault(SqlNode)","u":"containsDefault(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.rel.core","c":"Aggregate","l":"containsDistinctCall()"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"containsFieldAccess(RexNode)","u":"containsFieldAccess(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.plan","c":"RelTraitSet","l":"containsIfApplicable(RelTrait)","u":"containsIfApplicable(org.apache.calcite.plan.RelTrait)"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"containsIn(SqlNode)","u":"containsIn(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"containsInputRef(RexNode)","u":"containsInputRef(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.util","c":"CompositeMap","l":"containsKey(Object)","u":"containsKey(java.lang.Object)"},{"p":"org.apache.calcite.util","c":"NameMap","l":"containsKey(String, boolean)","u":"containsKey(java.lang.String,boolean)"},{"p":"org.apache.calcite.util","c":"NameMultimap","l":"containsKey(String, boolean)","u":"containsKey(java.lang.String,boolean)"},{"p":"org.apache.calcite.rex","c":"RexMultisetUtil","l":"containsMixing(RexNode)","u":"containsMixing(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rex","c":"RexMultisetUtil","l":"containsMixing(RexProgram)","u":"containsMixing(org.apache.calcite.rex.RexProgram)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"containsMonotonic(SqlValidatorScope)","u":"containsMonotonic(org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.rex","c":"RexMultisetUtil","l":"containsMultiset(List<RexNode>, boolean)","u":"containsMultiset(java.util.List,boolean)"},{"p":"org.apache.calcite.rex","c":"RexMultisetUtil","l":"containsMultiset(RexNode, boolean)","u":"containsMultiset(org.apache.calcite.rex.RexNode,boolean)"},{"p":"org.apache.calcite.rex","c":"RexMultisetUtil","l":"containsMultiset(RexProgram)","u":"containsMultiset(org.apache.calcite.rex.RexProgram)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"containsNonAscii(String)","u":"containsNonAscii(java.lang.String)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"containsNullable(List<RelDataType>)","u":"containsNullable(java.util.List)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"containsNullable(RelDataType)","u":"containsNullable(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel","c":"RelCollations","l":"containsOrderless(List<Integer>, RelCollation)","u":"containsOrderless(java.util.List,org.apache.calcite.rel.RelCollation)"},{"p":"org.apache.calcite.rel","c":"RelCollations","l":"containsOrderless(RelCollation, List<Integer>)","u":"containsOrderless(org.apache.calcite.rel.RelCollation,java.util.List)"},{"p":"org.apache.calcite.rel.core","c":"Calc","l":"containsOver()"},{"p":"org.apache.calcite.rel.core","c":"Filter","l":"containsOver()"},{"p":"org.apache.calcite.rel.core","c":"Project","l":"containsOver()"},{"p":"org.apache.calcite.rex","c":"RexOver","l":"containsOver(List<? extends RexNode>, RexNode)","u":"containsOver(java.util.List,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rex","c":"RexOver","l":"containsOver(RexNode)","u":"containsOver(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rex","c":"RexOver","l":"containsOver(RexProgram)","u":"containsOver(org.apache.calcite.rex.RexProgram)"},{"p":"org.apache.calcite.test","c":"Matchers","l":"containsStringLinux(String)","u":"containsStringLinux(java.lang.String)"},{"p":"org.apache.calcite.rex","c":"RexUtil.SubQueryFinder","l":"containsSubQuery(Filter)","u":"containsSubQuery(org.apache.calcite.rel.core.Filter)"},{"p":"org.apache.calcite.rex","c":"RexUtil.SubQueryFinder","l":"containsSubQuery(Join)","u":"containsSubQuery(org.apache.calcite.rel.core.Join)"},{"p":"org.apache.calcite.rex","c":"RexUtil.SubQueryFinder","l":"containsSubQuery(Project)","u":"containsSubQuery(org.apache.calcite.rel.core.Project)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"containsSubstr(boolean, String)","u":"containsSubstr(boolean,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"containsSubstr(int, String)","u":"containsSubstr(int,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"containsSubstr(List, String)","u":"containsSubstr(java.util.List,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"containsSubstr(long, String)","u":"containsSubstr(long,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"containsSubstr(Object, String)","u":"containsSubstr(java.lang.Object,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"containsSubstr(Object[], String)","u":"containsSubstr(java.lang.Object[],java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"containsSubstr(String, String, String)","u":"containsSubstr(java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"containsTableInputRef(List<RexNode>)","u":"containsTableInputRef(java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"containsTableInputRef(RexNode)","u":"containsTableInputRef(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypePrecedenceList","l":"containsType(RelDataType)","u":"containsType(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeExplicitPrecedenceList","l":"containsType(RelDataType)","u":"containsType(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.util","c":"CompositeMap","l":"containsValue(Object)","u":"containsValue(java.lang.Object)"},{"p":"org.apache.calcite.test","c":"Matchers","l":"containsWithoutNodeIds(String)","u":"containsWithoutNodeIds(java.lang.String)"},{"p":"org.apache.calcite.util","c":"XmlOutput","l":"content(String)","u":"content(java.lang.String)"},{"p":"org.apache.calcite.test.schemata.bookstore","c":"BookstoreSchema.Page","l":"contentType"},{"p":"org.apache.calcite.adapter.enumerable","c":"AggImpState","l":"context"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"context"},{"p":"org.apache.calcite.prepare","c":"Prepare","l":"context"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMeasure.DelegatingContext","l":"context"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Builder","l":"context"},{"p":"org.apache.calcite.rex","c":"RexChecker","l":"context"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator","l":"context"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"CONTEXT_ROOT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"CONTEXT_VALUES"},{"p":"org.apache.calcite.tools","c":"Frameworks.ConfigBuilder","l":"context(Context)","u":"context(org.apache.calcite.plan.Context)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Context","l":"Context(SqlDialect, int)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect,int)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Context","l":"Context(SqlDialect, int, boolean)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect,int,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMeasure.Contexts","l":"Contexts()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.jdbc","c":"ContextSqlValidator","l":"ContextSqlValidator(CalcitePrepare.Context, boolean)","u":"%3Cinit%3E(org.apache.calcite.jdbc.CalcitePrepare.Context,boolean)"},{"p":"org.apache.calcite.linq4j.tree","c":"GotoExpressionKind","l":"Continue"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"continue_(LabelTarget)","u":"continue_(org.apache.calcite.linq4j.tree.LabelTarget)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"continue_(LabelTarget, Type)","u":"continue_(org.apache.calcite.linq4j.tree.LabelTarget,java.lang.reflect.Type)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlTruncateTable","l":"continueIdentify"},{"p":"org.apache.calcite.util","c":"ControlFlowException","l":"ControlFlowException()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.arrow","c":"ArrowRel","l":"CONVENTION"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraRel","l":"CONVENTION"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchRel","l":"CONVENTION"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeRel","l":"CONVENTION"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbRel","l":"CONVENTION"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoRel","l":"CONVENTION"},{"p":"org.apache.calcite.adapter.pig","c":"PigRel","l":"CONVENTION"},{"p":"org.apache.calcite.adapter.spark","c":"SparkRel","l":"CONVENTION"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"Convert"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"CONVERT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"CONVERT"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"CONVERT"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"convert_(Expression, Type)","u":"convert_(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"convert_(Expression, Type, Method)","u":"convert_(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type,java.lang.reflect.Method)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"CONVERT_ORACLE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"CONVERT_ORACLE"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"CONVERT_ORACLE"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"CONVERT_TIMEZONE"},{"p":"org.apache.calcite.schema","c":"Schemas","l":"convert(CalciteConnection, CalciteSchema, List<String>, String)","u":"convert(org.apache.calcite.jdbc.CalciteConnection,org.apache.calcite.jdbc.CalciteSchema,java.util.List,java.lang.String)"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare","l":"convert(CalcitePrepare.Context, String)","u":"convert(org.apache.calcite.jdbc.CalcitePrepare.Context,java.lang.String)"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl","l":"convert(CalcitePrepare.Context, String)","u":"convert(org.apache.calcite.jdbc.CalcitePrepare.Context,java.lang.String)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraRules.CassandraLimitRule","l":"convert(EnumerableLimit)","u":"convert(org.apache.calcite.adapter.enumerable.EnumerableLimit)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumUtils","l":"convert(Expression, Type)","u":"convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumUtils","l":"convert(Expression, Type, Type)","u":"convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type,java.lang.reflect.Type)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcJoinRule","l":"convert(Join, boolean)","u":"convert(org.apache.calcite.rel.core.Join,boolean)"},{"p":"org.apache.calcite.adapter.geode.simple","c":"GeodeSimpleEnumerator","l":"convert(Object)","u":"convert(java.lang.Object)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"convert(RelDataType, boolean)","u":"convert(org.apache.calcite.rel.type.RelDataType,boolean)"},{"p":"org.apache.calcite.adapter.arrow","c":"ArrowRules.ArrowProjectRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraRules.CassandraProjectRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraToEnumerableConverterRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchToEnumerableConverterRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableBindable.EnumerableToBindableConverterRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableCorrelateRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableInterpreterRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableMatchRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRepeatUnionRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableTableFunctionScanRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableTableModifyRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableTableScanRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableTableSpoolRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableValuesRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeToEnumerableConverterRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbRules.InnodbProjectRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbToEnumerableConverterRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcAggregateRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcFilterRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcIntersectRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcJoinRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcMinusRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcProjectRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcSortRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcTableModificationRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcUnionRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcValuesRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcToEnumerableConverterRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoToEnumerableConverterRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.pig","c":"PigToEnumerableConverterRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.spark","c":"JdbcToSparkConverterRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.spark","c":"SparkRules.SparkValuesRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableAggregateRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableFilterRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableJoinRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableMatchRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableProjectRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableSetOpRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableSortRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableValuesRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableWindowRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.interpreter","c":"NoneToBindableConverterRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.convert","c":"ConverterRule","l":"convert(RelNode)","u":"convert(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan","c":"RelOptRule","l":"convert(RelNode, RelTrait)","u":"convert(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTrait)"},{"p":"org.apache.calcite.plan","c":"RelOptRule","l":"convert(RelNode, RelTraitSet)","u":"convert(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.plan","c":"ConventionTraitDef","l":"convert(RelOptPlanner, RelNode, Convention, boolean)","u":"convert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,boolean)"},{"p":"org.apache.calcite.rel","c":"RelCollationTraitDef","l":"convert(RelOptPlanner, RelNode, RelCollation, boolean)","u":"convert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,boolean)"},{"p":"org.apache.calcite.rel","c":"RelDistributionTraitDef","l":"convert(RelOptPlanner, RelNode, RelDistribution, boolean)","u":"convert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelDistribution,boolean)"},{"p":"org.apache.calcite.plan","c":"RelOptRule","l":"convert(RelOptPlanner, RelNode, RelTrait)","u":"convert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTrait)"},{"p":"org.apache.calcite.plan","c":"RelOptRule","l":"convert(RelOptPlanner, RelNode, RelTraitSet)","u":"convert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.plan","c":"RelTraitDef","l":"convert(RelOptPlanner, RelNode, T, boolean)","u":"convert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,T,boolean)"},{"p":"org.apache.calcite.plan","c":"RelRule.OperandDetailBuilder","l":"convert(RelTrait)","u":"convert(org.apache.calcite.plan.RelTrait)"},{"p":"org.apache.calcite.sql2rel","c":"AuxiliaryConverter","l":"convert(RexBuilder, RexNode, RexNode)","u":"convert(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.sql2rel","c":"AuxiliaryConverter.Impl","l":"convert(RexBuilder, RexNode, RexNode)","u":"convert(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcSortRule","l":"convert(Sort, boolean)","u":"convert(org.apache.calcite.rel.core.Sort,boolean)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraRules.CassandraSortRule","l":"convert(Sort, CassandraFilter)","u":"convert(org.apache.calcite.rel.core.Sort,org.apache.calcite.adapter.cassandra.CassandraFilter)"},{"p":"org.apache.calcite.prepare","c":"PlannerImpl","l":"convert(SqlNode)","u":"convert(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.tools","c":"Planner","l":"convert(SqlNode)","u":"convert(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"convertAgg(SqlToRelConverter.Blackboard, SqlSelect, List<SqlNode>, List<SqlNode>)","u":"convertAgg(org.apache.calcite.sql2rel.SqlToRelConverter.Blackboard,org.apache.calcite.sql.SqlSelect,java.util.List,java.util.List)"},{"p":"org.apache.calcite.sql2rel","c":"StandardConvertletTable","l":"convertAggregateFunction(SqlRexContext, SqlAggFunction, SqlCall)","u":"convertAggregateFunction(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlAggFunction,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql2rel","c":"StandardConvertletTable","l":"convertArray(SqlRexContext, SqlArrayValueConstructor, SqlCall)","u":"convertArray(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlArrayValueConstructor,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture","l":"convertAsCalc"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"convertAuxiliaryToGroupCall(SqlCall)","u":"convertAuxiliaryToGroupCall(org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql2rel","c":"StandardConvertletTable","l":"convertBetween(SqlRexContext, SqlBetweenOperator, SqlCall)","u":"convertBetween(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlBetweenOperator,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.rex","c":"RexToSqlNodeConverter","l":"convertCall(RexCall)","u":"convertCall(org.apache.calcite.rex.RexCall)"},{"p":"org.apache.calcite.rex","c":"RexToSqlNodeConverterImpl","l":"convertCall(RexCall)","u":"convertCall(org.apache.calcite.rex.RexCall)"},{"p":"org.apache.calcite.rex","c":"RexSqlConvertlet","l":"convertCall(RexToSqlNodeConverter, RexCall)","u":"convertCall(org.apache.calcite.rex.RexToSqlNodeConverter,org.apache.calcite.rex.RexCall)"},{"p":"org.apache.calcite.rex","c":"RexSqlStandardConvertletTable","l":"convertCall(RexToSqlNodeConverter, RexCall)","u":"convertCall(org.apache.calcite.rex.RexToSqlNodeConverter,org.apache.calcite.rex.RexCall)"},{"p":"org.apache.calcite.sql2rel","c":"SqlNodeToRexConverter","l":"convertCall(SqlRexContext, SqlCall)","u":"convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql2rel","c":"SqlNodeToRexConverterImpl","l":"convertCall(SqlRexContext, SqlCall)","u":"convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql2rel","c":"SqlRexConvertlet","l":"convertCall(SqlRexContext, SqlCall)","u":"convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql2rel","c":"StandardConvertletTable","l":"convertCall(SqlRexContext, SqlCall)","u":"convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql2rel","c":"StandardConvertletTable","l":"convertCase(SqlRexContext, SqlCase)","u":"convertCase(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlCase)"},{"p":"org.apache.calcite.sql2rel","c":"StandardConvertletTable","l":"convertCast(SqlRexContext, SqlCall)","u":"convertCast(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql2rel","c":"StandardConvertletTable","l":"convertCharset(SqlRexContext, SqlCall)","u":"convertCharset(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"ConvertChecked"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"convertChecked_(Expression, Type, Method)","u":"convertChecked_(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type,java.lang.reflect.Method)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"convertChecked(Expression, Type)","u":"convertChecked(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"convertCollectionTable(SqlToRelConverter.Blackboard, SqlCall)","u":"convertCollectionTable(org.apache.calcite.sql2rel.SqlToRelConverter.Blackboard,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"convertColumnList(SqlInsert, RelNode)","u":"convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor","l":"convertConditionToSqlNode(RexNode, SqlImplementor.Context, SqlImplementor.Context)","u":"convertConditionToSqlNode(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.rel2sql.SqlImplementor.Context,org.apache.calcite.rel.rel2sql.SqlImplementor.Context)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertQuery","l":"convertContains(String)","u":"convertContains(java.lang.String)"},{"p":"org.apache.calcite.tools","c":"RelBuilder.Config","l":"convertCorrelateToJoin()"},{"p":"org.apache.calcite.sql2rel","c":"StandardConvertletTable","l":"convertDatetimeMinus(SqlRexContext, SqlDatetimeSubtractionOperator, SqlCall)","u":"convertDatetimeMinus(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlDatetimeSubtractionOperator,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"convertDynamicParam(SqlDynamicParam)","u":"convertDynamicParam(org.apache.calcite.sql.SqlDynamicParam)"},{"p":"org.apache.calcite.runtime","c":"Hook","l":"CONVERTED"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture.MetadataConfig","l":"converter"},{"p":"org.apache.calcite.rel.convert","c":"ConverterImpl","l":"ConverterImpl(RelOptCluster, RelTraitDef, RelTraitSet, RelNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitDef,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.convert","c":"TraitMatchingRule.Config","l":"converterRule()"},{"p":"org.apache.calcite.rel.convert","c":"ConverterRule","l":"ConverterRule(Class<? extends RelNode>, RelTrait, RelTrait, String)","u":"%3Cinit%3E(java.lang.Class,org.apache.calcite.plan.RelTrait,org.apache.calcite.plan.RelTrait,java.lang.String)"},{"p":"org.apache.calcite.rel.convert","c":"ConverterRule","l":"ConverterRule(Class<R>, Predicate<? super R>, RelTrait, RelTrait, RelBuilderFactory, String)","u":"%3Cinit%3E(java.lang.Class,com.google.common.base.Predicate,org.apache.calcite.plan.RelTrait,org.apache.calcite.plan.RelTrait,org.apache.calcite.tools.RelBuilderFactory,java.lang.String)"},{"p":"org.apache.calcite.rel.convert","c":"ConverterRule","l":"ConverterRule(Class<R>, Predicate<? super R>, RelTrait, RelTrait, RelBuilderFactory, String)","u":"%3Cinit%3E(java.lang.Class,java.util.function.Predicate,org.apache.calcite.plan.RelTrait,org.apache.calcite.plan.RelTrait,org.apache.calcite.tools.RelBuilderFactory,java.lang.String)"},{"p":"org.apache.calcite.rel.convert","c":"ConverterRule","l":"ConverterRule(Class<R>, Predicate<? super R>, RelTrait, RelTrait, String)","u":"%3Cinit%3E(java.lang.Class,com.google.common.base.Predicate,org.apache.calcite.plan.RelTrait,org.apache.calcite.plan.RelTrait,java.lang.String)"},{"p":"org.apache.calcite.rel.convert","c":"ConverterRule","l":"ConverterRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.rel.hint","c":"HintStrategy","l":"converterRules"},{"p":"org.apache.calcite.rel.hint","c":"HintStrategy.Builder","l":"converterRules(ConverterRule...)","u":"converterRules(org.apache.calcite.rel.convert.ConverterRule...)"},{"p":"org.apache.calcite.sql2rel","c":"InitializerContext","l":"convertExpression(SqlNode)","u":"convertExpression(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql2rel","c":"SqlRexContext","l":"convertExpression(SqlNode)","u":"convertExpression(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Blackboard","l":"convertExpression(SqlNode)","u":"convertExpression(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"convertExpression(SqlNode)","u":"convertExpression(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"convertExpression(SqlNode, Map<String, RexNode>)","u":"convertExpression(org.apache.calcite.sql.SqlNode,java.util.Map)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"convertExtendedExpression(SqlNode, SqlToRelConverter.Blackboard)","u":"convertExtendedExpression(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql2rel.SqlToRelConverter.Blackboard)"},{"p":"org.apache.calcite.sql2rel","c":"StandardConvertletTable","l":"convertExtract(SqlRexContext, SqlExtractFunction, SqlCall)","u":"convertExtract(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlExtractFunction,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql2rel","c":"StandardConvertletTable","l":"convertFloorCeil(SqlRexContext, SqlCall)","u":"convertFloorCeil(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"convertFrom(SqlToRelConverter.Blackboard, SqlNode)","u":"convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter.Blackboard,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"convertFrom(SqlToRelConverter.Blackboard, SqlNode, List<String>)","u":"convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter.Blackboard,org.apache.calcite.sql.SqlNode,java.util.List)"},{"p":"org.apache.calcite.sql2rel","c":"StandardConvertletTable","l":"convertFunction(SqlRexContext, SqlFunction, SqlCall)","u":"convertFunction(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlFunction,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"convertGroupToAuxiliaryCalls(SqlCall)","u":"convertGroupToAuxiliaryCalls(org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"convertGroupToAuxiliaryCalls(SqlCall, BiConsumer<SqlNode, AuxiliaryConverter>)","u":"convertGroupToAuxiliaryCalls(org.apache.calcite.sql.SqlCall,java.util.function.BiConsumer)"},{"p":"org.apache.calcite.rel.rules","c":"HyperGraph","l":"convertHyperEdgeCond(RelBuilder)","u":"convertHyperEdgeCond(org.apache.calcite.tools.RelBuilder)"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture","l":"convertingProjectAsCalc()"},{"p":"org.apache.calcite.rex","c":"RexToSqlNodeConverter","l":"convertInputRef(RexInputRef)","u":"convertInputRef(org.apache.calcite.rex.RexInputRef)"},{"p":"org.apache.calcite.rex","c":"RexToSqlNodeConverterImpl","l":"convertInputRef(RexInputRef)","u":"convertInputRef(org.apache.calcite.rex.RexInputRef)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"convertInsert(SqlInsert)","u":"convertInsert(org.apache.calcite.sql.SqlInsert)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Blackboard","l":"convertInterval(SqlIntervalQualifier)","u":"convertInterval(org.apache.calcite.sql.SqlIntervalQualifier)"},{"p":"org.apache.calcite.sql2rel","c":"SqlNodeToRexConverter","l":"convertInterval(SqlRexContext, SqlIntervalQualifier)","u":"convertInterval(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlIntervalQualifier)"},{"p":"org.apache.calcite.sql2rel","c":"SqlNodeToRexConverterImpl","l":"convertInterval(SqlRexContext, SqlIntervalQualifier)","u":"convertInterval(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlIntervalQualifier)"},{"p":"org.apache.calcite.sql2rel","c":"StandardConvertletTable","l":"convertJdbc(SqlRexContext, SqlJdbcFunctionCall, SqlCall)","u":"convertJdbc(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlJdbcFunctionCall,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql2rel","c":"StandardConvertletTable","l":"convertJsonQueryFunction(SqlRexContext, SqlJsonQueryFunction, SqlCall)","u":"convertJsonQueryFunction(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlJsonQueryFunction,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql2rel","c":"StandardConvertletTable","l":"convertJsonReturningFunction(SqlRexContext, SqlFunction, SqlCall, Predicate<List<SqlNode>>, Function<SqlCall, List<SqlNode>>)","u":"convertJsonReturningFunction(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlFunction,org.apache.calcite.sql.SqlCall,java.util.function.Predicate,java.util.function.Function)"},{"p":"org.apache.calcite.sql2rel","c":"StandardConvertletTable","l":"convertJsonValueFunction(SqlRexContext, SqlJsonValueFunction, SqlCall)","u":"convertJsonValueFunction(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlJsonValueFunction,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl.CalcitePreparingStmt","l":"convertletTable"},{"p":"org.apache.calcite.tools","c":"Frameworks.ConfigBuilder","l":"convertletTable(SqlRexConvertletTable)","u":"convertletTable(org.apache.calcite.sql2rel.SqlRexConvertletTable)"},{"p":"org.apache.calcite.plan","c":"RelOptRule","l":"convertList(List<RelNode>, RelTrait)","u":"convertList(java.util.List,org.apache.calcite.plan.RelTrait)"},{"p":"org.apache.calcite.rex","c":"RexToSqlNodeConverter","l":"convertLiteral(RexLiteral)","u":"convertLiteral(org.apache.calcite.rex.RexLiteral)"},{"p":"org.apache.calcite.rex","c":"RexToSqlNodeConverterImpl","l":"convertLiteral(RexLiteral)","u":"convertLiteral(org.apache.calcite.rex.RexLiteral)"},{"p":"org.apache.calcite.sql2rel","c":"SqlRexContext","l":"convertLiteral(SqlLiteral)","u":"convertLiteral(org.apache.calcite.sql.SqlLiteral)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Blackboard","l":"convertLiteral(SqlLiteral)","u":"convertLiteral(org.apache.calcite.sql.SqlLiteral)"},{"p":"org.apache.calcite.sql2rel","c":"SqlNodeToRexConverter","l":"convertLiteral(SqlRexContext, SqlLiteral)","u":"convertLiteral(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlLiteral)"},{"p":"org.apache.calcite.sql2rel","c":"SqlNodeToRexConverterImpl","l":"convertLiteral(SqlRexContext, SqlLiteral)","u":"convertLiteral(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlLiteral)"},{"p":"org.apache.calcite.sql2rel","c":"StandardConvertletTable","l":"convertLiteralChain(SqlRexContext, SqlLiteralChainOperator, SqlCall)","u":"convertLiteralChain(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlLiteralChainOperator,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql2rel","c":"StandardConvertletTable","l":"convertMap(SqlRexContext, SqlMapValueConstructor, SqlCall)","u":"convertMap(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlMapValueConstructor,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertQuery","l":"convertMatches(Consumer<RelNode>)","u":"convertMatches(java.util.function.Consumer)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"convertMatchRecognize(SqlToRelConverter.Blackboard, SqlMatchRecognize)","u":"convertMatchRecognize(org.apache.calcite.sql2rel.SqlToRelConverter.Blackboard,org.apache.calcite.sql.SqlMatchRecognize)"},{"p":"org.apache.calcite.sql2rel","c":"StandardConvertletTable","l":"convertMultiset(SqlRexContext, SqlMultisetValueConstructor, SqlCall)","u":"convertMultiset(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlMultisetValueConstructor,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql2rel","c":"StandardConvertletTable","l":"convertMultisetQuery(SqlRexContext, SqlMultisetQueryConstructor, SqlCall)","u":"convertMultisetQuery(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlMultisetQueryConstructor,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.rex","c":"RexToSqlNodeConverter","l":"convertNode(RexNode)","u":"convertNode(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rex","c":"RexToSqlNodeConverterImpl","l":"convertNode(RexNode)","u":"convertNode(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.plan","c":"RelOptRule","l":"convertOperand(Class<R>, Predicate<? super R>, RelTrait)","u":"convertOperand(java.lang.Class,com.google.common.base.Predicate,org.apache.calcite.plan.RelTrait)"},{"p":"org.apache.calcite.plan","c":"RelOptRule","l":"convertOperand(Class<R>, Predicate<? super R>, RelTrait)","u":"convertOperand(java.lang.Class,java.util.function.Predicate,org.apache.calcite.plan.RelTrait)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"convertOracle(String, String...)","u":"convertOracle(java.lang.String,java.lang.String...)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"convertOrder(SqlSelect, SqlToRelConverter.Blackboard, RelCollation, List<SqlNode>, SqlNode, SqlNode)","u":"convertOrder(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql2rel.SqlToRelConverter.Blackboard,org.apache.calcite.rel.RelCollation,java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"convertOrderItem(SqlSelect, SqlNode, List<SqlNode>, RelFieldCollation.Direction, RelFieldCollation.NullDirection)","u":"convertOrderItem(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlNode,java.util.List,org.apache.calcite.rel.RelFieldCollation.Direction,org.apache.calcite.rel.RelFieldCollation.NullDirection)"},{"p":"org.apache.calcite.sql2rel","c":"StandardConvertletTable","l":"convertOverlaps(SqlRexContext, SqlOverlapsOperator, SqlCall)","u":"convertOverlaps(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlOverlapsOperator,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"convertPivot(SqlToRelConverter.Blackboard, SqlPivot)","u":"convertPivot(org.apache.calcite.sql2rel.SqlToRelConverter.Blackboard,org.apache.calcite.sql.SqlPivot)"},{"p":"org.apache.calcite.rel.rules","c":"PushProjector","l":"convertProject(RexNode)","u":"convertProject(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"convertQuery(SqlNode, boolean, boolean)","u":"convertQuery(org.apache.calcite.sql.SqlNode,boolean,boolean)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"convertQueryRecursive(SqlNode, boolean, RelDataType)","u":"convertQueryRecursive(org.apache.calcite.sql.SqlNode,boolean,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.rules","c":"PushProjector","l":"convertRefsAndExprs(RexNode, List<RelDataTypeField>, int[])","u":"convertRefsAndExprs(org.apache.calcite.rex.RexNode,java.util.List,int[])"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.ConvertResult","l":"ConvertResult(CalcitePrepareImpl, SqlValidator, String, SqlNode, RelDataType, RelRoot)","u":"%3Cinit%3E(org.apache.calcite.prepare.CalcitePrepareImpl,org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelRoot)"},{"p":"org.apache.calcite.sql2rel","c":"StandardConvertletTable","l":"convertRow(SqlRexContext, SqlRowOperator, SqlCall)","u":"convertRow(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlRowOperator,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"convertSelect(SqlSelect, boolean)","u":"convertSelect(org.apache.calcite.sql.SqlSelect,boolean)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"convertSelectImpl(SqlToRelConverter.Blackboard, SqlToRelConverter.Blackboard, SqlSelect)","u":"convertSelectImpl(org.apache.calcite.sql2rel.SqlToRelConverter.Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter.Blackboard,org.apache.calcite.sql.SqlSelect)"},{"p":"org.apache.calcite.sql2rel","c":"StandardConvertletTable","l":"convertSequenceValue(SqlRexContext, SqlSequenceValueOperator, SqlCall)","u":"convertSequenceValue(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlSequenceValueOperator,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"convertSetOp(SqlCall)","u":"convertSetOp(org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Blackboard","l":"convertSortExpression(SqlNode, RelFieldCollation.Direction, RelFieldCollation.NullDirection)","u":"convertSortExpression(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelFieldCollation.Direction,org.apache.calcite.rel.RelFieldCollation.NullDirection)"},{"p":"org.apache.calcite.sql.test","c":"SqlTester","l":"convertSqlToRel(SqlTestFactory, String, boolean, boolean)","u":"convertSqlToRel(org.apache.calcite.sql.test.SqlTestFactory,java.lang.String,boolean,boolean)"},{"p":"org.apache.calcite.sql.test","c":"AbstractSqlTester","l":"convertSqlToRel2(SqlTestFactory, String, boolean, boolean)","u":"convertSqlToRel2(org.apache.calcite.sql.test.SqlTestFactory,java.lang.String,boolean,boolean)"},{"p":"org.apache.calcite.sql.test","c":"SqlTester","l":"convertSqlToRel2(SqlTestFactory, String, boolean, boolean)","u":"convertSqlToRel2(org.apache.calcite.sql.test.SqlTestFactory,java.lang.String,boolean,boolean)"},{"p":"org.apache.calcite.test","c":"SqlToRelFixture","l":"convertsTo(String)","u":"convertsTo(java.lang.String)"},{"p":"org.apache.calcite.sql2rel","c":"SubQueryConverter","l":"convertSubQuery(SqlCall, SqlToRelConverter, boolean, boolean)","u":"convertSubQuery(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql2rel.SqlToRelConverter,boolean,boolean)"},{"p":"org.apache.calcite.sql2rel","c":"StandardConvertletTable","l":"convertSubstring(SqlRexContext, SqlSubstringFunction, SqlCall)","u":"convertSubstring(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlSubstringFunction,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysType","l":"convertTo(Expression, JavaRowFormat)","u":"convertTo(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.JavaRowFormat)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysTypeImpl","l":"convertTo(Expression, JavaRowFormat)","u":"convertTo(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.JavaRowFormat)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysType","l":"convertTo(Expression, PhysType)","u":"convertTo(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysTypeImpl","l":"convertTo(Expression, PhysType)","u":"convertTo(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType)"},{"p":"org.apache.calcite.sql2rel","c":"ConvertToChecked","l":"ConvertToChecked(RexBuilder)","u":"%3Cinit%3E(org.apache.calcite.rex.RexBuilder)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserFixture","l":"convertToLinux"},{"p":"org.apache.calcite.adapter.geode.util","c":"GeodeUtils","l":"convertToRowValues(List<RelDataTypeField>, Object)","u":"convertToRowValues(java.util.List,java.lang.Object)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"convertToSingleValueSubq(SqlNode, RelNode)","u":"convertToSingleValueSubq(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"AmPmCompiledPattern","l":"convertToString(ZonedDateTime, Locale)","u":"convertToString(java.time.ZonedDateTime,java.util.Locale)"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"BcAdCompiledPattern","l":"convertToString(ZonedDateTime, Locale)","u":"convertToString(java.time.ZonedDateTime,java.util.Locale)"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"CompiledItem","l":"convertToString(ZonedDateTime, Locale)","u":"convertToString(java.time.ZonedDateTime,java.util.Locale)"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"DayOfWeekCompiledPattern","l":"convertToString(ZonedDateTime, Locale)","u":"convertToString(java.time.ZonedDateTime,java.util.Locale)"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"LiteralCompiledItem","l":"convertToString(ZonedDateTime, Locale)","u":"convertToString(java.time.ZonedDateTime,java.util.Locale)"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"MonthCompiledPattern","l":"convertToString(ZonedDateTime, Locale)","u":"convertToString(java.time.ZonedDateTime,java.util.Locale)"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"NumberCompiledPattern","l":"convertToString(ZonedDateTime, Locale)","u":"convertToString(java.time.ZonedDateTime,java.util.Locale)"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"RomanNumeralsCompiledPattern","l":"convertToString(ZonedDateTime, Locale)","u":"convertToString(java.time.ZonedDateTime,java.util.Locale)"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"TimeZoneCompiledPattern","l":"convertToString(ZonedDateTime, Locale)","u":"convertToString(java.time.ZonedDateTime,java.util.Locale)"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"TimeZoneHoursCompiledPattern","l":"convertToString(ZonedDateTime, Locale)","u":"convertToString(java.time.ZonedDateTime,java.util.Locale)"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"TimeZoneMinutesCompiledPattern","l":"convertToString(ZonedDateTime, Locale)","u":"convertToString(java.time.ZonedDateTime,java.util.Locale)"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"TimeZoneOffsetCompiledPattern","l":"convertToString(ZonedDateTime, Locale)","u":"convertToString(java.time.ZonedDateTime,java.util.Locale)"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"YearWithCommasCompiledPattern","l":"convertToString(ZonedDateTime, Locale)","u":"convertToString(java.time.ZonedDateTime,java.util.Locale)"},{"p":"org.apache.calcite.sql.validate","c":"MatchRecognizeNamespace","l":"convertToStruct(RelDataType)","u":"convertToStruct(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"convertTypeToSpec(RelDataType)","u":"convertTypeToSpec(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"convertTypeToSpec(RelDataType, String, int, int)","u":"convertTypeToSpec(org.apache.calcite.rel.type.RelDataType,java.lang.String,int,int)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"convertUnpivot(SqlToRelConverter.Blackboard, SqlUnpivot)","u":"convertUnpivot(org.apache.calcite.sql2rel.SqlToRelConverter.Blackboard,org.apache.calcite.sql.SqlUnpivot)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"convertValues(SqlCall, RelDataType)","u":"convertValues(org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql2rel","c":"StandardConvertletTable","l":"convertWindowFunction(SqlRexContext, SqlWindowTableFunction, SqlCall)","u":"convertWindowFunction(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlWindowTableFunction,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"convertWith(SqlWith, boolean)","u":"convertWith(org.apache.calcite.sql.SqlWith,boolean)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"convertWithCharset(String, String, String)","u":"convertWithCharset(java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.test.schemata.bookstore","c":"BookstoreSchema.Coordinate","l":"Coordinate(BigDecimal, BigDecimal)","u":"%3Cinit%3E(java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"CoordinateTransformer","l":"CoordinateTransformer(Function<Coordinate, Coordinate>)","u":"%3Cinit%3E(java.util.function.Function)"},{"p":"org.apache.calcite.test.schemata.bookstore","c":"BookstoreSchema.Place","l":"coords"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser.Call","l":"copy()"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser.Op","l":"copy()"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser.SpecialOp","l":"copy()"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser.Token","l":"copy()"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor.UnifyRule","l":"copy(E[], int)","u":"copy(E[],int)"},{"p":"org.apache.calcite.rel","c":"RelFieldCollation","l":"copy(int)"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser","l":"copy(int, Predicate<PrecedenceClimbingParser.Token>)","u":"copy(int,java.util.function.Predicate)"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"copy(List<Integer>)","u":"copy(java.util.List)"},{"p":"org.apache.calcite.rel.hint","c":"RelHint","l":"copy(List<Integer>)","u":"copy(java.util.List)"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"copy(List<Integer>, int)","u":"copy(java.util.List,int)"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"copy(List<Integer>, int, ImmutableBitSet, RelCollation)","u":"copy(java.util.List,int,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.RelCollation)"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"copy(List<Integer>, int, RelCollation)","u":"copy(java.util.List,int,org.apache.calcite.rel.RelCollation)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableWindow","l":"copy(List<RexLiteral>)","u":"copy(java.util.List)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableWindow","l":"copy(List<RexLiteral>)","u":"copy(java.util.List)"},{"p":"org.apache.calcite.rel.core","c":"Window","l":"copy(List<RexLiteral>)","u":"copy(java.util.List)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalWindow","l":"copy(List<RexLiteral>)","u":"copy(java.util.List)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule.EquivalenceClasses","l":"copy(MaterializedViewRule.EquivalenceClasses)","u":"copy(org.apache.calcite.rel.rules.materialize.MaterializedViewRule.EquivalenceClasses)"},{"p":"org.apache.calcite.adapter.enumerable","c":"JavaRowFormat","l":"copy(ParameterExpression, ParameterExpression, int, int)","u":"copy(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,int,int)"},{"p":"org.apache.calcite.util","c":"RangeSets","l":"copy(Range<C>, Function<C, C2>)","u":"copy(com.google.common.collect.Range,java.util.function.Function)"},{"p":"org.apache.calcite.util","c":"RangeSets","l":"copy(RangeSet<C>, Function<C, C2>)","u":"copy(com.google.common.collect.RangeSet,java.util.function.Function)"},{"p":"org.apache.calcite.prepare","c":"RelOptTableImpl","l":"copy(RelDataType)","u":"copy(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraLimit","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraTableScan","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraToEnumerableConverter","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.adapter.csv","c":"CsvTableScan","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchTableScan","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchToEnumerableConverter","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableAsofJoin","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableBindable","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableInterpretable","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableInterpreter","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableLimit","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableMatch","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRepeatUnion","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableTableModify","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableTableScan","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableValues","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableWindow","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.adapter.file","c":"CsvTableScan","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeTableScan","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeToEnumerableConverter","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbTableScan","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbToEnumerableConverter","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcCalc","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcTableModify","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcValues","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcTableScan","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcToEnumerableConverter","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoTableScan","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoToEnumerableConverter","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.adapter.pig","c":"PigToEnumerableConverter","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.adapter.spark","c":"EnumerableToSparkConverter","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.adapter.spark","c":"JdbcToSparkConverter","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.adapter.spark","c":"SparkRules.SparkCalc","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.adapter.spark","c":"SparkRules.SparkValues","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.adapter.spark","c":"SparkToEnumerableConverter","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableMatch","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableValues","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableWindow","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.interpreter","c":"InterpretableConverter","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.plan.hep","c":"HepRelVertex","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.plan.volcano","c":"AbstractConverter","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.plan.volcano","c":"RelSubset","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.rel.convert","c":"NoneConverter","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.rel.core","c":"Aggregate","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.rel.core","c":"Calc","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.rel.core","c":"Collect","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.rel.core","c":"Correlate","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.rel.core","c":"Exchange","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.rel.core","c":"Filter","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.rel.core","c":"Join","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.rel.core","c":"Project","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.rel.core","c":"Sample","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.rel.core","c":"SetOp","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.rel.core","c":"Snapshot","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.rel.core","c":"Sort","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.rel.core","c":"Spool","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.rel.core","c":"TableFunctionScan","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.rel.core","c":"Uncollect","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalAsofJoin","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalMatch","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalRepeatUnion","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalTableModify","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalTableScan","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalValues","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalWindow","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.rel","c":"RelNode","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.rel.rules","c":"HyperGraph","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.rel.rules","c":"MultiJoin","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.rel.stream","c":"LogicalDelta","l":"copy(RelTraitSet, List<RelNode>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableIntersect","l":"copy(RelTraitSet, List<RelNode>, boolean)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List,boolean)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableMergeUnion","l":"copy(RelTraitSet, List<RelNode>, boolean)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List,boolean)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableMinus","l":"copy(RelTraitSet, List<RelNode>, boolean)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List,boolean)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableUnion","l":"copy(RelTraitSet, List<RelNode>, boolean)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List,boolean)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcIntersect","l":"copy(RelTraitSet, List<RelNode>, boolean)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List,boolean)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcMinus","l":"copy(RelTraitSet, List<RelNode>, boolean)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List,boolean)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcUnion","l":"copy(RelTraitSet, List<RelNode>, boolean)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List,boolean)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableIntersect","l":"copy(RelTraitSet, List<RelNode>, boolean)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List,boolean)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableMinus","l":"copy(RelTraitSet, List<RelNode>, boolean)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List,boolean)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableUnion","l":"copy(RelTraitSet, List<RelNode>, boolean)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List,boolean)"},{"p":"org.apache.calcite.rel.core","c":"SetOp","l":"copy(RelTraitSet, List<RelNode>, boolean)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List,boolean)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalIntersect","l":"copy(RelTraitSet, List<RelNode>, boolean)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List,boolean)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalMinus","l":"copy(RelTraitSet, List<RelNode>, boolean)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List,boolean)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalUnion","l":"copy(RelTraitSet, List<RelNode>, boolean)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List,boolean)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableTableFunctionScan","l":"copy(RelTraitSet, List<RelNode>, RexNode, Type, RelDataType, Set<RelColumnMapping>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List,org.apache.calcite.rex.RexNode,java.lang.reflect.Type,org.apache.calcite.rel.type.RelDataType,java.util.Set)"},{"p":"org.apache.calcite.rel.core","c":"TableFunctionScan","l":"copy(RelTraitSet, List<RelNode>, RexNode, Type, RelDataType, Set<RelColumnMapping>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List,org.apache.calcite.rex.RexNode,java.lang.reflect.Type,org.apache.calcite.rel.type.RelDataType,java.util.Set)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalTableFunctionScan","l":"copy(RelTraitSet, List<RelNode>, RexNode, Type, RelDataType, Set<RelColumnMapping>)","u":"copy(org.apache.calcite.plan.RelTraitSet,java.util.List,org.apache.calcite.rex.RexNode,java.lang.reflect.Type,org.apache.calcite.rel.type.RelDataType,java.util.Set)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableCollect","l":"copy(RelTraitSet, RelNode)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableUncollect","l":"copy(RelTraitSet, RelNode)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.core","c":"Collect","l":"copy(RelTraitSet, RelNode)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.core","c":"Uncollect","l":"copy(RelTraitSet, RelNode)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.core","c":"Aggregate","l":"copy(RelTraitSet, RelNode, boolean, ImmutableBitSet, List<ImmutableBitSet>, List<AggregateCall>)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableAggregate","l":"copy(RelTraitSet, RelNode, ImmutableBitSet, List<ImmutableBitSet>, List<AggregateCall>)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableSortedAggregate","l":"copy(RelTraitSet, RelNode, ImmutableBitSet, List<ImmutableBitSet>, List<AggregateCall>)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcAggregate","l":"copy(RelTraitSet, RelNode, ImmutableBitSet, List<ImmutableBitSet>, List<AggregateCall>)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoAggregate","l":"copy(RelTraitSet, RelNode, ImmutableBitSet, List<ImmutableBitSet>, List<AggregateCall>)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableAggregate","l":"copy(RelTraitSet, RelNode, ImmutableBitSet, List<ImmutableBitSet>, List<AggregateCall>)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)"},{"p":"org.apache.calcite.rel.core","c":"Aggregate","l":"copy(RelTraitSet, RelNode, ImmutableBitSet, List<ImmutableBitSet>, List<AggregateCall>)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalAggregate","l":"copy(RelTraitSet, RelNode, ImmutableBitSet, List<ImmutableBitSet>, List<AggregateCall>)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchAggregate","l":"copy(RelTraitSet, RelNode, ImmutableBitSet, List<ImmutableBitSet>, List<AggregateCall>)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeAggregate","l":"copy(RelTraitSet, RelNode, ImmutableBitSet, List<ImmutableBitSet>, List<AggregateCall>)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)"},{"p":"org.apache.calcite.adapter.pig","c":"PigAggregate","l":"copy(RelTraitSet, RelNode, ImmutableBitSet, List<ImmutableBitSet>, List<AggregateCall>)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraProject","l":"copy(RelTraitSet, RelNode, List<RexNode>, RelDataType)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchProject","l":"copy(RelTraitSet, RelNode, List<RexNode>, RelDataType)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableProject","l":"copy(RelTraitSet, RelNode, List<RexNode>, RelDataType)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeProject","l":"copy(RelTraitSet, RelNode, List<RexNode>, RelDataType)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbProject","l":"copy(RelTraitSet, RelNode, List<RexNode>, RelDataType)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcProject","l":"copy(RelTraitSet, RelNode, List<RexNode>, RelDataType)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoProject","l":"copy(RelTraitSet, RelNode, List<RexNode>, RelDataType)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.adapter.pig","c":"PigProject","l":"copy(RelTraitSet, RelNode, List<RexNode>, RelDataType)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableProject","l":"copy(RelTraitSet, RelNode, List<RexNode>, RelDataType)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.core","c":"Project","l":"copy(RelTraitSet, RelNode, List<RexNode>, RelDataType)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalProject","l":"copy(RelTraitSet, RelNode, List<RexNode>, RelDataType)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.core","c":"Project","l":"copy(RelTraitSet, RelNode, List<RexNode>, RelDataType, int)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType,int)"},{"p":"org.apache.calcite.rel.core","c":"Sort","l":"copy(RelTraitSet, RelNode, RelCollation)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraSort","l":"copy(RelTraitSet, RelNode, RelCollation, RexNode, RexNode)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchSort","l":"copy(RelTraitSet, RelNode, RelCollation, RexNode, RexNode)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableLimitSort","l":"copy(RelTraitSet, RelNode, RelCollation, RexNode, RexNode)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableSort","l":"copy(RelTraitSet, RelNode, RelCollation, RexNode, RexNode)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcSort","l":"copy(RelTraitSet, RelNode, RelCollation, RexNode, RexNode)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableSort","l":"copy(RelTraitSet, RelNode, RelCollation, RexNode, RexNode)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.core","c":"Sort","l":"copy(RelTraitSet, RelNode, RelCollation, RexNode, RexNode)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalSort","l":"copy(RelTraitSet, RelNode, RelCollation, RexNode, RexNode)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeSort","l":"copy(RelTraitSet, RelNode, RelCollation, RexNode, RexNode)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbSort","l":"copy(RelTraitSet, RelNode, RelCollation, RexNode, RexNode)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoSort","l":"copy(RelTraitSet, RelNode, RelCollation, RexNode, RexNode)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.core","c":"Exchange","l":"copy(RelTraitSet, RelNode, RelDistribution)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelDistribution)"},{"p":"org.apache.calcite.rel.core","c":"SortExchange","l":"copy(RelTraitSet, RelNode, RelDistribution)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelDistribution)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalExchange","l":"copy(RelTraitSet, RelNode, RelDistribution)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelDistribution)"},{"p":"org.apache.calcite.rel.core","c":"SortExchange","l":"copy(RelTraitSet, RelNode, RelDistribution, RelCollation)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelDistribution,org.apache.calcite.rel.RelCollation)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalSortExchange","l":"copy(RelTraitSet, RelNode, RelDistribution, RelCollation)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelDistribution,org.apache.calcite.rel.RelCollation)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableCorrelate","l":"copy(RelTraitSet, RelNode, RelNode, CorrelationId, ImmutableBitSet, JoinRelType)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.CorrelationId,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.rel.core","c":"Correlate","l":"copy(RelTraitSet, RelNode, RelNode, CorrelationId, ImmutableBitSet, JoinRelType)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.CorrelationId,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalCorrelate","l":"copy(RelTraitSet, RelNode, RelNode, CorrelationId, ImmutableBitSet, JoinRelType)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.CorrelationId,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.test","c":"SqlToRelTestBase.CustomCorrelate","l":"copy(RelTraitSet, RelNode, RelNode, CorrelationId, ImmutableBitSet, JoinRelType)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.CorrelationId,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraFilter","l":"copy(RelTraitSet, RelNode, RexNode)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchFilter","l":"copy(RelTraitSet, RelNode, RexNode)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableFilter","l":"copy(RelTraitSet, RelNode, RexNode)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeFilter","l":"copy(RelTraitSet, RelNode, RexNode)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbFilter","l":"copy(RelTraitSet, RelNode, RexNode)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcFilter","l":"copy(RelTraitSet, RelNode, RexNode)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoFilter","l":"copy(RelTraitSet, RelNode, RexNode)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.adapter.pig","c":"PigFilter","l":"copy(RelTraitSet, RelNode, RexNode)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableFilter","l":"copy(RelTraitSet, RelNode, RexNode)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.core","c":"Filter","l":"copy(RelTraitSet, RelNode, RexNode)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.core","c":"Snapshot","l":"copy(RelTraitSet, RelNode, RexNode)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalFilter","l":"copy(RelTraitSet, RelNode, RexNode)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalSnapshot","l":"copy(RelTraitSet, RelNode, RexNode)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableCalc","l":"copy(RelTraitSet, RelNode, RexProgram)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)"},{"p":"org.apache.calcite.rel.core","c":"Calc","l":"copy(RelTraitSet, RelNode, RexProgram)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalCalc","l":"copy(RelTraitSet, RelNode, RexProgram)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)"},{"p":"org.apache.calcite.rel.core","c":"Calc","l":"copy(RelTraitSet, RelNode, RexProgram, List<RelCollation>)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram,java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableTableSpool","l":"copy(RelTraitSet, RelNode, Spool.Type, Spool.Type)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Spool.Type,org.apache.calcite.rel.core.Spool.Type)"},{"p":"org.apache.calcite.rel.core","c":"Spool","l":"copy(RelTraitSet, RelNode, Spool.Type, Spool.Type)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Spool.Type,org.apache.calcite.rel.core.Spool.Type)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalTableSpool","l":"copy(RelTraitSet, RelNode, Spool.Type, Spool.Type)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Spool.Type,org.apache.calcite.rel.core.Spool.Type)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableAsofJoin","l":"copy(RelTraitSet, RexNode, RelNode, RelNode, JoinRelType, boolean)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,boolean)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableBatchNestedLoopJoin","l":"copy(RelTraitSet, RexNode, RelNode, RelNode, JoinRelType, boolean)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,boolean)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableHashJoin","l":"copy(RelTraitSet, RexNode, RelNode, RelNode, JoinRelType, boolean)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,boolean)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableMergeJoin","l":"copy(RelTraitSet, RexNode, RelNode, RelNode, JoinRelType, boolean)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,boolean)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableNestedLoopJoin","l":"copy(RelTraitSet, RexNode, RelNode, RelNode, JoinRelType, boolean)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,boolean)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcJoin","l":"copy(RelTraitSet, RexNode, RelNode, RelNode, JoinRelType, boolean)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,boolean)"},{"p":"org.apache.calcite.adapter.pig","c":"PigJoin","l":"copy(RelTraitSet, RexNode, RelNode, RelNode, JoinRelType, boolean)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,boolean)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableJoin","l":"copy(RelTraitSet, RexNode, RelNode, RelNode, JoinRelType, boolean)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,boolean)"},{"p":"org.apache.calcite.rel.core","c":"Join","l":"copy(RelTraitSet, RexNode, RelNode, RelNode, JoinRelType, boolean)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,boolean)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalAsofJoin","l":"copy(RelTraitSet, RexNode, RelNode, RelNode, JoinRelType, boolean)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,boolean)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalJoin","l":"copy(RelTraitSet, RexNode, RelNode, RelNode, JoinRelType, boolean)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,boolean)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalAsofJoin","l":"copy(RelTraitSet, RexNode, RexNode, RelNode, RelNode)","u":"copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"copy(RexNode)","u":"copy(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil.DeepCopier","l":"copy(SqlValidatorScope, SqlNodeList)","u":"copy(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.util","c":"NlsString","l":"copy(String)","u":"copy(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"FlatLists","l":"copy(T...)"},{"p":"org.apache.calcite.util","c":"ImmutableNullableList","l":"copyOf(Collection<? extends E>)","u":"copyOf(java.util.Collection)"},{"p":"org.apache.calcite.util","c":"ImmutableNullableList","l":"copyOf(E[])"},{"p":"org.apache.calcite.util","c":"ImmutableNullableSet","l":"copyOf(E[])"},{"p":"org.apache.calcite.util","c":"ImmutableIntList","l":"copyOf(int...)"},{"p":"org.apache.calcite.util","c":"ImmutableNullableList","l":"copyOf(Iterable<? extends E>)","u":"copyOf(java.lang.Iterable)"},{"p":"org.apache.calcite.util","c":"ImmutableNullableSet","l":"copyOf(Iterable<? extends E>)","u":"copyOf(java.lang.Iterable)"},{"p":"org.apache.calcite.runtime","c":"ImmutablePairList","l":"copyOf(Iterable<? extends Map.Entry<T, U>>)","u":"copyOf(java.lang.Iterable)"},{"p":"org.apache.calcite.util","c":"ImmutableIntList","l":"copyOf(Iterable<? extends Number>)","u":"copyOf(java.lang.Iterable)"},{"p":"org.apache.calcite.util","c":"ImmutableIntList","l":"copyOf(Iterator<? extends Number>)","u":"copyOf(java.util.Iterator)"},{"p":"org.apache.calcite.util","c":"ImmutableNullableMap","l":"copyOf(Map<? extends K, ? extends V>)","u":"copyOf(java.util.Map)"},{"p":"org.apache.calcite.util","c":"ImmutableIntList","l":"copyOf(Number...)","u":"copyOf(java.lang.Number...)"},{"p":"org.apache.calcite.util","c":"ImmutableNullableMap","l":"copyOf(SortedMap<? extends K, ? extends V>)","u":"copyOf(java.util.SortedMap)"},{"p":"org.apache.calcite.runtime","c":"ImmutablePairList","l":"copyOf(T, U, Object...)","u":"copyOf(T,U,java.lang.Object...)"},{"p":"org.apache.calcite.runtime","c":"PairList","l":"copyOf(T, U, Object...)","u":"copyOf(T,U,java.lang.Object...)"},{"p":"org.apache.calcite.runtime","c":"PairList.Helper","l":"copyOf(T, U, Object...)","u":"copyOf(T,U,java.lang.Object...)"},{"p":"org.apache.calcite.runtime","c":"FlatLists","l":"copyOf(T...)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"copyRelHints(RelNode, RelNode)","u":"copyRelHints(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"copyRelHints(RelNode, RelNode, boolean)","u":"copyRelHints(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,boolean)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory","l":"copyType(RelDataType)","u":"copyType(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactoryImpl","l":"copyType(RelDataType)","u":"copyType(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.interpreter","c":"Row","l":"copyValues()"},{"p":"org.apache.calcite.rel.type","c":"TimeFrames","l":"CORE"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator.CorelMapBuilder","l":"CorelMapBuilder()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util","c":"TestUtil","l":"correctRoundedFloat(String)","u":"correctRoundedFloat(java.lang.String)"},{"p":"org.apache.calcite.plan","c":"RelOptQuery","l":"CORREL_PREFIX"},{"p":"org.apache.calcite.rel.core","c":"CorrelationId","l":"CORREL_PREFIX"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"CORREL_VARIABLE"},{"p":"org.apache.calcite.piglet","c":"PigRelBuilder","l":"correl(List<RelDataTypeField>, CorrelationId)","u":"correl(java.util.List,org.apache.calcite.rel.core.CorrelationId)"},{"p":"org.apache.calcite.rel.hint","c":"HintPredicates","l":"CORRELATE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"CORRELATE_BATCH_JOIN"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"CORRELATE_JOIN"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules","l":"CORRELATE_LEFT_INSTANCE"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules","l":"CORRELATE_RIGHT_INSTANCE"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"correlate(JoinRelType, CorrelationId, Iterable<? extends RexNode>)","u":"correlate(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rel.core.CorrelationId,java.lang.Iterable)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"correlate(JoinRelType, CorrelationId, RexNode...)","u":"correlate(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rel.core.CorrelationId,org.apache.calcite.rex.RexNode...)"},{"p":"org.apache.calcite.rel.core","c":"Correlate","l":"Correlate(RelInput)","u":"%3Cinit%3E(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel.core","c":"Correlate","l":"Correlate(RelOptCluster, RelTraitSet, List<RelHint>, RelNode, RelNode, CorrelationId, ImmutableBitSet, JoinRelType)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.CorrelationId,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.rel.core","c":"Correlate","l":"Correlate(RelOptCluster, RelTraitSet, RelNode, RelNode, CorrelationId, ImmutableBitSet, JoinRelType)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.CorrelationId,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"correlateBatchJoin(JoinType, Enumerable<TSource>, Function1<List<TSource>, Enumerable<TInner>>, Function2<TSource, TInner, TResult>, Predicate2<TSource, TInner>, int)","u":"correlateBatchJoin(org.apache.calcite.linq4j.JoinType,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.Predicate2,int)"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.Struct","l":"correlateFactory"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"correlateJoin(JoinType, Enumerable<TSource>, Function1<TSource, Enumerable<TInner>>, Function2<TSource, ? super TInner, TResult>)","u":"correlateJoin(org.apache.calcite.linq4j.JoinType,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"correlateJoin(JoinType, Function1<T, Enumerable<TInner>>, Function2<T, TInner, TResult>)","u":"correlateJoin(org.apache.calcite.linq4j.JoinType,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"correlateJoin(JoinType, Function1<TSource, Enumerable<TInner>>, Function2<TSource, TInner, TResult>)","u":"correlateJoin(org.apache.calcite.linq4j.JoinType,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.sql2rel","c":"CorrelateProjectExtractor","l":"CorrelateProjectExtractor(RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"correlationColumns(CorrelationId, RelNode)","u":"correlationColumns(org.apache.calcite.rel.core.CorrelationId,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.core","c":"Correlate","l":"correlationId"},{"p":"org.apache.calcite.rel.mutable","c":"MutableCorrelate","l":"correlationId"},{"p":"org.apache.calcite.rel.core","c":"CorrelationId","l":"CorrelationId(int)","u":"%3Cinit%3E(int)"},{"p":"org.apache.calcite.rel.core","c":"CorrelationId","l":"CorrelationId(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.rel","c":"RelNode.Context","l":"correlationIds()"},{"p":"org.apache.calcite.rel","c":"RelValidityChecker","l":"correlationIds()"},{"p":"org.apache.calcite.sql2rel","c":"CorrelationReferenceFinder","l":"CorrelationReferenceFinder()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor","l":"correlTableMap"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"COS"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"COS"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"cos(BigDecimal)","u":"cos(java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"cos(double)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"COSD"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"COSD"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"cosd(BigDecimal)","u":"cosd(java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"cosd(double)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"COSH"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"COSH"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"cosh(BigDecimal)","u":"cosh(java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"cosh(double)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableConvention","l":"COST_MULTIPLIER"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcConvention","l":"COST_MULTIPLIER"},{"p":"org.apache.calcite.interpreter","c":"BindableConvention","l":"COST_MULTIPLIER"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"costFactory"},{"p":"org.apache.calcite.tools","c":"Frameworks.ConfigBuilder","l":"costFactory(RelOptCostFactory)","u":"costFactory(org.apache.calcite.plan.RelOptCostFactory)"},{"p":"org.apache.calcite.rel.rules","c":"LoptOptimizeJoinRule.Config","l":"costFunction()"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"COT"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"COT"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"cot(BigDecimal)","u":"cot(java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"cot(double)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"COTH"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"COTH"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"coth(BigDecimal)","u":"coth(java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"coth(double)"},{"p":"org.apache.calcite.adapter.pig","c":"PigAggFunction","l":"COUNT"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"COUNT"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"COUNT"},{"p":"org.apache.calcite.adapter.pig","c":"PigAggFunction","l":"COUNT_STAR"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"count()"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"count()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope.Resolved","l":"count()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope.ResolvedImpl","l":"count()"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"count(boolean, String, Iterable<? extends RexNode>)","u":"count(boolean,java.lang.String,java.lang.Iterable)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"count(boolean, String, RexNode...)","u":"count(boolean,java.lang.String,org.apache.calcite.rex.RexNode...)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"count(Enumerable<TSource>)","u":"count(org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"count(Enumerable<TSource>, Predicate1<TSource>)","u":"count(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"count(FunctionExpression<Predicate1<T>>)","u":"count(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"count(FunctionExpression<Predicate1<T>>)","u":"count(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"count(FunctionExpression<Predicate1<TSource>>)"},{"p":"","c":"","l":"count(FunctionExpression<Predicate1<TSource>>)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"count(Iterable<? extends RexNode>)","u":"count(java.lang.Iterable)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"count(Predicate1<T>)","u":"count(org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"count(Predicate1<TSource>)","u":"count(org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"count(Queryable<T>)","u":"count(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"count(Queryable<T>)","u":"count(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"count(Queryable<T>)","u":"count(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"count(Queryable<T>, FunctionExpression<Predicate1<T>>)","u":"count(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"count(Queryable<T>, FunctionExpression<Predicate1<T>>)","u":"count(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"count(Queryable<T>, FunctionExpression<Predicate1<T>>)","u":"count(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"count(RexNode...)","u":"count(org.apache.calcite.rex.RexNode...)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"COUNTIF"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"COUNTIF"},{"p":"org.apache.calcite.adapter.splunk.search","c":"SplunkConnectionImpl.CountingSearchResultListener","l":"CountingSearchResultListener(boolean)","u":"%3Cinit%3E(boolean)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"countJoins(RelNode)","u":"countJoins(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.util","c":"RangeSets","l":"countPoints(RangeSet<C>)","u":"countPoints(com.google.common.collect.RangeSet)"},{"p":"org.apache.calcite.test.schemata.bookstore","c":"BookstoreSchema.Place","l":"country"},{"p":"org.apache.calcite.sql","c":"SqlSplittableAggFunction.CountSplitter","l":"CountSplitter()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.materialize","c":"Lattice","l":"countSql(ImmutableBitSet)","u":"countSql(org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"countStar(String)","u":"countStar(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"COVAR_AVG_AGG_FUNCTIONS"},{"p":"org.apache.calcite.sql.fun","c":"SqlCovarAggFunction.Subtype","l":"COVAR_POP"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"COVAR_POP"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"COVAR_POP"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"COVAR_REGR_FUNCTION"},{"p":"org.apache.calcite.sql.fun","c":"SqlCovarAggFunction.Subtype","l":"COVAR_SAMP"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"COVAR_SAMP"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"COVAR_SAMP"},{"p":"org.apache.calcite.adapter.os","c":"OsQueryType","l":"CPU_INFO"},{"p":"org.apache.calcite.adapter.os","c":"OsQueryType","l":"CPU_TIME"},{"p":"org.apache.calcite.adapter.cassandra","c":"CqlToSqlTypeConversionRules","l":"CqlToSqlTypeConversionRules()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"CRC32"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"CRC32"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"crc32(ByteString)","u":"crc32(org.apache.calcite.avatica.util.ByteString)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"crc32(String)","u":"crc32(java.lang.String)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"CREATE_ENRICHER"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"CREATE_FOREIGN_SCHEMA"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"CREATE_FUNCTION"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"CREATE_INDEX"},{"p":"org.apache.calcite.runtime","c":"Hook","l":"CREATE_MATERIALIZATION"},{"p":"org.apache.calcite.config","c":"CalciteConnectionProperty","l":"CREATE_MATERIALIZATIONS"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"CREATE_MATERIALIZED_VIEW"},{"p":"org.apache.calcite.adapter.spark","c":"SparkMethod","l":"CREATE_RDD"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"CREATE_SCHEMA"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"CREATE_SEQUENCE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"CREATE_TABLE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"CREATE_TABLE_LIKE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"CREATE_TYPE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"CREATE_VIEW"},{"p":"org.apache.calcite.linq4j","c":"MemoryFactory","l":"create()"},{"p":"org.apache.calcite.linq4j.tree","c":"ClassDeclarationFinder","l":"create()"},{"p":"org.apache.calcite.rel.externalize","c":"RelJson","l":"create()"},{"p":"org.apache.calcite.util.graph","c":"DefaultDirectedGraph","l":"create()"},{"p":"org.apache.calcite.util.graph","c":"AttributedDirectedGraph","l":"create(AttributedDirectedGraph.AttributedEdgeFactory<V, E>)","u":"create(org.apache.calcite.util.graph.AttributedDirectedGraph.AttributedEdgeFactory)"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaImpl","l":"create(CalciteConnection)","u":"create(org.apache.calcite.jdbc.CalciteConnection)"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaImpl","l":"create(CalciteConnection, CalciteMetaTableFactory, CalciteMetaColumnFactory)","u":"create(org.apache.calcite.jdbc.CalciteConnection,org.apache.calcite.jdbc.CalciteMetaTableFactory,org.apache.calcite.jdbc.CalciteMetaColumnFactory)"},{"p":"org.apache.calcite.materialize","c":"Lattice","l":"create(CalciteSchema, String, boolean)","u":"create(org.apache.calcite.jdbc.CalciteSchema,java.lang.String,boolean)"},{"p":"org.apache.calcite.schema.impl","c":"MaterializedViewTable","l":"create(CalciteSchema, String, List<String>, List<String>, String, boolean)","u":"create(org.apache.calcite.jdbc.CalciteSchema,java.lang.String,java.util.List,java.util.List,java.lang.String,boolean)"},{"p":"org.apache.calcite.linq4j.tree","c":"TableExpressionFactory","l":"create(Class)","u":"create(java.lang.Class)"},{"p":"org.apache.calcite.schema.impl","c":"AggregateFunctionImpl","l":"create(Class<?>)","u":"create(java.lang.Class)"},{"p":"org.apache.calcite.schema.impl","c":"TableFunctionImpl","l":"create(Class<?>)","u":"create(java.lang.Class)"},{"p":"org.apache.calcite.schema.impl","c":"TableMacroImpl","l":"create(Class<?>)","u":"create(java.lang.Class)"},{"p":"org.apache.calcite.schema.impl","c":"ScalarFunctionImpl","l":"create(Class<?>, String)","u":"create(java.lang.Class,java.lang.String)"},{"p":"org.apache.calcite.schema.impl","c":"TableFunctionImpl","l":"create(Class<?>, String)","u":"create(java.lang.Class,java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"ClassDeclarationFinder","l":"create(Class<? extends ClassDeclarationFinder>)","u":"create(java.lang.Class)"},{"p":"org.apache.calcite.jdbc","c":"CalciteResultSet","l":"create(ColumnMetaData.AvaticaType, Iterable<Object>)","u":"create(org.apache.calcite.avatica.ColumnMetaData.AvaticaType,java.lang.Iterable)"},{"p":"org.apache.calcite.sql.test","c":"SqlTestFactory.PlannerFactory","l":"create(Context)","u":"create(org.apache.calcite.plan.Context)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"create(DatabaseMetaData)","u":"create(java.sql.DatabaseMetaData)"},{"p":"org.apache.calcite.sql","c":"SqlDialectFactory","l":"create(DatabaseMetaData)","u":"create(java.sql.DatabaseMetaData)"},{"p":"org.apache.calcite.sql","c":"SqlDialectFactoryImpl","l":"create(DatabaseMetaData)","u":"create(java.sql.DatabaseMetaData)"},{"p":"org.apache.calcite.util.graph","c":"DefaultDirectedGraph","l":"create(DirectedGraph.EdgeFactory<V, E>)","u":"create(org.apache.calcite.util.graph.DirectedGraph.EdgeFactory)"},{"p":"org.apache.calcite.piglet","c":"PigConverter","l":"create(FrameworkConfig)","u":"create(org.apache.calcite.tools.FrameworkConfig)"},{"p":"org.apache.calcite.piglet","c":"PigRelBuilder","l":"create(FrameworkConfig)","u":"create(org.apache.calcite.tools.FrameworkConfig)"},{"p":"org.apache.calcite.tools","c":"PigRelBuilder","l":"create(FrameworkConfig)","u":"create(org.apache.calcite.tools.FrameworkConfig)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"create(FrameworkConfig)","u":"create(org.apache.calcite.tools.FrameworkConfig)"},{"p":"org.apache.calcite.piglet","c":"PigConverter","l":"create(FrameworkConfig, Properties)","u":"create(org.apache.calcite.tools.FrameworkConfig,java.util.Properties)"},{"p":"org.apache.calcite.linq4j.tree","c":"ClassDeclarationFinder","l":"create(Function1<ClassDeclarationFinder, ClassDeclarationFinder>)","u":"create(org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.tools","c":"Hoist","l":"create(Hoist.Config)","u":"create(org.apache.calcite.tools.Hoist.Config)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcAggregateRule","l":"create(JdbcConvention)","u":"create(org.apache.calcite.adapter.jdbc.JdbcConvention)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcFilterRule","l":"create(JdbcConvention)","u":"create(org.apache.calcite.adapter.jdbc.JdbcConvention)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcIntersectRule","l":"create(JdbcConvention)","u":"create(org.apache.calcite.adapter.jdbc.JdbcConvention)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcJoinRule","l":"create(JdbcConvention)","u":"create(org.apache.calcite.adapter.jdbc.JdbcConvention)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcMinusRule","l":"create(JdbcConvention)","u":"create(org.apache.calcite.adapter.jdbc.JdbcConvention)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcProjectRule","l":"create(JdbcConvention)","u":"create(org.apache.calcite.adapter.jdbc.JdbcConvention)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcSortRule","l":"create(JdbcConvention)","u":"create(org.apache.calcite.adapter.jdbc.JdbcConvention)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcTableModificationRule","l":"create(JdbcConvention)","u":"create(org.apache.calcite.adapter.jdbc.JdbcConvention)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcUnionRule","l":"create(JdbcConvention)","u":"create(org.apache.calcite.adapter.jdbc.JdbcConvention)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcValuesRule","l":"create(JdbcConvention)","u":"create(org.apache.calcite.adapter.jdbc.JdbcConvention)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcToEnumerableConverterRule","l":"create(JdbcConvention)","u":"create(org.apache.calcite.adapter.jdbc.JdbcConvention)"},{"p":"org.apache.calcite.adapter.spark","c":"JdbcToSparkConverterRule","l":"create(JdbcConvention)","u":"create(org.apache.calcite.adapter.jdbc.JdbcConvention)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalIntersect","l":"create(List<RelNode>, boolean)","u":"create(java.util.List,boolean)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalMinus","l":"create(List<RelNode>, boolean)","u":"create(java.util.List,boolean)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalUnion","l":"create(List<RelNode>, boolean)","u":"create(java.util.List,boolean)"},{"p":"org.apache.calcite.chinook","c":"ChinookAvaticaServer.CalciteChinookMetaFactory","l":"create(List<String>)","u":"create(java.util.List)"},{"p":"org.apache.calcite.chinook","c":"ChinookAvaticaServer.RawChinookMetaFactory","l":"create(List<String>)","u":"create(java.util.List)"},{"p":"org.apache.calcite.util.format","c":"FormatModels","l":"create(Map<String, FormatElement>)","u":"create(java.util.Map)"},{"p":"org.apache.calcite.rel.externalize","c":"RelJson","l":"create(Map<String, Object>)","u":"create(java.util.Map)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings","l":"create(MappingType, int, int)","u":"create(org.apache.calcite.util.mapping.MappingType,int,int)"},{"p":"org.apache.calcite.schema.impl","c":"ScalarFunctionImpl","l":"create(Method)","u":"create(java.lang.reflect.Method)"},{"p":"org.apache.calcite.schema.impl","c":"TableFunctionImpl","l":"create(Method)","u":"create(java.lang.reflect.Method)"},{"p":"org.apache.calcite.schema.impl","c":"TableMacroImpl","l":"create(Method)","u":"create(java.lang.reflect.Method)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"create(MockCatalogReader, List<String>, boolean, double)","u":"create(org.apache.calcite.test.catalog.MockCatalogReader,java.util.List,boolean,double)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"create(MockCatalogReader, MockCatalogReader.MockSchema, String, boolean, double)","u":"create(org.apache.calcite.test.catalog.MockCatalogReader,org.apache.calcite.test.catalog.MockCatalogReader.MockSchema,java.lang.String,boolean,double)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"create(MockCatalogReader, MockCatalogReader.MockSchema, String, boolean, double, double)","u":"create(org.apache.calcite.test.catalog.MockCatalogReader,org.apache.calcite.test.catalog.MockCatalogReader.MockSchema,java.lang.String,boolean,double,double)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"create(MockCatalogReader, MockCatalogReader.MockSchema, String, boolean, double, MockCatalogReader.ColumnResolver)","u":"create(org.apache.calcite.test.catalog.MockCatalogReader,org.apache.calcite.test.catalog.MockCatalogReader.MockSchema,java.lang.String,boolean,double,org.apache.calcite.test.catalog.MockCatalogReader.ColumnResolver)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"create(MockCatalogReader, MockCatalogReader.MockSchema, String, boolean, double, MockCatalogReader.ColumnResolver, double)","u":"create(org.apache.calcite.test.catalog.MockCatalogReader,org.apache.calcite.test.catalog.MockCatalogReader.MockSchema,java.lang.String,boolean,double,org.apache.calcite.test.catalog.MockCatalogReader.ColumnResolver,double)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"create(MockCatalogReader, MockCatalogReader.MockSchema, String, boolean, double, MockCatalogReader.ColumnResolver, InitializerExpressionFactory, boolean)","u":"create(org.apache.calcite.test.catalog.MockCatalogReader,org.apache.calcite.test.catalog.MockCatalogReader.MockSchema,java.lang.String,boolean,double,org.apache.calcite.test.catalog.MockCatalogReader.ColumnResolver,org.apache.calcite.sql2rel.InitializerExpressionFactory,boolean)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"create(MockCatalogReader, MockCatalogReader.MockSchema, String, boolean, double, MockCatalogReader.ColumnResolver, InitializerExpressionFactory, boolean, Double)","u":"create(org.apache.calcite.test.catalog.MockCatalogReader,org.apache.calcite.test.catalog.MockCatalogReader.MockSchema,java.lang.String,boolean,double,org.apache.calcite.test.catalog.MockCatalogReader.ColumnResolver,org.apache.calcite.sql2rel.InitializerExpressionFactory,boolean,java.lang.Double)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MustFilterMockTable","l":"create(MockCatalogReader, MockCatalogReader.MockSchema, String, boolean, double, MockCatalogReader.ColumnResolver, InitializerExpressionFactory, boolean, Map<String, String>, List<Integer>)","u":"create(org.apache.calcite.test.catalog.MockCatalogReader,org.apache.calcite.test.catalog.MockCatalogReader.MockSchema,java.lang.String,boolean,double,org.apache.calcite.test.catalog.MockCatalogReader.ColumnResolver,org.apache.calcite.sql2rel.InitializerExpressionFactory,boolean,java.util.Map,java.util.List)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockModifiableViewRelOptTable","l":"create(MockCatalogReader.MockModifiableViewRelOptTable.MockModifiableViewTable, MockCatalogReader, String, String, String, boolean, double, MockCatalogReader.ColumnResolver)","u":"create(org.apache.calcite.test.catalog.MockCatalogReader.MockModifiableViewRelOptTable.MockModifiableViewTable,org.apache.calcite.test.catalog.MockCatalogReader,java.lang.String,java.lang.String,java.lang.String,boolean,double,org.apache.calcite.test.catalog.MockCatalogReader.ColumnResolver)"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor.UnifyRuleCall","l":"create(MutableRel)","u":"create(org.apache.calcite.rel.mutable.MutableRel)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser","l":"create(Reader, SqlParser.Config)","u":"create(java.io.Reader,org.apache.calcite.sql.parser.SqlParser.Config)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewOnlyAggregateRule.Config","l":"create(RelBuilderFactory)","u":"create(org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewProjectAggregateRule.Config","l":"create(RelBuilderFactory)","u":"create(org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableMergeUnion","l":"create(RelCollation, List<RelNode>, boolean)","u":"create(org.apache.calcite.rel.RelCollation,java.util.List,boolean)"},{"p":"org.apache.calcite.rex","c":"RexProgram","l":"create(RelDataType, List<? extends RexNode>, RexNode, List<? extends String>, RexBuilder)","u":"create(org.apache.calcite.rel.type.RelDataType,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.rex.RexBuilder)"},{"p":"org.apache.calcite.rex","c":"RexProgram","l":"create(RelDataType, List<? extends RexNode>, RexNode, RelDataType, RexBuilder)","u":"create(org.apache.calcite.rel.type.RelDataType,java.util.List,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexBuilder)"},{"p":"org.apache.calcite.sql.test","c":"SqlTestFactory.CatalogReaderFactory","l":"create(RelDataTypeFactory, boolean)","u":"create(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReaderDynamic","l":"create(RelDataTypeFactory, boolean)","u":"create(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReaderExtended","l":"create(RelDataTypeFactory, boolean)","u":"create(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReaderSimple","l":"create(RelDataTypeFactory, boolean)","u":"create(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)"},{"p":"org.apache.calcite.test.catalog","c":"MustFilterMockCatalogReader","l":"create(RelDataTypeFactory, boolean)","u":"create(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)"},{"p":"org.apache.calcite.rex","c":"RexCallBinding","l":"create(RelDataTypeFactory, RexCall, List<RelCollation>)","u":"create(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rex.RexCall,java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexCallBinding","l":"create(RelDataTypeFactory, RexCall, RexProgram, List<RelCollation>)","u":"create(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rex.RexCall,org.apache.calcite.rex.RexProgram,java.util.List)"},{"p":"org.apache.calcite.sql.validate.implicit","c":"TypeCoercionFactory","l":"create(RelDataTypeFactory, SqlValidator)","u":"create(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.sql.validate.SqlValidator)"},{"p":"org.apache.calcite.rex","c":"RexProgram","l":"create(RelInput)","u":"create(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel.stream","c":"LogicalDelta","l":"create(RelNode)","u":"create(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalAggregate","l":"create(RelNode, boolean, ImmutableBitSet, List<ImmutableBitSet>, List<AggregateCall>)","u":"create(org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableInterpreter","l":"create(RelNode, double)","u":"create(org.apache.calcite.rel.RelNode,double)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalAggregate","l":"create(RelNode, ImmutableBitSet, List<ImmutableBitSet>, List<AggregateCall>)","u":"create(org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableProject","l":"create(RelNode, List<? extends RexNode>, RelDataType)","u":"create(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalAggregate","l":"create(RelNode, List<RelHint>, ImmutableBitSet, List<ImmutableBitSet>, List<AggregateCall>)","u":"create(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalProject","l":"create(RelNode, List<RelHint>, List<? extends RexNode>, List<? extends String>)","u":"create(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,java.util.List)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalProject","l":"create(RelNode, List<RelHint>, List<? extends RexNode>, List<? extends String>, Set<CorrelationId>)","u":"create(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,java.util.List,java.util.Set)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalProject","l":"create(RelNode, List<RelHint>, List<? extends RexNode>, RelDataType)","u":"create(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalProject","l":"create(RelNode, List<RelHint>, List<? extends RexNode>, RelDataType, Set<CorrelationId>)","u":"create(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,org.apache.calcite.rel.type.RelDataType,java.util.Set)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableLimitSort","l":"create(RelNode, RelCollation, RexNode, RexNode)","u":"create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableSort","l":"create(RelNode, RelCollation, RexNode, RexNode)","u":"create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalSort","l":"create(RelNode, RelCollation, RexNode, RexNode)","u":"create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableCollect","l":"create(RelNode, RelDataType)","u":"create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.core","c":"Collect","l":"create(RelNode, RelDataType)","u":"create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableMatch","l":"create(RelNode, RelDataType, RexNode, boolean, boolean, Map<String, RexNode>, Map<String, RexNode>, RexNode, Map<String, ? extends SortedSet<String>>, boolean, ImmutableBitSet, RelCollation, RexNode)","u":"create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean,boolean,java.util.Map,java.util.Map,org.apache.calcite.rex.RexNode,java.util.Map,boolean,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalMatch","l":"create(RelNode, RelDataType, RexNode, boolean, boolean, Map<String, RexNode>, Map<String, RexNode>, RexNode, Map<String, ? extends SortedSet<String>>, boolean, ImmutableBitSet, RelCollation, RexNode)","u":"create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean,boolean,java.util.Map,java.util.Map,org.apache.calcite.rex.RexNode,java.util.Map,boolean,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalExchange","l":"create(RelNode, RelDistribution)","u":"create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelDistribution)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalSortExchange","l":"create(RelNode, RelDistribution, RelCollation)","u":"create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelDistribution,org.apache.calcite.rel.RelCollation)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalRepeatUnion","l":"create(RelNode, RelNode, boolean, int, RelOptTable)","u":"create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,boolean,int,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalRepeatUnion","l":"create(RelNode, RelNode, boolean, RelOptTable)","u":"create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableCorrelate","l":"create(RelNode, RelNode, CorrelationId, ImmutableBitSet, JoinRelType)","u":"create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.CorrelationId,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalCorrelate","l":"create(RelNode, RelNode, CorrelationId, ImmutableBitSet, JoinRelType)","u":"create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.CorrelationId,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalCorrelate","l":"create(RelNode, RelNode, List<RelHint>, CorrelationId, ImmutableBitSet, JoinRelType)","u":"create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.CorrelationId,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalAsofJoin","l":"create(RelNode, RelNode, List<RelHint>, RexNode, RexNode, JoinRelType, ImmutableList<RelDataTypeField>)","u":"create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType,com.google.common.collect.ImmutableList)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalJoin","l":"create(RelNode, RelNode, List<RelHint>, RexNode, Set<CorrelationId>, JoinRelType)","u":"create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rex.RexNode,java.util.Set,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalJoin","l":"create(RelNode, RelNode, List<RelHint>, RexNode, Set<CorrelationId>, JoinRelType, boolean, ImmutableList<RelDataTypeField>)","u":"create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rex.RexNode,java.util.Set,org.apache.calcite.rel.core.JoinRelType,boolean,com.google.common.collect.ImmutableList)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableBatchNestedLoopJoin","l":"create(RelNode, RelNode, RexNode, ImmutableBitSet, Set<CorrelationId>, JoinRelType)","u":"create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableMergeJoin","l":"create(RelNode, RelNode, RexNode, ImmutableIntList, ImmutableIntList, JoinRelType)","u":"create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableAsofJoin","l":"create(RelNode, RelNode, RexNode, RexNode, Set<CorrelationId>, JoinRelType)","u":"create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.util.Set,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableHashJoin","l":"create(RelNode, RelNode, RexNode, Set<CorrelationId>, JoinRelType)","u":"create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,java.util.Set,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableNestedLoopJoin","l":"create(RelNode, RelNode, RexNode, Set<CorrelationId>, JoinRelType)","u":"create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,java.util.Set,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableFilter","l":"create(RelNode, RexNode)","u":"create(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableFilter","l":"create(RelNode, RexNode)","u":"create(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalFilter","l":"create(RelNode, RexNode)","u":"create(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalSnapshot","l":"create(RelNode, RexNode)","u":"create(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalFilter","l":"create(RelNode, RexNode, ImmutableSet<CorrelationId>)","u":"create(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,com.google.common.collect.ImmutableSet)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableLimit","l":"create(RelNode, RexNode, RexNode)","u":"create(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableCalc","l":"create(RelNode, RexProgram)","u":"create(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalCalc","l":"create(RelNode, RexProgram)","u":"create(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableTableSpool","l":"create(RelNode, Spool.Type, Spool.Type, RelOptTable)","u":"create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Spool.Type,org.apache.calcite.rel.core.Spool.Type,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalTableSpool","l":"create(RelNode, Spool.Type, Spool.Type, RelOptTable)","u":"create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Spool.Type,org.apache.calcite.rel.core.Spool.Type,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.rel.core","c":"Collect","l":"create(RelNode, SqlKind, String)","u":"create(org.apache.calcite.rel.RelNode,org.apache.calcite.sql.SqlKind,java.lang.String)"},{"p":"org.apache.calcite.rel.core","c":"Collect","l":"create(RelNode, SqlTypeName, String)","u":"create(org.apache.calcite.rel.RelNode,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalTableFunctionScan","l":"create(RelOptCluster, List<RelNode>, RexNode, Type, RelDataType, Set<RelColumnMapping>)","u":"create(org.apache.calcite.plan.RelOptCluster,java.util.List,org.apache.calcite.rex.RexNode,java.lang.reflect.Type,org.apache.calcite.rel.type.RelDataType,java.util.Set)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableValues","l":"create(RelOptCluster, RelDataType, ImmutableList<ImmutableList<RexLiteral>>)","u":"create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.type.RelDataType,com.google.common.collect.ImmutableList)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalValues","l":"create(RelOptCluster, RelDataType, ImmutableList<ImmutableList<RexLiteral>>)","u":"create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.type.RelDataType,com.google.common.collect.ImmutableList)"},{"p":"org.apache.calcite.tools","c":"RelBuilderFactory","l":"create(RelOptCluster, RelOptSchema)","u":"create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelOptSchema)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableTableScan","l":"create(RelOptCluster, RelOptTable)","u":"create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableTableScan","l":"create(RelOptCluster, RelOptTable)","u":"create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalTableScan","l":"create(RelOptCluster, RelOptTable, List<RelHint>)","u":"create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelOptTable,java.util.List)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableTableScan","l":"create(RelOptCluster, RelOptTable, List<RexNode>, List<Integer>)","u":"create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelOptTable,java.util.List,java.util.List)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalWindow","l":"create(RelOptCluster, RelTraitSet, RelBuilder, RelNode, RexProgram)","u":"create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalMatch","l":"create(RelOptCluster, RelTraitSet, RelNode, RelDataType, RexNode, boolean, boolean, Map<String, RexNode>, Map<String, RexNode>, RexNode, Map<String, ? extends SortedSet<String>>, boolean, ImmutableBitSet, RelCollation, RexNode)","u":"create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean,boolean,java.util.Map,java.util.Map,org.apache.calcite.rex.RexNode,java.util.Map,boolean,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbFilter","l":"create(RelOptCluster, RelTraitSet, RelNode, RexNode, IndexCondition, TableDef, String)","u":"create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.innodb.IndexCondition,com.alibaba.innodb.java.reader.schema.TableDef,java.lang.String)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery","l":"create(RelOptCluster, RelTraitSet, RelOptTable, DruidTable, List<RelNode>)","u":"create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.plan.RelOptTable,org.apache.calcite.adapter.druid.DruidTable,java.util.List)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery","l":"create(RelOptCluster, RelTraitSet, RelOptTable, DruidTable, List<RelNode>, Map<SqlOperator, DruidSqlOperatorConverter>)","u":"create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.plan.RelOptTable,org.apache.calcite.adapter.druid.DruidTable,java.util.List,java.util.Map)"},{"p":"org.apache.calcite.plan","c":"RelOptCluster","l":"create(RelOptPlanner, RexBuilder)","u":"create(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rex.RexBuilder)"},{"p":"org.apache.calcite.prepare","c":"RelOptTableImpl","l":"create(RelOptSchema, RelDataType, CalciteSchema.TableEntry, Double)","u":"create(org.apache.calcite.plan.RelOptSchema,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.jdbc.CalciteSchema.TableEntry,java.lang.Double)"},{"p":"org.apache.calcite.prepare","c":"RelOptTableImpl","l":"create(RelOptSchema, RelDataType, List<String>, Expression)","u":"create(org.apache.calcite.plan.RelOptSchema,org.apache.calcite.rel.type.RelDataType,java.util.List,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.prepare","c":"RelOptTableImpl","l":"create(RelOptSchema, RelDataType, List<String>, Table, Expression)","u":"create(org.apache.calcite.plan.RelOptSchema,org.apache.calcite.rel.type.RelDataType,java.util.List,org.apache.calcite.schema.Table,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.prepare","c":"RelOptTableImpl","l":"create(RelOptSchema, RelDataType, List<String>, Table, TableExpressionFactory)","u":"create(org.apache.calcite.plan.RelOptSchema,org.apache.calcite.rel.type.RelDataType,java.util.List,org.apache.calcite.schema.Table,org.apache.calcite.linq4j.tree.TableExpressionFactory)"},{"p":"org.apache.calcite.prepare","c":"RelOptTableImpl","l":"create(RelOptSchema, RelDataType, Table, ImmutableList<String>)","u":"create(org.apache.calcite.plan.RelOptSchema,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.schema.Table,com.google.common.collect.ImmutableList)"},{"p":"org.apache.calcite.prepare","c":"RelOptTableImpl","l":"create(RelOptSchema, RelDataType, Table, Path)","u":"create(org.apache.calcite.plan.RelOptSchema,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.schema.Table,org.apache.calcite.schema.Path)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalTableModify","l":"create(RelOptTable, Prepare.CatalogReader, RelNode, TableModify.Operation, List<String>, List<RexNode>, boolean)","u":"create(org.apache.calcite.plan.RelOptTable,org.apache.calcite.prepare.Prepare.CatalogReader,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.TableModify.Operation,java.util.List,java.util.List,boolean)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableUncollect","l":"create(RelTraitSet, RelNode, boolean)","u":"create(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean)"},{"p":"org.apache.calcite.rel.core","c":"Uncollect","l":"create(RelTraitSet, RelNode, boolean, List<String>)","u":"create(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,java.util.List)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalWindow","l":"create(RelTraitSet, RelNode, List<RexLiteral>, RelDataType, List<Window.Group>)","u":"create(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType,java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexProgramBuilder","l":"create(RexBuilder, RelDataType, List<RexNode>, List<? extends RexNode>, RexNode, RelDataType, boolean)","u":"create(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,java.util.List,java.util.List,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,boolean)"},{"p":"org.apache.calcite.rex","c":"RexProgramBuilder","l":"create(RexBuilder, RelDataType, List<RexNode>, List<? extends RexNode>, RexNode, RelDataType, boolean, boolean)","u":"create(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,java.util.List,java.util.List,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,boolean,boolean)"},{"p":"org.apache.calcite.rex","c":"RexProgramBuilder","l":"create(RexBuilder, RelDataType, List<RexNode>, List<? extends RexNode>, RexNode, RelDataType, boolean, RexSimplify)","u":"create(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,java.util.List,java.util.List,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.rex.RexSimplify)"},{"p":"org.apache.calcite.rex","c":"RexProgramBuilder","l":"create(RexBuilder, RelDataType, List<RexNode>, List<RexLocalRef>, RexLocalRef, RelDataType, RexShuttle, boolean)","u":"create(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,java.util.List,java.util.List,org.apache.calcite.rex.RexLocalRef,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexShuttle,boolean)"},{"p":"org.apache.calcite.runtime.variant","c":"VariantSqlValue","l":"create(RoundingMode, Object, RuntimeTypeInformation)","u":"create(java.math.RoundingMode,java.lang.Object,org.apache.calcite.runtime.rtti.RuntimeTypeInformation)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcCatalogSchema","l":"create(SchemaPlus, String, DataSource, SqlDialectFactory, String)","u":"create(org.apache.calcite.schema.SchemaPlus,java.lang.String,javax.sql.DataSource,org.apache.calcite.sql.SqlDialectFactory,java.lang.String)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcSchema","l":"create(SchemaPlus, String, DataSource, SqlDialectFactory, String, String)","u":"create(org.apache.calcite.schema.SchemaPlus,java.lang.String,javax.sql.DataSource,org.apache.calcite.sql.SqlDialectFactory,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcCatalogSchema","l":"create(SchemaPlus, String, DataSource, String)","u":"create(org.apache.calcite.schema.SchemaPlus,java.lang.String,javax.sql.DataSource,java.lang.String)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcSchema","l":"create(SchemaPlus, String, DataSource, String, String)","u":"create(org.apache.calcite.schema.SchemaPlus,java.lang.String,javax.sql.DataSource,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.model","c":"ModelHandler","l":"create(SchemaPlus, String, List<String>, String, String)","u":"create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidTableFactory","l":"create(SchemaPlus, String, Map, RelDataType)","u":"create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.adapter.redis","c":"RedisTableFactory","l":"create(SchemaPlus, String, Map, RelDataType)","u":"create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.adapter.arrow","c":"ArrowSchemaFactory","l":"create(SchemaPlus, String, Map<String, Object>)","u":"create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraSchemaFactory","l":"create(SchemaPlus, String, Map<String, Object>)","u":"create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)"},{"p":"org.apache.calcite.adapter.clone","c":"CloneSchema.Factory","l":"create(SchemaPlus, String, Map<String, Object>)","u":"create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)"},{"p":"org.apache.calcite.adapter.csv","c":"CsvSchemaFactory","l":"create(SchemaPlus, String, Map<String, Object>)","u":"create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidSchemaFactory","l":"create(SchemaPlus, String, Map<String, Object>)","u":"create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchSchemaFactory","l":"create(SchemaPlus, String, Map<String, Object>)","u":"create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)"},{"p":"org.apache.calcite.adapter.file","c":"FileSchemaFactory","l":"create(SchemaPlus, String, Map<String, Object>)","u":"create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeSchemaFactory","l":"create(SchemaPlus, String, Map<String, Object>)","u":"create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)"},{"p":"org.apache.calcite.adapter.geode.simple","c":"GeodeSimpleSchemaFactory","l":"create(SchemaPlus, String, Map<String, Object>)","u":"create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbSchemaFactory","l":"create(SchemaPlus, String, Map<String, Object>)","u":"create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)"},{"p":"org.apache.calcite.adapter.java","c":"ReflectiveSchema.Factory","l":"create(SchemaPlus, String, Map<String, Object>)","u":"create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcSchema","l":"create(SchemaPlus, String, Map<String, Object>)","u":"create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcSchema.Factory","l":"create(SchemaPlus, String, Map<String, Object>)","u":"create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoSchemaFactory","l":"create(SchemaPlus, String, Map<String, Object>)","u":"create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)"},{"p":"org.apache.calcite.adapter.pig","c":"PigSchemaFactory","l":"create(SchemaPlus, String, Map<String, Object>)","u":"create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)"},{"p":"org.apache.calcite.adapter.redis","c":"RedisSchemaFactory","l":"create(SchemaPlus, String, Map<String, Object>)","u":"create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)"},{"p":"org.apache.calcite.adapter.tpcds","c":"TpcdsSchemaFactory","l":"create(SchemaPlus, String, Map<String, Object>)","u":"create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)"},{"p":"org.apache.calcite.adapter.tpch","c":"TpchSchemaFactory","l":"create(SchemaPlus, String, Map<String, Object>)","u":"create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)"},{"p":"org.apache.calcite.schema.impl","c":"AbstractSchema.Factory","l":"create(SchemaPlus, String, Map<String, Object>)","u":"create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)"},{"p":"org.apache.calcite.schema","c":"SchemaFactory","l":"create(SchemaPlus, String, Map<String, Object>)","u":"create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)"},{"p":"org.apache.calcite.adapter.csv","c":"CsvStreamTableFactory","l":"create(SchemaPlus, String, Map<String, Object>, RelDataType)","u":"create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.adapter.csv","c":"CsvTableFactory","l":"create(SchemaPlus, String, Map<String, Object>, RelDataType)","u":"create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.adapter.file","c":"CsvTableFactory","l":"create(SchemaPlus, String, Map<String, Object>, RelDataType)","u":"create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.adapter.kafka","c":"KafkaTableFactory","l":"create(SchemaPlus, String, Map<String, Object>, RelDataType)","u":"create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.adapter.pig","c":"PigTableFactory","l":"create(SchemaPlus, String, Map<String, Object>, RelDataType)","u":"create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.chinook","c":"PreferredAlbumsTableFactory","l":"create(SchemaPlus, String, Map<String, Object>, RelDataType)","u":"create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.chinook","c":"PreferredGenresTableFactory","l":"create(SchemaPlus, String, Map<String, Object>, RelDataType)","u":"create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.schema","c":"TableFactory","l":"create(SchemaPlus, String, Map<String, Object>, RelDataType)","u":"create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.test.schemata.orderstream","c":"InfiniteOrdersStreamTableFactory","l":"create(SchemaPlus, String, Map<String, Object>, RelDataType)","u":"create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.test.schemata.orderstream","c":"OrdersStreamTableFactory","l":"create(SchemaPlus, String, Map<String, Object>, RelDataType)","u":"create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.test.schemata.orderstream","c":"ProductsTableFactory","l":"create(SchemaPlus, String, Map<String, Object>, RelDataType)","u":"create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"create(SqlAggFunction, boolean, boolean, boolean, List<Integer>, int, ImmutableBitSet, RelCollation, int, RelNode, RelDataType, String)","u":"create(org.apache.calcite.sql.SqlAggFunction,boolean,boolean,boolean,java.util.List,int,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.RelCollation,int,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.type.RelDataType,java.lang.String)"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"create(SqlAggFunction, boolean, boolean, boolean, List<Integer>, int, RelCollation, RelDataType, String)","u":"create(org.apache.calcite.sql.SqlAggFunction,boolean,boolean,boolean,java.util.List,int,org.apache.calcite.rel.RelCollation,org.apache.calcite.rel.type.RelDataType,java.lang.String)"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"create(SqlAggFunction, boolean, boolean, boolean, List<RexNode>, List<Integer>, int, ImmutableBitSet, RelCollation, int, RelNode, RelDataType, String)","u":"create(org.apache.calcite.sql.SqlAggFunction,boolean,boolean,boolean,java.util.List,java.util.List,int,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.RelCollation,int,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.type.RelDataType,java.lang.String)"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"create(SqlAggFunction, boolean, boolean, boolean, List<RexNode>, List<Integer>, int, ImmutableBitSet, RelCollation, RelDataType, String)","u":"create(org.apache.calcite.sql.SqlAggFunction,boolean,boolean,boolean,java.util.List,java.util.List,int,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.RelCollation,org.apache.calcite.rel.type.RelDataType,java.lang.String)"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"create(SqlAggFunction, boolean, boolean, List<Integer>, int, int, RelNode, RelDataType, String)","u":"create(org.apache.calcite.sql.SqlAggFunction,boolean,boolean,java.util.List,int,int,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.type.RelDataType,java.lang.String)"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"create(SqlAggFunction, boolean, boolean, List<Integer>, int, RelCollation, int, RelNode, RelDataType, String)","u":"create(org.apache.calcite.sql.SqlAggFunction,boolean,boolean,java.util.List,int,org.apache.calcite.rel.RelCollation,int,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.type.RelDataType,java.lang.String)"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"create(SqlAggFunction, boolean, boolean, List<Integer>, int, RelCollation, RelDataType, String)","u":"create(org.apache.calcite.sql.SqlAggFunction,boolean,boolean,java.util.List,int,org.apache.calcite.rel.RelCollation,org.apache.calcite.rel.type.RelDataType,java.lang.String)"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"create(SqlAggFunction, boolean, boolean, List<Integer>, int, RelDataType, String)","u":"create(org.apache.calcite.sql.SqlAggFunction,boolean,boolean,java.util.List,int,org.apache.calcite.rel.type.RelDataType,java.lang.String)"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"create(SqlAggFunction, boolean, List<Integer>, int, int, RelNode, RelDataType, String)","u":"create(org.apache.calcite.sql.SqlAggFunction,boolean,java.util.List,int,int,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.type.RelDataType,java.lang.String)"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"create(SqlAggFunction, boolean, List<Integer>, int, RelDataType, String)","u":"create(org.apache.calcite.sql.SqlAggFunction,boolean,java.util.List,int,org.apache.calcite.rel.type.RelDataType,java.lang.String)"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"create(SqlAggFunction, boolean, List<Integer>, int, RelNode, RelDataType, String)","u":"create(org.apache.calcite.sql.SqlAggFunction,boolean,java.util.List,int,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.type.RelDataType,java.lang.String)"},{"p":"org.apache.calcite.sql.test","c":"SqlTestFactory.TypeFactoryFactory","l":"create(SqlConformance, RelDataTypeSystem)","u":"create(org.apache.calcite.sql.validate.SqlConformance,org.apache.calcite.rel.type.RelDataTypeSystem)"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"create(SqlIdentifier, SqlIdentifier, SqlNodeList, SqlNodeList, SqlLiteral, SqlNode, SqlNode, SqlLiteral, SqlLiteral, SqlParserPos)","u":"create(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"create(SqlIdentifier, SqlIdentifier, SqlNodeList, SqlNodeList, SqlLiteral, SqlNode, SqlNode, SqlLiteral, SqlParserPos)","u":"create(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql.fun","c":"SqlBasicAggFunction","l":"create(SqlKind, SqlReturnTypeInference, SqlOperandTypeChecker)","u":"create(org.apache.calcite.sql.SqlKind,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker)"},{"p":"org.apache.calcite.sql","c":"SqlBasicFunction","l":"create(SqlKind, SqlReturnTypeInference, SqlOperandTypeChecker)","u":"create(org.apache.calcite.sql.SqlKind,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker)"},{"p":"org.apache.calcite.rex","c":"RexWindowExclusion","l":"create(SqlNode)","u":"create(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.rex","c":"RexWindowBounds","l":"create(SqlNode, RexNode)","u":"create(org.apache.calcite.sql.SqlNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rex","c":"RexWindowBound","l":"create(SqlNode, RexNode)","u":"create(org.apache.calcite.sql.SqlNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.sql.fun","c":"SqlCallFactory","l":"create(SqlOperator, SqlLiteral, SqlParserPos, SqlNode...)","u":"create(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode...)"},{"p":"org.apache.calcite.sql.test","c":"SqlTestFactory.ValidatorFactory","l":"create(SqlOperatorTable, SqlValidatorCatalogReader, RelDataTypeFactory, SqlValidator.Config)","u":"create(org.apache.calcite.sql.SqlOperatorTable,org.apache.calcite.sql.validate.SqlValidatorCatalogReader,org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.sql.validate.SqlValidator.Config)"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"create(SqlParserPos, SqlAggFunction, boolean, boolean, boolean, List<RexNode>, List<Integer>, int, ImmutableBitSet, RelCollation, int, RelNode, RelDataType, String)","u":"create(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlAggFunction,boolean,boolean,boolean,java.util.List,java.util.List,int,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.RelCollation,int,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.type.RelDataType,java.lang.String)"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"create(SqlParserPos, SqlAggFunction, boolean, boolean, boolean, List<RexNode>, List<Integer>, int, ImmutableBitSet, RelCollation, RelDataType, String)","u":"create(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlAggFunction,boolean,boolean,boolean,java.util.List,java.util.List,int,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.RelCollation,org.apache.calcite.rel.type.RelDataType,java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"SqlQualified","l":"create(SqlValidatorScope, int, SqlValidatorNamespace, SqlIdentifier)","u":"create(org.apache.calcite.sql.validate.SqlValidatorScope,int,org.apache.calcite.sql.validate.SqlValidatorNamespace,org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.linq4j.tree","c":"Blocks","l":"create(Statement, BlockStatement)","u":"create(org.apache.calcite.linq4j.tree.Statement,org.apache.calcite.linq4j.tree.BlockStatement)"},{"p":"org.apache.calcite.sql.fun","c":"SqlBasicOperator","l":"create(String)","u":"create(java.lang.String)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser","l":"create(String)","u":"create(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlAccessType","l":"create(String)","u":"create(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlWriter.FrameTypeEnum","l":"create(String)","u":"create(java.lang.String)"},{"p":"org.apache.calcite.adapter.innodb","c":"IndexCondition","l":"create(String, QueryType, List<Object>, ComparisonOperator, ComparisonOperator, List<Object>, List<Object>)","u":"create(java.lang.String,org.apache.calcite.adapter.innodb.QueryType,java.util.List,com.alibaba.innodb.java.reader.comparator.ComparisonOperator,com.alibaba.innodb.java.reader.comparator.ComparisonOperator,java.util.List,java.util.List)"},{"p":"org.apache.calcite.sql.fun","c":"SqlBasicAggFunction","l":"create(String, SqlKind, SqlReturnTypeInference, SqlOperandTypeChecker)","u":"create(java.lang.String,org.apache.calcite.sql.SqlKind,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker)"},{"p":"org.apache.calcite.sql","c":"SqlBasicFunction","l":"create(String, SqlKind, SqlReturnTypeInference, SqlOperandTypeChecker)","u":"create(java.lang.String,org.apache.calcite.sql.SqlKind,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser","l":"create(String, SqlParser.Config)","u":"create(java.lang.String,org.apache.calcite.sql.parser.SqlParser.Config)"},{"p":"org.apache.calcite.sql","c":"SqlBasicFunction","l":"create(String, SqlReturnTypeInference, SqlOperandTypeChecker)","u":"create(java.lang.String,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker)"},{"p":"org.apache.calcite.sql","c":"SqlBasicFunction","l":"create(String, SqlReturnTypeInference, SqlOperandTypeChecker, SqlFunctionCategory)","u":"create(java.lang.String,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker,org.apache.calcite.sql.SqlFunctionCategory)"},{"p":"org.apache.calcite.sql","c":"SqlAccessType","l":"create(String[])","u":"create(java.lang.String[])"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockRelViewTable","l":"create(ViewTable, MockCatalogReader, String, String, String, boolean, double, MockCatalogReader.ColumnResolver)","u":"create(org.apache.calcite.schema.impl.ViewTable,org.apache.calcite.test.catalog.MockCatalogReader,java.lang.String,java.lang.String,java.lang.String,boolean,double,org.apache.calcite.test.catalog.MockCatalogReader.ColumnResolver)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableAggregateBase","l":"createAccumulatorAdders(ParameterExpression, List<AggImpState>, PhysType, ParameterExpression, PhysType, BlockBuilder, EnumerableRelImplementor, JavaTypeFactory)","u":"createAccumulatorAdders(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.java.JavaTypeFactory)"},{"p":"org.apache.calcite.sql.test","c":"SqlTestFactory","l":"createAdvisor()"},{"p":"org.apache.calcite.adapter.pig","c":"PigRelFactories.PigAggregateFactory","l":"createAggregate(RelNode, List<RelHint>, ImmutableBitSet, ImmutableList<ImmutableBitSet>, List<AggregateCall>)","u":"createAggregate(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,com.google.common.collect.ImmutableList,java.util.List)"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.AggregateFactory","l":"createAggregate(RelNode, List<RelHint>, ImmutableBitSet, ImmutableList<ImmutableBitSet>, List<AggregateCall>)","u":"createAggregate(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,com.google.common.collect.ImmutableList,java.util.List)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"createAggregate(SqlToRelConverter.Blackboard, ImmutableBitSet, ImmutableList<ImmutableBitSet>, List<AggregateCall>)","u":"createAggregate(org.apache.calcite.sql2rel.SqlToRelConverter.Blackboard,org.apache.calcite.util.ImmutableBitSet,com.google.common.collect.ImmutableList,java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableAggregateBase","l":"createAggStateTypes(List<Expression>, BlockBuilder, List<AggImpState>, JavaTypeFactory)","u":"createAggStateTypes(java.util.List,org.apache.calcite.linq4j.tree.BlockBuilder,java.util.List,org.apache.calcite.adapter.java.JavaTypeFactory)"},{"p":"org.apache.calcite.schema.impl","c":"ScalarFunctionImpl","l":"createAll(Class<?>)","u":"createAll(java.lang.Class)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdExpressionLineage","l":"createAllPossibleExpressions(RexBuilder, RexNode, Map<RexInputRef, Set<RexNode>>)","u":"createAllPossibleExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,java.util.Map)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"createApproxNumeric(String, SqlParserPos)","u":"createApproxNumeric(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory","l":"createArrayType(RelDataType, long)","u":"createArrayType(org.apache.calcite.rel.type.RelDataType,long)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFactoryImpl","l":"createArrayType(RelDataType, long)","u":"createArrayType(org.apache.calcite.rel.type.RelDataType,long)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"createArrayType(RelDataTypeFactory, RelDataType, boolean)","u":"createArrayType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean)"},{"p":"org.apache.calcite.rel.rel2sql","c":"RelToSqlConverter","l":"createAsFullOperands(RelDataType, SqlNode, String)","u":"createAsFullOperands(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlNode,java.lang.String)"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.AsofJoinFactory","l":"createAsofJoin(RelNode, RelNode, List<RelHint>, RexNode, RexNode, JoinRelType)","u":"createAsofJoin(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"createAsofJoin(SqlParserPos, SqlToRelConverter.Blackboard, RelNode, RelNode, RexNode, RexNode, JoinRelType)","u":"createAsofJoin(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql2rel.SqlToRelConverter.Blackboard,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"createBinaryString(byte[], SqlParserPos)","u":"createBinaryString(byte[],org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"createBinaryString(String, SqlParserPos)","u":"createBinaryString(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"createBinding(Aggregate)","u":"createBinding(org.apache.calcite.rel.core.Aggregate)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"createBlackboard(SqlValidatorScope, Map<String, RexNode>, boolean)","u":"createBlackboard(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.Map,boolean)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"createBoolean(boolean, SqlParserPos)","u":"createBoolean(boolean,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"createBound(SqlLiteral)","u":"createBound(org.apache.calcite.sql.SqlLiteral)"},{"p":"org.apache.calcite.sql.dialect","c":"JethroDataSqlDialect","l":"createCache()"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"createCall(SqlLiteral, SqlParserPos, Iterable<? extends SqlNode>)","u":"createCall(org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.parser.SqlParserPos,java.lang.Iterable)"},{"p":"org.apache.calcite.sql.fun","c":"SqlCaseOperator","l":"createCall(SqlLiteral, SqlParserPos, SqlNode...)","u":"createCall(org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode...)"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonArrayAggAggFunction","l":"createCall(SqlLiteral, SqlParserPos, SqlNode...)","u":"createCall(org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode...)"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonArrayFunction","l":"createCall(SqlLiteral, SqlParserPos, SqlNode...)","u":"createCall(org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode...)"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonObjectFunction","l":"createCall(SqlLiteral, SqlParserPos, SqlNode...)","u":"createCall(org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode...)"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonQueryFunction","l":"createCall(SqlLiteral, SqlParserPos, SqlNode...)","u":"createCall(org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode...)"},{"p":"org.apache.calcite.sql.fun","c":"SqlTrimFunction","l":"createCall(SqlLiteral, SqlParserPos, SqlNode...)","u":"createCall(org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode...)"},{"p":"org.apache.calcite.sql","c":"SqlAsofJoin.SqlAsofJoinOperator","l":"createCall(SqlLiteral, SqlParserPos, SqlNode...)","u":"createCall(org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode...)"},{"p":"org.apache.calcite.sql","c":"SqlJdbcFunctionCall","l":"createCall(SqlLiteral, SqlParserPos, SqlNode...)","u":"createCall(org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode...)"},{"p":"org.apache.calcite.sql","c":"SqlJoin.SqlJoinOperator","l":"createCall(SqlLiteral, SqlParserPos, SqlNode...)","u":"createCall(org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode...)"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize.SqlMatchRecognizeOperator","l":"createCall(SqlLiteral, SqlParserPos, SqlNode...)","u":"createCall(org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode...)"},{"p":"org.apache.calcite.sql","c":"SqlNullTreatmentOperator","l":"createCall(SqlLiteral, SqlParserPos, SqlNode...)","u":"createCall(org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode...)"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"createCall(SqlLiteral, SqlParserPos, SqlNode...)","u":"createCall(org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode...)"},{"p":"org.apache.calcite.sql","c":"SqlSelectOperator","l":"createCall(SqlLiteral, SqlParserPos, SqlNode...)","u":"createCall(org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode...)"},{"p":"org.apache.calcite.sql","c":"SqlSetSemanticsTableOperator","l":"createCall(SqlLiteral, SqlParserPos, SqlNode...)","u":"createCall(org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode...)"},{"p":"org.apache.calcite.sql","c":"SqlSnapshot.SqlSnapshotOperator","l":"createCall(SqlLiteral, SqlParserPos, SqlNode...)","u":"createCall(org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode...)"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"createCall(SqlLiteral, SqlParserPos, SqlNodeList)","u":"createCall(org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"createCall(SqlNodeList)","u":"createCall(org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.sql","c":"SqlSelectOperator","l":"createCall(SqlNodeList, SqlNodeList, SqlNode, SqlNode, SqlNodeList, SqlNode, SqlNodeList, SqlNode, SqlNodeList, SqlNode, SqlNode, SqlNodeList, SqlParserPos)","u":"createCall(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"createCall(SqlOperator, SqlParserPos, List<SqlNode>)","u":"createCall(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.parser.SqlParserPos,java.util.List)"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"createCall(SqlParserPos, List<? extends SqlNode>)","u":"createCall(org.apache.calcite.sql.parser.SqlParserPos,java.util.List)"},{"p":"org.apache.calcite.sql","c":"SqlJdbcFunctionCall.SimpleMakeCall","l":"createCall(SqlParserPos, SqlNode...)","u":"createCall(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode...)"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"createCall(SqlParserPos, SqlNode...)","u":"createCall(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode...)"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"createCall(SqlParserPos, SqlNodeList)","u":"createCall(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableRels","l":"createCastRel(MutableRel, RelDataType, boolean)","u":"createCastRel(org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.type.RelDataType,boolean)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"createCastRel(RelNode, RelDataType, boolean)","u":"createCastRel(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.type.RelDataType,boolean)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"createCastRel(RelNode, RelDataType, boolean, RelFactories.ProjectFactory)","u":"createCastRel(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.rel.core.RelFactories.ProjectFactory)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"createCharString(String, SqlParserPos)","u":"createCharString(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"createCharString(String, String, SqlParserPos)","u":"createCharString(java.lang.String,java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql.test","c":"ResultCheckers","l":"createChecker(Matcher<T>, JdbcType<T>)","u":"createChecker(org.hamcrest.Matcher,org.apache.calcite.util.JdbcType)"},{"p":"org.apache.calcite.sql.test","c":"ResultCheckers","l":"createChecker(Object)","u":"createChecker(java.lang.Object)"},{"p":"org.apache.calcite.adapter.geode.util","c":"GeodeUtils","l":"createClientCache(String, int, String, boolean)","u":"createClientCache(java.lang.String,int,java.lang.String,boolean)"},{"p":"org.apache.calcite.adapter.clone","c":"CloneSchema","l":"createCloneTable(JavaTypeFactory, RelProtoDataType, List<ColumnMetaData.Rep>, Enumerable<T>)","u":"createCloneTable(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelProtoDataType,java.util.List,org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.adapter.clone","c":"CloneSchema","l":"createCloneTable(JavaTypeFactory, RelProtoDataType, List<RelCollation>, List<ColumnMetaData.Rep>, Enumerable<T>)","u":"createCloneTable(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelProtoDataType,java.util.List,java.util.List,org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.plan","c":"RelOptQuery","l":"createCluster(RelDataTypeFactory, RexBuilder)","u":"createCluster(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rex.RexBuilder)"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl","l":"createCluster(RelOptPlanner, RexBuilder)","u":"createCluster(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rex.RexBuilder)"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaColumnFactory","l":"createColumn(Table, String, String, String, String, int, String, Integer, Integer, int, int, Integer, int, String)","u":"createColumn(org.apache.calcite.schema.Table,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.Integer,java.lang.Integer,int,int,java.lang.Integer,int,java.lang.String)"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaColumnFactoryImpl","l":"createColumn(Table, String, String, String, String, int, String, Integer, Integer, int, int, Integer, int, String)","u":"createColumn(org.apache.calcite.schema.Table,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.Integer,java.lang.Integer,int,int,java.lang.Integer,int,java.lang.String)"},{"p":"org.apache.calcite.test","c":"QuidemTest","l":"createCommandHandler()"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertQuery","l":"createConnection()"},{"p":"org.apache.calcite.test","c":"ConnectionFactory","l":"createConnection()"},{"p":"org.apache.calcite.test","c":"QuidemTest","l":"createConnectionFactory()"},{"p":"org.apache.calcite.interpreter","c":"Compiler","l":"createContext()"},{"p":"org.apache.calcite.interpreter","c":"Nodes.CoreCompiler","l":"createContext()"},{"p":"org.apache.calcite.sql","c":"SqlDialects","l":"createContext(DatabaseMetaData)","u":"createContext(java.sql.DatabaseMetaData)"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl","l":"createConvertletTable()"},{"p":"org.apache.calcite.plan","c":"RelOptCluster","l":"createCorrel()"},{"p":"org.apache.calcite.plan","c":"RelOptQuery","l":"createCorrel()"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.CorrelateFactory","l":"createCorrelate(RelNode, RelNode, List<RelHint>, CorrelationId, ImmutableBitSet, JoinRelType)","u":"createCorrelate(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.CorrelationId,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"createCurrentRow(SqlParserPos)","u":"createCurrentRow(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"createCurrentRowWindow(String)","u":"createCurrentRowWindow(java.lang.String)"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaImpl","l":"createDataContext(CalciteConnection)","u":"createDataContext(org.apache.calcite.jdbc.CalciteConnection)"},{"p":"org.apache.calcite.schema","c":"Schemas","l":"createDataContext(Connection, SchemaPlus)","u":"createDataContext(java.sql.Connection,org.apache.calcite.schema.SchemaPlus)"},{"p":"org.apache.calcite.sql","c":"SqlJdbcDataTypeName","l":"createDataType(SqlParserPos)","u":"createDataType(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"createDate(Calendar, SqlParserPos)","u":"createDate(java.util.Calendar,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"createDate(DateString, SqlParserPos)","u":"createDate(org.apache.calcite.util.DateString,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory","l":"createDecimalProduct(RelDataType, RelDataType)","u":"createDecimalProduct(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactoryImpl","l":"createDecimalProduct(RelDataType, RelDataType)","u":"createDecimalProduct(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory","l":"createDecimalQuotient(RelDataType, RelDataType)","u":"createDecimalQuotient(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactoryImpl","l":"createDecimalQuotient(RelDataType, RelDataType)","u":"createDecimalQuotient(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.adapter.druid","c":"TimeExtractionFunction","l":"createDefault(String)","u":"createDefault(java.lang.String)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcSchema","l":"createDialect(DataSource)","u":"createDialect(javax.sql.DataSource)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcSchema","l":"createDialect(SqlDialectFactory, DataSource)","u":"createDialect(org.apache.calcite.sql.SqlDialectFactory,javax.sql.DataSource)"},{"p":"org.apache.calcite.util","c":"ReflectUtil","l":"createDispatcher(Class<R>, Class<E>)","u":"createDispatcher(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"createDistinctRel(RelNode)","u":"createDistinctRel(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"createDmlRowType(SqlKind, RelDataTypeFactory)","u":"createDmlRowType(org.apache.calcite.sql.SqlKind,org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.adapter.splunk","c":"SplunkDriver","l":"createDriverVersion()"},{"p":"org.apache.calcite.jdbc","c":"Driver","l":"createDriverVersion()"},{"p":"org.apache.calcite.rel.rules","c":"LoptMultiJoin","l":"createEdge(RexNode)","u":"createEdge(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.util.graph","c":"DirectedGraph.EdgeFactory","l":"createEdge(V, V)","u":"createEdge(V,V)"},{"p":"org.apache.calcite.util.graph","c":"AttributedDirectedGraph.AttributedEdgeFactory","l":"createEdge(V, V, Object...)","u":"createEdge(V,V,java.lang.Object...)"},{"p":"org.apache.calcite.plan","c":"RelTraitSet","l":"createEmpty()"},{"p":"org.apache.calcite.rel.logical","c":"LogicalValues","l":"createEmpty(RelOptCluster, RelDataType)","u":"createEmpty(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.CalcReduceExpressionsRule","l":"createEmptyRelOrEquivalent(RelOptRuleCall, Calc)","u":"createEmptyRelOrEquivalent(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Calc)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.FilterReduceExpressionsRule","l":"createEmptyRelOrEquivalent(RelOptRuleCall, Filter)","u":"createEmptyRelOrEquivalent(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"createEmptyStructType(RelDataTypeFactory)","u":"createEmptyStructType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.runtime","c":"ResultSetEnumerable","l":"createEnricher(Integer[], DataContext)","u":"createEnricher(java.lang.Integer[],org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"createEquiJoinCondition(RelNode, List<Integer>, RelNode, List<Integer>, RexBuilder)","u":"createEquiJoinCondition(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rex.RexBuilder)"},{"p":"org.apache.calcite.piglet","c":"Ast.Literal","l":"createExactNumeric(String, SqlParserPos)","u":"createExactNumeric(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"createExactNumeric(String, SqlParserPos)","u":"createExactNumeric(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.ExchangeFactory","l":"createExchange(RelNode, RelDistribution)","u":"createExchange(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelDistribution)"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"createExcludeCurrentRow(SqlParserPos)","u":"createExcludeCurrentRow(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"createExcludeGroup(SqlParserPos)","u":"createExcludeGroup(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"createExcludeNoOthers(SqlParserPos)","u":"createExcludeNoOthers(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"createExcludeTies(SqlParserPos)","u":"createExcludeTies(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"createExistsPlan(RelNode, RelOptUtil.SubQueryType, RelOptUtil.Logic, boolean)","u":"createExistsPlan(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptUtil.SubQueryType,org.apache.calcite.plan.RelOptUtil.Logic,boolean)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"createExistsPlan(RelNode, RelOptUtil.SubQueryType, RelOptUtil.Logic, boolean, RelBuilder)","u":"createExistsPlan(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptUtil.SubQueryType,org.apache.calcite.plan.RelOptUtil.Logic,boolean,org.apache.calcite.tools.RelBuilder)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"createExistsPlan(RelOptCluster, RelNode, List<RexNode>, RexLiteral, String)","u":"createExistsPlan(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rex.RexLiteral,java.lang.String)"},{"p":"org.apache.calcite.runtime.rtti","c":"RuntimeTypeInformation","l":"createExpression(RelDataType)","u":"createExpression(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.adapter.druid","c":"TimeExtractionFunction","l":"createExtractFromGranularity(Granularity, String)","u":"createExtractFromGranularity(org.apache.calcite.adapter.druid.Granularity,java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"DeterministicCodeOptimizer","l":"createField(Expression)","u":"createField(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.sql.test","c":"AbstractSqlTester","l":"createFieldTrimmer(SqlValidator, RelBuilder)","u":"createFieldTrimmer(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.tools.RelBuilder)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"createFilter(RelNode, Iterable<? extends RexNode>)","u":"createFilter(org.apache.calcite.rel.RelNode,java.lang.Iterable)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"createFilter(RelNode, Iterable<? extends RexNode>, RelFactories.FilterFactory)","u":"createFilter(org.apache.calcite.rel.RelNode,java.lang.Iterable,org.apache.calcite.rel.core.RelFactories.FilterFactory)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"createFilter(RelNode, RexNode)","u":"createFilter(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.FilterFactory","l":"createFilter(RelNode, RexNode)","u":"createFilter(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"createFilter(RelNode, RexNode, RelFactories.FilterFactory)","u":"createFilter(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.RelFactories.FilterFactory)"},{"p":"org.apache.calcite.adapter.pig","c":"PigRelFactories.PigFilterFactory","l":"createFilter(RelNode, RexNode, Set<CorrelationId>)","u":"createFilter(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,java.util.Set)"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.FilterFactory","l":"createFilter(RelNode, RexNode, Set<CorrelationId>)","u":"createFilter(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,java.util.Set)"},{"p":"org.apache.calcite.linq4j.tree","c":"BlockBuilder","l":"createFinishingOptimizeShuttle()"},{"p":"org.apache.calcite.adapter.druid","c":"TimeExtractionFunction","l":"createFloorFromGranularity(Granularity, String)","u":"createFloorFromGranularity(org.apache.calcite.adapter.druid.Granularity,java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"createFollowing(SqlNode, SqlParserPos)","u":"createFollowing(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlDdlNodes","l":"createForeignSchema(SqlParserPos, boolean, boolean, SqlIdentifier, SqlNode, SqlNode, SqlNodeList)","u":"createForeignSchema(org.apache.calcite.sql.parser.SqlParserPos,boolean,boolean,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.util","c":"BitString","l":"createFromBitString(String)","u":"createFromBitString(java.lang.String)"},{"p":"org.apache.calcite.util","c":"BitString","l":"createFromBytes(byte[])"},{"p":"org.apache.calcite.util","c":"BitString","l":"createFromHexString(String)","u":"createFromHexString(java.lang.String)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlDdlNodes","l":"createFunction(SqlParserPos, boolean, boolean, SqlIdentifier, SqlNode, SqlNodeList)","u":"createFunction(org.apache.calcite.sql.parser.SqlParserPos,boolean,boolean,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory","l":"createFunctionSqlType(RelDataType, RelDataType)","u":"createFunctionSqlType(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFactoryImpl","l":"createFunctionSqlType(RelDataType, RelDataType)","u":"createFunctionSqlType(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.runtime","c":"ArrayEnumeratorCursor","l":"createGetter(int)"},{"p":"org.apache.calcite.runtime","c":"ObjectEnumeratorCursor","l":"createGetter(int)"},{"p":"org.apache.calcite.runtime","c":"RecordEnumeratorCursor","l":"createGetter(int)"},{"p":"org.apache.calcite.adapter.druid","c":"Granularities","l":"createGranularity(TimeUnitRange, String)","u":"createGranularity(org.apache.calcite.avatica.util.TimeUnitRange,java.lang.String)"},{"p":"org.apache.calcite.jdbc","c":"Driver","l":"createHandler()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings","l":"createIdentity(int)"},{"p":"org.apache.calcite.rex","c":"RexProgram","l":"createIdentity(RelDataType)","u":"createIdentity(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rex","c":"RexProgram","l":"createIdentity(RelDataType, RelDataType)","u":"createIdentity(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexImpTable","l":"createImplementor(NotNullImplementor, NullPolicy, boolean)","u":"createImplementor(org.apache.calcite.adapter.enumerable.NotNullImplementor,org.apache.calcite.adapter.enumerable.NullPolicy,boolean)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"createInterval(int, String, SqlIntervalQualifier, SqlParserPos)","u":"createInterval(int,java.lang.String,org.apache.calcite.sql.SqlIntervalQualifier,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidDateTimeUtils","l":"createInterval(RexNode)","u":"createInterval(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaImpl","l":"createIterable(Meta.StatementHandle, QueryState, Meta.Signature, List<TypedValue>, Meta.Frame)","u":"createIterable(org.apache.calcite.avatica.Meta.StatementHandle,org.apache.calcite.avatica.QueryState,org.apache.calcite.avatica.Meta.Signature,java.util.List,org.apache.calcite.avatica.Meta.Frame)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory","l":"createJavaType(Class)","u":"createJavaType(java.lang.Class)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactoryImpl","l":"createJavaType(Class)","u":"createJavaType(java.lang.Class)"},{"p":"org.apache.calcite.adapter.pig","c":"PigRelFactories.PigJoinFactory","l":"createJoin(RelNode, RelNode, List<RelHint>, RexNode, Set<CorrelationId>, JoinRelType, boolean)","u":"createJoin(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rex.RexNode,java.util.Set,org.apache.calcite.rel.core.JoinRelType,boolean)"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.JoinFactory","l":"createJoin(RelNode, RelNode, List<RelHint>, RexNode, Set<CorrelationId>, JoinRelType, boolean)","u":"createJoin(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rex.RexNode,java.util.Set,org.apache.calcite.rel.core.JoinRelType,boolean)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"createJoin(SqlToRelConverter.Blackboard, RelNode, RelNode, RexNode, JoinRelType)","u":"createJoin(org.apache.calcite.sql2rel.SqlToRelConverter.Blackboard,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory","l":"createJoinType(RelDataType...)","u":"createJoinType(org.apache.calcite.rel.type.RelDataType...)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactoryImpl","l":"createJoinType(RelDataType...)","u":"createJoinType(org.apache.calcite.rel.type.RelDataType...)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"createJoinType(RelDataTypeFactory, RelDataType, RelDataType, List<String>, List<RelDataTypeField>)","u":"createJoinType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,java.util.List,java.util.List)"},{"p":"org.apache.calcite.rel.core","c":"Join","l":"createJoinType(RelDataTypeFactory, RelDataType, RelDataType, List<String>, List<RelDataTypeField>)","u":"createJoinType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,java.util.List,java.util.List)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"createListFrame(SqlWriter.FrameType, String, String, String)","u":"createListFrame(org.apache.calcite.sql.SqlWriter.FrameType,java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"createLiteral(Object, SqlParserPos)","u":"createLiteral(java.lang.Object,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql2rel","c":"RelFieldTrimmer","l":"createMapping(ImmutableBitSet, int)","u":"createMapping(org.apache.calcite.util.ImmutableBitSet,int)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory","l":"createMapType(RelDataType, RelDataType)","u":"createMapType(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFactoryImpl","l":"createMapType(RelDataType, RelDataType)","u":"createMapType(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"createMapType(RelDataTypeFactory, RelDataType, RelDataType, boolean)","u":"createMapType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,boolean)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"createMapTypeFromRecord(RelDataTypeFactory, RelDataType)","u":"createMapTypeFromRecord(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.MatchFactory","l":"createMatch(RelNode, RexNode, RelDataType, boolean, boolean, Map<String, RexNode>, Map<String, RexNode>, RexNode, Map<String, ? extends SortedSet<String>>, boolean, ImmutableBitSet, RelCollation, RexNode)","u":"createMatch(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,boolean,boolean,java.util.Map,java.util.Map,org.apache.calcite.rex.RexNode,java.util.Map,boolean,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"createMatchRecognizeNameSpace(SqlMatchRecognize, SqlNode)","u":"createMatchRecognizeNameSpace(org.apache.calcite.sql.SqlMatchRecognize,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfig","l":"createMaterializations()"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfigImpl","l":"createMaterializations()"},{"p":"org.apache.calcite.sql.ddl","c":"SqlDdlNodes","l":"createMaterializedView(SqlParserPos, boolean, boolean, SqlIdentifier, SqlNodeList, SqlNode)","u":"createMaterializedView(org.apache.calcite.sql.parser.SqlParserPos,boolean,boolean,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory","l":"createMeasureType(RelDataType)","u":"createMeasureType(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFactoryImpl","l":"createMeasureType(RelDataType)","u":"createMeasureType(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.jdbc","c":"Driver","l":"createMeta(AvaticaConnection)","u":"createMeta(org.apache.calcite.avatica.AvaticaConnection)"},{"p":"org.apache.calcite.util","c":"ReflectUtil","l":"createMethodDispatcher(Class<T>, ReflectiveVisitor, String, Class<E>, Class...)","u":"createMethodDispatcher(java.lang.Class,org.apache.calcite.util.ReflectiveVisitor,java.lang.String,java.lang.Class,java.lang.Class...)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory","l":"createMultisetType(RelDataType, long)","u":"createMultisetType(org.apache.calcite.rel.type.RelDataType,long)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFactoryImpl","l":"createMultisetType(RelDataType, long)","u":"createMultisetType(org.apache.calcite.rel.type.RelDataType,long)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"createMultisetType(RelDataTypeFactory, RelDataType, boolean)","u":"createMultisetType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean)"},{"p":"org.apache.calcite.rex","c":"RexInputRef","l":"createName(int)"},{"p":"org.apache.calcite.sql","c":"SqlSampleSpec","l":"createNamed(String)","u":"createNamed(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"createNegative(SqlNumericLiteral, SqlParserPos)","u":"createNegative(org.apache.calcite.sql.SqlNumericLiteral,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.rel.rules","c":"PushProjector","l":"createNewProject(RelNode, int[])","u":"createNewProject(org.apache.calcite.rel.RelNode,int[])"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"createNlsStringType(RelDataTypeFactory, NlsString)","u":"createNlsStringType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.util.NlsString)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"createNull(SqlParserPos)","u":"createNull(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"createNullFilter(RelNode, Integer[])","u":"createNullFilter(org.apache.calcite.rel.RelNode,java.lang.Integer[])"},{"p":"org.apache.calcite.rel.logical","c":"LogicalValues","l":"createOneRow(RelOptCluster)","u":"createOneRow(org.apache.calcite.plan.RelOptCluster)"},{"p":"org.apache.calcite.linq4j.tree","c":"BlockBuilder","l":"createOptimizeShuttle()"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"createOrderedEnumerable(Function1<T, TKey>, Comparator<TKey>, boolean)","u":"createOrderedEnumerable(org.apache.calcite.linq4j.function.Function1,java.util.Comparator,boolean)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedOrderedEnumerable","l":"createOrderedEnumerable(Function1<T, TKey>, Comparator<TKey>, boolean)","u":"createOrderedEnumerable(org.apache.calcite.linq4j.function.Function1,java.util.Comparator,boolean)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"createOrderedEnumerable(OrderedEnumerable<TSource>, Function1<TSource, TKey>, Comparator<TKey>, boolean)","u":"createOrderedEnumerable(org.apache.calcite.linq4j.OrderedEnumerable,org.apache.calcite.linq4j.function.Function1,java.util.Comparator,boolean)"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl","l":"createParser(String)","u":"createParser(java.lang.String)"},{"p":"org.apache.calcite.sql.test","c":"SqlTestFactory","l":"createParser(String)","u":"createParser(java.lang.String)"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl","l":"createParser(String, SqlParser.Config)","u":"createParser(java.lang.String,org.apache.calcite.sql.parser.SqlParser.Config)"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl","l":"createParser(String, SqlParser.ConfigBuilder)","u":"createParser(java.lang.String,org.apache.calcite.sql.parser.SqlParser.ConfigBuilder)"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl","l":"createParserConfig()"},{"p":"org.apache.calcite.runtime","c":"Matcher","l":"createPartitionState(int, int)","u":"createPartitionState(int,int)"},{"p":"org.apache.calcite.adapter.geode.util","c":"JavaTypeFactoryExtImpl","l":"createPdxType(PdxInstance)","u":"createPdxType(org.apache.geode.pdx.PdxInstance)"},{"p":"org.apache.calcite.adapter.geode.util","c":"JavaTypeFactoryExtImpl","l":"createPdxType2(PdxInstance)","u":"createPdxType2(org.apache.geode.pdx.PdxInstance)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"createPivotNameSpace(SqlPivot, SqlNode)","u":"createPivotNameSpace(org.apache.calcite.sql.SqlPivot,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl","l":"createPlanner(CalcitePrepare.Context)","u":"createPlanner(org.apache.calcite.jdbc.CalcitePrepare.Context)"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl","l":"createPlanner(CalcitePrepare.Context, Context, RelOptCostFactory)","u":"createPlanner(org.apache.calcite.jdbc.CalcitePrepare.Context,org.apache.calcite.plan.Context,org.apache.calcite.plan.RelOptCostFactory)"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl","l":"createPlannerFactories()"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"createPreceding(SqlNode, SqlParserPos)","u":"createPreceding(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.jdbc","c":"Driver","l":"createPrepare()"},{"p":"org.apache.calcite.jdbc","c":"CalciteConnection","l":"createPrepareContext()"},{"p":"org.apache.calcite.server","c":"CalciteServerStatement","l":"createPrepareContext()"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl.CalcitePreparingStmt","l":"createPreparedExplanation(RelDataType, RelDataType, RelRoot, SqlExplainFormat, SqlExplainLevel)","u":"createPreparedExplanation(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelRoot,org.apache.calcite.sql.SqlExplainFormat,org.apache.calcite.sql.SqlExplainLevel)"},{"p":"org.apache.calcite.prepare","c":"Prepare","l":"createPreparedExplanation(RelDataType, RelDataType, RelRoot, SqlExplainFormat, SqlExplainLevel)","u":"createPreparedExplanation(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelRoot,org.apache.calcite.sql.SqlExplainFormat,org.apache.calcite.sql.SqlExplainLevel)"},{"p":"org.apache.calcite.jdbc","c":"Driver","l":"createPrepareFactory()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableRels","l":"createProject(MutableRel, List<Integer>)","u":"createProject(org.apache.calcite.rel.mutable.MutableRel,java.util.List)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"createProject(RelFactories.ProjectFactory, RelNode, List<Integer>)","u":"createProject(org.apache.calcite.rel.core.RelFactories.ProjectFactory,org.apache.calcite.rel.RelNode,java.util.List)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"createProject(RelNode, List<? extends RexNode>, List<? extends String>, boolean)","u":"createProject(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,boolean)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"createProject(RelNode, List<? extends RexNode>, List<? extends String>, boolean, RelBuilder)","u":"createProject(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,boolean,org.apache.calcite.tools.RelBuilder)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"createProject(RelNode, List<? extends RexNode>, List<String>)","u":"createProject(org.apache.calcite.rel.RelNode,java.util.List,java.util.List)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"createProject(RelNode, List<Integer>)","u":"createProject(org.apache.calcite.rel.RelNode,java.util.List)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"createProject(RelNode, List<Pair<RexNode, ? extends String>>, boolean)","u":"createProject(org.apache.calcite.rel.RelNode,java.util.List,boolean)"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.ProjectFactory","l":"createProject(RelNode, List<RelHint>, List<? extends RexNode>, List<? extends String>)","u":"createProject(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,java.util.List)"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.ProjectFactory","l":"createProject(RelNode, List<RelHint>, List<? extends RexNode>, List<? extends String>, Set<CorrelationId>)","u":"createProject(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,java.util.List,java.util.Set)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"createProject(RelNode, Mappings.TargetMapping)","u":"createProject(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mappings.TargetMapping)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"createProject(RelNode, Mappings.TargetMapping, RelFactories.ProjectFactory)","u":"createProject(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mappings.TargetMapping,org.apache.calcite.rel.core.RelFactories.ProjectFactory)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableRels","l":"createProjectExprs(MutableRel, List<Integer>)","u":"createProjectExprs(org.apache.calcite.rel.mutable.MutableRel,java.util.List)"},{"p":"org.apache.calcite.rel.rules","c":"JoinProjectTransposeRule","l":"createProjectExprs(Project, RelNode, int, RexBuilder, List<RelDataTypeField>, List<Pair<RexNode, String>>)","u":"createProjectExprs(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,int,org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"createProjectJoinRel(List<Integer>, RelNode)","u":"createProjectJoinRel(java.util.List,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.rules","c":"PushProjector","l":"createProjectRefsAndExprs(RelNode, boolean, boolean)","u":"createProjectRefsAndExprs(org.apache.calcite.rel.RelNode,boolean,boolean)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableRels","l":"createProjects(MutableRel, List<RexNode>)","u":"createProjects(org.apache.calcite.rel.mutable.MutableRel,java.util.List)"},{"p":"org.apache.calcite.linq4j","c":"QueryProvider","l":"createQuery(Expression, Class<T>)","u":"createQuery(org.apache.calcite.linq4j.tree.Expression,java.lang.Class)"},{"p":"org.apache.calcite.linq4j","c":"QueryProviderImpl","l":"createQuery(Expression, Class<T>)","u":"createQuery(org.apache.calcite.linq4j.tree.Expression,java.lang.Class)"},{"p":"org.apache.calcite.linq4j","c":"QueryProvider","l":"createQuery(Expression, Type)","u":"createQuery(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)"},{"p":"org.apache.calcite.linq4j","c":"QueryProviderImpl","l":"createQuery(Expression, Type)","u":"createQuery(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)"},{"p":"org.apache.calcite.adapter.spark","c":"SparkRuntime","l":"createRdd(JavaSparkContext, Enumerable<T>)","u":"createRdd(org.apache.spark.api.java.JavaSparkContext,org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.adapter.spark","c":"SparkRuntime","l":"createRdd(JavaSparkContext, T[])","u":"createRdd(org.apache.spark.api.java.JavaSparkContext,T[])"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"createRecordTypeFromMap(RelDataTypeFactory, RelDataType)","u":"createRecordTypeFromMap(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.util","c":"RelToSqlConverterUtil","l":"createRegexPatternLiteral(SqlNode, SqlLiteral)","u":"createRegexPatternLiteral(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlLiteral)"},{"p":"org.apache.calcite.adapter.geode.util","c":"GeodeUtils","l":"createRegion(GemFireCache, String)","u":"createRegion(org.apache.geode.cache.GemFireCache,java.lang.String)"},{"p":"org.apache.calcite.piglet","c":"PigTable","l":"createRelOptTable(RelOptSchema, RelDataType, List<String>)","u":"createRelOptTable(org.apache.calcite.plan.RelOptSchema,org.apache.calcite.rel.type.RelDataType,java.util.List)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"createRename(RelNode, List<? extends String>)","u":"createRename(org.apache.calcite.rel.RelNode,java.util.List)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"createRenameRel(RelDataType, RelNode)","u":"createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.RepeatUnionFactory","l":"createRepeatUnion(RelNode, RelNode, boolean, int, RelOptTable)","u":"createRepeatUnion(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,boolean,int,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaImpl","l":"createResultSet(Map<String, Object>, List<ColumnMetaData>, Meta.CursorFactory, Meta.Frame)","u":"createResultSet(java.util.Map,java.util.List,org.apache.calcite.avatica.Meta.CursorFactory,org.apache.calcite.avatica.Meta.Frame)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"createRootSchema(boolean)"},{"p":"org.apache.calcite.tools","c":"Frameworks","l":"createRootSchema(boolean)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"createRootSchema(boolean, boolean)","u":"createRootSchema(boolean,boolean)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"createRootSchema(boolean, boolean, String)","u":"createRootSchema(boolean,boolean,java.lang.String)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"createRootSchema(boolean, boolean, String, Schema)","u":"createRootSchema(boolean,boolean,java.lang.String,org.apache.calcite.schema.Schema)"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.SampleFactory","l":"createSample(RelNode, RelOptSamplingParameters)","u":"createSample(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptSamplingParameters)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"createSample(SqlSampleSpec, SqlParserPos)","u":"createSample(org.apache.calcite.sql.SqlSampleSpec,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.adapter.pig","c":"PigRelFactories.PigTableScanFactory","l":"createScan(RelOptTable.ToRelContext, RelOptTable)","u":"createScan(org.apache.calcite.plan.RelOptTable.ToRelContext,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.TableScanFactory","l":"createScan(RelOptTable.ToRelContext, RelOptTable)","u":"createScan(org.apache.calcite.plan.RelOptTable.ToRelContext,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlDdlNodes","l":"createSchema(SqlParserPos, boolean, boolean, SqlIdentifier)","u":"createSchema(org.apache.calcite.sql.parser.SqlParserPos,boolean,boolean,org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"createSelectNamespace(SqlSelect, SqlNode)","u":"createSelectNamespace(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.SemiJoinFactory","l":"createSemiJoin(RelNode, RelNode, RexNode)","u":"createSemiJoin(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlNameMatcher","l":"createSet()"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.SetOpFactory","l":"createSetOp(SqlKind, List<RelNode>, boolean)","u":"createSetOp(org.apache.calcite.sql.SqlKind,java.util.List,boolean)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"createSetopNamespace(SqlCall, SqlNode)","u":"createSetopNamespace(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings","l":"createShiftMapping(int, int...)","u":"createShiftMapping(int,int...)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"createSingleTableCatalogReader(boolean, String, RelDataTypeFactory, RelDataType)","u":"createSingleTableCatalogReader(boolean,java.lang.String,org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel","c":"RelCollationImpl","l":"createSingleton(int)"},{"p":"org.apache.calcite.rel","c":"RelCollations","l":"createSingleton(int)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"createSingleValueAggRel(RelOptCluster, RelNode)","u":"createSingleValueAggRel(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.SnapshotFactory","l":"createSnapshot(RelNode, RexNode)","u":"createSnapshot(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.SnapshotFactoryImpl","l":"createSnapshot(RelNode, RexNode)","u":"createSnapshot(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"createSnapshot(SchemaVersion)","u":"createSnapshot(org.apache.calcite.schema.SchemaVersion)"},{"p":"org.apache.calcite.runtime","c":"SocketFactoryImpl","l":"createSocket()"},{"p":"org.apache.calcite.runtime","c":"SocketFactoryImpl","l":"createSocket(InetAddress, int)","u":"createSocket(java.net.InetAddress,int)"},{"p":"org.apache.calcite.runtime","c":"SocketFactoryImpl","l":"createSocket(InetAddress, int, InetAddress, int)","u":"createSocket(java.net.InetAddress,int,java.net.InetAddress,int)"},{"p":"org.apache.calcite.runtime","c":"SocketFactoryImpl","l":"createSocket(String, int)","u":"createSocket(java.lang.String,int)"},{"p":"org.apache.calcite.runtime","c":"SocketFactoryImpl","l":"createSocket(String, int, InetAddress, int)","u":"createSocket(java.lang.String,int,java.net.InetAddress,int)"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.SortFactory","l":"createSort(RelNode, RelCollation, RexNode, RexNode)","u":"createSort(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.SortFactory","l":"createSort(RelTraitSet, RelNode, RelCollation, RexNode, RexNode)","u":"createSort(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.SortExchangeFactory","l":"createSortExchange(RelNode, RelDistribution, RelCollation)","u":"createSortExchange(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelDistribution,org.apache.calcite.rel.RelCollation)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"createSourceSelectForDelete(SqlDelete)","u":"createSourceSelectForDelete(org.apache.calcite.sql.SqlDelete)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"createSourceSelectForUpdate(SqlUpdate)","u":"createSourceSelectForUpdate(org.apache.calcite.sql.SqlUpdate)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory","l":"createSqlIntervalType(SqlIntervalQualifier)","u":"createSqlIntervalType(org.apache.calcite.sql.SqlIntervalQualifier)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFactoryImpl","l":"createSqlIntervalType(SqlIntervalQualifier)","u":"createSqlIntervalType(org.apache.calcite.sql.SqlIntervalQualifier)"},{"p":"org.apache.calcite.sql.test","c":"SqlTestFactory","l":"createSqlToRelConverter()"},{"p":"org.apache.calcite.sql","c":"SqlAbstractDateTimeLiteral","l":"createSqlType(RelDataTypeFactory)","u":"createSqlType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.sql","c":"SqlDateLiteral","l":"createSqlType(RelDataTypeFactory)","u":"createSqlType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"createSqlType(RelDataTypeFactory)","u":"createSqlType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.sql","c":"SqlNumericLiteral","l":"createSqlType(RelDataTypeFactory)","u":"createSqlType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory","l":"createSqlType(SqlTypeName)","u":"createSqlType(org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFactoryImpl","l":"createSqlType(SqlTypeName)","u":"createSqlType(org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory","l":"createSqlType(SqlTypeName, int)","u":"createSqlType(org.apache.calcite.sql.type.SqlTypeName,int)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFactoryImpl","l":"createSqlType(SqlTypeName, int)","u":"createSqlType(org.apache.calcite.sql.type.SqlTypeName,int)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory","l":"createSqlType(SqlTypeName, int, int)","u":"createSqlType(org.apache.calcite.sql.type.SqlTypeName,int,int)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFactoryImpl","l":"createSqlType(SqlTypeName, int, int)","u":"createSqlType(org.apache.calcite.sql.type.SqlTypeName,int,int)"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl.CalcitePreparingStmt","l":"createSqlValidator(Prepare.CatalogReader, UnaryOperator<SqlValidator.Config>)","u":"createSqlValidator(org.apache.calcite.prepare.Prepare.CatalogReader,java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.materialize","c":"Lattice","l":"createSqlWriter(SqlDialect, StringBuilder, IntFunction<SqlNode>)","u":"createSqlWriter(org.apache.calcite.sql.SqlDialect,java.lang.StringBuilder,java.util.function.IntFunction)"},{"p":"org.apache.calcite.materialize","c":"Lattice","l":"createStarTable()"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaImpl","l":"createStatement(Meta.ConnectionHandle)","u":"createStatement(org.apache.calcite.avatica.Meta.ConnectionHandle)"},{"p":"org.apache.calcite.adapter.geode.util","c":"JavaTypeFactoryExtImpl","l":"createStructType(Class)","u":"createStructType(java.lang.Class)"},{"p":"org.apache.calcite.adapter.java","c":"JavaTypeFactory","l":"createStructType(Class)","u":"createStructType(java.lang.Class)"},{"p":"org.apache.calcite.jdbc","c":"JavaTypeFactoryImpl","l":"createStructType(Class)","u":"createStructType(java.lang.Class)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory","l":"createStructType(List<? extends Map.Entry<String, RelDataType>>)","u":"createStructType(java.util.List)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactoryImpl","l":"createStructType(List<? extends Map.Entry<String, RelDataType>>)","u":"createStructType(java.util.List)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory","l":"createStructType(List<RelDataType>, List<String>)","u":"createStructType(java.util.List,java.util.List)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactoryImpl","l":"createStructType(List<RelDataType>, List<String>)","u":"createStructType(java.util.List,java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"createStructType(RelDataTypeFactory, List<? extends RexNode>, List<? extends String>, SqlValidatorUtil.Suggester)","u":"createStructType(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,java.util.List,org.apache.calcite.sql.validate.SqlValidatorUtil.Suggester)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"createStructType(RelDataTypeFactory, List<? extends RexNode>, List<String>)","u":"createStructType(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"createStructType(RelDataTypeFactory, List<RexNode>)","u":"createStructType(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory","l":"createStructType(RelDataTypeFactory.FieldInfo)","u":"createStructType(org.apache.calcite.rel.type.RelDataTypeFactory.FieldInfo)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactoryImpl","l":"createStructType(RelDataTypeFactory.FieldInfo)","u":"createStructType(org.apache.calcite.rel.type.RelDataTypeFactory.FieldInfo)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory","l":"createStructType(StructKind, List<RelDataType>, List<String>)","u":"createStructType(org.apache.calcite.rel.type.StructKind,java.util.List,java.util.List)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactoryImpl","l":"createStructType(StructKind, List<RelDataType>, List<String>)","u":"createStructType(org.apache.calcite.rel.type.StructKind,java.util.List,java.util.List)"},{"p":"org.apache.calcite.jdbc","c":"CalciteRootSchema","l":"createSubSchema(Schema, String)","u":"createSubSchema(org.apache.calcite.schema.Schema,java.lang.String)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"createSubSchema(Schema, String)","u":"createSubSchema(org.apache.calcite.schema.Schema,java.lang.String)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"createSwappedJoinExprs(RelNode, Join, boolean)","u":"createSwappedJoinExprs(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Join,boolean)"},{"p":"org.apache.calcite.sql.fun","c":"SqlCase","l":"createSwitched(SqlParserPos, SqlNode, SqlNodeList, SqlNodeList, SqlNode)","u":"createSwitched(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"createSymbol(Enum<?>, SqlParserPos)","u":"createSymbol(java.lang.Enum,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.adapter.java","c":"JavaTypeFactory","l":"createSyntheticType(List<Type>)","u":"createSyntheticType(java.util.List)"},{"p":"org.apache.calcite.jdbc","c":"JavaTypeFactoryImpl","l":"createSyntheticType(List<Type>)","u":"createSyntheticType(java.util.List)"},{"p":"org.apache.calcite.materialize","c":"MaterializationService.DefaultTableFactory","l":"createTable(CalciteSchema, String, List<String>)","u":"createTable(org.apache.calcite.jdbc.CalciteSchema,java.lang.String,java.util.List)"},{"p":"org.apache.calcite.materialize","c":"MaterializationService.TableFactory","l":"createTable(CalciteSchema, String, List<String>)","u":"createTable(org.apache.calcite.jdbc.CalciteSchema,java.lang.String,java.util.List)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlDdlNodes","l":"createTable(SqlParserPos, boolean, boolean, SqlIdentifier, SqlNodeList, SqlNode)","u":"createTable(org.apache.calcite.sql.parser.SqlParserPos,boolean,boolean,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaTableFactory","l":"createTable(Table, String, String, String)","u":"createTable(org.apache.calcite.schema.Table,java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaTableFactoryImpl","l":"createTable(Table, String, String, String)","u":"createTable(org.apache.calcite.schema.Table,java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.TableFunctionScanFactory","l":"createTableFunctionScan(RelOptCluster, List<RelNode>, RexCall, Type, Set<RelColumnMapping>)","u":"createTableFunctionScan(org.apache.calcite.plan.RelOptCluster,java.util.List,org.apache.calcite.rex.RexCall,java.lang.reflect.Type,java.util.Set)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlDdlNodes","l":"createTableLike(SqlParserPos, boolean, boolean, SqlIdentifier, SqlIdentifier, SqlNodeList, SqlNodeList)","u":"createTableLike(org.apache.calcite.sql.parser.SqlParserPos,boolean,boolean,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"createTableRequiresColumnList()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"createTableRequiresColumnTypes(String)","u":"createTableRequiresColumnTypes(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlSampleSpec","l":"createTableSample(boolean, BigDecimal)","u":"createTableSample(boolean,java.math.BigDecimal)"},{"p":"org.apache.calcite.sql","c":"SqlSampleSpec","l":"createTableSample(boolean, BigDecimal, int)","u":"createTableSample(boolean,java.math.BigDecimal,int)"},{"p":"org.apache.calcite.sql","c":"SqlSampleSpec","l":"createTableSample(boolean, float)","u":"createTableSample(boolean,float)"},{"p":"org.apache.calcite.sql","c":"SqlSampleSpec","l":"createTableSample(boolean, float, int)","u":"createTableSample(boolean,float,int)"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.SpoolFactory","l":"createTableSpool(RelNode, Spool.Type, Spool.Type, RelOptTable)","u":"createTableSpool(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Spool.Type,org.apache.calcite.rel.core.Spool.Type,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"createTargetRowType(SqlValidatorTable, SqlNodeList, boolean, SqlIdentifier)","u":"createTargetRowType(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNodeList,boolean,org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"createTime(Calendar, int, SqlParserPos)","u":"createTime(java.util.Calendar,int,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"createTime(TimeString, int, SqlParserPos)","u":"createTime(org.apache.calcite.util.TimeString,int,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"createTime(TimeWithTimeZoneString, int, SqlParserPos)","u":"createTime(org.apache.calcite.util.TimeWithTimeZoneString,int,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"createTimestamp(Calendar, int, SqlParserPos)","u":"createTimestamp(java.util.Calendar,int,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"createTimestamp(SqlTypeName, TimestampString, int, SqlParserPos)","u":"createTimestamp(org.apache.calcite.sql.type.SqlTypeName,org.apache.calcite.util.TimestampString,int,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"createTimestamp(TimestampString, int, SqlParserPos)","u":"createTimestamp(org.apache.calcite.util.TimestampString,int,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"createTimestamp(TimestampWithTimeZoneString, int, SqlParserPos)","u":"createTimestamp(org.apache.calcite.util.TimestampWithTimeZoneString,int,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlDdlNodes","l":"createType(SqlParserPos, boolean, SqlIdentifier, SqlNodeList, SqlDataTypeSpec)","u":"createType(org.apache.calcite.sql.parser.SqlParserPos,boolean,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlDataTypeSpec)"},{"p":"org.apache.calcite.adapter.java","c":"JavaTypeFactory","l":"createType(Type)","u":"createType(java.lang.reflect.Type)"},{"p":"org.apache.calcite.jdbc","c":"JavaTypeFactoryImpl","l":"createType(Type)","u":"createType(java.lang.reflect.Type)"},{"p":"org.apache.calcite.sql.validate.implicit","c":"TypeCoercions","l":"createTypeCoercion(RelDataTypeFactory, SqlValidator)","u":"createTypeCoercion(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.sql.validate.SqlValidator)"},{"p":"org.apache.calcite.prepare","c":"CalciteCatalogReader","l":"createTypeFromProjection(RelDataType, List<String>)","u":"createTypeFromProjection(org.apache.calcite.rel.type.RelDataType,java.util.List)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorCatalogReader","l":"createTypeFromProjection(RelDataType, List<String>)","u":"createTypeFromProjection(org.apache.calcite.rel.type.RelDataType,java.util.List)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"createTypeFromProjection(RelDataType, List<String>, RelDataTypeFactory, boolean)","u":"createTypeFromProjection(org.apache.calcite.rel.type.RelDataType,java.util.List,org.apache.calcite.rel.type.RelDataTypeFactory,boolean)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory","l":"createTypeWithCharsetAndCollation(RelDataType, Charset, SqlCollation)","u":"createTypeWithCharsetAndCollation(org.apache.calcite.rel.type.RelDataType,java.nio.charset.Charset,org.apache.calcite.sql.SqlCollation)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFactoryImpl","l":"createTypeWithCharsetAndCollation(RelDataType, Charset, SqlCollation)","u":"createTypeWithCharsetAndCollation(org.apache.calcite.rel.type.RelDataType,java.nio.charset.Charset,org.apache.calcite.sql.SqlCollation)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory","l":"createTypeWithNullability(RelDataType, boolean)","u":"createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactoryImpl","l":"createTypeWithNullability(RelDataType, boolean)","u":"createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFactoryImpl","l":"createTypeWithNullability(RelDataType, boolean)","u":"createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"createUnboundedFollowing(SqlParserPos)","u":"createUnboundedFollowing(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"createUnboundedPreceding(SqlParserPos)","u":"createUnboundedPreceding(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"createUnboundedPrecedingWindow(String)","u":"createUnboundedPrecedingWindow(java.lang.String)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewAggregateRule","l":"createUnion(RelBuilder, RexBuilder, RelNode, RelNode, RelNode)","u":"createUnion(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewJoinRule","l":"createUnion(RelBuilder, RexBuilder, RelNode, RelNode, RelNode)","u":"createUnion(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule","l":"createUnion(RelBuilder, RexBuilder, RelNode, RelNode, RelNode)","u":"createUnion(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"createUnknown(SqlParserPos)","u":"createUnknown(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"createUnknown(String, String, SqlParserPos)","u":"createUnknown(java.lang.String,java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory","l":"createUnknownType()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFactoryImpl","l":"createUnknownType()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"createUnpivotNameSpace(SqlUnpivot, SqlNode)","u":"createUnpivotNameSpace(org.apache.calcite.sql.SqlUnpivot,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.schema.impl","c":"ScalarFunctionImpl","l":"createUnsafe(Method)","u":"createUnsafe(java.lang.reflect.Method)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"createUuid(UUID, SqlParserPos)","u":"createUuid(java.util.UUID,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql.test","c":"SqlTestFactory","l":"createValidator()"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.ValuesFactory","l":"createValues(RelOptCluster, RelDataType, List<ImmutableList<RexLiteral>>)","u":"createValues(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.type.RelDataType,java.util.List)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlDdlNodes","l":"createView(SqlParserPos, boolean, SqlIdentifier, SqlNodeList, SqlNode)","u":"createView(org.apache.calcite.sql.parser.SqlParserPos,boolean,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.type","c":"BasicSqlType","l":"createWithNullability(boolean)"},{"p":"org.apache.calcite.sql","c":"JoinType","l":"CROSS"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"crossJoinDisallowsCondition()"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"CSC"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"CSC"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"csc(BigDecimal)","u":"csc(java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"csc(double)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"CSCH"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"CSCH"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"csch(BigDecimal)","u":"csch(java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"csch(double)"},{"p":"org.apache.calcite.adapter.redis","c":"RedisDataFormat","l":"CSV"},{"p":"org.apache.calcite.adapter.file","c":"CsvEnumerator","l":"CsvEnumerator(Source, AtomicBoolean, boolean, String[], CsvEnumerator.RowConverter<E>)","u":"%3Cinit%3E(org.apache.calcite.util.Source,java.util.concurrent.atomic.AtomicBoolean,boolean,java.lang.String[],org.apache.calcite.adapter.file.CsvEnumerator.RowConverter)"},{"p":"org.apache.calcite.adapter.file","c":"CsvEnumerator","l":"CsvEnumerator(Source, AtomicBoolean, List<RelDataType>, List<Integer>)","u":"%3Cinit%3E(org.apache.calcite.util.Source,java.util.concurrent.atomic.AtomicBoolean,java.util.List,java.util.List)"},{"p":"org.apache.calcite.adapter.csv","c":"CsvFilterableTable","l":"CsvFilterableTable(Source, RelProtoDataType)","u":"%3Cinit%3E(org.apache.calcite.util.Source,org.apache.calcite.rel.type.RelProtoDataType)"},{"p":"org.apache.calcite.adapter.csv","c":"CsvProjectTableScanRule","l":"CsvProjectTableScanRule(CsvProjectTableScanRule.Config)","u":"%3Cinit%3E(org.apache.calcite.adapter.csv.CsvProjectTableScanRule.Config)"},{"p":"org.apache.calcite.adapter.file","c":"CsvProjectTableScanRule","l":"CsvProjectTableScanRule(CsvProjectTableScanRule.Config)","u":"%3Cinit%3E(org.apache.calcite.adapter.file.CsvProjectTableScanRule.Config)"},{"p":"org.apache.calcite.adapter.csv","c":"CsvSchema","l":"CsvSchema(File, CsvTable.Flavor)","u":"%3Cinit%3E(java.io.File,org.apache.calcite.adapter.csv.CsvTable.Flavor)"},{"p":"org.apache.calcite.adapter.csv","c":"CsvStreamTableFactory","l":"CsvStreamTableFactory()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.csv","c":"CsvTableFactory","l":"CsvTableFactory()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.file","c":"CsvTableFactory","l":"CsvTableFactory()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.csv","c":"CsvTableScan","l":"CsvTableScan(RelOptCluster, RelOptTable, CsvTranslatableTable, int[])","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelOptTable,org.apache.calcite.adapter.csv.CsvTranslatableTable,int[])"},{"p":"org.apache.calcite.adapter.file","c":"CsvTableScan","l":"CsvTableScan(RelOptCluster, RelOptTable, CsvTranslatableTable, int[])","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelOptTable,org.apache.calcite.adapter.file.CsvTranslatableTable,int[])"},{"p":"org.apache.calcite.rel.core","c":"Aggregate.Group","l":"CUBE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"CUBE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"CUBE"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"cube(List<ImmutableBitSet>)","u":"cube(java.util.List)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"CUME_DIST"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"CUME_DIST"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"CUMULATIVE_COST"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"CUMULATIVE_MEMORY_WITHIN_PHASE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"CUMULATIVE_MEMORY_WITHIN_PHASE_SPLIT"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Memory","l":"cumulativeMemoryWithinPhase()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"cumulativeMemoryWithinPhase(RelNode)","u":"cumulativeMemoryWithinPhase(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Memory.Handler","l":"cumulativeMemoryWithinPhase(RelNode, RelMetadataQuery)","u":"cumulativeMemoryWithinPhase(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMemory","l":"cumulativeMemoryWithinPhase(RelNode, RelMetadataQuery)","u":"cumulativeMemoryWithinPhase(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Memory","l":"cumulativeMemoryWithinPhaseSplit()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"cumulativeMemoryWithinPhaseSplit(RelNode)","u":"cumulativeMemoryWithinPhaseSplit(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Memory.Handler","l":"cumulativeMemoryWithinPhaseSplit(RelNode, RelMetadataQuery)","u":"cumulativeMemoryWithinPhaseSplit(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMemory","l":"cumulativeMemoryWithinPhaseSplit(RelNode, RelMetadataQuery)","u":"cumulativeMemoryWithinPhaseSplit(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"CURRENT_CATALOG"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"CURRENT_DATE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"CURRENT_DATE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"CURRENT_DATETIME"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"CURRENT_DATETIME"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"CURRENT_DATETIME2"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"CURRENT_PATH"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"CURRENT_ROLE"},{"p":"org.apache.calcite.rex","c":"RexWindowBounds","l":"CURRENT_ROW"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"CURRENT_SCHEMA"},{"p":"org.apache.calcite.runtime","c":"Hook","l":"CURRENT_TIME"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"CURRENT_TIME"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"CURRENT_TIME"},{"p":"org.apache.calcite","c":"DataContext.Variable","l":"CURRENT_TIMESTAMP"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"CURRENT_TIMESTAMP"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"CURRENT_TIMESTAMP"},{"p":"org.apache.calcite.test","c":"SqlOperatorTest","l":"CURRENT_TZ"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"CURRENT_USER"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"CURRENT_VALUE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"CURRENT_VALUE"},{"p":"org.apache.calcite.adapter.file","c":"CsvEnumerator","l":"current()"},{"p":"org.apache.calcite.adapter.file","c":"JsonEnumerator","l":"current()"},{"p":"org.apache.calcite.adapter.geode.simple","c":"GeodeSimpleEnumerator","l":"current()"},{"p":"org.apache.calcite.adapter.kafka","c":"KafkaMessageEnumerator","l":"current()"},{"p":"org.apache.calcite.adapter.os","c":"OsQuery","l":"current()"},{"p":"org.apache.calcite.adapter.splunk.search","c":"SplunkConnectionImpl.SplunkResultEnumerator","l":"current()"},{"p":"org.apache.calcite.linq4j","c":"DelegatingEnumerator","l":"current()"},{"p":"org.apache.calcite.linq4j","c":"Enumerator","l":"current()"},{"p":"org.apache.calcite.linq4j","c":"MemoryEnumerator","l":"current()"},{"p":"org.apache.calcite.linq4j","c":"TransformedEnumerator","l":"current()"},{"p":"org.apache.calcite.runtime","c":"EnumeratorCursor","l":"current()"},{"p":"org.apache.calcite.runtime","c":"ObjectEnumeratorCursor","l":"current()"},{"p":"org.apache.calcite.adapter.enumerable","c":"NestedBlockBuilder","l":"currentBlock()"},{"p":"org.apache.calcite.adapter.enumerable","c":"NestedBlockBuilderImpl","l":"currentBlock()"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"currentDate(DataContext)","u":"currentDate(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"currentDatetime(DataContext)","u":"currentDatetime(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"currentDatetime(DataContext, String)","u":"currentDatetime(org.apache.calcite.DataContext,java.lang.String)"},{"p":"org.apache.calcite.adapter.enumerable","c":"WinAggAddContext","l":"currentPosition()"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator","l":"currentRel"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"currentRow()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"currentRowFollowingError()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"currentRowPrecedingError()"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"currentTime(DataContext)","u":"currentTime(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"currentTimestamp(DataContext)","u":"currentTimestamp(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.test","c":"SqlOperatorTest","l":"currentTimeString(TimeZone)","u":"currentTimeString(java.util.TimeZone)"},{"p":"org.apache.calcite.sql.parser","c":"StringAndPos","l":"cursor"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"CURSOR"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFamily","l":"CURSOR"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"CURSOR"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"CURSOR"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"CURSOR"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"CURSOR"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"cursor(int, int)","u":"cursor(int,int)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl.FunctionParamInfo","l":"cursorPosToSelectMap"},{"p":"org.apache.calcite.sql.type","c":"CursorReturnTypeInference","l":"CursorReturnTypeInference(int)","u":"%3Cinit%3E(int)"},{"p":"org.apache.calcite.test.schemata.foodmart","c":"FoodmartSchema.SalesFact","l":"cust_id"},{"p":"org.apache.calcite.test.schemata.tpch","c":"TpchSchema.Customer","l":"custId"},{"p":"org.apache.calcite.test.schemata.tpch","c":"TpchSchema.LineItem","l":"custId"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRel.Prefer","l":"CUSTOM"},{"p":"org.apache.calcite.adapter.enumerable","c":"JavaRowFormat","l":"CUSTOM"},{"p":"org.apache.calcite.model","c":"JsonSchema.Type","l":"CUSTOM"},{"p":"org.apache.calcite.plan","c":"Strong.Policy","l":"CUSTOM"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"CUSTOM_DATE_ADD"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"CUSTOM_DATE_CEIL"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"CUSTOM_DATE_DIFF"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"CUSTOM_DATE_FLOOR"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRel.Prefer","l":"CUSTOM_NICE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"CUSTOM_TIMESTAMP_ADD"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"CUSTOM_TIMESTAMP_CEIL"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"CUSTOM_TIMESTAMP_DIFF"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"CUSTOM_TIMESTAMP_FLOOR"},{"p":"org.apache.calcite.test","c":"SqlToRelTestBase.CustomCorrelate","l":"CustomCorrelate(RelOptCluster, RelTraitSet, List<RelHint>, RelNode, RelNode, CorrelationId, ImmutableBitSet, JoinRelType)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.CorrelationId,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"customDateAdd(DataContext, String, int, int)","u":"customDateAdd(org.apache.calcite.DataContext,java.lang.String,int,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"customDateCeil(DataContext, String, int)","u":"customDateCeil(org.apache.calcite.DataContext,java.lang.String,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"customDateDiff(DataContext, String, int, int)","u":"customDateDiff(org.apache.calcite.DataContext,java.lang.String,int,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"customDateFloor(DataContext, String, int)","u":"customDateFloor(org.apache.calcite.DataContext,java.lang.String,int)"},{"p":"org.apache.calcite.test.schemata.tpch","c":"TpchSchema","l":"customer"},{"p":"org.apache.calcite.test.schemata.tpch","c":"TpchSchema.Customer","l":"Customer(int)","u":"%3Cinit%3E(int)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest","l":"customMatches(String, Consumer<SqlNode>)","u":"customMatches(java.lang.String,java.util.function.Consumer)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"customTimestampAdd(DataContext, String, long, long)","u":"customTimestampAdd(org.apache.calcite.DataContext,java.lang.String,long,long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"customTimestampCeil(DataContext, String, long)","u":"customTimestampCeil(org.apache.calcite.DataContext,java.lang.String,long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"customTimestampDiff(DataContext, String, long, long)","u":"customTimestampDiff(org.apache.calcite.DataContext,java.lang.String,long,long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"customTimestampFloor(DataContext, String, long)","u":"customTimestampFloor(org.apache.calcite.DataContext,java.lang.String,long)"},{"p":"org.apache.calcite.util.graph","c":"CycleDetector","l":"CycleDetector(DirectedGraph<V, E>)","u":"%3Cinit%3E(org.apache.calcite.util.graph.DirectedGraph)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"cyclicDefinition(String, String)","u":"cyclicDefinition(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"CyclicDefinitionException","l":"CyclicDefinitionException(int, List<String>)","u":"%3Cinit%3E(int,java.util.List)"},{"p":"org.apache.calcite.rel.metadata","c":"CyclicMetadataException","l":"CyclicMetadataException()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"d"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"D"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"DATA_CONTEXT_GET"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"DATA_CONTEXT_GET_QUERY_PROVIDER"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"DATA_CONTEXT_GET_ROOT_SCHEMA"},{"p":"org.apache.calcite.test","c":"QuidemTest","l":"data(String)","u":"data(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlDialect.Context","l":"databaseMajorVersion()"},{"p":"org.apache.calcite.sql","c":"SqlUtil.DatabaseMetaDataInvocationHandler","l":"DatabaseMetaDataInvocationHandler(String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlDialect.Context","l":"databaseMinorVersion()"},{"p":"org.apache.calcite.sql","c":"SqlDialect.Context","l":"databaseProduct()"},{"p":"org.apache.calcite.sql","c":"SqlDialect.Context","l":"databaseProductName()"},{"p":"org.apache.calcite.sql","c":"SqlDialect.Context","l":"databaseVersion()"},{"p":"org.apache.calcite.interpreter","c":"InterpretableRel.InterpreterImplementor","l":"dataContext"},{"p":"org.apache.calcite.adapter.file","c":"JsonTable","l":"dataList"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcSchema","l":"dataSource(String, String, String, String)","u":"dataSource(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlAttributeDefinition","l":"dataType"},{"p":"org.apache.calcite.sql.ddl","c":"SqlColumnDeclaration","l":"dataType"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateType","l":"dataType"},{"p":"org.apache.calcite.sql","c":"SqlDialect.Context","l":"dataTypeSystem()"},{"p":"org.apache.calcite.runtime.rtti","c":"RuntimeTypeInformation.RuntimeSqlTypeName","l":"DATE"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFamily","l":"DATE"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"DATE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"DATE"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"DATE"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"DATE"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"DATE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"DATE_ADD"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"DATE_ADD"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"DATE_ADD_SPARK"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"DATE_ANY"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"DATE_CHARACTER"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"DATE_DIFF"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"DATE_FROM_UNIX_DATE"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"DATE_FROM_UNIX_DATE"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"DATE_INTERVAL"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"DATE_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"DATE_OR_TIMESTAMP"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"DATE_PART"},{"p":"org.apache.calcite.test","c":"SqlOperatorTest","l":"DATE_PATTERN"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"DATE_SUB"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"DATE_SUB"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"DATE_SUB_SPARK"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"DATE_TIME"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"DATE_TO_INT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"DATE_TO_INT_OFFSET"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"DATE_TO_INT_OPTIONAL"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"DATE_TO_INT_OPTIONAL_OFFSET"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"DATE_TRUNC"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"DATE_TRUNC"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"date(int, int, int)","u":"date(int,int,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"date(long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"date(long, String)","u":"date(long,java.lang.String)"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"DATEADD"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"dateDataType"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"DATEDIFF"},{"p":"org.apache.calcite.rel.type","c":"TimeFrame","l":"dateEpoch()"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.DateFormatFunction","l":"DateFormatFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.DateFormatFunctionPg","l":"DateFormatFunctionPg(DataContext)","u":"%3Cinit%3E(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"dateFromUnixDate(int)"},{"p":"org.apache.calcite.util","c":"Smalls.AllTypesFunction","l":"dateFun(Date)","u":"dateFun(java.sql.Date)"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"dateInterval()"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"dateLiteral(DateString)","u":"dateLiteral(org.apache.calcite.util.DateString)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"dateLiteralOutOfRange(String)","u":"dateLiteralOutOfRange(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.DateParseFunction","l":"DateParseFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"DATEPART"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"dateRequiresInterval()"},{"p":"org.apache.calcite.util","c":"DateString","l":"DateString(int, int, int)","u":"%3Cinit%3E(int,int,int)"},{"p":"org.apache.calcite.util","c":"DateString","l":"DateString(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFamily","l":"DATETIME"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"DATETIME"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"DATETIME"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"DATETIME"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"DATETIME_ADD"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"DATETIME_DIFF"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFamily","l":"DATETIME_INTERVAL"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"DATETIME_INTERVAL"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"DATETIME_INTERVAL_INTERVAL"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"DATETIME_INTERVAL_INTERVAL_TIME"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"DATETIME_INTERVAL_TIME"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"DATETIME_PLUS"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"DATETIME_SUB"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"DATETIME_TRUNC"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"DATETIME_TYPES"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"datetime(int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"datetime(int, int)","u":"datetime(int,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"datetime(int, int, int, int, int, int)","u":"datetime(int,int,int,int,int,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"datetime(long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"datetime(long, String)","u":"datetime(long,java.lang.String)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidSqlCastConverter","l":"dateTimeFormatString(SqlTypeName)","u":"dateTimeFormatString(org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.sql.validate.implicit","c":"TypeCoercionImpl","l":"dateTimeStringEquality(SqlCallBinding, RelDataType, RelDataType)","u":"dateTimeStringEquality(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"day"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"Day"},{"p":"org.apache.calcite.adapter.druid","c":"Granularity.Type","l":"DAY"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"DAY"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"DAY_INTERVAL_TYPES"},{"p":"org.apache.calcite.test","c":"SqlOperatorTest","l":"DAY_VARIANTS"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"DAYNAME"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"DAYNAME_WITH_DATE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"DAYNAME_WITH_TIMESTAMP"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"dayNameWithDate(int, Locale)","u":"dayNameWithDate(int,java.util.Locale)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"dayNameWithTimestamp(long, Locale)","u":"dayNameWithTimestamp(long,java.util.Locale)"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"DAYOFMONTH"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"DAYOFWEEK"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"DayOfWeekCompiledPattern","l":"DayOfWeekCompiledPattern(Set<PatternModifier>, CapitalizationEnum, TextStyle)","u":"%3Cinit%3E(java.util.Set,org.apache.calcite.util.format.postgresql.CapitalizationEnum,java.time.format.TextStyle)"},{"p":"org.apache.calcite.util.format.postgresql.format","c":"DayOfWeekFormatPattern","l":"DayOfWeekFormatPattern(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"DAYOFYEAR"},{"p":"org.apache.calcite.util.format.postgresql","c":"ChronoUnitEnum","l":"DAYS_IN_MONTH"},{"p":"org.apache.calcite.util.format.postgresql","c":"ChronoUnitEnum","l":"DAYS_IN_WEEK"},{"p":"org.apache.calcite.util.format.postgresql","c":"ChronoUnitEnum","l":"DAYS_IN_YEAR"},{"p":"org.apache.calcite.util.format.postgresql","c":"ChronoUnitEnum","l":"DAYS_IN_YEAR_ISO_8601"},{"p":"org.apache.calcite.util.format.postgresql","c":"ChronoUnitEnum","l":"DAYS_JULIAN"},{"p":"org.apache.calcite.test","c":"CalciteAssert","l":"DB"},{"p":"org.apache.calcite.sql","c":"SqlDialect.DatabaseProduct","l":"DB2"},{"p":"org.apache.calcite.sql.dialect","c":"Db2SqlDialect","l":"Db2SqlDialect(SqlDialect.Context)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect.Context)"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"DD"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"DDD"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"DDL"},{"p":"org.apache.calcite.sql","c":"SqlDdl","l":"DDL_OPERATOR"},{"p":"org.apache.calcite.server","c":"DdlExecutorImpl","l":"DdlExecutorImpl()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.config","c":"CalciteSystemProperty","l":"DEBUG"},{"p":"org.apache.calcite.util.trace","c":"CalciteLogger","l":"debug(String, Object, Object)","u":"debug(java.lang.String,java.lang.Object,java.lang.Object)"},{"p":"org.apache.calcite.util.trace","c":"CalciteLogger","l":"debug(String, Object, Object, Object)","u":"debug(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)"},{"p":"org.apache.calcite.util.trace","c":"CalciteLogger","l":"debug(String, Object, Object, Object, Object)","u":"debug(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)"},{"p":"org.apache.calcite.util.trace","c":"CalciteLogger","l":"debug(String, Object...)","u":"debug(java.lang.String,java.lang.Object...)"},{"p":"org.apache.calcite.util","c":"Util","l":"debugCode(PrintStream, String)","u":"debugCode(java.io.PrintStream,java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"DebugInfo"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"debugInfo()"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"dec"},{"p":"org.apache.calcite.runtime.rtti","c":"RuntimeTypeInformation.RuntimeSqlTypeName","l":"DECIMAL"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFamily","l":"DECIMAL"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"DECIMAL"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"DECIMAL_DECIMAL_CAST"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"DECIMAL_DECIMAL_CAST_ROUNDING_MODE"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"DECIMAL_MOD"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"DECIMAL_MOD_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"DECIMAL_OR_DOUBLE"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"DECIMAL_OR_DOUBLE_NULLABLE"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"DECIMAL_OVERFLOW"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"DECIMAL_PRODUCT"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"DECIMAL_PRODUCT_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"DECIMAL_QUOTIENT"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"DECIMAL_QUOTIENT_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"DECIMAL_SCALE0"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"DECIMAL_SUM"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"DECIMAL_SUM_NULLABLE"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"decimalDecimalCast(BigDecimal, int, int)","u":"decimalDecimalCast(java.math.BigDecimal,int,int)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"decimalDecimalCast(BigDecimal, int, int, RoundingMode)","u":"decimalDecimalCast(java.math.BigDecimal,int,int,java.math.RoundingMode)"},{"p":"org.apache.calcite.util","c":"NumberUtil","l":"decimalFormat(String)","u":"decimalFormat(java.lang.String)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory","l":"decimalOf(RelDataType)","u":"decimalOf(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactoryImpl","l":"decimalOf(RelDataType)","u":"decimalOf(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"Declaration"},{"p":"org.apache.calcite.linq4j.tree","c":"ForStatement","l":"declarations"},{"p":"org.apache.calcite.linq4j.tree","c":"DeclarationStatement","l":"DeclarationStatement(int, ParameterExpression, Expression)","u":"%3Cinit%3E(int,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"declare(int, ParameterExpression, Expression)","u":"declare(int,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"declare(int, String, Expression)","u":"declare(int,java.lang.String,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"declareCursor(SqlSelect, SqlValidatorScope)","u":"declareCursor(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"declareCursor(SqlSelect, SqlValidatorScope)","u":"declareCursor(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableAggregateBase","l":"declareParentAccumulator(List<Expression>, BlockBuilder, PhysType)","u":"declareParentAccumulator(java.util.List,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType)"},{"p":"org.apache.calcite.schema.impl","c":"AggregateFunctionImpl","l":"declaringClass"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"DECODE"},{"p":"org.apache.calcite.sql.fun","c":"OracleSqlOperatorTable","l":"DECODE"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"DECODE"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"decodeIntervalOrDecimal(RexNode)","u":"decodeIntervalOrDecimal(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"decodeIntervalOrDecimal(SqlParserPos, RexNode)","u":"decodeIntervalOrDecimal(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.adapter.splunk.util","c":"StringUtils","l":"decodeList(CharSequence, char)","u":"decodeList(java.lang.CharSequence,char)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceDecimalsRule.RexExpander","l":"decodeValue(SqlParserPos, RexNode)","u":"decodeValue(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"decomposeConjunction(RexNode, List<RexNode>)","u":"decomposeConjunction(org.apache.calcite.rex.RexNode,java.util.List)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"decomposeConjunction(RexNode, List<RexNode>, List<RexNode>)","u":"decomposeConjunction(org.apache.calcite.rex.RexNode,java.util.List,java.util.List)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"decomposeDisjunction(RexNode, List<RexNode>)","u":"decomposeDisjunction(org.apache.calcite.rex.RexNode,java.util.List)"},{"p":"org.apache.calcite.util","c":"Glossary","l":"DECORATOR_PATTERN"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator","l":"decorrelate(RelNode)","u":"decorrelate(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"decorrelate(SqlNode, RelNode)","u":"decorrelate(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl.CalcitePreparingStmt","l":"decorrelate(SqlToRelConverter, SqlNode, RelNode)","u":"decorrelate(org.apache.calcite.sql2rel.SqlToRelConverter,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.prepare","c":"Prepare","l":"decorrelate(SqlToRelConverter, SqlNode, RelNode)","u":"decorrelate(org.apache.calcite.sql2rel.SqlToRelConverter,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator","l":"decorrelateExpr(RelNode, Map<RelNode, RelDecorrelator.Frame>, RelDecorrelator.CorelMap, RexNode)","u":"decorrelateExpr(org.apache.calcite.rel.RelNode,java.util.Map,org.apache.calcite.sql2rel.RelDecorrelator.CorelMap,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator","l":"decorrelateFetchOneSort(Sort, RelDecorrelator.Frame)","u":"decorrelateFetchOneSort(org.apache.calcite.rel.core.Sort,org.apache.calcite.sql2rel.RelDecorrelator.Frame)"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator","l":"decorrelateQuery(RelNode)","u":"decorrelateQuery(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"decorrelateQuery(RelNode)","u":"decorrelateQuery(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator","l":"decorrelateQuery(RelNode, RelBuilder)","u":"decorrelateQuery(org.apache.calcite.rel.RelNode,org.apache.calcite.tools.RelBuilder)"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator","l":"decorrelateQuery(RelNode, RelBuilder, RuleSet)","u":"decorrelateQuery(org.apache.calcite.rel.RelNode,org.apache.calcite.tools.RelBuilder,org.apache.calcite.tools.RuleSet)"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator","l":"decorrelateRel(Aggregate, boolean)","u":"decorrelateRel(org.apache.calcite.rel.core.Aggregate,boolean)"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator","l":"decorrelateRel(Correlate, boolean)","u":"decorrelateRel(org.apache.calcite.rel.core.Correlate,boolean)"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator","l":"decorrelateRel(Filter, boolean)","u":"decorrelateRel(org.apache.calcite.rel.core.Filter,boolean)"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator","l":"decorrelateRel(Join, boolean)","u":"decorrelateRel(org.apache.calcite.rel.core.Join,boolean)"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator","l":"decorrelateRel(LogicalAggregate, boolean)","u":"decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate,boolean)"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator","l":"decorrelateRel(LogicalCorrelate, boolean)","u":"decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate,boolean)"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator","l":"decorrelateRel(LogicalFilter, boolean)","u":"decorrelateRel(org.apache.calcite.rel.logical.LogicalFilter,boolean)"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator","l":"decorrelateRel(LogicalJoin, boolean)","u":"decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin,boolean)"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator","l":"decorrelateRel(LogicalProject, boolean)","u":"decorrelateRel(org.apache.calcite.rel.logical.LogicalProject,boolean)"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator","l":"decorrelateRel(LogicalSnapshot, boolean)","u":"decorrelateRel(org.apache.calcite.rel.logical.LogicalSnapshot,boolean)"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator","l":"decorrelateRel(LogicalTableFunctionScan, boolean)","u":"decorrelateRel(org.apache.calcite.rel.logical.LogicalTableFunctionScan,boolean)"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator","l":"decorrelateRel(Project, boolean)","u":"decorrelateRel(org.apache.calcite.rel.core.Project,boolean)"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator","l":"decorrelateRel(RelNode, boolean)","u":"decorrelateRel(org.apache.calcite.rel.RelNode,boolean)"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator","l":"decorrelateRel(Sort, boolean)","u":"decorrelateRel(org.apache.calcite.rel.core.Sort,boolean)"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator","l":"decorrelateRel(Values, boolean)","u":"decorrelateRel(org.apache.calcite.rel.core.Values,boolean)"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator","l":"decorrelateSortAsAggregate(Sort, RelDecorrelator.Frame)","u":"decorrelateSortAsAggregate(org.apache.calcite.rel.core.Sort,org.apache.calcite.sql2rel.RelDecorrelator.Frame)"},{"p":"org.apache.calcite.sql.validate","c":"SqlMonotonicity","l":"DECREASING"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"decRelDataType"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"Decrement"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"decrement(Expression)","u":"decrement(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"decrement(Expression, Method)","u":"decrement(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.rex","c":"RexProgram","l":"deduceCollations(List<RelCollation>, int, List<RexLocalRef>, List<RelCollation>)","u":"deduceCollations(java.util.List,int,java.util.List,java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableTableScan","l":"deduceElementType(Table)","u":"deduceElementType(org.apache.calcite.schema.Table)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableTableScan","l":"deduceFormat(RelOptTable)","u":"deduceFormat(org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.adapter.file","c":"CsvEnumerator","l":"deduceRowType(JavaTypeFactory, Source, List<RelDataType>, Boolean)","u":"deduceRowType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.util.Source,java.util.List,java.lang.Boolean)"},{"p":"org.apache.calcite.sql.fun","c":"SqlTimestampAddFunction","l":"deduceType(RelDataTypeFactory, TimeUnit, RelDataType, RelDataType)","u":"deduceType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.avatica.util.TimeUnit,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.linq4j.tree","c":"DeterministicCodeOptimizer","l":"dedup"},{"p":"org.apache.calcite.tools","c":"RelBuilder.Config","l":"dedupAggregateCalls()"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.DedupFunction","l":"DedupFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"deduplicateColumns(List<RelDataTypeField>, List<RelDataTypeField>)","u":"deduplicateColumns(java.util.List,java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexBiVisitorImpl","l":"deep"},{"p":"org.apache.calcite.rex","c":"RexVisitorImpl","l":"deep"},{"p":"org.apache.calcite.rel.mutable","c":"MutableRel","l":"deep()"},{"p":"org.apache.calcite.plan.hep","c":"HepRelVertex","l":"deepEquals(Object)","u":"deepEquals(java.lang.Object)"},{"p":"org.apache.calcite.plan.volcano","c":"RelSubset","l":"deepEquals(Object)","u":"deepEquals(java.lang.Object)"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"deepEquals(Object)","u":"deepEquals(java.lang.Object)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalAsofJoin","l":"deepEquals(Object)","u":"deepEquals(java.lang.Object)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalFilter","l":"deepEquals(Object)","u":"deepEquals(java.lang.Object)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalJoin","l":"deepEquals(Object)","u":"deepEquals(java.lang.Object)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalProject","l":"deepEquals(Object)","u":"deepEquals(java.lang.Object)"},{"p":"org.apache.calcite.rel","c":"RelNode","l":"deepEquals(Object)","u":"deepEquals(java.lang.Object)"},{"p":"org.apache.calcite.rel.core","c":"Filter","l":"deepEquals0(Object)","u":"deepEquals0(java.lang.Object)"},{"p":"org.apache.calcite.rel.core","c":"Join","l":"deepEquals0(Object)","u":"deepEquals0(java.lang.Object)"},{"p":"org.apache.calcite.rel.core","c":"Project","l":"deepEquals0(Object)","u":"deepEquals0(java.lang.Object)"},{"p":"org.apache.calcite.plan.hep","c":"HepRelVertex","l":"deepHashCode()"},{"p":"org.apache.calcite.plan.volcano","c":"RelSubset","l":"deepHashCode()"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"deepHashCode()"},{"p":"org.apache.calcite.rel.logical","c":"LogicalAsofJoin","l":"deepHashCode()"},{"p":"org.apache.calcite.rel.logical","c":"LogicalFilter","l":"deepHashCode()"},{"p":"org.apache.calcite.rel.logical","c":"LogicalJoin","l":"deepHashCode()"},{"p":"org.apache.calcite.rel.logical","c":"LogicalProject","l":"deepHashCode()"},{"p":"org.apache.calcite.rel","c":"RelNode","l":"deepHashCode()"},{"p":"org.apache.calcite.rel.core","c":"Filter","l":"deepHashCode0()"},{"p":"org.apache.calcite.rel.core","c":"Join","l":"deepHashCode0()"},{"p":"org.apache.calcite.rel.core","c":"Project","l":"deepHashCode0()"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.AllPredicates","l":"DEF"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Collation","l":"DEF"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.ColumnOrigin","l":"DEF"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.ColumnUniqueness","l":"DEF"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.CumulativeCost","l":"DEF"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.DistinctRowCount","l":"DEF"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Distribution","l":"DEF"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.ExplainVisibility","l":"DEF"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.ExpressionLineage","l":"DEF"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.LowerBoundCost","l":"DEF"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.MaxRowCount","l":"DEF"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Measure","l":"DEF"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Memory","l":"DEF"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.MinRowCount","l":"DEF"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.NodeTypes","l":"DEF"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.NonCumulativeCost","l":"DEF"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Parallelism","l":"DEF"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.PercentageOriginalRows","l":"DEF"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.PopulationSize","l":"DEF"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Predicates","l":"DEF"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.RowCount","l":"DEF"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Selectivity","l":"DEF"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Size","l":"DEF"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.TableReferences","l":"DEF"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.UniqueKeys","l":"DEF"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"Default"},{"p":"org.apache.calcite.schema","c":"ColumnStrategy","l":"DEFAULT"},{"p":"org.apache.calcite.sql","c":"SqlJsonValueEmptyOrErrorBehavior","l":"DEFAULT"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"DEFAULT"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"DEFAULT"},{"p":"org.apache.calcite.adapter.arrow","c":"ArrowRules.ArrowFilterRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraRules.CassandraFilterRule.CassandraFilterRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraRules.CassandraLimitRule.CassandraLimitRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraRules.CassandraSortRule.CassandraSortRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.adapter.csv","c":"CsvProjectTableScanRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules.DruidAggregateProjectRule.DruidAggregateProjectRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules.DruidAggregateRule.DruidAggregateRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules.DruidFilterRule.DruidFilterRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules.DruidHavingFilterRule.DruidHavingFilterRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules.DruidPostAggregationProjectRule.DruidPostAggregationProjectRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules.DruidProjectRule.DruidProjectRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules.DruidSortRule.DruidSortRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableBatchNestedLoopJoinRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableFilterToCalcRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableLimitRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableLimitSortRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableProjectToCalcRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.adapter.file","c":"CsvProjectTableScanRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbRules.InnodbFilterRule.InnodbFilterRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbRules.InnodbSortFilterRule.InnodbSortFilterRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbRules.InnodbSortTableScanRule.InnodbSortTableScanRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfig","l":"DEFAULT"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableTableScanRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.plan.volcano","c":"AbstractConverter.ExpandConversionRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.externalize","c":"RelDotWriter.WriteOption","l":"DEFAULT"},{"p":"org.apache.calcite.rel.metadata","c":"JaninoRelMetadataProvider","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"AggregateCaseToFilterRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"AggregateExpandDistinctAggregatesRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"AggregateExpandWithinDistinctRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"AggregateExtractProjectRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"AggregateFilterTransposeRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"AggregateJoinJoinRemoveRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"AggregateJoinRemoveRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"AggregateJoinTransposeRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"AggregateMergeRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"AggregateProjectConstantToDummyJoinRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"AggregateProjectMergeRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"AggregateProjectPullUpConstantsRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"AggregateProjectStarTableRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"AggregateReduceFunctionsRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"AggregateRemoveRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"AggregateStarTableRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"AggregateUnionAggregateRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"AggregateUnionTransposeRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"AggregateValuesRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"CalcMergeRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"CalcRemoveRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"CalcSplitRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"CoerceInputsRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"DateRangeRules.FilterDateRangeRule.FilterDateRangeRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"DphypJoinReorderRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"ExchangeRemoveConstantKeysRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"FilterAggregateTransposeRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"FilterCalcMergeRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"FilterCorrelateRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"FilterFlattenCorrelatedConditionRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"FilterJoinRule.FilterIntoJoinRule.FilterIntoJoinRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"FilterJoinRule.JoinConditionPushRule.JoinConditionPushRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"FilterMergeRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"FilterMultiJoinMergeRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"FilterProjectTransposeRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"FilterRemoveIsNotDistinctFromRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"FilterSampleTransposeRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"FilterSetOpTransposeRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"FilterTableFunctionTransposeRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"FilterTableScanRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"FilterToCalcRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"FilterWindowTransposeRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"IntersectToDistinctRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"JoinAddRedundantSemiJoinRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"JoinAssociateRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"JoinCommuteRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"JoinDeriveIsNotNullFilterRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"JoinExtractFilterRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"JoinProjectTransposeRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"JoinPushExpressionsRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"JoinPushTransitivePredicatesRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"JoinToCorrelateRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"JoinToHyperGraphRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"JoinToMultiJoinRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"LoptOptimizeJoinRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"MatchRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewOnlyAggregateRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewOnlyFilterRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewOnlyJoinRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewProjectAggregateRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewProjectFilterRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewProjectJoinRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"MaterializedViewFilterScanRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"MeasureRules.AggregateMeasure2RuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"MeasureRules.AggregateMeasureRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"MeasureRules.FilterSortMeasureRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"MeasureRules.ProjectMeasureRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"MeasureRules.ProjectSortMeasureRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"MinusToDistinctRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"MultiJoinOptimizeBushyRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"ProjectAggregateMergeRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"ProjectCalcMergeRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"ProjectCorrelateTransposeRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"ProjectFilterTransposeRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"ProjectJoinJoinRemoveRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"ProjectJoinRemoveRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"ProjectJoinTransposeRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"ProjectMergeRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"ProjectMultiJoinMergeRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"ProjectOverSumToSum0Rule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"ProjectRemoveRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"ProjectSetOpTransposeRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"ProjectTableScanRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"ProjectToCalcRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"ProjectToWindowRule.CalcToWindowRule.CalcToWindowRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"ProjectToWindowRule.ProjectToLogicalProjectAndWindowRule.ProjectToLogicalProjectAndWindowRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"ProjectWindowTransposeRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules.CorrelateLeftEmptyRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules.CorrelateRightEmptyRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules.IntersectEmptyPruneRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules.JoinLeftEmptyRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules.JoinRightEmptyRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules.MinusEmptyPruneRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules.SortFetchZeroRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules.UnionEmptyPruneRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules.ZeroMaxRowsRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"ReduceDecimalsRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.CalcReduceExpressionsRule.CalcReduceExpressionsRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.FilterReduceExpressionsRule.FilterReduceExpressionsRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.JoinReduceExpressionsRule.JoinReduceExpressionsRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.ProjectReduceExpressionsRule.ProjectReduceExpressionsRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.WindowReduceExpressionsRule.WindowReduceExpressionsRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"SampleToFilterRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinFilterTransposeRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinJoinTransposeRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinProjectTransposeRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinRemoveRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinRule.JoinOnUniqueToSemiJoinRule.JoinOnUniqueToSemiJoinRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinRule.JoinToSemiJoinRule.JoinToSemiJoinRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinRule.ProjectToSemiJoinRule.ProjectToSemiJoinRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"SortJoinCopyRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"SortJoinTransposeRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"SortProjectTransposeRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"SortRemoveConstantKeysRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"SortRemoveRedundantRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"SortRemoveRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"SortUnionTransposeRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"SpatialRules.FilterHilbertRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"TableScanRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"UnionEliminatorRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"UnionMergeRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"UnionPullUpConstantsRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"UnionToDistinctRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.rules","c":"UnionToValuesRule.Config","l":"DEFAULT"},{"p":"org.apache.calcite.rel.stream","c":"StreamRules.DeltaAggregateTransposeRule.DeltaAggregateTransposeRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.rel.stream","c":"StreamRules.DeltaFilterTransposeRule.DeltaFilterTransposeRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.rel.stream","c":"StreamRules.DeltaJoinTransposeRule.DeltaJoinTransposeRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.rel.stream","c":"StreamRules.DeltaProjectTransposeRule.DeltaProjectTransposeRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.rel.stream","c":"StreamRules.DeltaSortTransposeRule.DeltaSortTransposeRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.rel.stream","c":"StreamRules.DeltaTableScanRule.DeltaTableScanRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.rel.stream","c":"StreamRules.DeltaTableScanToEmptyRule.DeltaTableScanToEmptyRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.rel.stream","c":"StreamRules.DeltaUnionTransposeRule.DeltaUnionTransposeRuleConfig","l":"DEFAULT"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystem","l":"DEFAULT"},{"p":"org.apache.calcite.sql.dialect","c":"AccessSqlDialect","l":"DEFAULT"},{"p":"org.apache.calcite.sql.dialect","c":"AnsiSqlDialect","l":"DEFAULT"},{"p":"org.apache.calcite.sql.dialect","c":"BigQuerySqlDialect","l":"DEFAULT"},{"p":"org.apache.calcite.sql.dialect","c":"CalciteSqlDialect","l":"DEFAULT"},{"p":"org.apache.calcite.sql.dialect","c":"ClickHouseSqlDialect","l":"DEFAULT"},{"p":"org.apache.calcite.sql.dialect","c":"Db2SqlDialect","l":"DEFAULT"},{"p":"org.apache.calcite.sql.dialect","c":"DerbySqlDialect","l":"DEFAULT"},{"p":"org.apache.calcite.sql.dialect","c":"ExasolSqlDialect","l":"DEFAULT"},{"p":"org.apache.calcite.sql.dialect","c":"FirebirdSqlDialect","l":"DEFAULT"},{"p":"org.apache.calcite.sql.dialect","c":"FireboltSqlDialect","l":"DEFAULT"},{"p":"org.apache.calcite.sql.dialect","c":"H2SqlDialect","l":"DEFAULT"},{"p":"org.apache.calcite.sql.dialect","c":"HiveSqlDialect","l":"DEFAULT"},{"p":"org.apache.calcite.sql.dialect","c":"HsqldbSqlDialect","l":"DEFAULT"},{"p":"org.apache.calcite.sql.dialect","c":"InfobrightSqlDialect","l":"DEFAULT"},{"p":"org.apache.calcite.sql.dialect","c":"InformixSqlDialect","l":"DEFAULT"},{"p":"org.apache.calcite.sql.dialect","c":"IngresSqlDialect","l":"DEFAULT"},{"p":"org.apache.calcite.sql.dialect","c":"InterbaseSqlDialect","l":"DEFAULT"},{"p":"org.apache.calcite.sql.dialect","c":"LucidDbSqlDialect","l":"DEFAULT"},{"p":"org.apache.calcite.sql.dialect","c":"MssqlSqlDialect","l":"DEFAULT"},{"p":"org.apache.calcite.sql.dialect","c":"MysqlSqlDialect","l":"DEFAULT"},{"p":"org.apache.calcite.sql.dialect","c":"NeoviewSqlDialect","l":"DEFAULT"},{"p":"org.apache.calcite.sql.dialect","c":"NetezzaSqlDialect","l":"DEFAULT"},{"p":"org.apache.calcite.sql.dialect","c":"OracleSqlDialect","l":"DEFAULT"},{"p":"org.apache.calcite.sql.dialect","c":"ParaccelSqlDialect","l":"DEFAULT"},{"p":"org.apache.calcite.sql.dialect","c":"PhoenixSqlDialect","l":"DEFAULT"},{"p":"org.apache.calcite.sql.dialect","c":"PostgresqlSqlDialect","l":"DEFAULT"},{"p":"org.apache.calcite.sql.dialect","c":"PrestoSqlDialect","l":"DEFAULT"},{"p":"org.apache.calcite.sql.dialect","c":"RedshiftSqlDialect","l":"DEFAULT"},{"p":"org.apache.calcite.sql.dialect","c":"SnowflakeSqlDialect","l":"DEFAULT"},{"p":"org.apache.calcite.sql.dialect","c":"SparkSqlDialect","l":"DEFAULT"},{"p":"org.apache.calcite.sql.dialect","c":"StarRocksSqlDialect","l":"DEFAULT"},{"p":"org.apache.calcite.sql.dialect","c":"SybaseSqlDialect","l":"DEFAULT"},{"p":"org.apache.calcite.sql.dialect","c":"TeradataSqlDialect","l":"DEFAULT"},{"p":"org.apache.calcite.sql.dialect","c":"VerticaSqlDialect","l":"DEFAULT"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"DEFAULT"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser.Config","l":"DEFAULT"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserFixture","l":"DEFAULT"},{"p":"org.apache.calcite.sql.test","c":"SqlValidatorTester","l":"DEFAULT"},{"p":"org.apache.calcite.sql.type","c":"OperandHandlers","l":"DEFAULT"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformance","l":"DEFAULT"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator.Config","l":"DEFAULT"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture","l":"DEFAULT"},{"p":"org.apache.calcite.test","c":"SqlToRelFixture","l":"DEFAULT"},{"p":"org.apache.calcite.tools","c":"RelBuilder.Config","l":"DEFAULT"},{"p":"org.apache.calcite.util.format","c":"FormatModels","l":"DEFAULT"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"default_()"},{"p":"org.apache.calcite.rel.core","c":"RelFactories","l":"DEFAULT_AGGREGATE_FACTORY"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser","l":"DEFAULT_ALLOW_BANG_EQUAL"},{"p":"org.apache.calcite.rel.core","c":"RelFactories","l":"DEFAULT_ASOFJOIN_FACTORY"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"DEFAULT_BLOAT"},{"p":"org.apache.calcite.rel.rules","c":"ProjectMergeRule","l":"DEFAULT_BLOAT"},{"p":"org.apache.calcite.config","c":"CalciteSystemProperty","l":"DEFAULT_CHARSET"},{"p":"org.apache.calcite.config","c":"CalciteSystemProperty","l":"DEFAULT_COLLATION"},{"p":"org.apache.calcite.config","c":"CalciteSystemProperty","l":"DEFAULT_COLLATION_STRENGTH"},{"p":"org.apache.calcite.adapter.arrow","c":"ArrowRules.ArrowProjectRule","l":"DEFAULT_CONFIG"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraToEnumerableConverterRule","l":"DEFAULT_CONFIG"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableBindable.EnumerableToBindableConverterRule","l":"DEFAULT_CONFIG"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableCorrelateRule","l":"DEFAULT_CONFIG"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableInterpreterRule","l":"DEFAULT_CONFIG"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableMatchRule","l":"DEFAULT_CONFIG"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableMergeUnionRule.Config","l":"DEFAULT_CONFIG"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRepeatUnionRule","l":"DEFAULT_CONFIG"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableTableFunctionScanRule","l":"DEFAULT_CONFIG"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableTableModifyRule","l":"DEFAULT_CONFIG"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableTableScanRule","l":"DEFAULT_CONFIG"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableTableSpoolRule","l":"DEFAULT_CONFIG"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableValuesRule","l":"DEFAULT_CONFIG"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbToEnumerableConverterRule","l":"DEFAULT_CONFIG"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableAggregateRule","l":"DEFAULT_CONFIG"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableFilterRule","l":"DEFAULT_CONFIG"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableJoinRule","l":"DEFAULT_CONFIG"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableMatchRule","l":"DEFAULT_CONFIG"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableProjectRule","l":"DEFAULT_CONFIG"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableSetOpRule","l":"DEFAULT_CONFIG"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableSortRule","l":"DEFAULT_CONFIG"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableValuesRule","l":"DEFAULT_CONFIG"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableWindowRule","l":"DEFAULT_CONFIG"},{"p":"org.apache.calcite.interpreter","c":"NoneToBindableConverterRule","l":"DEFAULT_CONFIG"},{"p":"org.apache.calcite.sql.dialect","c":"AccessSqlDialect","l":"DEFAULT_CONTEXT"},{"p":"org.apache.calcite.sql.dialect","c":"AnsiSqlDialect","l":"DEFAULT_CONTEXT"},{"p":"org.apache.calcite.sql.dialect","c":"BigQuerySqlDialect","l":"DEFAULT_CONTEXT"},{"p":"org.apache.calcite.sql.dialect","c":"CalciteSqlDialect","l":"DEFAULT_CONTEXT"},{"p":"org.apache.calcite.sql.dialect","c":"ClickHouseSqlDialect","l":"DEFAULT_CONTEXT"},{"p":"org.apache.calcite.sql.dialect","c":"Db2SqlDialect","l":"DEFAULT_CONTEXT"},{"p":"org.apache.calcite.sql.dialect","c":"DerbySqlDialect","l":"DEFAULT_CONTEXT"},{"p":"org.apache.calcite.sql.dialect","c":"ExasolSqlDialect","l":"DEFAULT_CONTEXT"},{"p":"org.apache.calcite.sql.dialect","c":"FirebirdSqlDialect","l":"DEFAULT_CONTEXT"},{"p":"org.apache.calcite.sql.dialect","c":"FireboltSqlDialect","l":"DEFAULT_CONTEXT"},{"p":"org.apache.calcite.sql.dialect","c":"H2SqlDialect","l":"DEFAULT_CONTEXT"},{"p":"org.apache.calcite.sql.dialect","c":"HiveSqlDialect","l":"DEFAULT_CONTEXT"},{"p":"org.apache.calcite.sql.dialect","c":"HsqldbSqlDialect","l":"DEFAULT_CONTEXT"},{"p":"org.apache.calcite.sql.dialect","c":"InfobrightSqlDialect","l":"DEFAULT_CONTEXT"},{"p":"org.apache.calcite.sql.dialect","c":"InformixSqlDialect","l":"DEFAULT_CONTEXT"},{"p":"org.apache.calcite.sql.dialect","c":"IngresSqlDialect","l":"DEFAULT_CONTEXT"},{"p":"org.apache.calcite.sql.dialect","c":"InterbaseSqlDialect","l":"DEFAULT_CONTEXT"},{"p":"org.apache.calcite.sql.dialect","c":"LucidDbSqlDialect","l":"DEFAULT_CONTEXT"},{"p":"org.apache.calcite.sql.dialect","c":"MssqlSqlDialect","l":"DEFAULT_CONTEXT"},{"p":"org.apache.calcite.sql.dialect","c":"MysqlSqlDialect","l":"DEFAULT_CONTEXT"},{"p":"org.apache.calcite.sql.dialect","c":"NeoviewSqlDialect","l":"DEFAULT_CONTEXT"},{"p":"org.apache.calcite.sql.dialect","c":"NetezzaSqlDialect","l":"DEFAULT_CONTEXT"},{"p":"org.apache.calcite.sql.dialect","c":"OracleSqlDialect","l":"DEFAULT_CONTEXT"},{"p":"org.apache.calcite.sql.dialect","c":"ParaccelSqlDialect","l":"DEFAULT_CONTEXT"},{"p":"org.apache.calcite.sql.dialect","c":"PhoenixSqlDialect","l":"DEFAULT_CONTEXT"},{"p":"org.apache.calcite.sql.dialect","c":"PostgresqlSqlDialect","l":"DEFAULT_CONTEXT"},{"p":"org.apache.calcite.sql.dialect","c":"PrestoSqlDialect","l":"DEFAULT_CONTEXT"},{"p":"org.apache.calcite.sql.dialect","c":"RedshiftSqlDialect","l":"DEFAULT_CONTEXT"},{"p":"org.apache.calcite.sql.dialect","c":"SnowflakeSqlDialect","l":"DEFAULT_CONTEXT"},{"p":"org.apache.calcite.sql.dialect","c":"SparkSqlDialect","l":"DEFAULT_CONTEXT"},{"p":"org.apache.calcite.sql.dialect","c":"StarRocksSqlDialect","l":"DEFAULT_CONTEXT"},{"p":"org.apache.calcite.sql.dialect","c":"SybaseSqlDialect","l":"DEFAULT_CONTEXT"},{"p":"org.apache.calcite.sql.dialect","c":"TeradataSqlDialect","l":"DEFAULT_CONTEXT"},{"p":"org.apache.calcite.sql.dialect","c":"VerticaSqlDialect","l":"DEFAULT_CONTEXT"},{"p":"org.apache.calcite.rel.core","c":"RelFactories","l":"DEFAULT_CORRELATE_FACTORY"},{"p":"org.apache.calcite.rel.core","c":"RelFactories","l":"DEFAULT_EXCHANGE_FACTORY"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare","l":"DEFAULT_FACTORY"},{"p":"org.apache.calcite.rel.core","c":"RelFactories","l":"DEFAULT_FILTER_FACTORY"},{"p":"org.apache.calcite.rel.rules","c":"AggregateReduceFunctionsRule.Config","l":"DEFAULT_FUNCTIONS_TO_REDUCE"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser","l":"DEFAULT_IDENTIFIER_MAX_LENGTH"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser","l":"DEFAULT_IDENTIFIER_TIMEUNIT_MAP"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"DEFAULT_IN_SUB_QUERY_THRESHOLD"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"DEFAULT_IN_SUBQUERY_THRESHOLD"},{"p":"org.apache.calcite.adapter.druid","c":"DruidTable","l":"DEFAULT_INTERVAL"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"DEFAULT_INTERVAL_FRACTIONAL_SECOND_PRECISION"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"DEFAULT_INTERVAL_START_PRECISION"},{"p":"org.apache.calcite.rel.core","c":"RelFactories","l":"DEFAULT_JOIN_FACTORY"},{"p":"org.apache.calcite.rel.core","c":"RelFactories","l":"DEFAULT_MATCH_FACTORY"},{"p":"org.apache.calcite.config","c":"CalciteSystemProperty","l":"DEFAULT_NATIONAL_CHARSET"},{"p":"org.apache.calcite.config","c":"CalciteConnectionProperty","l":"DEFAULT_NULL_COLLATION"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery","l":"DEFAULT_OPERATORS_LIST"},{"p":"org.apache.calcite.rel.core","c":"RelFactories","l":"DEFAULT_PROJECT_FACTORY"},{"p":"org.apache.calcite.linq4j","c":"Linq4j","l":"DEFAULT_PROVIDER"},{"p":"org.apache.calcite.rel.core","c":"RelFactories","l":"DEFAULT_REPEAT_UNION_FACTORY"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor","l":"DEFAULT_RULES"},{"p":"org.apache.calcite.rel.core","c":"RelFactories","l":"DEFAULT_SAMPLE_FACTORY"},{"p":"org.apache.calcite.plan.visualizer","c":"RuleMatchVisualizer","l":"DEFAULT_SET"},{"p":"org.apache.calcite.rel.core","c":"RelFactories","l":"DEFAULT_SET_OP_FACTORY"},{"p":"org.apache.calcite.rel.core","c":"RelFactories","l":"DEFAULT_SNAPSHOT_FACTORY"},{"p":"org.apache.calcite.rel.core","c":"RelFactories","l":"DEFAULT_SORT_EXCHANGE_FACTORY"},{"p":"org.apache.calcite.rel.core","c":"RelFactories","l":"DEFAULT_SORT_FACTORY"},{"p":"org.apache.calcite.rel.core","c":"RelFactories","l":"DEFAULT_SPOOL_FACTORY"},{"p":"org.apache.calcite.rel.core","c":"RelFactories","l":"DEFAULT_STRUCT"},{"p":"org.apache.calcite.rel.core","c":"RelFactories","l":"DEFAULT_TABLE_FUNCTION_SCAN_FACTORY"},{"p":"org.apache.calcite.rel.core","c":"RelFactories","l":"DEFAULT_TABLE_SCAN_FACTORY"},{"p":"org.apache.calcite.adapter.druid","c":"DruidTable","l":"DEFAULT_TIMESTAMP_COLUMN"},{"p":"org.apache.calcite.adapter.druid","c":"DruidSchemaFactory","l":"DEFAULT_URL"},{"p":"org.apache.calcite.rel.core","c":"RelFactories","l":"DEFAULT_VALUES_FACTORY"},{"p":"org.apache.calcite.materialize","c":"Lattice.BaseColumn","l":"defaultAlias()"},{"p":"org.apache.calcite.materialize","c":"Lattice.Column","l":"defaultAlias()"},{"p":"org.apache.calcite.materialize","c":"Lattice.DerivedColumn","l":"defaultAlias()"},{"p":"org.apache.calcite.util","c":"SaffronProperties","l":"defaultCharset()"},{"p":"org.apache.calcite.util","c":"SaffronProperties","l":"defaultCollation()"},{"p":"org.apache.calcite.util","c":"SaffronProperties","l":"defaultCollationStrength()"},{"p":"org.apache.calcite.adapter.druid","c":"DefaultDimensionSpec","l":"DefaultDimensionSpec(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.adapter.druid","c":"DefaultDimensionSpec","l":"DefaultDimensionSpec(String, String, DruidType)","u":"%3Cinit%3E(java.lang.String,java.lang.String,org.apache.calcite.adapter.druid.DruidType)"},{"p":"org.apache.calcite.util.graph","c":"DefaultDirectedGraph","l":"DefaultDirectedGraph(DirectedGraph.EdgeFactory<V, E>)","u":"%3Cinit%3E(org.apache.calcite.util.graph.DirectedGraph.EdgeFactory)"},{"p":"org.apache.calcite.util.graph","c":"DefaultEdge","l":"DefaultEdge(Object, Object)","u":"%3Cinit%3E(java.lang.Object,java.lang.Object)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"DefaultEnumerable()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.linq4j.tree","c":"DefaultExpression","l":"DefaultExpression(Class)","u":"%3Cinit%3E(java.lang.Class)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"defaultForOptionalParameter()"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"defaultIfEmpty()"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"defaultIfEmpty()"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"defaultIfEmpty()"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"defaultIfEmpty()"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"defaultIfEmpty(Enumerable<TSource>)","u":"defaultIfEmpty(org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"defaultIfEmpty(Enumerable<TSource>, TSource)","u":"defaultIfEmpty(org.apache.calcite.linq4j.Enumerable,TSource)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"defaultIfEmpty(Queryable<T>)","u":"defaultIfEmpty(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"defaultIfEmpty(Queryable<T>)","u":"defaultIfEmpty(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"defaultIfEmpty(Queryable<T>)","u":"defaultIfEmpty(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"defaultIfEmpty(Queryable<T>, T)","u":"defaultIfEmpty(org.apache.calcite.linq4j.Queryable,T)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"defaultIfEmpty(Queryable<T>, T)","u":"defaultIfEmpty(org.apache.calcite.linq4j.Queryable,T)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"defaultIfEmpty(Queryable<T>, T)","u":"defaultIfEmpty(org.apache.calcite.linq4j.Queryable,T)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"defaultIfEmpty(T)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"defaultIfEmpty(TSource)"},{"p":"org.apache.calcite.materialize","c":"Lattice","l":"defaultMeasures"},{"p":"org.apache.calcite.model","c":"JsonLattice","l":"defaultMeasures"},{"p":"org.apache.calcite.util","c":"SaffronProperties","l":"defaultNationalCharset()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"defaultNotAllowed()"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfig","l":"defaultNullCollation()"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfigImpl","l":"defaultNullCollation()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator.Config","l":"defaultNullCollation()"},{"p":"org.apache.calcite.rel","c":"RelFieldCollation.Direction","l":"defaultNullDirection()"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"defaultNullDirection(RelFieldCollation.Direction)","u":"defaultNullDirection(org.apache.calcite.rel.RelFieldCollation.Direction)"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture.MetadataConfig","l":"defaultProviderSupplier"},{"p":"org.apache.calcite.rel.metadata","c":"DefaultRelMetadataProvider","l":"DefaultRelMetadataProvider()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateTableLike.LikeOption","l":"DEFAULTS"},{"p":"org.apache.calcite.model","c":"JsonRoot","l":"defaultSchema"},{"p":"org.apache.calcite.tools","c":"Frameworks.ConfigBuilder","l":"defaultSchema(SchemaPlus)","u":"defaultSchema(org.apache.calcite.schema.SchemaPlus)"},{"p":"org.apache.calcite.materialize","c":"MaterializationService.DefaultTableFactory","l":"DefaultTableFactory()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.linq4j.tree","c":"LabelStatement","l":"defaultValue"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"defaultValue"},{"p":"org.apache.calcite.config","c":"CalciteConnectionProperty","l":"defaultValue()"},{"p":"org.apache.calcite.sql.babel.postgres","c":"TransactionMode","l":"DEFERRABLE"},{"p":"org.apache.calcite.materialize","c":"MaterializationService","l":"defineMaterialization(CalciteSchema, TileKey, String, List<String>, String, boolean, boolean)","u":"defineMaterialization(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.materialize.TileKey,java.lang.String,java.util.List,java.lang.String,boolean,boolean)"},{"p":"org.apache.calcite.materialize","c":"MaterializationService","l":"defineMaterialization(CalciteSchema, TileKey, String, List<String>, String, MaterializationService.TableFactory, boolean, boolean)","u":"defineMaterialization(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.materialize.TileKey,java.lang.String,java.util.List,java.lang.String,org.apache.calcite.materialize.MaterializationService.TableFactory,boolean,boolean)"},{"p":"org.apache.calcite.materialize","c":"MaterializationService","l":"defineTile(Lattice, ImmutableBitSet, List<Lattice.Measure>, CalciteSchema, boolean, boolean)","u":"defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean)"},{"p":"org.apache.calcite.materialize","c":"MaterializationService","l":"defineTile(Lattice, ImmutableBitSet, List<Lattice.Measure>, CalciteSchema, boolean, boolean, String, MaterializationService.TableFactory)","u":"defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService.TableFactory)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"DEGREES"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"DEGREES"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"degrees(BigDecimal)","u":"degrees(java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"degrees(double)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"DEJSONIZE"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"dejsonize(String)","u":"dejsonize(java.lang.String)"},{"p":"org.apache.calcite.linq4j","c":"DelegatingEnumerator","l":"delegate"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMeasure.DelegatingContext","l":"DelegatingContext(BuiltInMetadata.Measure.Context)","u":"%3Cinit%3E(org.apache.calcite.rel.metadata.BuiltInMetadata.Measure.Context)"},{"p":"org.apache.calcite.linq4j","c":"DelegatingEnumerator","l":"DelegatingEnumerator(Enumerator<T>)","u":"%3Cinit%3E(org.apache.calcite.linq4j.Enumerator)"},{"p":"org.apache.calcite.util","c":"DelegatingInvocationHandler","l":"DelegatingInvocationHandler()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.materialize","c":"DelegatingLatticeStatisticProvider","l":"DelegatingLatticeStatisticProvider(LatticeStatisticProvider)","u":"%3Cinit%3E(org.apache.calcite.materialize.LatticeStatisticProvider)"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingNamespace","l":"DelegatingNamespace(SqlValidatorNamespace)","u":"%3Cinit%3E(org.apache.calcite.sql.validate.SqlValidatorNamespace)"},{"p":"org.apache.calcite.schema.impl","c":"DelegatingSchema","l":"DelegatingSchema(Schema)","u":"%3Cinit%3E(org.apache.calcite.schema.Schema)"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingSqlValidatorCatalogReader","l":"DelegatingSqlValidatorCatalogReader(SqlValidatorCatalogReader)","u":"%3Cinit%3E(org.apache.calcite.sql.validate.SqlValidatorCatalogReader)"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingSqlValidatorTable","l":"DelegatingSqlValidatorTable(SqlValidatorTable)","u":"%3Cinit%3E(org.apache.calcite.sql.validate.SqlValidatorTable)"},{"p":"org.apache.calcite.rel.type","c":"DelegatingTypeSystem","l":"DelegatingTypeSystem(RelDataTypeSystem)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataTypeSystem)"},{"p":"org.apache.calcite.rel.core","c":"TableModify.Operation","l":"DELETE"},{"p":"org.apache.calcite.sql","c":"SqlAccessEnum","l":"DELETE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"DELETE"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"delimiterIsRequired(String, String)","u":"delimiterIsRequired(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.rel.stream","c":"Delta","l":"Delta(RelInput)","u":"%3Cinit%3E(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel.stream","c":"Delta","l":"Delta(RelOptCluster, RelTraitSet, RelNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.stream","c":"StreamRules.DeltaAggregateTransposeRule","l":"DeltaAggregateTransposeRule(StreamRules.DeltaAggregateTransposeRule.DeltaAggregateTransposeRuleConfig)","u":"%3Cinit%3E(org.apache.calcite.rel.stream.StreamRules.DeltaAggregateTransposeRule.DeltaAggregateTransposeRuleConfig)"},{"p":"org.apache.calcite.rel.stream","c":"StreamRules.DeltaFilterTransposeRule","l":"DeltaFilterTransposeRule(StreamRules.DeltaFilterTransposeRule.DeltaFilterTransposeRuleConfig)","u":"%3Cinit%3E(org.apache.calcite.rel.stream.StreamRules.DeltaFilterTransposeRule.DeltaFilterTransposeRuleConfig)"},{"p":"org.apache.calcite.rel.stream","c":"StreamRules.DeltaJoinTransposeRule","l":"DeltaJoinTransposeRule()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.stream","c":"StreamRules.DeltaJoinTransposeRule","l":"DeltaJoinTransposeRule(StreamRules.DeltaJoinTransposeRule.DeltaJoinTransposeRuleConfig)","u":"%3Cinit%3E(org.apache.calcite.rel.stream.StreamRules.DeltaJoinTransposeRule.DeltaJoinTransposeRuleConfig)"},{"p":"org.apache.calcite.rel.stream","c":"StreamRules.DeltaProjectTransposeRule","l":"DeltaProjectTransposeRule(StreamRules.DeltaProjectTransposeRule.DeltaProjectTransposeRuleConfig)","u":"%3Cinit%3E(org.apache.calcite.rel.stream.StreamRules.DeltaProjectTransposeRule.DeltaProjectTransposeRuleConfig)"},{"p":"org.apache.calcite.rel.stream","c":"StreamRules.DeltaSortTransposeRule","l":"DeltaSortTransposeRule(StreamRules.DeltaSortTransposeRule.DeltaSortTransposeRuleConfig)","u":"%3Cinit%3E(org.apache.calcite.rel.stream.StreamRules.DeltaSortTransposeRule.DeltaSortTransposeRuleConfig)"},{"p":"org.apache.calcite.rel.stream","c":"StreamRules.DeltaTableScanRule","l":"DeltaTableScanRule(StreamRules.DeltaTableScanRule.DeltaTableScanRuleConfig)","u":"%3Cinit%3E(org.apache.calcite.rel.stream.StreamRules.DeltaTableScanRule.DeltaTableScanRuleConfig)"},{"p":"org.apache.calcite.rel.stream","c":"StreamRules.DeltaTableScanToEmptyRule","l":"DeltaTableScanToEmptyRule(StreamRules.DeltaTableScanToEmptyRule.DeltaTableScanToEmptyRuleConfig)","u":"%3Cinit%3E(org.apache.calcite.rel.stream.StreamRules.DeltaTableScanToEmptyRule.DeltaTableScanToEmptyRuleConfig)"},{"p":"org.apache.calcite.rel.stream","c":"StreamRules.DeltaUnionTransposeRule","l":"DeltaUnionTransposeRule(StreamRules.DeltaUnionTransposeRule.DeltaUnionTransposeRuleConfig)","u":"%3Cinit%3E(org.apache.calcite.rel.stream.StreamRules.DeltaUnionTransposeRule.DeltaUnionTransposeRuleConfig)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"DENSE_RANK"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"DENSE_RANK"},{"p":"org.apache.calcite.test.schemata.hr","c":"Department","l":"Department(int, String, List<Employee>, Location)","u":"%3Cinit%3E(int,java.lang.String,java.util.List,org.apache.calcite.test.schemata.hr.Location)"},{"p":"org.apache.calcite.test.schemata.hr","c":"DepartmentPlus","l":"DepartmentPlus(int, String, List<Employee>, Location, Timestamp)","u":"%3Cinit%3E(int,java.lang.String,java.util.List,org.apache.calcite.test.schemata.hr.Location,java.sql.Timestamp)"},{"p":"org.apache.calcite.test.schemata.hr","c":"Dependent","l":"Dependent(int, String)","u":"%3Cinit%3E(int,java.lang.String)"},{"p":"org.apache.calcite.test.schemata.hr","c":"HrSchema","l":"dependents"},{"p":"org.apache.calcite.util","c":"Util","l":"deprecated(T, boolean)","u":"deprecated(T,boolean)"},{"p":"org.apache.calcite.sql.validate","c":"CyclicDefinitionException","l":"depth"},{"p":"org.apache.calcite.plan.hep","c":"HepMatchOrder","l":"DEPTH_FIRST"},{"p":"org.apache.calcite.util.graph","c":"DepthFirstIterator","l":"DepthFirstIterator(DirectedGraph<V, E>, V)","u":"%3Cinit%3E(org.apache.calcite.util.graph.DirectedGraph,V)"},{"p":"org.apache.calcite.test.schemata.hr","c":"Department","l":"deptno"},{"p":"org.apache.calcite.test.schemata.hr","c":"Employee","l":"deptno"},{"p":"org.apache.calcite.test.schemata.lingual","c":"LingualEmp","l":"DEPTNO"},{"p":"org.apache.calcite.test.schemata.hr","c":"HierarchySchema","l":"depts"},{"p":"org.apache.calcite.test.schemata.hr","c":"HrSchema","l":"depts"},{"p":"org.apache.calcite.test.schemata.hr","c":"HrSchemaBig","l":"depts"},{"p":"org.apache.calcite.sql","c":"SqlDialect.DatabaseProduct","l":"DERBY"},{"p":"org.apache.calcite.sql.dialect","c":"DerbySqlDialect","l":"DerbySqlDialect(SqlDialect.Context)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect.Context)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexToLixTranslator","l":"deref(RexNode)","u":"deref(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.plan","c":"ConventionTraitDef","l":"deregisterConverterRule(RelOptPlanner, ConverterRule)","u":"deregisterConverterRule(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.convert.ConverterRule)"},{"p":"org.apache.calcite.plan","c":"RelTraitDef","l":"deregisterConverterRule(RelOptPlanner, ConverterRule)","u":"deregisterConverterRule(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.convert.ConverterRule)"},{"p":"org.apache.calcite.rel","c":"PhysicalNode","l":"derive(List<List<RelTraitSet>>)","u":"derive(java.util.List)"},{"p":"org.apache.calcite.rel","c":"PhysicalNode","l":"derive(RelTraitSet, int)","u":"derive(org.apache.calcite.plan.RelTraitSet,int)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"deriveAlias(SqlNode, int)","u":"deriveAlias(org.apache.calcite.sql.SqlNode,int)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"deriveAlias(SqlNode, int)","u":"deriveAlias(org.apache.calcite.sql.SqlNode,int)"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"deriveAliasFromOrdinal(int)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"deriveAndCollectTypes(SqlValidator, SqlValidatorScope, List<? extends SqlNode>)","u":"deriveAndCollectTypes(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List)"},{"p":"org.apache.calcite.rel.type","c":"DelegatingTypeSystem","l":"deriveAvgAggType(RelDataTypeFactory, RelDataType)","u":"deriveAvgAggType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystem","l":"deriveAvgAggType(RelDataTypeFactory, RelDataType)","u":"deriveAvgAggType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystemImpl","l":"deriveAvgAggType(RelDataTypeFactory, RelDataType)","u":"deriveAvgAggType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"deriveCollectionQueryComponentType(SqlTypeName, RelDataType)","u":"deriveCollectionQueryComponentType(org.apache.calcite.sql.type.SqlTypeName,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.core","c":"Collect","l":"deriveCollectRowType(SingleRel, String)","u":"deriveCollectRowType(org.apache.calcite.rel.SingleRel,java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"deriveConstructorType(SqlValidatorScope, SqlCall, SqlFunction, SqlFunction, List<RelDataType>)","u":"deriveConstructorType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,org.apache.calcite.sql.SqlFunction,java.util.List)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"deriveConstructorType(SqlValidatorScope, SqlCall, SqlFunction, SqlFunction, List<RelDataType>)","u":"deriveConstructorType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,org.apache.calcite.sql.SqlFunction,java.util.List)"},{"p":"org.apache.calcite.rel.type","c":"DelegatingTypeSystem","l":"deriveCovarType(RelDataTypeFactory, RelDataType, RelDataType)","u":"deriveCovarType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystem","l":"deriveCovarType(RelDataTypeFactory, RelDataType, RelDataType)","u":"deriveCovarType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystemImpl","l":"deriveCovarType(RelDataTypeFactory, RelDataType, RelDataType)","u":"deriveCovarType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.metadata","c":"RelColumnMapping","l":"derived"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystem","l":"deriveDecimalDivideType(RelDataTypeFactory, RelDataType, RelDataType)","u":"deriveDecimalDivideType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystem","l":"deriveDecimalModType(RelDataTypeFactory, RelDataType, RelDataType)","u":"deriveDecimalModType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystem","l":"deriveDecimalMultiplyType(RelDataTypeFactory, RelDataType, RelDataType)","u":"deriveDecimalMultiplyType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystem","l":"deriveDecimalPlusType(RelDataTypeFactory, RelDataType, RelDataType)","u":"deriveDecimalPlusType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.type","c":"DelegatingTypeSystem","l":"deriveFractionalRankType(RelDataTypeFactory)","u":"deriveFractionalRankType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystem","l":"deriveFractionalRankType(RelDataTypeFactory)","u":"deriveFractionalRankType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystemImpl","l":"deriveFractionalRankType(RelDataTypeFactory)","u":"deriveFractionalRankType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"deriveJoinRowType(RelDataType, RelDataType, JoinRelType, RelDataTypeFactory, List<String>, List<RelDataTypeField>)","u":"deriveJoinRowType(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,java.util.List)"},{"p":"org.apache.calcite.rel.core","c":"Join","l":"deriveJoinRowType(RelDataType, RelDataType, JoinRelType, RelDataTypeFactory, List<String>, List<RelDataTypeField>)","u":"deriveJoinRowType(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,java.util.List)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"deriveNaturalJoinColumnList(SqlNameMatcher, RelDataType, RelDataType)","u":"deriveNaturalJoinColumnList(org.apache.calcite.sql.validate.SqlNameMatcher,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"deriveOperandType(SqlValidator, SqlValidatorScope, int, SqlNode)","u":"deriveOperandType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,int,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery","l":"deriveQuerySpec()"},{"p":"org.apache.calcite.rel.type","c":"DelegatingTypeSystem","l":"deriveRankType(RelDataTypeFactory)","u":"deriveRankType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystem","l":"deriveRankType(RelDataTypeFactory)","u":"deriveRankType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystemImpl","l":"deriveRankType(RelDataTypeFactory)","u":"deriveRankType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"deriveReturnType(SqlOperator, List<? extends RexNode>)","u":"deriveReturnType(org.apache.calcite.sql.SqlOperator,java.util.List)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraTableScan","l":"deriveRowType()"},{"p":"org.apache.calcite.adapter.csv","c":"CsvTableScan","l":"deriveRowType()"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery","l":"deriveRowType()"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchTableScan","l":"deriveRowType()"},{"p":"org.apache.calcite.adapter.file","c":"CsvTableScan","l":"deriveRowType()"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeTableScan","l":"deriveRowType()"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbTableScan","l":"deriveRowType()"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoTableScan","l":"deriveRowType()"},{"p":"org.apache.calcite.adapter.splunk","c":"SplunkTableScan","l":"deriveRowType()"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableTableScan","l":"deriveRowType()"},{"p":"org.apache.calcite.plan.hep","c":"HepRelVertex","l":"deriveRowType()"},{"p":"org.apache.calcite.plan.volcano","c":"RelSubset","l":"deriveRowType()"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"deriveRowType()"},{"p":"org.apache.calcite.rel.core","c":"Aggregate","l":"deriveRowType()"},{"p":"org.apache.calcite.rel.core","c":"Collect","l":"deriveRowType()"},{"p":"org.apache.calcite.rel.core","c":"Correlate","l":"deriveRowType()"},{"p":"org.apache.calcite.rel.core","c":"Join","l":"deriveRowType()"},{"p":"org.apache.calcite.rel.core","c":"RepeatUnion","l":"deriveRowType()"},{"p":"org.apache.calcite.rel.core","c":"SetOp","l":"deriveRowType()"},{"p":"org.apache.calcite.rel.core","c":"TableModify","l":"deriveRowType()"},{"p":"org.apache.calcite.rel.core","c":"TableScan","l":"deriveRowType()"},{"p":"org.apache.calcite.rel.core","c":"Uncollect","l":"deriveRowType()"},{"p":"org.apache.calcite.rel.core","c":"Values","l":"deriveRowType()"},{"p":"org.apache.calcite.rel.rules","c":"HyperGraph","l":"deriveRowType()"},{"p":"org.apache.calcite.rel.rules","c":"MultiJoin","l":"deriveRowType()"},{"p":"org.apache.calcite.rel","c":"SingleRel","l":"deriveRowType()"},{"p":"org.apache.calcite.rel.core","c":"Aggregate","l":"deriveRowType(RelDataTypeFactory, RelDataType, boolean, ImmutableBitSet, List<ImmutableBitSet>, List<AggregateCall>)","u":"deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)"},{"p":"org.apache.calcite.rel.core","c":"Collect","l":"deriveRowType(RelDataTypeFactory, SqlTypeName, String, RelDataType)","u":"deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.sql.type.SqlTypeName,java.lang.String,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.type","c":"DelegatingTypeSystem","l":"deriveSumType(RelDataTypeFactory, RelDataType)","u":"deriveSumType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystem","l":"deriveSumType(RelDataTypeFactory, RelDataType)","u":"deriveSumType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystemImpl","l":"deriveSumType(RelDataTypeFactory, RelDataType)","u":"deriveSumType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.type","c":"DelegatingTypeSystem","l":"deriveTimeFrameSet(TimeFrameSet)","u":"deriveTimeFrameSet(org.apache.calcite.rel.type.TimeFrameSet)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystem","l":"deriveTimeFrameSet(TimeFrameSet)","u":"deriveTimeFrameSet(org.apache.calcite.rel.type.TimeFrameSet)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableAsofJoin","l":"deriveTraits(RelTraitSet, int)","u":"deriveTraits(org.apache.calcite.plan.RelTraitSet,int)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableBatchNestedLoopJoin","l":"deriveTraits(RelTraitSet, int)","u":"deriveTraits(org.apache.calcite.plan.RelTraitSet,int)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableCalc","l":"deriveTraits(RelTraitSet, int)","u":"deriveTraits(org.apache.calcite.plan.RelTraitSet,int)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableCorrelate","l":"deriveTraits(RelTraitSet, int)","u":"deriveTraits(org.apache.calcite.plan.RelTraitSet,int)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableFilter","l":"deriveTraits(RelTraitSet, int)","u":"deriveTraits(org.apache.calcite.plan.RelTraitSet,int)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableHashJoin","l":"deriveTraits(RelTraitSet, int)","u":"deriveTraits(org.apache.calcite.plan.RelTraitSet,int)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableMergeJoin","l":"deriveTraits(RelTraitSet, int)","u":"deriveTraits(org.apache.calcite.plan.RelTraitSet,int)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableNestedLoopJoin","l":"deriveTraits(RelTraitSet, int)","u":"deriveTraits(org.apache.calcite.plan.RelTraitSet,int)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableProject","l":"deriveTraits(RelTraitSet, int)","u":"deriveTraits(org.apache.calcite.plan.RelTraitSet,int)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRel","l":"deriveTraits(RelTraitSet, int)","u":"deriveTraits(org.apache.calcite.plan.RelTraitSet,int)"},{"p":"org.apache.calcite.rel","c":"PhysicalNode","l":"deriveTraits(RelTraitSet, int)","u":"deriveTraits(org.apache.calcite.plan.RelTraitSet,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlCastFunction","l":"deriveType(RelDataTypeFactory, RelDataType, RelDataType, boolean)","u":"deriveType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,boolean)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"deriveType(SqlCallBinding)","u":"deriveType(org.apache.calcite.sql.SqlCallBinding)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"deriveType(SqlCallBinding, List<? extends SqlNode>)","u":"deriveType(org.apache.calcite.sql.SqlCallBinding,java.util.List)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"deriveType(SqlCallBinding, SqlNode)","u":"deriveType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlBasicTypeNameSpec","l":"deriveType(SqlValidator)","u":"deriveType(org.apache.calcite.sql.validate.SqlValidator)"},{"p":"org.apache.calcite.sql","c":"SqlCollectionTypeNameSpec","l":"deriveType(SqlValidator)","u":"deriveType(org.apache.calcite.sql.validate.SqlValidator)"},{"p":"org.apache.calcite.sql","c":"SqlDataTypeSpec","l":"deriveType(SqlValidator)","u":"deriveType(org.apache.calcite.sql.validate.SqlValidator)"},{"p":"org.apache.calcite.sql","c":"SqlMapTypeNameSpec","l":"deriveType(SqlValidator)","u":"deriveType(org.apache.calcite.sql.validate.SqlValidator)"},{"p":"org.apache.calcite.sql","c":"SqlRowTypeNameSpec","l":"deriveType(SqlValidator)","u":"deriveType(org.apache.calcite.sql.validate.SqlValidator)"},{"p":"org.apache.calcite.sql","c":"SqlTypeNameSpec","l":"deriveType(SqlValidator)","u":"deriveType(org.apache.calcite.sql.validate.SqlValidator)"},{"p":"org.apache.calcite.sql","c":"SqlUserDefinedTypeNameSpec","l":"deriveType(SqlValidator)","u":"deriveType(org.apache.calcite.sql.validate.SqlValidator)"},{"p":"org.apache.calcite.sql","c":"SqlDataTypeSpec","l":"deriveType(SqlValidator, boolean)","u":"deriveType(org.apache.calcite.sql.validate.SqlValidator,boolean)"},{"p":"org.apache.calcite.sql.fun","c":"SqlBasicAggFunction","l":"deriveType(SqlValidator, SqlValidatorScope, SqlCall)","u":"deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.fun","c":"SqlCaseOperator","l":"deriveType(SqlValidator, SqlValidatorScope, SqlCall)","u":"deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.fun","c":"SqlConvertFunction","l":"deriveType(SqlValidator, SqlValidatorScope, SqlCall)","u":"deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.fun","c":"SqlCountAggFunction","l":"deriveType(SqlValidator, SqlValidatorScope, SqlCall)","u":"deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.fun","c":"SqlCursorConstructor","l":"deriveType(SqlValidator, SqlValidatorScope, SqlCall)","u":"deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.fun","c":"SqlDotOperator","l":"deriveType(SqlValidator, SqlValidatorScope, SqlCall)","u":"deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.fun","c":"SqlFloorFunction","l":"deriveType(SqlValidator, SqlValidatorScope, SqlCall)","u":"deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.fun","c":"SqlInOperator","l":"deriveType(SqlValidator, SqlValidatorScope, SqlCall)","u":"deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonArrayAggAggFunction","l":"deriveType(SqlValidator, SqlValidatorScope, SqlCall)","u":"deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonObjectAggAggFunction","l":"deriveType(SqlValidator, SqlValidatorScope, SqlCall)","u":"deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.fun","c":"SqlMultisetQueryConstructor","l":"deriveType(SqlValidator, SqlValidatorScope, SqlCall)","u":"deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.fun","c":"SqlOracleConvertFunction","l":"deriveType(SqlValidator, SqlValidatorScope, SqlCall)","u":"deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.fun","c":"SqlQuantifyOperator","l":"deriveType(SqlValidator, SqlValidatorScope, SqlCall)","u":"deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.fun","c":"SqlSequenceValueOperator","l":"deriveType(SqlValidator, SqlValidatorScope, SqlCall)","u":"deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.fun","c":"SqlTranslateFunction","l":"deriveType(SqlValidator, SqlValidatorScope, SqlCall)","u":"deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql","c":"SqlAsOperator","l":"deriveType(SqlValidator, SqlValidatorScope, SqlCall)","u":"deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql","c":"SqlBinaryOperator","l":"deriveType(SqlValidator, SqlValidatorScope, SqlCall)","u":"deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql","c":"SqlDescriptorOperator","l":"deriveType(SqlValidator, SqlValidatorScope, SqlCall)","u":"deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql","c":"SqlFilterOperator","l":"deriveType(SqlValidator, SqlValidatorScope, SqlCall)","u":"deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql","c":"SqlFunction","l":"deriveType(SqlValidator, SqlValidatorScope, SqlCall)","u":"deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql","c":"SqlInternalOperator","l":"deriveType(SqlValidator, SqlValidatorScope, SqlCall)","u":"deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql","c":"SqlJdbcFunctionCall","l":"deriveType(SqlValidator, SqlValidatorScope, SqlCall)","u":"deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"deriveType(SqlValidator, SqlValidatorScope, SqlCall)","u":"deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql","c":"SqlOverOperator","l":"deriveType(SqlValidator, SqlValidatorScope, SqlCall)","u":"deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql","c":"SqlSetSemanticsTableOperator","l":"deriveType(SqlValidator, SqlValidatorScope, SqlCall)","u":"deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql","c":"SqlWithinDistinctOperator","l":"deriveType(SqlValidator, SqlValidatorScope, SqlCall)","u":"deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql","c":"SqlWithinGroupOperator","l":"deriveType(SqlValidator, SqlValidatorScope, SqlCall)","u":"deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisorValidator","l":"deriveType(SqlValidatorScope, SqlNode)","u":"deriveType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"deriveType(SqlValidatorScope, SqlNode)","u":"deriveType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"deriveType(SqlValidatorScope, SqlNode)","u":"deriveType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.rel.core","c":"Uncollect","l":"deriveUncollectRowType(RelNode, boolean, List<String>)","u":"deriveUncollectRowType(org.apache.calcite.rel.RelNode,boolean,java.util.List)"},{"p":"org.apache.calcite.piglet","c":"Ast.Direction","l":"DESC"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeSort","l":"DESC"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"DESC"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"desc(RexNode)","u":"desc(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.materialize","c":"LatticeRootNode","l":"descendants"},{"p":"org.apache.calcite.rel.mutable","c":"MutableRels","l":"descendants(MutableRel)","u":"descendants(org.apache.calcite.rel.mutable.MutableRel)"},{"p":"org.apache.calcite.rel","c":"RelFieldCollation.Direction","l":"DESCENDING"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"DESCENDING"},{"p":"org.apache.calcite.piglet","c":"Ast.Op","l":"DESCRIBE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"DESCRIBE_SCHEMA"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"DESCRIBE_TABLE"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"describe(PrintWriter, boolean)","u":"describe(java.io.PrintWriter,boolean)"},{"p":"org.apache.calcite.piglet","c":"Ast.DescribeStmt","l":"DescribeStmt(SqlParserPos, Ast.Identifier)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.piglet.Ast.Identifier)"},{"p":"org.apache.calcite.test","c":"Matchers.IsWithin","l":"describeTo(Description)","u":"describeTo(org.hamcrest.Description)"},{"p":"org.apache.calcite.plan","c":"RelOptRule","l":"description"},{"p":"org.apache.calcite.plan","c":"RelRule.Config","l":"description()"},{"p":"org.apache.calcite.rel.metadata.janino","c":"DescriptiveCacheKey","l":"DescriptiveCacheKey(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"DESCRIPTOR"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"DESCRIPTOR"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.RexInputConverter","l":"destFields"},{"p":"org.apache.calcite.rel.externalize","c":"RelWriterImpl","l":"detailLevel"},{"p":"org.apache.calcite.linq4j.tree","c":"DeterministicCodeOptimizer","l":"DeterministicCodeOptimizer(ClassDeclarationFinder)","u":"%3Cinit%3E(org.apache.calcite.linq4j.tree.ClassDeclarationFinder)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcCatalogSchema","l":"dialect"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcConvention","l":"dialect"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcSchema","l":"dialect"},{"p":"org.apache.calcite.materialize","c":"Lattice.SqlWriter","l":"dialect"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor","l":"dialect"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserFixture","l":"dialect"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"dialect()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"dialectDoesNotSupportFeature(String)","u":"dialectDoesNotSupportFeature(java.lang.String)"},{"p":"org.apache.calcite.test","c":"DiffTestCase","l":"diff(File, File)","u":"diff(java.io.File,java.io.File)"},{"p":"org.apache.calcite.rel.type","c":"TimeFrameSet","l":"diffDate(int, int, TimeFrame)","u":"diffDate(int,int,org.apache.calcite.rel.type.TimeFrame)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"DIFFERENCE"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"DIFFERENCE"},{"p":"org.apache.calcite.plan","c":"RelTraitSet","l":"difference(RelTraitSet)","u":"difference(org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"difference(String, String)","u":"difference(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"differentCollations(String, String)","u":"differentCollations(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"differentLengthForBitwiseOperands(int, int)","u":"differentLengthForBitwiseOperands(int,int)"},{"p":"org.apache.calcite.test","c":"DiffTestCase","l":"diffFile(File, File)","u":"diffFile(java.io.File,java.io.File)"},{"p":"org.apache.calcite.test","c":"DiffTestCase","l":"diffLines(List<String>, List<String>)","u":"diffLines(java.util.List,java.util.List)"},{"p":"org.apache.calcite.test","c":"RelOptFixture","l":"diffRepos()"},{"p":"org.apache.calcite.test","c":"SqlToRelFixture","l":"diffRepos()"},{"p":"org.apache.calcite.test","c":"DiffTestCase","l":"DiffTestCase(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.test","c":"DiffTestCase","l":"diffTestLog()"},{"p":"org.apache.calcite.rel.type","c":"TimeFrameSet","l":"diffTimestamp(long, long, TimeFrame)","u":"diffTimestamp(long,long,org.apache.calcite.rel.type.TimeFrame)"},{"p":"org.apache.calcite.materialize","c":"Lattice.Measure","l":"digest"},{"p":"org.apache.calcite.materialize","c":"LatticeNode","l":"digest"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"digest"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeImpl","l":"digest"},{"p":"org.apache.calcite.rex","c":"RexNode","l":"digest"},{"p":"org.apache.calcite.sql","c":"SqlExplainLevel","l":"DIGEST_ATTRIBUTES"},{"p":"org.apache.calcite.rel.mutable","c":"Holder","l":"digest(StringBuilder)","u":"digest(java.lang.StringBuilder)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableAggregate","l":"digest(StringBuilder)","u":"digest(java.lang.StringBuilder)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableCalc","l":"digest(StringBuilder)","u":"digest(java.lang.StringBuilder)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableCollect","l":"digest(StringBuilder)","u":"digest(java.lang.StringBuilder)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableCorrelate","l":"digest(StringBuilder)","u":"digest(java.lang.StringBuilder)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableExchange","l":"digest(StringBuilder)","u":"digest(java.lang.StringBuilder)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableFilter","l":"digest(StringBuilder)","u":"digest(java.lang.StringBuilder)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableIntersect","l":"digest(StringBuilder)","u":"digest(java.lang.StringBuilder)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableJoin","l":"digest(StringBuilder)","u":"digest(java.lang.StringBuilder)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableMatch","l":"digest(StringBuilder)","u":"digest(java.lang.StringBuilder)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableMinus","l":"digest(StringBuilder)","u":"digest(java.lang.StringBuilder)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableProject","l":"digest(StringBuilder)","u":"digest(java.lang.StringBuilder)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableRel","l":"digest(StringBuilder)","u":"digest(java.lang.StringBuilder)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableSample","l":"digest(StringBuilder)","u":"digest(java.lang.StringBuilder)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableScan","l":"digest(StringBuilder)","u":"digest(java.lang.StringBuilder)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableSort","l":"digest(StringBuilder)","u":"digest(java.lang.StringBuilder)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableTableFunctionScan","l":"digest(StringBuilder)","u":"digest(java.lang.StringBuilder)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableTableModify","l":"digest(StringBuilder)","u":"digest(java.lang.StringBuilder)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableUncollect","l":"digest(StringBuilder)","u":"digest(java.lang.StringBuilder)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableUnion","l":"digest(StringBuilder)","u":"digest(java.lang.StringBuilder)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableValues","l":"digest(StringBuilder)","u":"digest(java.lang.StringBuilder)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableWindow","l":"digest(StringBuilder)","u":"digest(java.lang.StringBuilder)"},{"p":"org.apache.calcite.linq4j.tree","c":"NewArrayExpression","l":"dimension"},{"p":"org.apache.calcite.materialize","c":"Lattice.Tile","l":"dimensions"},{"p":"org.apache.calcite.materialize","c":"TileKey","l":"dimensions"},{"p":"org.apache.calcite.model","c":"JsonTile","l":"dimensions"},{"p":"org.apache.calcite.sql","c":"SqlDialect.CalendarPolicy","l":"DIRECT"},{"p":"org.apache.calcite.rel","c":"RelFieldCollation","l":"direction"},{"p":"org.apache.calcite.adapter.druid","c":"DirectOperatorConversion","l":"DirectOperatorConversion(SqlOperator, String)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlOperator,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"disallowsNullTreatment(String)","u":"disallowsNullTreatment(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"disallowsQualifyingCommonColumn(String)","u":"disallowsQualifyingCommonColumn(java.lang.String)"},{"p":"org.apache.calcite.util","c":"Util","l":"discard(boolean)"},{"p":"org.apache.calcite.util","c":"Util","l":"discard(double)"},{"p":"org.apache.calcite.util","c":"Util","l":"discard(int)"},{"p":"org.apache.calcite.util","c":"Util","l":"discard(Object)","u":"discard(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"Types","l":"discard(Object)","u":"discard(java.lang.Object)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"disjunctions(RexNode)","u":"disjunctions(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.rel2sql","c":"RelToSqlConverter","l":"dispatch(RelNode)","u":"dispatch(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator","l":"dispatcher"},{"p":"org.apache.calcite.sql2rel","c":"RelFieldTrimmer","l":"dispatchTrimFields(RelNode, ImmutableBitSet, Set<RelDataTypeField>)","u":"dispatchTrimFields(org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)"},{"p":"org.apache.calcite.materialize","c":"Lattice.Measure","l":"distinct"},{"p":"org.apache.calcite.rel.core","c":"Window.RexWinAggCall","l":"distinct"},{"p":"org.apache.calcite.piglet","c":"Ast.Op","l":"DISTINCT"},{"p":"org.apache.calcite.sql","c":"SqlSelectKeyword","l":"DISTINCT"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"DISTINCT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"DISTINCT"},{"p":"org.apache.calcite.adapter.pig","c":"PigAggregate","l":"DISTINCT_FIELD_SUFFIX"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"DISTINCT_ROW_COUNT"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"distinct()"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"distinct()"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"distinct()"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"distinct()"},{"p":"org.apache.calcite.tools","c":"RelBuilder.AggCall","l":"distinct()"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"distinct()"},{"p":"org.apache.calcite.tools","c":"RelBuilder.AggCall","l":"distinct(boolean)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"distinct(Enumerable<TSource>)","u":"distinct(org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"distinct(Enumerable<TSource>, EqualityComparer<TSource>)","u":"distinct(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"distinct(EqualityComparer<T>)","u":"distinct(org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"distinct(EqualityComparer<T>)","u":"distinct(org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"distinct(EqualityComparer<T>)","u":"distinct(org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"","c":"","l":"distinct(EqualityComparer<TSource>)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"distinct(EqualityComparer<TSource>)","u":"distinct(org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"","c":"","l":"distinct(EqualityComparer<TSource>)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"distinct(List)","u":"distinct(java.util.List)"},{"p":"org.apache.calcite.tools","c":"PigRelBuilder","l":"distinct(PigRelBuilder.Partitioner, int)","u":"distinct(org.apache.calcite.tools.PigRelBuilder.Partitioner,int)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"distinct(Queryable<T>)","u":"distinct(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"distinct(Queryable<T>)","u":"distinct(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"distinct(Queryable<T>)","u":"distinct(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"distinct(Queryable<T>, EqualityComparer)","u":"distinct(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"distinct(Queryable<T>, EqualityComparer<T>)","u":"distinct(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"distinct(Queryable<T>, EqualityComparer<T>)","u":"distinct(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"DISTINCT2"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil.FlatAggregate","l":"distinctCall"},{"p":"org.apache.calcite.sql.validate","c":"SqlNameMatcher","l":"distinctCopy(Iterable<String>)","u":"distinctCopy(java.lang.Iterable)"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"distinctKeys"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil.FlatAggregate","l":"distinctList"},{"p":"org.apache.calcite.util","c":"Util","l":"distinctList(Iterable<E>)","u":"distinctList(java.lang.Iterable)"},{"p":"org.apache.calcite.util","c":"Util","l":"distinctList(List<E>)","u":"distinctList(java.util.List)"},{"p":"org.apache.calcite.piglet","c":"Ast.DistinctStmt","l":"DistinctStmt(SqlParserPos, Ast.Identifier, Ast.Identifier)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.piglet.Ast.Identifier,org.apache.calcite.piglet.Ast.Identifier)"},{"p":"org.apache.calcite.rel.core","c":"Exchange","l":"distribution"},{"p":"org.apache.calcite.rel.mutable","c":"MutableExchange","l":"distribution"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"DISTRIBUTION"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Distribution","l":"distribution()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdDistribution","l":"distribution(BiRel, RelMetadataQuery)","u":"distribution(org.apache.calcite.rel.BiRel,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdDistribution","l":"distribution(Exchange, RelMetadataQuery)","u":"distribution(org.apache.calcite.rel.core.Exchange,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdDistribution","l":"distribution(Project, RelMetadataQuery)","u":"distribution(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"distribution(RelNode)","u":"distribution(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Distribution.Handler","l":"distribution(RelNode, RelMetadataQuery)","u":"distribution(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdDistribution","l":"distribution(RelNode, RelMetadataQuery)","u":"distribution(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdDistribution","l":"distribution(SetOp, RelMetadataQuery)","u":"distribution(org.apache.calcite.rel.core.SetOp,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdDistribution","l":"distribution(SingleRel, RelMetadataQuery)","u":"distribution(org.apache.calcite.rel.SingleRel,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.profile","c":"Profiler.Distribution","l":"Distribution(SortedSet<Profiler.Column>, SortedSet<Comparable>, double, int, double, boolean)","u":"%3Cinit%3E(java.util.SortedSet,java.util.SortedSet,double,int,double,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdDistribution","l":"distribution(TableModify, RelMetadataQuery)","u":"distribution(org.apache.calcite.rel.core.TableModify,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdDistribution","l":"distribution(TableScan, RelMetadataQuery)","u":"distribution(org.apache.calcite.rel.core.TableScan,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdDistribution","l":"distribution(Values, RelMetadataQuery)","u":"distribution(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.profile","c":"Profiler.Profile","l":"distributionList"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"Divide"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"DIVIDE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"DIVIDE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"DIVIDE_INTEGER"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"divide(BigDecimal, BigDecimal)","u":"divide(java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.util","c":"NumberUtil","l":"divide(Double, Double)","u":"divide(java.lang.Double,java.lang.Double)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"divide(Expression, Expression)","u":"divide(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"divide(Expression, Expression, Method)","u":"divide(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"divide(int, BigDecimal)","u":"divide(int,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"divide(int, int)","u":"divide(int,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"divide(int, Integer)","u":"divide(int,java.lang.Integer)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"divide(Integer, int)","u":"divide(java.lang.Integer,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"divide(Integer, Integer)","u":"divide(java.lang.Integer,java.lang.Integer)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"divide(Integer, Long)","u":"divide(java.lang.Integer,java.lang.Long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"divide(long, BigDecimal)","u":"divide(long,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"divide(Long, Integer)","u":"divide(java.lang.Long,java.lang.Integer)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings","l":"divide(Mapping, Mapping)","u":"divide(org.apache.calcite.util.mapping.Mapping,org.apache.calcite.util.mapping.Mapping)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"divideAny(Object, Object)","u":"divideAny(java.lang.Object,java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"DivideAssign"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"divideAssign(Expression, Expression)","u":"divideAssign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"divideAssign(Expression, Expression, Method)","u":"divideAssign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"divideAssign(Expression, Expression, Method, LambdaExpression)","u":"divideAssign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.LambdaExpression)"},{"p":"org.apache.calcite.plan","c":"RelOptCost","l":"divideBy(RelOptCost)","u":"divideBy(org.apache.calcite.plan.RelOptCost)"},{"p":"org.apache.calcite.plan","c":"RelOptCostImpl","l":"divideBy(RelOptCost)","u":"divideBy(org.apache.calcite.plan.RelOptCost)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"DivideChecked"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"DIVISION_BY_ZERO_MESSAGE"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"DIVISION_OPERATOR"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"DML"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl.DmlNamespace","l":"DmlNamespace(SqlValidatorImpl, SqlNode, SqlNode, SqlValidatorScope)","u":"%3Cinit%3E(org.apache.calcite.sql.validate.SqlValidatorImpl,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.rel.externalize","c":"RelDotWriter","l":"done(RelNode)","u":"done(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.externalize","c":"RelJsonWriter","l":"done(RelNode)","u":"done(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.externalize","c":"RelWriterImpl","l":"done(RelNode)","u":"done(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel","c":"RelWriter","l":"done(RelNode)","u":"done(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.piglet","c":"Ast.Op","l":"DOT"},{"p":"org.apache.calcite.sql","c":"SqlExplainFormat","l":"DOT"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"DOT"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"DOT"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"dot(RexNode, int)","u":"dot(org.apache.calcite.rex.RexNode,int)"},{"p":"org.apache.calcite.piglet","c":"PigRelBuilder","l":"dot(RexNode, Object)","u":"dot(org.apache.calcite.rex.RexNode,java.lang.Object)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"dot(RexNode, String)","u":"dot(org.apache.calcite.rex.RexNode,java.lang.String)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidType","l":"DOUBLE"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"DOUBLE"},{"p":"org.apache.calcite.runtime.rtti","c":"RuntimeTypeInformation.RuntimeSqlTypeName","l":"DOUBLE"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"DOUBLE"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"DOUBLE"},{"p":"org.apache.calcite.util","c":"JdbcType","l":"DOUBLE"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"DOUBLE_FORCE_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"DOUBLE_IF_INTEGERS"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"DOUBLE_NULLABLE"},{"p":"org.apache.calcite.util","c":"JdbcType","l":"DOUBLE_NULLABLE"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.DoubleSum","l":"DoubleSum()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertThat","l":"doWithConnection(Consumer<CalciteConnection>)","u":"doWithConnection(java.util.function.Consumer)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertThat","l":"doWithConnection(Function<CalciteConnection, T>)","u":"doWithConnection(java.util.function.Function)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertThat","l":"doWithDataContext(Function<DataContext, T>)","u":"doWithDataContext(java.util.function.Function)"},{"p":"org.apache.calcite.rel.rules","c":"DpHyp","l":"DpHyp(HyperGraph, RelBuilder, RelMetadataQuery)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.HyperGraph,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.rules","c":"DphypJoinReorderRule","l":"DphypJoinReorderRule(DphypJoinReorderRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.DphypJoinReorderRule.Config)"},{"p":"org.apache.calcite.test","c":"ConnectionSpec","l":"driver"},{"p":"org.apache.calcite.chinook","c":"CalciteConnectionProvider","l":"DRIVER_URL"},{"p":"org.apache.calcite.jdbc","c":"Driver","l":"Driver()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.jdbc","c":"Driver","l":"Driver(Supplier<CalcitePrepare>)","u":"%3Cinit%3E(java.util.function.Supplier)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"DROP_FUNCTION"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"DROP_INDEX"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"DROP_MATERIALIZED_VIEW"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"DROP_SCHEMA"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"DROP_SEQUENCE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"DROP_TABLE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"DROP_TYPE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"DROP_VIEW"},{"p":"org.apache.calcite.sql.ddl","c":"SqlDdlNodes","l":"dropFunction(SqlParserPos, boolean, SqlIdentifier)","u":"dropFunction(org.apache.calcite.sql.parser.SqlParserPos,boolean,org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlDdlNodes","l":"dropMaterializedView(SqlParserPos, boolean, SqlIdentifier)","u":"dropMaterializedView(org.apache.calcite.sql.parser.SqlParserPos,boolean,org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlDdlNodes","l":"dropSchema(SqlParserPos, boolean, boolean, SqlIdentifier)","u":"dropSchema(org.apache.calcite.sql.parser.SqlParserPos,boolean,boolean,org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlDdlNodes","l":"dropTable(SqlParserPos, boolean, SqlIdentifier)","u":"dropTable(org.apache.calcite.sql.parser.SqlParserPos,boolean,org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlDdlNodes","l":"dropType(SqlParserPos, boolean, SqlIdentifier)","u":"dropType(org.apache.calcite.sql.parser.SqlParserPos,boolean,org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlDdlNodes","l":"dropView(SqlParserPos, boolean, SqlIdentifier)","u":"dropView(org.apache.calcite.sql.parser.SqlParserPos,boolean,org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"DRUID_BETWEEN"},{"p":"org.apache.calcite.sql.fun","c":"SqlInternalOperators","l":"DRUID_BETWEEN"},{"p":"org.apache.calcite.config","c":"CalciteConnectionProperty","l":"DRUID_FETCH"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules","l":"DRUID_HAVING_FILTER_RULE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"DRUID_IN"},{"p":"org.apache.calcite.sql.fun","c":"SqlInternalOperators","l":"DRUID_IN"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"DRUID_NOT_IN"},{"p":"org.apache.calcite.sql.fun","c":"SqlInternalOperators","l":"DRUID_NOT_IN"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery","l":"DRUID_QUERY_FETCH"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules.DruidAggregateProjectRule","l":"DruidAggregateProjectRule(DruidRules.DruidAggregateProjectRule.DruidAggregateProjectRuleConfig)","u":"%3Cinit%3E(org.apache.calcite.adapter.druid.DruidRules.DruidAggregateProjectRule.DruidAggregateProjectRuleConfig)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules.DruidAggregateRule","l":"DruidAggregateRule(DruidRules.DruidAggregateRule.DruidAggregateRuleConfig)","u":"%3Cinit%3E(org.apache.calcite.adapter.druid.DruidRules.DruidAggregateRule.DruidAggregateRuleConfig)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules.DruidFilterRule","l":"DruidFilterRule(DruidRules.DruidFilterRule.DruidFilterRuleConfig)","u":"%3Cinit%3E(org.apache.calcite.adapter.druid.DruidRules.DruidFilterRule.DruidFilterRuleConfig)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules.DruidHavingFilterRule","l":"DruidHavingFilterRule(DruidRules.DruidHavingFilterRule.DruidHavingFilterRuleConfig)","u":"%3Cinit%3E(org.apache.calcite.adapter.druid.DruidRules.DruidHavingFilterRule.DruidHavingFilterRuleConfig)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules.DruidPostAggregationProjectRule","l":"DruidPostAggregationProjectRule(DruidRules.DruidPostAggregationProjectRule.DruidPostAggregationProjectRuleConfig)","u":"%3Cinit%3E(org.apache.calcite.adapter.druid.DruidRules.DruidPostAggregationProjectRule.DruidPostAggregationProjectRuleConfig)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules.DruidProjectRule","l":"DruidProjectRule(DruidRules.DruidProjectRule.DruidProjectRuleConfig)","u":"%3Cinit%3E(org.apache.calcite.adapter.druid.DruidRules.DruidProjectRule.DruidProjectRuleConfig)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery","l":"DruidQuery(RelOptCluster, RelTraitSet, RelOptTable, DruidTable, List<Interval>, List<RelNode>, Map<SqlOperator, DruidSqlOperatorConverter>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.plan.RelOptTable,org.apache.calcite.adapter.druid.DruidTable,java.util.List,java.util.List,java.util.Map)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidSchema","l":"DruidSchema(String, String, boolean)","u":"%3Cinit%3E(java.lang.String,java.lang.String,boolean)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidSchemaFactory","l":"DruidSchemaFactory()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules.DruidSortRule","l":"DruidSortRule(DruidRules.DruidSortRule.DruidSortRuleConfig)","u":"%3Cinit%3E(org.apache.calcite.adapter.druid.DruidRules.DruidSortRule.DruidSortRuleConfig)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidSqlCastConverter","l":"DruidSqlCastConverter()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.druid","c":"DruidTable","l":"DruidTable(DruidSchema, String, RelProtoDataType, Set<String>, String, List<Interval>, Map<String, List<ComplexMetric>>, Map<String, SqlTypeName>)","u":"%3Cinit%3E(org.apache.calcite.adapter.druid.DruidSchema,java.lang.String,org.apache.calcite.rel.type.RelProtoDataType,java.util.Set,java.lang.String,java.util.List,java.util.Map,java.util.Map)"},{"p":"org.apache.calcite.util","c":"Bug","l":"DT1684_FIXED"},{"p":"org.apache.calcite.util","c":"Bug","l":"DT239_FIXED"},{"p":"org.apache.calcite.util","c":"Bug","l":"DT785_FIXED"},{"p":"org.apache.calcite.rel.metadata","c":"MetadataFactoryImpl","l":"DUMMY"},{"p":"org.apache.calcite.util","c":"Smalls","l":"DUMMY_TABLE_METHOD_WITH_TWO_PARAMS"},{"p":"org.apache.calcite.sql2rel","c":"RelFieldTrimmer","l":"dummyProject(int, RelNode)","u":"dummyProject(int,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.sql2rel","c":"RelFieldTrimmer","l":"dummyProject(int, RelNode, RelNode)","u":"dummyProject(int,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.util","c":"Smalls","l":"dummyTableFuncWithTwoParams(long, long)","u":"dummyTableFuncWithTwoParams(long,long)"},{"p":"org.apache.calcite.piglet","c":"Ast.Op","l":"DUMP"},{"p":"org.apache.calcite.config","c":"CalciteSystemProperty","l":"DUMP_GRAPHVIZ"},{"p":"org.apache.calcite.config","c":"CalciteSystemProperty","l":"DUMP_SETS"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"dump(PrintWriter)","u":"dump(java.io.PrintWriter)"},{"p":"org.apache.calcite.piglet","c":"Handler","l":"dump(RelNode)","u":"dump(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"dumpPlan(String, RelNode, boolean, SqlExplainLevel)","u":"dumpPlan(java.lang.String,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.sql.SqlExplainLevel)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"dumpPlan(String, RelNode, SqlExplainFormat, SqlExplainLevel)","u":"dumpPlan(java.lang.String,org.apache.calcite.rel.RelNode,org.apache.calcite.sql.SqlExplainFormat,org.apache.calcite.sql.SqlExplainLevel)"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"dumpRuleAttemptsInfo()"},{"p":"org.apache.calcite.piglet","c":"Ast.DumpStmt","l":"DumpStmt(SqlParserPos, Ast.Identifier)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.piglet.Ast.Identifier)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"dumpType(RelDataType)","u":"dumpType(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"duplicateArgumentName(String)","u":"duplicateArgumentName(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"duplicateColumnAndNoColumnList(String)","u":"duplicateColumnAndNoColumnList(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"duplicateColumnName(String)","u":"duplicateColumnName(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"duplicateNameInColumnList(String)","u":"duplicateNameInColumnList(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"duplicateTargetColumn(String)","u":"duplicateTargetColumn(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"duplicateWindowName()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"dupWindowSpec()"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"dy"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"Dy"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"DY"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"DYADIC_STRING_SUM_PRECISION"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"DYADIC_STRING_SUM_PRECISION_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"DYADIC_STRING_SUM_PRECISION_NULLABLE_VARYING"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"Dynamic"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"DYNAMIC_PARAM"},{"p":"org.apache.calcite.util","c":"Smalls","l":"DYNAMIC_ROW_TYPE_TABLE_METHOD"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"DYNAMIC_STAR"},{"p":"org.apache.calcite.rel.type","c":"DynamicRecordType","l":"DYNAMIC_STAR_PREFIX"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"dynamic(CallSiteBinder, Type, Expression...)","u":"dynamic(org.apache.calcite.linq4j.tree.CallSiteBinder,java.lang.reflect.Type,org.apache.calcite.linq4j.tree.Expression...)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"dynamic(CallSiteBinder, Type, Iterable<? extends Expression>)","u":"dynamic(org.apache.calcite.linq4j.tree.CallSiteBinder,java.lang.reflect.Type,java.lang.Iterable)"},{"p":"org.apache.calcite.linq4j.tree","c":"DynamicExpression","l":"DynamicExpression(Class)","u":"%3Cinit%3E(java.lang.Class)"},{"p":"org.apache.calcite.linq4j.tree","c":"FunctionExpression.Invokable","l":"dynamicInvoke(Object...)","u":"dynamicInvoke(java.lang.Object...)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"dynamicParam(int)"},{"p":"org.apache.calcite.sql","c":"SqlWriter","l":"dynamicParam(int)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"dynamicParamIllegal()"},{"p":"org.apache.calcite.rel.type","c":"DynamicRecordType","l":"DynamicRecordType()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.type","c":"DynamicRecordTypeImpl","l":"DynamicRecordTypeImpl(RelDataTypeFactory)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.util","c":"Smalls","l":"dynamicRowTypeTable(String, int)","u":"dynamicRowTypeTable(java.lang.String,int)"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.DynamicTypeFunction","l":"DynamicTypeFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.linq4j","c":"Ord","l":"e"},{"p":"org.apache.calcite.materialize","c":"Lattice.DerivedColumn","l":"e"},{"p":"org.apache.calcite.rex","c":"RexAnalyzer","l":"e"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"E"},{"p":"org.apache.calcite.rel.core","c":"Spool.Type","l":"EAGER"},{"p":"org.apache.calcite.util.graph","c":"DefaultDirectedGraph","l":"edgeSet()"},{"p":"org.apache.calcite.util.graph","c":"DirectedGraph","l":"edgeSet()"},{"p":"org.apache.calcite.runtime","c":"AddPointOperation","l":"edit(Coordinate[], Geometry)","u":"edit(org.locationtech.jts.geom.Coordinate[],org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"RemovePointOperation","l":"edit(Coordinate[], Geometry)","u":"edit(org.locationtech.jts.geom.Coordinate[],org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchSchema","l":"ElasticsearchSchema(RestClient, ObjectMapper, String)","u":"%3Cinit%3E(org.elasticsearch.client.RestClient,com.fasterxml.jackson.databind.ObjectMapper,java.lang.String)"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchSchemaFactory","l":"ElasticsearchSchemaFactory()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchToEnumerableConverterRule","l":"ElasticsearchToEnumerableConverterRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ELEMENT"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"ELEMENT"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"ELEMENT_SLICE"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"element(List)","u":"element(java.util.List)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"elementAt(Enumerable<TSource>, int)","u":"elementAt(org.apache.calcite.linq4j.Enumerable,int)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"elementAt(int)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"elementAt(int)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"elementAt(Queryable<T>, int)","u":"elementAt(org.apache.calcite.linq4j.Queryable,int)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"elementAt(Queryable<T>, int)","u":"elementAt(org.apache.calcite.linq4j.Queryable,int)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"elementAt(Queryable<T>, int)","u":"elementAt(org.apache.calcite.linq4j.Queryable,int)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"elementAtOrDefault(Enumerable<TSource>, int)","u":"elementAtOrDefault(org.apache.calcite.linq4j.Enumerable,int)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"elementAtOrDefault(int)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"elementAtOrDefault(int)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"elementAtOrDefault(Queryable<T>, int)","u":"elementAtOrDefault(org.apache.calcite.linq4j.Queryable,int)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"elementAtOrDefault(Queryable<T>, int)","u":"elementAtOrDefault(org.apache.calcite.linq4j.Queryable,int)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"elementAtOrDefault(Queryable<T>, int)","u":"elementAtOrDefault(org.apache.calcite.linq4j.Queryable,int)"},{"p":"org.apache.calcite.linq4j.tree","c":"ElementInit","l":"ElementInit()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"elementInit(Method, Expression...)","u":"elementInit(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression...)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"elementInit(Method, Iterable<? extends Expression>)","u":"elementInit(java.lang.reflect.Method,java.lang.Iterable)"},{"p":"org.apache.calcite.linq4j","c":"CartesianProductEnumerator","l":"elements"},{"p":"org.apache.calcite.adapter.java","c":"AbstractQueryableTable","l":"elementType"},{"p":"org.apache.calcite.linq4j","c":"BaseQueryable","l":"elementType"},{"p":"org.apache.calcite.rel.mutable","c":"MutableTableFunctionScan","l":"elementType"},{"p":"org.apache.calcite.util.mapping","c":"MappingType","l":"ELEVEN"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator.Config","l":"embeddedQuery()"},{"p":"org.apache.calcite.runtime","c":"Enumerables.Emitter","l":"emit(List<E>, List<Integer>, List<String>, int, Consumer<TResult>)","u":"emit(java.util.List,java.util.List,java.util.List,int,java.util.function.Consumer)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"EMITTER_EMIT"},{"p":"org.apache.calcite.test.schemata.hr","c":"Dependent","l":"empid"},{"p":"org.apache.calcite.test.schemata.hr","c":"Employee","l":"empid"},{"p":"org.apache.calcite.test.schemata.hr","c":"Employee","l":"Employee(int, int, String, float, Integer)","u":"%3Cinit%3E(int,int,java.lang.String,float,java.lang.Integer)"},{"p":"org.apache.calcite.test.schemata.hr","c":"Department","l":"employees"},{"p":"org.apache.calcite.test.schemata.lingual","c":"LingualEmp","l":"EMPNO"},{"p":"org.apache.calcite.test.schemata.hr","c":"HierarchySchema","l":"emps"},{"p":"org.apache.calcite.test.schemata.hr","c":"HrSchema","l":"emps"},{"p":"org.apache.calcite.test.schemata.hr","c":"HrSchemaBig","l":"emps"},{"p":"org.apache.calcite.test.schemata.lingual","c":"LingualSchema","l":"EMPS"},{"p":"org.apache.calcite.sql","c":"SqlHint.HintOptionFormat","l":"EMPTY"},{"p":"org.apache.calcite.sql","c":"SqlJsonEmptyOrError","l":"EMPTY"},{"p":"org.apache.calcite.test","c":"CalciteAssert.Config","l":"EMPTY"},{"p":"org.apache.calcite","c":"DataContexts","l":"EMPTY"},{"p":"org.apache.calcite.plan","c":"RelOptPredicateList","l":"EMPTY"},{"p":"org.apache.calcite.rel.hint","c":"HintStrategyTable","l":"EMPTY"},{"p":"org.apache.calcite.rel","c":"RelCollationImpl","l":"EMPTY"},{"p":"org.apache.calcite.rel","c":"RelCollations","l":"EMPTY"},{"p":"org.apache.calcite.rel","c":"RelDistributions","l":"EMPTY"},{"p":"org.apache.calcite.runtime","c":"Hook.Closeable","l":"EMPTY"},{"p":"org.apache.calcite.sql.dialect","c":"JethroDataSqlDialect.JethroInfo","l":"EMPTY"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"EMPTY"},{"p":"org.apache.calcite.sql.validate","c":"FilterRequirement","l":"EMPTY"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope.Path","l":"EMPTY"},{"p":"org.apache.calcite.sql","c":"SqlJsonQueryEmptyOrErrorBehavior","l":"EMPTY_ARRAY"},{"p":"org.apache.calcite.sql","c":"SqlNode","l":"EMPTY_ARRAY"},{"p":"org.apache.calcite.plan","c":"Contexts","l":"EMPTY_CONTEXT"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"EMPTY_CONTEXT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"EMPTY_ENUMERABLE"},{"p":"org.apache.calcite.linq4j","c":"Linq4j","l":"EMPTY_ENUMERABLE"},{"p":"org.apache.calcite.sql","c":"SqlJsonQueryEmptyOrErrorBehavior","l":"EMPTY_OBJECT"},{"p":"org.apache.calcite.linq4j.tree","c":"OptimizeShuttle","l":"EMPTY_STATEMENT"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules","l":"EMPTY_TABLE_INSTANCE"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"empty()"},{"p":"org.apache.calcite.plan","c":"Contexts","l":"empty()"},{"p":"org.apache.calcite.schema.lookup","c":"Lookup","l":"empty()"},{"p":"org.apache.calcite.test","c":"ConnectionFactories","l":"empty()"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"empty()"},{"p":"org.apache.calcite.util","c":"Holder","l":"empty()"},{"p":"org.apache.calcite.util","c":"MonotonicSupplier","l":"empty()"},{"p":"org.apache.calcite.linq4j","c":"Linq4j","l":"emptyEnumerable()"},{"p":"org.apache.calcite.linq4j","c":"Linq4j","l":"emptyEnumerator()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope.EmptyPath","l":"EmptyPath()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"emptyResultOfJsonQueryFuncNotAllowed()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"emptyResultOfJsonValueFuncNotAllowed()"},{"p":"org.apache.calcite.util","c":"XmlOutput","l":"emptyTag(String, XmlOutput.XMLAttrVector)","u":"emptyTag(java.lang.String,org.apache.calcite.util.XmlOutput.XMLAttrVector)"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"emptyTraitSet()"},{"p":"org.apache.calcite.plan","c":"RelOptPlanner","l":"emptyTraitSet()"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"emptyTraitSet()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"emptyWindowSpec()"},{"p":"org.apache.calcite.sql.dialect","c":"SparkSqlDialect","l":"emulateJoinTypeForCrossJoin()"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"emulateJoinTypeForCrossJoin()"},{"p":"org.apache.calcite.sql.dialect","c":"HiveSqlDialect","l":"emulateNullDirection(SqlNode, boolean, boolean)","u":"emulateNullDirection(org.apache.calcite.sql.SqlNode,boolean,boolean)"},{"p":"org.apache.calcite.sql.dialect","c":"JethroDataSqlDialect","l":"emulateNullDirection(SqlNode, boolean, boolean)","u":"emulateNullDirection(org.apache.calcite.sql.SqlNode,boolean,boolean)"},{"p":"org.apache.calcite.sql.dialect","c":"MssqlSqlDialect","l":"emulateNullDirection(SqlNode, boolean, boolean)","u":"emulateNullDirection(org.apache.calcite.sql.SqlNode,boolean,boolean)"},{"p":"org.apache.calcite.sql.dialect","c":"MysqlSqlDialect","l":"emulateNullDirection(SqlNode, boolean, boolean)","u":"emulateNullDirection(org.apache.calcite.sql.SqlNode,boolean,boolean)"},{"p":"org.apache.calcite.sql.dialect","c":"PrestoSqlDialect","l":"emulateNullDirection(SqlNode, boolean, boolean)","u":"emulateNullDirection(org.apache.calcite.sql.SqlNode,boolean,boolean)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"emulateNullDirection(SqlNode, boolean, boolean)","u":"emulateNullDirection(org.apache.calcite.sql.SqlNode,boolean,boolean)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"emulateNullDirectionWithIsNull(SqlNode, boolean, boolean)","u":"emulateNullDirectionWithIsNull(org.apache.calcite.sql.SqlNode,boolean,boolean)"},{"p":"org.apache.calcite.runtime","c":"Hook","l":"ENABLE_BINDABLE"},{"p":"org.apache.calcite.config","c":"CalciteSystemProperty","l":"ENABLE_COLLATION_TRAIT"},{"p":"org.apache.calcite.config","c":"CalciteSystemProperty","l":"ENABLE_ENUMERABLE"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl","l":"ENABLE_ENUMERABLE"},{"p":"org.apache.calcite.config","c":"CalciteSystemProperty","l":"ENABLE_REX_DIGEST_NORMALIZE"},{"p":"org.apache.calcite.config","c":"CalciteSystemProperty","l":"ENABLE_STREAM"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl","l":"ENABLE_STREAM"},{"p":"org.apache.calcite.schema.lookup","c":"SnapshotLookup","l":"enable(boolean)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertQuery","l":"enable(boolean)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertThat","l":"enable(boolean)"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl","l":"enableBindable"},{"p":"org.apache.calcite.adapter.spark","c":"SparkHandlerImpl","l":"enabled()"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.SparkHandler","l":"enabled()"},{"p":"org.apache.calcite.util","c":"Benchmark","l":"enabled()"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"enableDecorrelation()"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertQuery","l":"enableMaterializations(boolean)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"enableTypeCoercion(boolean)"},{"p":"org.apache.calcite.sql.validate","c":"MatchRecognizeNamespace","l":"enclosingNode"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"encodeIntervalOrDecimal(RexNode, RelDataType, boolean)","u":"encodeIntervalOrDecimal(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,boolean)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"encodeIntervalOrDecimal(SqlParserPos, RexNode, RelDataType, boolean)","u":"encodeIntervalOrDecimal(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,boolean)"},{"p":"org.apache.calcite.adapter.splunk.util","c":"StringUtils","l":"encodeList(List<? extends CharSequence>, char)","u":"encodeList(java.util.List,char)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceDecimalsRule.RexExpander","l":"encodeValue(SqlParserPos, RexNode, RelDataType)","u":"encodeValue(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceDecimalsRule.RexExpander","l":"encodeValue(SqlParserPos, RexNode, RelDataType, boolean)","u":"encodeValue(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,boolean)"},{"p":"org.apache.calcite.tools","c":"Hoist.Variable","l":"end"},{"p":"org.apache.calcite.adapter.enumerable","c":"WinAggImplementor.SeekType","l":"END"},{"p":"org.apache.calcite.interpreter","c":"Sink","l":"end()"},{"p":"org.apache.calcite.rex","c":"RexUnaryBiVisitor","l":"end(RexNode, R)","u":"end(org.apache.calcite.rex.RexNode,R)"},{"p":"org.apache.calcite.rex","c":"LogicVisitor","l":"end(RexNode, RelOptUtil.Logic)","u":"end(org.apache.calcite.rex.RexNode,org.apache.calcite.plan.RelOptUtil.Logic)"},{"p":"org.apache.calcite.sql.parser","c":"Span","l":"end(SqlAbstractParserImpl)","u":"end(org.apache.calcite.sql.parser.SqlAbstractParserImpl)"},{"p":"org.apache.calcite.sql.parser","c":"Span","l":"end(SqlNode)","u":"end(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.util","c":"XmlOutput","l":"endBeginTag(String)","u":"endBeginTag(java.lang.String)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"endFunCall(SqlWriter.Frame)","u":"endFunCall(org.apache.calcite.sql.SqlWriter.Frame)"},{"p":"org.apache.calcite.sql","c":"SqlWriter","l":"endFunCall(SqlWriter.Frame)","u":"endFunCall(org.apache.calcite.sql.SqlWriter.Frame)"},{"p":"org.apache.calcite.adapter.enumerable.impl","c":"WinAggResetContextImpl","l":"endIndex()"},{"p":"org.apache.calcite.adapter.enumerable.impl","c":"WinAggResultContextImpl","l":"endIndex()"},{"p":"org.apache.calcite.adapter.enumerable","c":"WinAggFrameContext","l":"endIndex()"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"endList(SqlWriter.Frame)","u":"endList(org.apache.calcite.sql.SqlWriter.Frame)"},{"p":"org.apache.calcite.sql","c":"SqlWriter","l":"endList(SqlWriter.Frame)","u":"endList(org.apache.calcite.sql.SqlWriter.Frame)"},{"p":"org.apache.calcite.sql","c":"SqlSpecialOperator.ReduceResult","l":"endOrdinal"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ENDS_WITH"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ENDS_WITH"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"ENDS_WITH"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"ENDSWITH"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"endsWith(ByteString, ByteString)","u":"endsWith(org.apache.calcite.avatica.util.ByteString,org.apache.calcite.avatica.util.ByteString)"},{"p":"org.apache.calcite.util","c":"Puffin.Line","l":"endsWith(String)","u":"endsWith(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"endsWith(String, String)","u":"endsWith(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.util","c":"XmlOutput","l":"endTag(String)","u":"endTag(java.lang.String)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableConvention","l":"enforce(RelNode, RelTraitSet)","u":"enforce(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.interpreter","c":"BindableConvention","l":"enforce(RelNode, RelTraitSet)","u":"enforce(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.plan","c":"Convention","l":"enforce(RelNode, RelTraitSet)","u":"enforce(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.plan","c":"Convention.Impl","l":"enforce(RelNode, RelTraitSet)","u":"enforce(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory","l":"enforceTypeWithNullability(RelDataType, boolean)","u":"enforceTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactoryImpl","l":"enforceTypeWithNullability(RelDataType, boolean)","u":"enforceTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFactoryImpl","l":"enforceTypeWithNullability(RelDataType, boolean)","u":"enforceTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)"},{"p":"org.apache.calcite.jdbc","c":"CalciteRootSchema","l":"enhanceLookup(Lookup<S>)","u":"enhanceLookup(org.apache.calcite.schema.lookup.Lookup)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"enhanceLookup(Lookup<S>)","u":"enhanceLookup(org.apache.calcite.schema.lookup.Lookup)"},{"p":"org.apache.calcite.runtime","c":"ResultSetEnumerable.PreparedStatementEnricher","l":"enrich(PreparedStatement)","u":"enrich(java.sql.PreparedStatement)"},{"p":"org.apache.calcite.plan.hep","c":"HepPlanner","l":"ensureRegistered(RelNode, RelNode)","u":"ensureRegistered(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan","c":"RelOptPlanner","l":"ensureRegistered(RelNode, RelNode)","u":"ensureRegistered(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"ensureRegistered(RelNode, RelNode)","u":"ensureRegistered(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.test","c":"MockRelOptPlanner","l":"ensureRegistered(RelNode, RelNode)","u":"ensureRegistered(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceDecimalsRule.RexExpander","l":"ensureScale(SqlParserPos, RexNode, int, int)","u":"ensureScale(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.rex.RexNode,int,int)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"ensureType(RelDataType, RexNode, boolean)","u":"ensureType(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceDecimalsRule.RexExpander","l":"ensureType(SqlParserPos, RelDataType, RexNode)","u":"ensureType(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceDecimalsRule.RexExpander","l":"ensureType(SqlParserPos, RelDataType, RexNode, boolean)","u":"ensureType(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"ensureType(SqlParserPos, RelDataType, RexNode, boolean)","u":"ensureType(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)"},{"p":"org.apache.calcite.test","c":"SqlToRelFixture","l":"ensuring(Predicate<SqlToRelFixture>, UnaryOperator<SqlToRelFixture>)","u":"ensuring(java.util.function.Predicate,java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.schema.lookup","c":"Named","l":"entity()"},{"p":"org.apache.calcite.schema.lookup","c":"Named","l":"entityOrNull(Named<T>)","u":"entityOrNull(org.apache.calcite.schema.lookup.Named)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema.Entry","l":"Entry(CalciteSchema, String)","u":"%3Cinit%3E(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)"},{"p":"org.apache.calcite.util","c":"CompositeMap","l":"entrySet()"},{"p":"org.apache.calcite.util","c":"Util","l":"enumConstants(Class<T>)","u":"enumConstants(java.lang.Class)"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema","l":"enumerable"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRules","l":"ENUMERABLE_AGGREGATE_RULE"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRules","l":"ENUMERABLE_ASOFJOIN_RULE"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRules","l":"ENUMERABLE_BATCH_NESTED_LOOP_JOIN_RULE"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRules","l":"ENUMERABLE_CALC_RULE"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRules","l":"ENUMERABLE_COLLECT_RULE"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRules","l":"ENUMERABLE_CORRELATE_RULE"},{"p":"org.apache.calcite.config","c":"CalciteSystemProperty","l":"ENUMERABLE_ENABLE_TABLESCAN_ARRAY"},{"p":"org.apache.calcite.config","c":"CalciteSystemProperty","l":"ENUMERABLE_ENABLE_TABLESCAN_MAP"},{"p":"org.apache.calcite.config","c":"CalciteSystemProperty","l":"ENUMERABLE_ENABLE_TABLESCAN_MULTISET"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ENUMERABLE_ENUMERATOR"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRelFactories","l":"ENUMERABLE_FILTER_FACTORY"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRules","l":"ENUMERABLE_FILTER_RULE"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRules","l":"ENUMERABLE_FILTER_TO_CALC_RULE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ENUMERABLE_FOREACH"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRules","l":"ENUMERABLE_INTERSECT_RULE"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRules","l":"ENUMERABLE_JOIN_RULE"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRules","l":"ENUMERABLE_LIMIT_RULE"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRules","l":"ENUMERABLE_LIMIT_SORT_RULE"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRules","l":"ENUMERABLE_MATCH_RULE"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRules","l":"ENUMERABLE_MERGE_JOIN_RULE"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRules","l":"ENUMERABLE_MERGE_UNION_RULE"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRules","l":"ENUMERABLE_MINUS_RULE"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRelFactories","l":"ENUMERABLE_PROJECT_FACTORY"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRules","l":"ENUMERABLE_PROJECT_RULE"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRules","l":"ENUMERABLE_PROJECT_TO_CALC_RULE"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRules","l":"ENUMERABLE_REPEAT_UNION_RULE"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRules","l":"ENUMERABLE_RULES"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl","l":"ENUMERABLE_RULES"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRelFactories","l":"ENUMERABLE_SORT_FACTORY"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRules","l":"ENUMERABLE_SORT_RULE"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRules","l":"ENUMERABLE_SORTED_AGGREGATE_RULE"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRules","l":"ENUMERABLE_TABLE_FUNCTION_SCAN_RULE"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRules","l":"ENUMERABLE_TABLE_MODIFICATION_RULE"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRelFactories","l":"ENUMERABLE_TABLE_SCAN_FACTORY"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRules","l":"ENUMERABLE_TABLE_SCAN_RULE"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRules","l":"ENUMERABLE_TABLE_SPOOL_RULE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ENUMERABLE_TO_LIST"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ENUMERABLE_TO_MAP"},{"p":"org.apache.calcite.adapter.spark","c":"SparkRules","l":"ENUMERABLE_TO_SPARK"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRules","l":"ENUMERABLE_UNCOLLECT_RULE"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRules","l":"ENUMERABLE_UNION_RULE"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRules","l":"ENUMERABLE_VALUES_RULE"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRules","l":"ENUMERABLE_WINDOW_RULE"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.CalciteSignature","l":"enumerable(DataContext)","u":"enumerable(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.schema","c":"Schemas","l":"enumerable(FilterableTable, DataContext)","u":"enumerable(org.apache.calcite.schema.FilterableTable,org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.schema","c":"Schemas","l":"enumerable(ProjectableFilterableTable, DataContext)","u":"enumerable(org.apache.calcite.schema.ProjectableFilterableTable,org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.interpreter","c":"Compiler","l":"enumerable(RelNode, Enumerable<Row>)","u":"enumerable(org.apache.calcite.rel.RelNode,org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.interpreter","c":"Nodes.CoreCompiler","l":"enumerable(RelNode, Enumerable<Row>)","u":"enumerable(org.apache.calcite.rel.RelNode,org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.schema","c":"Schemas","l":"enumerable(ScannableTable, DataContext)","u":"enumerable(org.apache.calcite.schema.ScannableTable,org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableAggregate","l":"EnumerableAggregate(RelOptCluster, RelTraitSet, RelNode, boolean, ImmutableBitSet, List<ImmutableBitSet>, List<AggregateCall>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableAggregate","l":"EnumerableAggregate(RelOptCluster, RelTraitSet, RelNode, ImmutableBitSet, List<ImmutableBitSet>, List<AggregateCall>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableAggregateBase","l":"EnumerableAggregateBase(RelOptCluster, RelTraitSet, List<RelHint>, RelNode, ImmutableBitSet, List<ImmutableBitSet>, List<AggregateCall>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableAsofJoin","l":"EnumerableAsofJoin(RelOptCluster, RelTraitSet, RelNode, RelNode, RexNode, RexNode, Set<CorrelationId>, JoinRelType)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.util.Set,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdCollation","l":"enumerableBatchNestedLoopJoin(RelMetadataQuery, RelNode, RelNode, JoinRelType)","u":"enumerableBatchNestedLoopJoin(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableBatchNestedLoopJoin","l":"EnumerableBatchNestedLoopJoin(RelOptCluster, RelTraitSet, RelNode, RelNode, RexNode, Set<CorrelationId>, ImmutableBitSet, JoinRelType)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,java.util.Set,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableBatchNestedLoopJoinRule","l":"EnumerableBatchNestedLoopJoinRule(Class<? extends Join>, RelBuilderFactory, int)","u":"%3Cinit%3E(java.lang.Class,org.apache.calcite.tools.RelBuilderFactory,int)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableBatchNestedLoopJoinRule","l":"EnumerableBatchNestedLoopJoinRule(EnumerableBatchNestedLoopJoinRule.Config)","u":"%3Cinit%3E(org.apache.calcite.adapter.enumerable.EnumerableBatchNestedLoopJoinRule.Config)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableBatchNestedLoopJoinRule","l":"EnumerableBatchNestedLoopJoinRule(RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableBatchNestedLoopJoinRule","l":"EnumerableBatchNestedLoopJoinRule(RelBuilderFactory, int)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory,int)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableBindable","l":"EnumerableBindable(RelOptCluster, RelNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableCalc","l":"EnumerableCalc(RelOptCluster, RelTraitSet, RelNode, RexProgram)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableCalc","l":"EnumerableCalc(RelOptCluster, RelTraitSet, RelNode, RexProgram, List<RelCollation>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram,java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableCollect","l":"EnumerableCollect(RelOptCluster, RelTraitSet, RelNode, RelDataType)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableCollect","l":"EnumerableCollect(RelOptCluster, RelTraitSet, RelNode, String)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,java.lang.String)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdCollation","l":"enumerableCorrelate(RelMetadataQuery, RelNode, RelNode, JoinRelType)","u":"enumerableCorrelate(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableCorrelate","l":"EnumerableCorrelate(RelOptCluster, RelTraitSet, RelNode, RelNode, CorrelationId, ImmutableBitSet, JoinRelType)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.CorrelationId,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableCorrelateRule","l":"EnumerableCorrelateRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"EnumerableDefaults()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableFilter","l":"EnumerableFilter(RelOptCluster, RelTraitSet, RelNode, RexNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableFilterToCalcRule","l":"EnumerableFilterToCalcRule(EnumerableFilterToCalcRule.Config)","u":"%3Cinit%3E(org.apache.calcite.adapter.enumerable.EnumerableFilterToCalcRule.Config)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableFilterToCalcRule","l":"EnumerableFilterToCalcRule(RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdCollation","l":"enumerableHashJoin(RelMetadataQuery, RelNode, RelNode, JoinRelType)","u":"enumerableHashJoin(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableHashJoin","l":"EnumerableHashJoin(RelOptCluster, RelTraitSet, RelNode, RelNode, RexNode, ImmutableIntList, ImmutableIntList, JoinRelType, Set<String>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.rel.core.JoinRelType,java.util.Set)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableHashJoin","l":"EnumerableHashJoin(RelOptCluster, RelTraitSet, RelNode, RelNode, RexNode, Set<CorrelationId>, JoinRelType)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,java.util.Set,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableInterpretable","l":"EnumerableInterpretable(RelOptCluster, RelNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableInterpreter","l":"EnumerableInterpreter(RelOptCluster, RelTraitSet, RelNode, double)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,double)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableInterpreterRule","l":"EnumerableInterpreterRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableIntersect","l":"EnumerableIntersect(RelOptCluster, RelTraitSet, List<RelNode>, boolean)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,boolean)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableLimit","l":"EnumerableLimit(RelOptCluster, RelTraitSet, RelNode, RexNode, RexNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableLimitRule","l":"EnumerableLimitRule(EnumerableLimitRule.Config)","u":"%3Cinit%3E(org.apache.calcite.adapter.enumerable.EnumerableLimitRule.Config)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableLimitSort","l":"EnumerableLimitSort(RelOptCluster, RelTraitSet, RelNode, RelCollation, RexNode, RexNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableLimitSortRule","l":"EnumerableLimitSortRule(EnumerableLimitSortRule.Config)","u":"%3Cinit%3E(org.apache.calcite.adapter.enumerable.EnumerableLimitSortRule.Config)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableMatch","l":"EnumerableMatch(RelOptCluster, RelTraitSet, RelNode, RelDataType, RexNode, boolean, boolean, Map<String, RexNode>, Map<String, RexNode>, RexNode, Map<String, ? extends SortedSet<String>>, boolean, ImmutableBitSet, RelCollation, RexNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean,boolean,java.util.Map,java.util.Map,org.apache.calcite.rex.RexNode,java.util.Map,boolean,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableMatchRule","l":"EnumerableMatchRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableMergeJoin","l":"EnumerableMergeJoin(RelOptCluster, RelTraitSet, RelNode, RelNode, RexNode, Set<CorrelationId>, JoinRelType)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,java.util.Set,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableMergeUnion","l":"EnumerableMergeUnion(RelOptCluster, RelTraitSet, List<RelNode>, boolean)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,boolean)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableMergeUnionRule","l":"EnumerableMergeUnionRule(EnumerableMergeUnionRule.Config)","u":"%3Cinit%3E(org.apache.calcite.adapter.enumerable.EnumerableMergeUnionRule.Config)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableMinus","l":"EnumerableMinus(RelOptCluster, RelTraitSet, List<RelNode>, boolean)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdCollation","l":"enumerableNestedLoopJoin(RelMetadataQuery, RelNode, RelNode, JoinRelType)","u":"enumerableNestedLoopJoin(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableNestedLoopJoin","l":"EnumerableNestedLoopJoin(RelOptCluster, RelTraitSet, RelNode, RelNode, RexNode, JoinRelType, Set<String>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType,java.util.Set)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableNestedLoopJoin","l":"EnumerableNestedLoopJoin(RelOptCluster, RelTraitSet, RelNode, RelNode, RexNode, Set<CorrelationId>, JoinRelType)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,java.util.Set,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableProject","l":"EnumerableProject(RelOptCluster, RelTraitSet, RelNode, List<? extends RexNode>, RelDataType)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableProject","l":"EnumerableProject(RelOptCluster, RelTraitSet, RelNode, List<? extends RexNode>, RelDataType, int)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType,int)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableProjectToCalcRule","l":"EnumerableProjectToCalcRule(EnumerableProjectToCalcRule.Config)","u":"%3Cinit%3E(org.apache.calcite.adapter.enumerable.EnumerableProjectToCalcRule.Config)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableProjectToCalcRule","l":"EnumerableProjectToCalcRule(RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRelImplementor","l":"EnumerableRelImplementor(RexBuilder, Map<String, Object>)","u":"%3Cinit%3E(org.apache.calcite.rex.RexBuilder,java.util.Map)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRepeatUnionRule","l":"EnumerableRepeatUnionRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdCollation","l":"enumerableSemiJoin(RelMetadataQuery, RelNode, RelNode)","u":"enumerableSemiJoin(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableSort","l":"EnumerableSort(RelOptCluster, RelTraitSet, RelNode, RelCollation, RexNode, RexNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableSortedAggregate","l":"EnumerableSortedAggregate(RelOptCluster, RelTraitSet, RelNode, ImmutableBitSet, List<ImmutableBitSet>, List<AggregateCall>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableTableFunctionScan","l":"EnumerableTableFunctionScan(RelOptCluster, RelTraitSet, List<RelNode>, Type, RelDataType, RexNode, Set<RelColumnMapping>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,java.lang.reflect.Type,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.Set)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableTableFunctionScanRule","l":"EnumerableTableFunctionScanRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableTableModify","l":"EnumerableTableModify(RelOptCluster, RelTraitSet, RelOptTable, Prepare.CatalogReader, RelNode, TableModify.Operation, List<String>, List<RexNode>, boolean)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.plan.RelOptTable,org.apache.calcite.prepare.Prepare.CatalogReader,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.TableModify.Operation,java.util.List,java.util.List,boolean)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableTableModifyRule","l":"EnumerableTableModifyRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableTableScan","l":"EnumerableTableScan(RelOptCluster, RelTraitSet, RelOptTable, Class)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.plan.RelOptTable,java.lang.Class)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableTableScanRule","l":"EnumerableTableScanRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableTableSpoolRule","l":"EnumerableTableSpoolRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableBindable.EnumerableToBindableConverterRule","l":"EnumerableToBindableConverterRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.adapter.spark","c":"EnumerableToSparkConverter","l":"EnumerableToSparkConverter(RelOptCluster, RelTraitSet, RelNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableUncollect","l":"EnumerableUncollect(RelOptCluster, RelTraitSet, RelNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableUncollect","l":"EnumerableUncollect(RelOptCluster, RelTraitSet, RelNode, boolean)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableUnion","l":"EnumerableUnion(RelOptCluster, RelTraitSet, List<RelNode>, boolean)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,boolean)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableValuesRule","l":"EnumerableValuesRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.linq4j","c":"TransformedEnumerator","l":"enumerator"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ENUMERATOR_CLOSE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ENUMERATOR_CURRENT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ENUMERATOR_MOVE_NEXT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ENUMERATOR_RESET"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraTable.CassandraQueryable","l":"enumerator()"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchTable.ElasticsearchQueryable","l":"enumerator()"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeTable.GeodeQueryable","l":"enumerator()"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbTable.InnodbQueryable","l":"enumerator()"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoTable.MongoQueryable","l":"enumerator()"},{"p":"org.apache.calcite.adapter.splunk","c":"SplunkQuery","l":"enumerator()"},{"p":"org.apache.calcite.interpreter","c":"Interpreter","l":"enumerator()"},{"p":"org.apache.calcite.linq4j","c":"AbstractEnumerable2","l":"enumerator()"},{"p":"org.apache.calcite.linq4j","c":"BaseQueryable","l":"enumerator()"},{"p":"org.apache.calcite.linq4j","c":"MemoryEnumerable","l":"enumerator()"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults.ReplayableQueryable","l":"enumerator()"},{"p":"org.apache.calcite.linq4j","c":"RawEnumerable","l":"enumerator()"},{"p":"org.apache.calcite.runtime","c":"ResultSetEnumerable","l":"enumerator()"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions.GridEnumerable","l":"enumerator()"},{"p":"org.apache.calcite.util","c":"Smalls.SimpleTable","l":"enumerator()"},{"p":"org.apache.calcite.linq4j","c":"Linq4j","l":"enumerator(Collection<? extends V>)","u":"enumerator(java.util.Collection)"},{"p":"org.apache.calcite.runtime","c":"EnumeratorCursor","l":"EnumeratorCursor(Enumerator<T>)","u":"%3Cinit%3E(org.apache.calcite.linq4j.Enumerator)"},{"p":"org.apache.calcite.linq4j","c":"Linq4j","l":"enumeratorIterator(Enumerator<T>)","u":"enumeratorIterator(org.apache.calcite.linq4j.Enumerator)"},{"p":"org.apache.calcite.util","c":"Util","l":"enumVal(Class<T>, String)","u":"enumVal(java.lang.Class,java.lang.String)"},{"p":"org.apache.calcite.util","c":"Util","l":"enumVal(T, String)","u":"enumVal(T,java.lang.String)"},{"p":"org.apache.calcite.util","c":"TimestampString","l":"EPOCH"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"EPSILON"},{"p":"org.apache.calcite.test","c":"Matchers","l":"EPSILON"},{"p":"org.apache.calcite.piglet","c":"Ast.Op","l":"EQ"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"eq(BigDecimal, BigDecimal)","u":"eq(java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"eq(Object, Object)","u":"eq(java.lang.Object,java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"eq(Object[], Object[])","u":"eq(java.lang.Object[],java.lang.Object[])"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"eq(RexNode, RexNode)","u":"eq(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"eq(RexNode, RexNode)","u":"eq(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"eq(String, RelDataType, String, RelDataType, Litmus)","u":"eq(java.lang.String,org.apache.calcite.rel.type.RelDataType,java.lang.String,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"eq(String, String, Comparator<String>)","u":"eq(java.lang.String,java.lang.String,java.util.Comparator)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"eqAny(Object, Object)","u":"eqAny(java.lang.Object,java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"Equal"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"equal(Expression, Expression)","u":"equal(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"equal(Expression, Expression, boolean, Method)","u":"equal(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,boolean,java.lang.reflect.Method)"},{"p":"org.apache.calcite.rel","c":"RelCollationImpl","l":"equal(List<RelCollation>, List<RelCollation>)","u":"equal(java.util.List,java.util.List)"},{"p":"org.apache.calcite.rel","c":"RelCollations","l":"equal(List<RelCollation>, List<RelCollation>)","u":"equal(java.util.List,java.util.List)"},{"p":"org.apache.calcite.runtime","c":"Utilities","l":"equal(Object, Object)","u":"equal(java.lang.Object,java.lang.Object)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"equal(String, RelDataType, String, RelDataType, Litmus)","u":"equal(java.lang.String,org.apache.calcite.rel.type.RelDataType,java.lang.String,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.linq4j.function","c":"EqualityComparer","l":"equal(T, T)","u":"equal(T,T)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"equalAsCollectionSansNullability(RelDataTypeFactory, RelDataType, RelDataType)","u":"equalAsCollectionSansNullability(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"equalAsMapSansNullability(RelDataTypeFactory, RelDataType, RelDataType)","u":"equalAsMapSansNullability(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"equalAsStructSansNullability(RelDataTypeFactory, RelDataType, RelDataType, SqlNameMatcher)","u":"equalAsStructSansNullability(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlNameMatcher)"},{"p":"org.apache.calcite.sql","c":"SqlNode","l":"equalDeep(List<? extends SqlNode>, List<? extends SqlNode>, Litmus)","u":"equalDeep(java.util.List,java.util.List,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.sql","c":"SqlNode","l":"equalDeep(SqlNode, SqlNode, Litmus)","u":"equalDeep(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"EQUALS"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"EQUALS"},{"p":"org.apache.calcite.interpreter","c":"Row","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.jdbc","c":"JavaRecordType","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.linq4j","c":"Ord","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"AbstractNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"ArrayLengthRecordField","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"BinaryExpression","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"BlockStatement","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"CatchBlock","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"ClassDeclaration","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"ConditionalExpression","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"ConditionalStatement","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"ConstantExpression","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"ConstantUntypedNull","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"ConstructorDeclaration","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"DeclarationStatement","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"FieldDeclaration","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"ForEachStatement","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"ForStatement","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"FunctionExpression","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"GotoStatement","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"IndexExpression","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"LabelStatement","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"LabelTarget","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"MemberExpression","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"MethodCallExpression","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"MethodDeclaration","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"NewArrayExpression","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"NewExpression","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"ParameterExpression","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"ReflectedPseudoField","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"TernaryExpression","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"ThrowStatement","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"TryStatement","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"TypeBinaryExpression","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"UnaryExpression","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"WhileStatement","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.materialize","c":"Lattice.Column","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.materialize","c":"Lattice.Measure","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.materialize","c":"LatticeTable","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.materialize","c":"MaterializationKey","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.materialize","c":"TileKey","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.plan","c":"RelOptCostImpl","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.plan","c":"RelOptRule","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.plan","c":"RelOptRuleOperand","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.plan","c":"RelTrait","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.plan","c":"RelTraitSet","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoRelMetadataProvider","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.prepare","c":"RelOptTableImpl","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.profile","c":"Profiler.Column","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rel.core","c":"CorrelationId","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rel.core","c":"Match.RexMRAggCall","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rel.core","c":"Window.Group","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rel.core","c":"Window.RexWinAggCall","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rel.hint","c":"RelHint","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rel.metadata","c":"ChainedRelMetadataProvider","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rel.metadata","c":"JaninoRelMetadataProvider","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rel.metadata","c":"RelColumnOrigin","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableAggregate","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableCalc","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableCollect","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableCorrelate","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableExchange","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableFilter","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableJoin","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableMatch","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableProject","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableSample","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableScan","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableSetOp","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableSort","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableTableFunctionScan","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableTableModify","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableUncollect","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableValues","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableWindow","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rel","c":"RelCollationImpl","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rel","c":"RelFieldCollation","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFieldImpl","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeImpl","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rex","c":"RexCall","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rex","c":"RexCorrelVariable","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rex","c":"RexDynamicParam","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rex","c":"RexFieldAccess","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rex","c":"RexInputRef","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rex","c":"RexLambda","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rex","c":"RexLambdaRef","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rex","c":"RexLiteral","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rex","c":"RexLocalRef","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rex","c":"RexNode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rex","c":"RexOver","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rex","c":"RexRangeRef","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rex","c":"RexSubQuery","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rex","c":"RexTableInputRef","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rex","c":"RexTableInputRef.RelTableRef","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.rex","c":"RexWindow","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"ConsList","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat1List","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat2List","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat3List","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat4List","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat5List","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat6List","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.JsonValueContext","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"MapEntry","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.runtime.rtti","c":"BasicSqlTypeRtti","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.runtime.rtti","c":"GenericSqlTypeRtti","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.runtime.rtti","c":"RowSqlTypeRtti","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.runtime.variant","c":"VariantNonNull","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.runtime.variant","c":"VariantNull","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.runtime.variant","c":"VariantSqlNull","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.schema.impl","c":"LongSchemaVersion","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.schema.lookup","c":"Named","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserPos","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.sql.parser","c":"StringAndPos","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.sql","c":"SqlCollation","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.sql","c":"SqlIntervalLiteral.IntervalValue","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.sql","c":"TableCharacteristic","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.sql.util","c":"IdPair","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.sql.util","c":"SqlString","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.sql.validate","c":"SqlMonikerImpl","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.sql.validate","c":"SqlQualified","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator.CorelMap","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.util","c":"BitString","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.util","c":"DateString","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.util.graph","c":"DefaultEdge","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.util","c":"ImmutableIntList","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.util.mapping","c":"IntPair","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.FiniteAbstractMapping","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.util","c":"NameMap","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.util","c":"NameMultimap","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.util","c":"NameSet","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.util","c":"NlsString","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.util","c":"Pair","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.util","c":"Permutation","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.util","c":"Sarg","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.util","c":"TimestampString","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.util","c":"TimestampWithTimeZoneString","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.util","c":"TimeString","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.util","c":"TimeWithTimeZoneString","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery.QuerySpec","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.test.schemata.foodmart","c":"FoodmartSchema.SalesFact","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.test.schemata.hr","c":"Department","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.test.schemata.hr","c":"Dependent","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.test.schemata.hr","c":"Employee","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.test.schemata.hr","c":"Event","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.test.schemata.hr","c":"HierarchySchema.Hierarchy","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.test.schemata.hr","c":"Location","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.test.schemata.hr","c":"NullableTest","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.test.schemata.lingual","c":"LingualEmp","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.calcite.plan","c":"RelOptCost","l":"equals(RelOptCost)","u":"equals(org.apache.calcite.plan.RelOptCost)"},{"p":"org.apache.calcite.plan","c":"RelOptCostImpl","l":"equals(RelOptCost)","u":"equals(org.apache.calcite.plan.RelOptCost)"},{"p":"org.apache.calcite.plan","c":"RelOptRule","l":"equals(RelOptRule)","u":"equals(org.apache.calcite.plan.RelOptRule)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"equals(RexNode, RexNode)","u":"equals(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.linq4j","c":"Linq4j","l":"equals(T, T)","u":"equals(T,T)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"equalSansNullability(RelDataType, RelDataType)","u":"equalSansNullability(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"equalSansNullability(RelDataTypeFactory, RelDataType, RelDataType)","u":"equalSansNullability(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql","c":"SqlNode","l":"equalsDeep(SqlNode, boolean)","u":"equalsDeep(org.apache.calcite.sql.SqlNode,boolean)"},{"p":"org.apache.calcite.sql","c":"SqlCall","l":"equalsDeep(SqlNode, Litmus)","u":"equalsDeep(org.apache.calcite.sql.SqlNode,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.sql","c":"SqlDataTypeSpec","l":"equalsDeep(SqlNode, Litmus)","u":"equalsDeep(org.apache.calcite.sql.SqlNode,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.sql","c":"SqlDynamicParam","l":"equalsDeep(SqlNode, Litmus)","u":"equalsDeep(org.apache.calcite.sql.SqlNode,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.sql","c":"SqlIdentifier","l":"equalsDeep(SqlNode, Litmus)","u":"equalsDeep(org.apache.calcite.sql.SqlNode,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.sql","c":"SqlIntervalQualifier","l":"equalsDeep(SqlNode, Litmus)","u":"equalsDeep(org.apache.calcite.sql.SqlNode,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"equalsDeep(SqlNode, Litmus)","u":"equalsDeep(org.apache.calcite.sql.SqlNode,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.sql","c":"SqlNode","l":"equalsDeep(SqlNode, Litmus)","u":"equalsDeep(org.apache.calcite.sql.SqlNode,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"equalsDeep(SqlNode, Litmus)","u":"equalsDeep(org.apache.calcite.sql.SqlNode,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"equalsDeep(SqlNode, Litmus)","u":"equalsDeep(org.apache.calcite.sql.SqlNode,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.sql","c":"SqlAlienSystemTypeNameSpec","l":"equalsDeep(SqlTypeNameSpec, Litmus)","u":"equalsDeep(org.apache.calcite.sql.SqlTypeNameSpec,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.sql","c":"SqlBasicTypeNameSpec","l":"equalsDeep(SqlTypeNameSpec, Litmus)","u":"equalsDeep(org.apache.calcite.sql.SqlTypeNameSpec,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.sql","c":"SqlCollectionTypeNameSpec","l":"equalsDeep(SqlTypeNameSpec, Litmus)","u":"equalsDeep(org.apache.calcite.sql.SqlTypeNameSpec,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.sql","c":"SqlMapTypeNameSpec","l":"equalsDeep(SqlTypeNameSpec, Litmus)","u":"equalsDeep(org.apache.calcite.sql.SqlTypeNameSpec,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.sql","c":"SqlRowTypeNameSpec","l":"equalsDeep(SqlTypeNameSpec, Litmus)","u":"equalsDeep(org.apache.calcite.sql.SqlTypeNameSpec,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.sql","c":"SqlTypeNameSpec","l":"equalsDeep(SqlTypeNameSpec, Litmus)","u":"equalsDeep(org.apache.calcite.sql.SqlTypeNameSpec,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.sql","c":"SqlUserDefinedTypeNameSpec","l":"equalsDeep(SqlTypeNameSpec, Litmus)","u":"equalsDeep(org.apache.calcite.sql.SqlTypeNameSpec,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.util","c":"Util","l":"equalShallow(List<? extends T>, List<? extends T>)","u":"equalShallow(java.util.List,java.util.List)"},{"p":"org.apache.calcite.plan","c":"RelTraitSet","l":"equalsSansConvention(RelTraitSet)","u":"equalsSansConvention(org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.rel.type","c":"RelDataType","l":"equalsSansFieldNames(RelDataType)","u":"equalsSansFieldNames(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.type","c":"RelDataType","l":"equalsSansFieldNamesAndNullability(RelDataType)","u":"equalsSansFieldNamesAndNullability(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.test","c":"Matchers","l":"equalsUnordered(E...)"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor","l":"equalType(String, MutableRel, String, MutableRel, Litmus)","u":"equalType(java.lang.String,org.apache.calcite.rel.mutable.MutableRel,java.lang.String,org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"equalType(String, RelNode, String, RelNode, Litmus)","u":"equalType(java.lang.String,org.apache.calcite.rel.RelNode,java.lang.String,org.apache.calcite.rel.RelNode,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.rel.core","c":"EquiJoin","l":"EquiJoin(RelOptCluster, RelTraitSet, RelNode, RelNode, RexNode, ImmutableIntList, ImmutableIntList, JoinRelType, Set<String>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.rel.core.JoinRelType,java.util.Set)"},{"p":"org.apache.calcite.rel.rules","c":"EquiJoin","l":"EquiJoin(RelOptCluster, RelTraitSet, RelNode, RelNode, RexNode, ImmutableIntList, ImmutableIntList, JoinRelType, Set<String>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.rel.core.JoinRelType,java.util.Set)"},{"p":"org.apache.calcite.rel.core","c":"EquiJoin","l":"EquiJoin(RelOptCluster, RelTraitSet, RelNode, RelNode, RexNode, ImmutableIntList, ImmutableIntList, Set<CorrelationId>, JoinRelType)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.util.ImmutableIntList,java.util.Set,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.rel.core","c":"EquiJoin","l":"EquiJoin(RelOptCluster, RelTraitSet, RelNode, RelNode, RexNode, Set<CorrelationId>, JoinRelType)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,java.util.Set,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.util","c":"EquivalenceSet","l":"equiv(E, E)","u":"equiv(E,E)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule.EquivalenceClasses","l":"EquivalenceClasses()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util","c":"EquivalenceSet","l":"EquivalenceSet()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"eqUpToNullability(boolean, String, RelDataType, String, RelDataType, Litmus)","u":"eqUpToNullability(boolean,java.lang.String,org.apache.calcite.rel.type.RelDataType,java.lang.String,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.util.format.postgresql","c":"ChronoUnitEnum","l":"ERAS"},{"p":"org.apache.calcite.sql","c":"SqlJsonEmptyOrError","l":"ERROR"},{"p":"org.apache.calcite.sql","c":"SqlJsonExistsErrorBehavior","l":"ERROR"},{"p":"org.apache.calcite.sql","c":"SqlJsonQueryEmptyOrErrorBehavior","l":"ERROR"},{"p":"org.apache.calcite.sql","c":"SqlJsonValueEmptyOrErrorBehavior","l":"ERROR"},{"p":"org.apache.calcite.rel.hint","c":"HintStrategyTable.Builder","l":"errorHandler(Litmus)","u":"errorHandler(org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ESCAPE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"ESCAPE"},{"p":"org.apache.calcite.util","c":"TestUtil","l":"escapeString(String)","u":"escapeString(java.lang.String)"},{"p":"org.apache.calcite.util","c":"TestUtil","l":"escapeString(StringBuilder, String)","u":"escapeString(java.lang.StringBuilder,java.lang.String)"},{"p":"org.apache.calcite.rel.core","c":"Filter","l":"estimateFilteredRows(RelNode, RexNode)","u":"estimateFilteredRows(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUtil","l":"estimateFilteredRows(RelNode, RexNode, RelMetadataQuery)","u":"estimateFilteredRows(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.core","c":"Filter","l":"estimateFilteredRows(RelNode, RexProgram)","u":"estimateFilteredRows(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUtil","l":"estimateFilteredRows(RelNode, RexProgram, RelMetadataQuery)","u":"estimateFilteredRows(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.core","c":"Join","l":"estimateJoinedRows(Join, RexNode)","u":"estimateJoinedRows(org.apache.calcite.rel.core.Join,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcCalc","l":"estimateRowCount(RelMetadataQuery)","u":"estimateRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcJoin","l":"estimateRowCount(RelMetadataQuery)","u":"estimateRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.spark","c":"SparkRules.SparkCalc","l":"estimateRowCount(RelMetadataQuery)","u":"estimateRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableTableScan","l":"estimateRowCount(RelMetadataQuery)","u":"estimateRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.plan.hep","c":"HepRelVertex","l":"estimateRowCount(RelMetadataQuery)","u":"estimateRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.plan.volcano","c":"RelSubset","l":"estimateRowCount(RelMetadataQuery)","u":"estimateRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"estimateRowCount(RelMetadataQuery)","u":"estimateRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.core","c":"Aggregate","l":"estimateRowCount(RelMetadataQuery)","u":"estimateRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.core","c":"Calc","l":"estimateRowCount(RelMetadataQuery)","u":"estimateRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.core","c":"Correlate","l":"estimateRowCount(RelMetadataQuery)","u":"estimateRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.core","c":"Filter","l":"estimateRowCount(RelMetadataQuery)","u":"estimateRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.core","c":"Intersect","l":"estimateRowCount(RelMetadataQuery)","u":"estimateRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.core","c":"Join","l":"estimateRowCount(RelMetadataQuery)","u":"estimateRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.core","c":"Minus","l":"estimateRowCount(RelMetadataQuery)","u":"estimateRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.core","c":"RepeatUnion","l":"estimateRowCount(RelMetadataQuery)","u":"estimateRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.core","c":"TableFunctionScan","l":"estimateRowCount(RelMetadataQuery)","u":"estimateRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.core","c":"TableScan","l":"estimateRowCount(RelMetadataQuery)","u":"estimateRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.core","c":"Union","l":"estimateRowCount(RelMetadataQuery)","u":"estimateRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.core","c":"Values","l":"estimateRowCount(RelMetadataQuery)","u":"estimateRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel","c":"RelNode","l":"estimateRowCount(RelMetadataQuery)","u":"estimateRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel","c":"SingleRel","l":"estimateRowCount(RelMetadataQuery)","u":"estimateRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.core","c":"Union","l":"estimateRowCount(RelNode)","u":"estimateRowCount(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.chinook","c":"ChosenCustomerEmail","l":"eval()"},{"p":"org.apache.calcite.util","c":"Smalls.CountArgs0Function","l":"eval()"},{"p":"org.apache.calcite.util","c":"Smalls.FibonacciTableFunction","l":"eval()"},{"p":"org.apache.calcite.util","c":"Smalls.MyNiladicParenthesesFunction","l":"eval()"},{"p":"org.apache.calcite.adapter.os","c":"CpuInfoTableFunction","l":"eval(boolean)"},{"p":"org.apache.calcite.adapter.os","c":"CpuTimeTableFunction","l":"eval(boolean)"},{"p":"org.apache.calcite.adapter.os","c":"DuTableFunction","l":"eval(boolean)"},{"p":"org.apache.calcite.adapter.os","c":"GitCommitsTableFunction","l":"eval(boolean)"},{"p":"org.apache.calcite.adapter.os","c":"InterfaceAddressesTableFunction","l":"eval(boolean)"},{"p":"org.apache.calcite.adapter.os","c":"InterfaceDetailsTableFunction","l":"eval(boolean)"},{"p":"org.apache.calcite.adapter.os","c":"JavaInfoTableFunction","l":"eval(boolean)"},{"p":"org.apache.calcite.adapter.os","c":"JpsTableFunction","l":"eval(boolean)"},{"p":"org.apache.calcite.adapter.os","c":"MemoryInfoTableFunction","l":"eval(boolean)"},{"p":"org.apache.calcite.adapter.os","c":"MountsTableFunction","l":"eval(boolean)"},{"p":"org.apache.calcite.adapter.os","c":"OsVersionTableFunction","l":"eval(boolean)"},{"p":"org.apache.calcite.adapter.os","c":"PsTableFunction","l":"eval(boolean)"},{"p":"org.apache.calcite.adapter.os","c":"StdinTableFunction","l":"eval(boolean)"},{"p":"org.apache.calcite.adapter.os","c":"SystemInfoTableFunction","l":"eval(boolean)"},{"p":"org.apache.calcite.adapter.os","c":"VmstatTableFunction","l":"eval(boolean)"},{"p":"org.apache.calcite.test.schemata.countries","c":"CountriesTableFunction","l":"eval(boolean)"},{"p":"org.apache.calcite.util","c":"Smalls.AwkwardFunction","l":"eval(int)"},{"p":"org.apache.calcite.util","c":"Smalls.CountArgs1Function","l":"eval(int)"},{"p":"org.apache.calcite.util","c":"Smalls.MyDoubleFunction","l":"eval(int)"},{"p":"org.apache.calcite.util","c":"Smalls.MyExceptionFunction","l":"eval(int)"},{"p":"org.apache.calcite.util","c":"Smalls.CountArgs2Function","l":"eval(int, int)","u":"eval(int,int)"},{"p":"org.apache.calcite.util","c":"Smalls.MyIncrement","l":"eval(int, int)","u":"eval(int,int)"},{"p":"org.apache.calcite.util","c":"Smalls.MyPlusFunction","l":"eval(int, int)","u":"eval(int,int)"},{"p":"org.apache.calcite.util","c":"Smalls.MyPlusInitFunction","l":"eval(int, int)","u":"eval(int,int)"},{"p":"org.apache.calcite.util","c":"Smalls.IdentityTableFunction","l":"eval(Integer)","u":"eval(java.lang.Integer)"},{"p":"org.apache.calcite.util","c":"Smalls.SimpleTableFunction","l":"eval(Integer)","u":"eval(java.lang.Integer)"},{"p":"org.apache.calcite.util","c":"Smalls.MyDeterministicPlusFunction","l":"eval(Integer, Integer)","u":"eval(java.lang.Integer,java.lang.Integer)"},{"p":"org.apache.calcite.util","c":"Smalls.MyAbcdeFunction","l":"eval(Integer, Integer, Integer, Integer, Integer)","u":"eval(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)"},{"p":"org.apache.calcite.util","c":"Smalls.MyToStringFunction","l":"eval(Object)","u":"eval(java.lang.Object)"},{"p":"org.apache.calcite.util","c":"Smalls.CountArgs1NullableFunction","l":"eval(Short)","u":"eval(java.lang.Short)"},{"p":"org.apache.calcite.adapter.os","c":"FilesTableFunction","l":"eval(String)","u":"eval(java.lang.String)"},{"p":"org.apache.calcite.adapter.os","c":"OsQuery","l":"eval(String)","u":"eval(java.lang.String)"},{"p":"org.apache.calcite.util","c":"Smalls.MyTableFunction","l":"eval(String)","u":"eval(java.lang.String)"},{"p":"org.apache.calcite.util","c":"Smalls.Null4Function","l":"eval(String)","u":"eval(java.lang.String)"},{"p":"org.apache.calcite.util","c":"Smalls.Null8Function","l":"eval(String)","u":"eval(java.lang.String)"},{"p":"org.apache.calcite.util","c":"Smalls.StaticTableMacroFunction","l":"eval(String)","u":"eval(java.lang.String)"},{"p":"org.apache.calcite.util","c":"Smalls.TableMacroFunction","l":"eval(String)","u":"eval(java.lang.String)"},{"p":"org.apache.calcite.util","c":"Smalls.TestStaticTableFunction","l":"eval(String)","u":"eval(java.lang.String)"},{"p":"org.apache.calcite.util","c":"Smalls.MyLeftFunction","l":"eval(String, int)","u":"eval(java.lang.String,int)"},{"p":"org.apache.calcite.chinook","c":"StringConcatFunction","l":"eval(String, String)","u":"eval(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.util","c":"Smalls.TableMacroFunctionWithNamedParameters","l":"eval(String, String, Integer)","u":"eval(java.lang.String,java.lang.String,java.lang.Integer)"},{"p":"org.apache.calcite.util","c":"Smalls.AnotherTableMacroFunctionWithNamedParameters","l":"eval(String, String, Integer, String)","u":"eval(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"AbstractNode","l":"evaluate(Evaluator)","u":"evaluate(org.apache.calcite.linq4j.tree.Evaluator)"},{"p":"org.apache.calcite.linq4j.tree","c":"BinaryExpression","l":"evaluate(Evaluator)","u":"evaluate(org.apache.calcite.linq4j.tree.Evaluator)"},{"p":"org.apache.calcite.linq4j.tree","c":"BlockStatement","l":"evaluate(Evaluator)","u":"evaluate(org.apache.calcite.linq4j.tree.Evaluator)"},{"p":"org.apache.calcite.linq4j.tree","c":"ConstantExpression","l":"evaluate(Evaluator)","u":"evaluate(org.apache.calcite.linq4j.tree.Evaluator)"},{"p":"org.apache.calcite.linq4j.tree","c":"GotoStatement","l":"evaluate(Evaluator)","u":"evaluate(org.apache.calcite.linq4j.tree.Evaluator)"},{"p":"org.apache.calcite.linq4j.tree","c":"MemberExpression","l":"evaluate(Evaluator)","u":"evaluate(org.apache.calcite.linq4j.tree.Evaluator)"},{"p":"org.apache.calcite.linq4j.tree","c":"MethodCallExpression","l":"evaluate(Evaluator)","u":"evaluate(org.apache.calcite.linq4j.tree.Evaluator)"},{"p":"org.apache.calcite.linq4j.tree","c":"ParameterExpression","l":"evaluate(Evaluator)","u":"evaluate(org.apache.calcite.linq4j.tree.Evaluator)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"evaluate(Node)","u":"evaluate(org.apache.calcite.linq4j.tree.Node)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumUtils","l":"evaluate(Object, Class<T>)","u":"evaluate(java.lang.Object,java.lang.Class)"},{"p":"org.apache.calcite.schema","c":"Member","l":"evaluate(Object, List<Object>)","u":"evaluate(java.lang.Object,java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexInterpreter","l":"evaluate(RexNode, Map<RexNode, Comparable>)","u":"evaluate(org.apache.calcite.rex.RexNode,java.util.Map)"},{"p":"org.apache.calcite.sql","c":"SqlIntervalQualifier","l":"evaluateIntervalLiteral(String, SqlParserPos, RelDataTypeSystem)","u":"evaluateIntervalLiteral(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.rel.type.RelDataTypeSystem)"},{"p":"org.apache.calcite.test.schemata.hr","c":"Event","l":"Event(int, Timestamp)","u":"%3Cinit%3E(int,java.sql.Timestamp)"},{"p":"org.apache.calcite.test.schemata.hr","c":"Event","l":"eventid"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"EVERY"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema.EveryType","l":"EveryType(boolean, byte, char, short, int, long, float, double, Boolean, Byte, Character, Short, Integer, Long, Float, Double, Date, Time, Timestamp, Date, String, BigDecimal, List<String>)","u":"%3Cinit%3E(boolean,byte,char,short,int,long,float,double,java.lang.Boolean,java.lang.Byte,java.lang.Character,java.lang.Short,java.lang.Integer,java.lang.Long,java.lang.Float,java.lang.Double,java.sql.Date,java.sql.Time,java.sql.Timestamp,java.util.Date,java.lang.String,java.math.BigDecimal,java.util.List)"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema","l":"everyTypes"},{"p":"org.apache.calcite.tools","c":"Frameworks.ConfigBuilder","l":"evolveLattice(boolean)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFamily","l":"EXACT_NUMERIC"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"EXACT_NUMERIC"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"EXACT_NUMERIC_EXACT_NUMERIC"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"EXACT_TYPES"},{"p":"org.apache.calcite.plan","c":"RelRule.OperandBuilder","l":"exactly(RelOptRuleOperand)","u":"exactly(org.apache.calcite.plan.RelOptRuleOperand)"},{"p":"org.apache.calcite.sql","c":"SqlDialect.DatabaseProduct","l":"EXASOL"},{"p":"org.apache.calcite.sql.dialect","c":"ExasolSqlDialect","l":"ExasolSqlDialect(SqlDialect.Context)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect.Context)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.JsonPathContext","l":"exc"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.JsonValueContext","l":"exc"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"EXCEPT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"EXCEPT"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"EXCEPT"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"EXCEPT_ALL"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"except(Enumerable<T>)","u":"except(org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"except(Enumerable<T>)","u":"except(org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"except(Enumerable<T>)","u":"except(org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"except(Enumerable<T>, boolean)","u":"except(org.apache.calcite.linq4j.Enumerable,boolean)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"except(Enumerable<T>, boolean)","u":"except(org.apache.calcite.linq4j.Enumerable,boolean)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"except(Enumerable<T>, boolean)","u":"except(org.apache.calcite.linq4j.Enumerable,boolean)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"except(Enumerable<T>, EqualityComparer<T>)","u":"except(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"except(Enumerable<T>, EqualityComparer<T>)","u":"except(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"except(Enumerable<T>, EqualityComparer<T>)","u":"except(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"except(Enumerable<T>, EqualityComparer<T>, boolean)","u":"except(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer,boolean)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"except(Enumerable<T>, EqualityComparer<T>, boolean)","u":"except(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer,boolean)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"except(Enumerable<T>, EqualityComparer<T>, boolean)","u":"except(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer,boolean)"},{"p":"","c":"","l":"except(Enumerable<TSource>)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"except(Enumerable<TSource>)","u":"except(org.apache.calcite.linq4j.Enumerable)"},{"p":"","c":"","l":"except(Enumerable<TSource>)"},{"p":"","c":"","l":"except(Enumerable<TSource>, boolean)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"except(Enumerable<TSource>, boolean)","u":"except(org.apache.calcite.linq4j.Enumerable,boolean)"},{"p":"","c":"","l":"except(Enumerable<TSource>, boolean)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"except(Enumerable<TSource>, Enumerable<TSource>)","u":"except(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"except(Enumerable<TSource>, Enumerable<TSource>, boolean)","u":"except(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.Enumerable,boolean)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"except(Enumerable<TSource>, Enumerable<TSource>, EqualityComparer<TSource>)","u":"except(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"except(Enumerable<TSource>, Enumerable<TSource>, EqualityComparer<TSource>, boolean)","u":"except(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer,boolean)"},{"p":"","c":"","l":"except(Enumerable<TSource>, EqualityComparer<TSource>)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"except(Enumerable<TSource>, EqualityComparer<TSource>)","u":"except(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"","c":"","l":"except(Enumerable<TSource>, EqualityComparer<TSource>)"},{"p":"","c":"","l":"except(Enumerable<TSource>, EqualityComparer<TSource>, boolean)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"except(Enumerable<TSource>, EqualityComparer<TSource>, boolean)","u":"except(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer,boolean)"},{"p":"","c":"","l":"except(Enumerable<TSource>, EqualityComparer<TSource>, boolean)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"except(ImmutableBitSet)","u":"except(org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"except(Queryable<T>, Enumerable<T>)","u":"except(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"except(Queryable<T>, Enumerable<T>)","u":"except(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"except(Queryable<T>, Enumerable<T>)","u":"except(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"except(Queryable<T>, Enumerable<T>, boolean)","u":"except(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable,boolean)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"except(Queryable<T>, Enumerable<T>, boolean)","u":"except(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable,boolean)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"except(Queryable<T>, Enumerable<T>, EqualityComparer<T>)","u":"except(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"except(Queryable<T>, Enumerable<T>, EqualityComparer<T>)","u":"except(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"except(Queryable<T>, Enumerable<T>, EqualityComparer<T>)","u":"except(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"except(Queryable<T>, Enumerable<T>, EqualityComparer<T>, boolean)","u":"except(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer,boolean)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"except(Queryable<T>, Enumerable<T>, EqualityComparer<T>, boolean)","u":"except(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer,boolean)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"exceptionWhilePerformingQueryOnJdbcSubSchema(String)","u":"exceptionWhilePerformingQueryOnJdbcSubSchema(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"exceptionWhileSerializingToJson(String)","u":"exceptionWhileSerializingToJson(java.lang.String)"},{"p":"org.apache.calcite.sql.fun","c":"LibraryOperator","l":"exceptLibraries()"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules","l":"EXCHANGE_FACTORY"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"EXCHANGE_REMOVE_CONSTANT_KEYS"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdDistribution","l":"exchange(RelDistribution)","u":"exchange(org.apache.calcite.rel.RelDistribution)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"exchange(RelDistribution)","u":"exchange(org.apache.calcite.rel.RelDistribution)"},{"p":"org.apache.calcite.rel.core","c":"Exchange","l":"Exchange(RelInput)","u":"%3Cinit%3E(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel.core","c":"Exchange","l":"Exchange(RelOptCluster, RelTraitSet, RelNode, RelDistribution)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelDistribution)"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.Struct","l":"exchangeFactory"},{"p":"org.apache.calcite.rel.rules","c":"ExchangeRemoveConstantKeysRule","l":"ExchangeRemoveConstantKeysRule(ExchangeRemoveConstantKeysRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.ExchangeRemoveConstantKeysRule.Config)"},{"p":"org.apache.calcite.rel.core","c":"Window.Group","l":"exclude"},{"p":"org.apache.calcite.rex","c":"RexWindowExclusion","l":"EXCLUDE_CURRENT_ROW"},{"p":"org.apache.calcite.rex","c":"RexWindowExclusion","l":"EXCLUDE_GROUP"},{"p":"org.apache.calcite.rex","c":"RexWindowExclusion","l":"EXCLUDE_NO_OTHER"},{"p":"org.apache.calcite.rex","c":"RexWindowExclusion","l":"EXCLUDE_TIES"},{"p":"org.apache.calcite.tools","c":"RelBuilder.OverCall","l":"exclude(RexWindowExclusion)","u":"exclude(org.apache.calcite.rex.RexWindowExclusion)"},{"p":"org.apache.calcite.rel.hint","c":"HintStrategy","l":"excludedRules"},{"p":"org.apache.calcite.rel.hint","c":"HintStrategy.Builder","l":"excludedRules(RelOptRule...)","u":"excludedRules(org.apache.calcite.plan.RelOptRule...)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateTableLike","l":"excludingOptions"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule","l":"EXCLUSION_PATTERN"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"ExclusiveOr"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"exclusiveOr(Expression, Expression)","u":"exclusiveOr(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"exclusiveOr(Expression, Expression, Method)","u":"exclusiveOr(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"ExclusiveOrAssign"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"exclusiveOrAssign(Expression, Expression)","u":"exclusiveOrAssign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"exclusiveOrAssign(Expression, Expression, Method)","u":"exclusiveOrAssign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"exclusiveOrAssign(Expression, Expression, Method, LambdaExpression)","u":"exclusiveOrAssign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.LambdaExpression)"},{"p":"org.apache.calcite.jdbc","c":"CalciteResultSet","l":"execute()"},{"p":"org.apache.calcite.rex","c":"RexExecutable","l":"execute()"},{"p":"org.apache.calcite.sql.ddl","c":"SqlDropObject","l":"execute(CalcitePrepare.Context)","u":"execute(org.apache.calcite.jdbc.CalcitePrepare.Context)"},{"p":"org.apache.calcite.interpreter","c":"Scalar","l":"execute(Context)","u":"execute(org.apache.calcite.interpreter.Context)"},{"p":"org.apache.calcite.interpreter","c":"Scalar","l":"execute(Context, Object[])","u":"execute(org.apache.calcite.interpreter.Context,java.lang.Object[])"},{"p":"org.apache.calcite.linq4j","c":"QueryProvider","l":"execute(Expression, Class<T>)","u":"execute(org.apache.calcite.linq4j.tree.Expression,java.lang.Class)"},{"p":"org.apache.calcite.linq4j","c":"QueryProviderImpl","l":"execute(Expression, Class<T>)","u":"execute(org.apache.calcite.linq4j.tree.Expression,java.lang.Class)"},{"p":"org.apache.calcite.linq4j","c":"QueryProvider","l":"execute(Expression, Type)","u":"execute(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)"},{"p":"org.apache.calcite.linq4j","c":"QueryProviderImpl","l":"execute(Expression, Type)","u":"execute(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaImpl","l":"execute(Meta.StatementHandle, List<TypedValue>, int)","u":"execute(org.apache.calcite.avatica.Meta.StatementHandle,java.util.List,int)"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaImpl","l":"execute(Meta.StatementHandle, List<TypedValue>, long)","u":"execute(org.apache.calcite.avatica.Meta.StatementHandle,java.util.List,long)"},{"p":"org.apache.calcite.util","c":"Puffin.Program","l":"execute(Source, OutputStream)","u":"execute(org.apache.calcite.util.Source,java.io.OutputStream)"},{"p":"org.apache.calcite.server","c":"ServerDdlExecutor","l":"execute(SqlCreateForeignSchema, CalcitePrepare.Context)","u":"execute(org.apache.calcite.sql.ddl.SqlCreateForeignSchema,org.apache.calcite.jdbc.CalcitePrepare.Context)"},{"p":"org.apache.calcite.server","c":"ServerDdlExecutor","l":"execute(SqlCreateFunction, CalcitePrepare.Context)","u":"execute(org.apache.calcite.sql.ddl.SqlCreateFunction,org.apache.calcite.jdbc.CalcitePrepare.Context)"},{"p":"org.apache.calcite.server","c":"ServerDdlExecutor","l":"execute(SqlCreateMaterializedView, CalcitePrepare.Context)","u":"execute(org.apache.calcite.sql.ddl.SqlCreateMaterializedView,org.apache.calcite.jdbc.CalcitePrepare.Context)"},{"p":"org.apache.calcite.server","c":"ServerDdlExecutor","l":"execute(SqlCreateSchema, CalcitePrepare.Context)","u":"execute(org.apache.calcite.sql.ddl.SqlCreateSchema,org.apache.calcite.jdbc.CalcitePrepare.Context)"},{"p":"org.apache.calcite.server","c":"ServerDdlExecutor","l":"execute(SqlCreateTable, CalcitePrepare.Context)","u":"execute(org.apache.calcite.sql.ddl.SqlCreateTable,org.apache.calcite.jdbc.CalcitePrepare.Context)"},{"p":"org.apache.calcite.test","c":"MockDdlExecutor","l":"execute(SqlCreateTable, CalcitePrepare.Context)","u":"execute(org.apache.calcite.sql.ddl.SqlCreateTable,org.apache.calcite.jdbc.CalcitePrepare.Context)"},{"p":"org.apache.calcite.server","c":"ServerDdlExecutor","l":"execute(SqlCreateTableLike, CalcitePrepare.Context)","u":"execute(org.apache.calcite.sql.ddl.SqlCreateTableLike,org.apache.calcite.jdbc.CalcitePrepare.Context)"},{"p":"org.apache.calcite.server","c":"ServerDdlExecutor","l":"execute(SqlCreateType, CalcitePrepare.Context)","u":"execute(org.apache.calcite.sql.ddl.SqlCreateType,org.apache.calcite.jdbc.CalcitePrepare.Context)"},{"p":"org.apache.calcite.server","c":"ServerDdlExecutor","l":"execute(SqlCreateView, CalcitePrepare.Context)","u":"execute(org.apache.calcite.sql.ddl.SqlCreateView,org.apache.calcite.jdbc.CalcitePrepare.Context)"},{"p":"org.apache.calcite.test","c":"MockDdlExecutor","l":"execute(SqlCreateView, CalcitePrepare.Context)","u":"execute(org.apache.calcite.sql.ddl.SqlCreateView,org.apache.calcite.jdbc.CalcitePrepare.Context)"},{"p":"org.apache.calcite.server","c":"ServerDdlExecutor","l":"execute(SqlDropObject, CalcitePrepare.Context)","u":"execute(org.apache.calcite.sql.ddl.SqlDropObject,org.apache.calcite.jdbc.CalcitePrepare.Context)"},{"p":"org.apache.calcite.server","c":"ServerDdlExecutor","l":"execute(SqlDropSchema, CalcitePrepare.Context)","u":"execute(org.apache.calcite.sql.ddl.SqlDropSchema,org.apache.calcite.jdbc.CalcitePrepare.Context)"},{"p":"org.apache.calcite.server","c":"DdlExecutorImpl","l":"execute(SqlNode, CalcitePrepare.Context)","u":"execute(org.apache.calcite.sql.SqlNode,org.apache.calcite.jdbc.CalcitePrepare.Context)"},{"p":"org.apache.calcite.server","c":"ServerDdlExecutor","l":"execute(SqlTruncateTable, CalcitePrepare.Context)","u":"execute(org.apache.calcite.sql.ddl.SqlTruncateTable,org.apache.calcite.jdbc.CalcitePrepare.Context)"},{"p":"org.apache.calcite.util","c":"Puffin.Program","l":"execute(Stream<? extends Source>, OutputStream)","u":"execute(java.util.stream.Stream,java.io.OutputStream)"},{"p":"org.apache.calcite.util","c":"Puffin.Program","l":"execute(Stream<? extends Source>, PrintWriter)","u":"execute(java.util.stream.Stream,java.io.PrintWriter)"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaImpl","l":"executeBatch(Meta.StatementHandle, List<List<TypedValue>>)","u":"executeBatch(org.apache.calcite.avatica.Meta.StatementHandle,java.util.List)"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare","l":"executeDdl(CalcitePrepare.Context, SqlNode)","u":"executeDdl(org.apache.calcite.jdbc.CalcitePrepare.Context,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl","l":"executeDdl(CalcitePrepare.Context, SqlNode)","u":"executeDdl(org.apache.calcite.jdbc.CalcitePrepare.Context,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.server","c":"DdlExecutor","l":"executeDdl(CalcitePrepare.Context, SqlNode)","u":"executeDdl(org.apache.calcite.jdbc.CalcitePrepare.Context,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.server","c":"DdlExecutorImpl","l":"executeDdl(CalcitePrepare.Context, SqlNode)","u":"executeDdl(org.apache.calcite.jdbc.CalcitePrepare.Context,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.runtime","c":"HttpUtils","l":"executeMethod(String, String, CharSequence, Map<String, String>, int, int)","u":"executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcQueryProvider","l":"executeQuery(Queryable<T>)","u":"executeQuery(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryProvider","l":"executeQuery(Queryable<T>)","u":"executeQuery(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"executor"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"EXECUTOR"},{"p":"org.apache.calcite.tools","c":"Frameworks.ConfigBuilder","l":"executor(RexExecutor)","u":"executor(org.apache.calcite.rex.RexExecutor)"},{"p":"org.apache.calcite.sql.validate","c":"SelectScope","l":"existingWindowName(String)","u":"existingWindowName(java.lang.String)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.SubQueryType","l":"EXISTS"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"EXISTS"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"EXISTS"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"EXISTS"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"EXISTS"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"EXISTS"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"EXISTS_NODE"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"EXISTS_NODE"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"exists(Function<RelBuilder, RelNode>)","u":"exists(java.util.function.Function)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"exists(List, Function1<Object, Boolean>)","u":"exists(java.util.List,org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"exists(List, Predicate1)","u":"exists(java.util.List,org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.linq4j.function","c":"Functions","l":"exists(List<? extends E>, Predicate1<E>)","u":"exists(java.util.List,org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"exists(List<? extends E>, Predicate1<E>)","u":"exists(java.util.List,org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.rex","c":"RexSubQuery","l":"exists(RelNode)","u":"exists(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.runtime","c":"XmlFunctions","l":"existsNode(String, String)","u":"existsNode(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"XmlFunctions","l":"existsNode(String, String, String)","u":"existsNode(java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.adapter.enumerable","c":"NestedBlockBuilder","l":"exitBlock()"},{"p":"org.apache.calcite.adapter.enumerable","c":"NestedBlockBuilderImpl","l":"exitBlock()"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"EXP"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"EXP"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"exp(BigDecimal)","u":"exp(java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"exp(double)"},{"p":"org.apache.calcite.rel.externalize","c":"RelWriterImpl","l":"expand"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture.VmName","l":"EXPAND"},{"p":"org.apache.calcite.sql.test","c":"SqlTester.VmName","l":"EXPAND"},{"p":"org.apache.calcite.rel.externalize","c":"RelWriterImpl","l":"expand()"},{"p":"org.apache.calcite.rel","c":"RelWriter","l":"expand()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMeasure","l":"expand(Aggregate, RelMetadataQuery, int, BuiltInMetadata.Measure.Context)","u":"expand(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,int,org.apache.calcite.rel.metadata.BuiltInMetadata.Measure.Context)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMeasure","l":"expand(Filter, RelMetadataQuery, int, BuiltInMetadata.Measure.Context)","u":"expand(org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.metadata.RelMetadataQuery,int,org.apache.calcite.rel.metadata.BuiltInMetadata.Measure.Context)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Measure","l":"expand(int, BuiltInMetadata.Measure.Context)","u":"expand(int,org.apache.calcite.rel.metadata.BuiltInMetadata.Measure.Context)"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibrary","l":"expand(Iterable<? extends SqlLibrary>)","u":"expand(java.lang.Iterable)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMeasure","l":"expand(Project, RelMetadataQuery, int, BuiltInMetadata.Measure.Context)","u":"expand(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,int,org.apache.calcite.rel.metadata.BuiltInMetadata.Measure.Context)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"expand(RelNode, int, BuiltInMetadata.Measure.Context)","u":"expand(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.metadata.BuiltInMetadata.Measure.Context)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Measure.Handler","l":"expand(RelNode, RelMetadataQuery, int, BuiltInMetadata.Measure.Context)","u":"expand(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery,int,org.apache.calcite.rel.metadata.BuiltInMetadata.Measure.Context)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMeasure","l":"expand(RelNode, RelMetadataQuery, int, BuiltInMetadata.Measure.Context)","u":"expand(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery,int,org.apache.calcite.rel.metadata.BuiltInMetadata.Measure.Context)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMeasure","l":"expand(RelSubset, RelMetadataQuery, int, BuiltInMetadata.Measure.Context)","u":"expand(org.apache.calcite.plan.volcano.RelSubset,org.apache.calcite.rel.metadata.RelMetadataQuery,int,org.apache.calcite.rel.metadata.BuiltInMetadata.Measure.Context)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceDecimalsRule.RexExpander","l":"expand(RexCall)","u":"expand(org.apache.calcite.rex.RexCall)"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisorValidator","l":"expand(SqlNode, SqlValidatorScope)","u":"expand(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"expand(SqlNode, SqlValidatorScope)","u":"expand(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"expand(SqlNode, SqlValidatorScope)","u":"expand(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.test","c":"DiffRepository","l":"expand(String, String)","u":"expand(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.plan.volcano","c":"AbstractConverter.ExpandConversionRule","l":"ExpandConversionRule(AbstractConverter.ExpandConversionRule.Config)","u":"%3Cinit%3E(org.apache.calcite.plan.volcano.AbstractConverter.ExpandConversionRule.Config)"},{"p":"org.apache.calcite.plan.volcano","c":"AbstractConverter.ExpandConversionRule","l":"ExpandConversionRule(RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rex","c":"RexProgram","l":"expandList(List<? extends RexNode>)","u":"expandList(java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexProgram","l":"expandLocalRef(RexLocalRef)","u":"expandLocalRef(org.apache.calcite.rex.RexLocalRef)"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisorValidator","l":"expandOrderExpr(SqlSelect, SqlNode)","u":"expandOrderExpr(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"expandOrderExpr(SqlSelect, SqlNode)","u":"expandOrderExpr(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"expandOrderExpr(SqlSelect, SqlNode)","u":"expandOrderExpr(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"expandSearch(RexBuilder, RexProgram, RexNode)","u":"expandSearch(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"expandSearch(RexBuilder, RexProgram, RexNode, int)","u":"expandSearch(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode,int)"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisorValidator","l":"expandSelectExpr(SqlNode, SelectScope, SqlSelect)","u":"expandSelectExpr(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlSelect)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"expandSelectExpr(SqlNode, SelectScope, SqlSelect)","u":"expandSelectExpr(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlSelect)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"expandStar(SqlNodeList, SqlSelect, boolean)","u":"expandStar(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,boolean)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"expandStar(SqlNodeList, SqlSelect, boolean)","u":"expandStar(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,boolean)"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibrary","l":"expandUp(Iterable<? extends SqlLibrary>)","u":"expandUp(java.lang.Iterable)"},{"p":"org.apache.calcite.plan","c":"RelOptTable.ViewExpander","l":"expandView(RelDataType, String, List<String>, List<String>)","u":"expandView(org.apache.calcite.rel.type.RelDataType,java.lang.String,java.util.List,java.util.List)"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl.CalcitePreparingStmt","l":"expandView(RelDataType, String, List<String>, List<String>)","u":"expandView(org.apache.calcite.rel.type.RelDataType,java.lang.String,java.util.List,java.util.List)"},{"p":"org.apache.calcite.prepare","c":"PlannerImpl","l":"expandView(RelDataType, String, List<String>, List<String>)","u":"expandView(org.apache.calcite.rel.type.RelDataType,java.lang.String,java.util.List,java.util.List)"},{"p":"org.apache.calcite.prepare","c":"PlannerImpl.ViewExpanderImpl","l":"expandView(RelDataType, String, List<String>, List<String>)","u":"expandView(org.apache.calcite.rel.type.RelDataType,java.lang.String,java.util.List,java.util.List)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"expectedBoolean()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"expectedCharacter()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"expectedQueryOrJoinExpression()"},{"p":"org.apache.calcite.test","c":"Matchers","l":"expectThrowable(Throwable)","u":"expectThrowable(java.lang.Throwable)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"EXPLAIN"},{"p":"org.apache.calcite.rel.externalize","c":"RelDotWriter","l":"explain_(RelNode, List<Pair<String, Object>>)","u":"explain_(org.apache.calcite.rel.RelNode,java.util.List)"},{"p":"org.apache.calcite.rel.externalize","c":"RelJsonWriter","l":"explain_(RelNode, List<Pair<String, Object>>)","u":"explain_(org.apache.calcite.rel.RelNode,java.util.List)"},{"p":"org.apache.calcite.rel.externalize","c":"RelWriterImpl","l":"explain_(RelNode, List<Pair<String, Object>>)","u":"explain_(org.apache.calcite.rel.RelNode,java.util.List)"},{"p":"org.apache.calcite.rel.externalize","c":"RelXmlWriter","l":"explain_(RelNode, List<Pair<String, Object>>)","u":"explain_(org.apache.calcite.rel.RelNode,java.util.List)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"EXPLAIN_VISIBILITY"},{"p":"org.apache.calcite.rel","c":"RelNode","l":"explain()"},{"p":"org.apache.calcite.rel.externalize","c":"RelJsonWriter","l":"explain(RelNode, List<Pair<String, Object>>)","u":"explain(org.apache.calcite.rel.RelNode,java.util.List)"},{"p":"org.apache.calcite.rel.externalize","c":"RelWriterImpl","l":"explain(RelNode, List<Pair<String, Object>>)","u":"explain(org.apache.calcite.rel.RelNode,java.util.List)"},{"p":"org.apache.calcite.rel","c":"RelWriter","l":"explain(RelNode, List<Pair<String, Object>>)","u":"explain(org.apache.calcite.rel.RelNode,java.util.List)"},{"p":"org.apache.calcite.plan.hep","c":"HepRelVertex","l":"explain(RelWriter)","u":"explain(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.plan.volcano","c":"RelSubset","l":"explain(RelWriter)","u":"explain(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"explain(RelWriter)","u":"explain(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.rel","c":"RelNode","l":"explain(RelWriter)","u":"explain(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor","l":"explainCalc(MutableCalc)","u":"explainCalc(org.apache.calcite.rel.mutable.MutableCalc)"},{"p":"org.apache.calcite.rex","c":"RexProgram","l":"explainCalc(RelWriter)","u":"explainCalc(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertQuery","l":"explainContains(String)","u":"explainContains(java.lang.String)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertQuery","l":"explainHookContains(SqlExplainLevel, String)","u":"explainHookContains(org.apache.calcite.sql.SqlExplainLevel,java.lang.String)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertQuery","l":"explainHookContains(String)","u":"explainHookContains(java.lang.String)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertQuery","l":"explainHookMatches(Matcher<String>)","u":"explainHookMatches(org.hamcrest.Matcher)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertQuery","l":"explainHookMatches(SqlExplainLevel, Matcher<String>)","u":"explainHookMatches(org.apache.calcite.sql.SqlExplainLevel,org.hamcrest.Matcher)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertQuery","l":"explainHookMatches(String)","u":"explainHookMatches(java.lang.String)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertQuery","l":"explainMatches(String, Consumer<ResultSet>)","u":"explainMatches(java.lang.String,java.util.function.Consumer)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraLimit","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.adapter.csv","c":"CsvTableScan","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableBatchNestedLoopJoin","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableLimit","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.adapter.file","c":"CsvTableScan","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbFilter","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbTableScan","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcCalc","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.adapter.spark","c":"SparkRules.SparkCalc","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.adapter.splunk","c":"SplunkTableScan","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableTableScan","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.plan.volcano","c":"AbstractConverter","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.rel","c":"BiRel","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.rel.core","c":"Aggregate","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.rel.core","c":"AsofJoin","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.rel.core","c":"Calc","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.rel.core","c":"Collect","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.rel.core","c":"Correlate","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.rel.core","c":"Exchange","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.rel.core","c":"Filter","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.rel.core","c":"Join","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.rel.core","c":"Match","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.rel.core","c":"Project","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.rel.core","c":"RepeatUnion","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.rel.core","c":"Sample","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.rel.core","c":"SetOp","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.rel.core","c":"Snapshot","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.rel.core","c":"Sort","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.rel.core","c":"SortExchange","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.rel.core","c":"Spool","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.rel.core","c":"TableFunctionScan","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.rel.core","c":"TableModify","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.rel.core","c":"TableScan","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.rel.core","c":"TableSpool","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.rel.core","c":"Uncollect","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.rel.core","c":"Values","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.rel.core","c":"Window","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalFilter","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalJoin","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.rel.rules","c":"HyperGraph","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.rel.rules","c":"MultiJoin","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.rel","c":"SingleRel","l":"explainTerms(RelWriter)","u":"explainTerms(org.apache.calcite.rel.RelWriter)"},{"p":"org.apache.calcite.sql","c":"SqlCollation.Coercibility","l":"EXPLICIT"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"EXPLICIT_TABLE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"EXPLICIT_TABLE"},{"p":"org.apache.calcite.sql.type","c":"InferTypes","l":"explicit(List<RelDataType>)","u":"explicit(java.util.List)"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"explicit(RelDataType)","u":"explicit(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"explicit(RelProtoDataType)","u":"explicit(org.apache.calcite.rel.type.RelProtoDataType)"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"explicit(SqlTypeName)","u":"explicit(org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"explicit(SqlTypeName, int)","u":"explicit(org.apache.calcite.sql.type.SqlTypeName,int)"},{"p":"org.apache.calcite.sql.type","c":"ExplicitOperandTypeChecker","l":"ExplicitOperandTypeChecker(RelDataType)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql","c":"ExplicitOperatorBinding","l":"ExplicitOperatorBinding(RelDataTypeFactory, SqlOperator, List<RelDataType>)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.sql.SqlOperator,java.util.List)"},{"p":"org.apache.calcite.sql","c":"ExplicitOperatorBinding","l":"ExplicitOperatorBinding(SqlOperatorBinding, List<RelDataType>)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlOperatorBinding,java.util.List)"},{"p":"org.apache.calcite.sql.type","c":"ExplicitReturnTypeInference","l":"ExplicitReturnTypeInference(RelProtoDataType)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelProtoDataType)"},{"p":"org.apache.calcite.sql.fun","c":"SqlSpatialTypeFunctions.ExplodeTable","l":"ExplodeTable(Geometry)","u":"%3Cinit%3E(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.sql","c":"SqlExplainLevel","l":"EXPPLAN_ATTRIBUTES"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"EXPR_SUGGESTER"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest","l":"expr(String)","u":"expr(java.lang.String)"},{"p":"org.apache.calcite.test","c":"IntervalTest.Fixture","l":"expr(String)","u":"expr(java.lang.String)"},{"p":"org.apache.calcite.test","c":"SqlToRelTestBase","l":"expr(String)","u":"expr(java.lang.String)"},{"p":"org.apache.calcite.test","c":"SqlValidatorTestCase","l":"expr(String)","u":"expr(java.lang.String)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcConvention","l":"expression"},{"p":"org.apache.calcite.linq4j","c":"BaseQueryable","l":"expression"},{"p":"org.apache.calcite.linq4j.tree","c":"GotoStatement","l":"expression"},{"p":"org.apache.calcite.linq4j.tree","c":"MemberExpression","l":"expression"},{"p":"org.apache.calcite.linq4j.tree","c":"ThrowStatement","l":"expression"},{"p":"org.apache.calcite.linq4j.tree","c":"TypeBinaryExpression","l":"expression"},{"p":"org.apache.calcite.linq4j.tree","c":"UnaryExpression","l":"expression"},{"p":"org.apache.calcite.sql.ddl","c":"SqlColumnDeclaration","l":"expression"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserFixture","l":"expression"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"expression"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"EXPRESSION"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"EXPRESSION_LINEAGE"},{"p":"org.apache.calcite.runtime","c":"Hook","l":"EXPRESSION_REDUCER"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserFixture","l":"expression()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserFixture","l":"expression(boolean)"},{"p":"org.apache.calcite.test","c":"SqlToRelFixture","l":"expression(boolean)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expression","l":"Expression(ExpressionType, Type)","u":"%3Cinit%3E(org.apache.calcite.linq4j.tree.ExpressionType,java.lang.reflect.Type)"},{"p":"org.apache.calcite.materialize","c":"Lattice.Builder","l":"expression(RexNode, String, List<String>)","u":"expression(org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)"},{"p":"org.apache.calcite.schema","c":"Schemas","l":"expression(SchemaPlus)","u":"expression(org.apache.calcite.schema.SchemaPlus)"},{"p":"org.apache.calcite.linq4j.tree","c":"BinaryExpression","l":"expression0"},{"p":"org.apache.calcite.linq4j.tree","c":"TernaryExpression","l":"expression0"},{"p":"org.apache.calcite.linq4j.tree","c":"BinaryExpression","l":"expression1"},{"p":"org.apache.calcite.linq4j.tree","c":"TernaryExpression","l":"expression1"},{"p":"org.apache.calcite.linq4j.tree","c":"TernaryExpression","l":"expression2"},{"p":"org.apache.calcite.linq4j.tree","c":"ConditionalStatement","l":"expressionList"},{"p":"org.apache.calcite.linq4j.tree","c":"MethodCallExpression","l":"expressions"},{"p":"org.apache.calcite.linq4j.tree","c":"NewArrayExpression","l":"expressions"},{"p":"org.apache.calcite.rex","c":"RexUtil.ExprSimplifier","l":"ExprSimplifier(RexSimplify)","u":"%3Cinit%3E(org.apache.calcite.rex.RexSimplify)"},{"p":"org.apache.calcite.rex","c":"RexUtil.ExprSimplifier","l":"ExprSimplifier(RexSimplify, boolean)","u":"%3Cinit%3E(org.apache.calcite.rex.RexSimplify,boolean)"},{"p":"org.apache.calcite.rex","c":"RexUtil.ExprSimplifier","l":"ExprSimplifier(RexSimplify, RexUnknownAs, boolean)","u":"%3Cinit%3E(org.apache.calcite.rex.RexSimplify,org.apache.calcite.rex.RexUnknownAs,boolean)"},{"p":"org.apache.calcite.rel.core","c":"Project","l":"exps"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"EXTEND"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"EXTEND"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable","l":"extend()"},{"p":"org.apache.calcite.plan","c":"RelOptAbstractTable","l":"extend(List<RelDataTypeField>)","u":"extend(java.util.List)"},{"p":"org.apache.calcite.plan","c":"RelOptTable","l":"extend(List<RelDataTypeField>)","u":"extend(java.util.List)"},{"p":"org.apache.calcite.prepare","c":"Prepare.AbstractPreparingTable","l":"extend(List<RelDataTypeField>)","u":"extend(java.util.List)"},{"p":"org.apache.calcite.schema","c":"ExtensibleTable","l":"extend(List<RelDataTypeField>)","u":"extend(java.util.List)"},{"p":"org.apache.calcite.schema.impl","c":"ModifiableViewTable","l":"extend(List<RelDataTypeField>, RelDataTypeFactory)","u":"extend(java.util.List,org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.prepare","c":"Prepare.AbstractPreparingTable","l":"extend(Table)","u":"extend(org.apache.calcite.schema.Table)"},{"p":"org.apache.calcite.prepare","c":"RelOptTableImpl","l":"extend(Table)","u":"extend(org.apache.calcite.schema.Table)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockModifiableViewRelOptTable","l":"extend(Table)","u":"extend(org.apache.calcite.schema.Table)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"extend(Table)","u":"extend(org.apache.calcite.schema.Table)"},{"p":"org.apache.calcite.schema.impl","c":"ModifiableViewTable","l":"extend(Table, RelProtoDataType, ImmutableIntList)","u":"extend(org.apache.calcite.schema.Table,org.apache.calcite.rel.type.RelProtoDataType,org.apache.calcite.util.ImmutableIntList)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockModifiableViewRelOptTable.MockModifiableViewTable","l":"extend(Table, RelProtoDataType, ImmutableIntList)","u":"extend(org.apache.calcite.schema.Table,org.apache.calcite.rel.type.RelProtoDataType,org.apache.calcite.util.ImmutableIntList)"},{"p":"org.apache.calcite.linq4j.tree","c":"ClassDeclaration","l":"extended"},{"p":"org.apache.calcite.rel.rules","c":"AggregateJoinTransposeRule.Config","l":"EXTENDED"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"extendedExpandGroupBy(SqlNode, SqlValidatorScope, SqlSelect)","u":"extendedExpandGroupBy(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlSelect)"},{"p":"org.apache.calcite.sql.validate","c":"IdentifierNamespace","l":"extendList"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"extendNotAllowed()"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery","l":"extendQuery(DruidQuery, List<Interval>)","u":"extendQuery(org.apache.calcite.adapter.druid.DruidQuery,java.util.List)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery","l":"extendQuery(DruidQuery, RelNode)","u":"extendQuery(org.apache.calcite.adapter.druid.DruidQuery,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"Extension"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeImpl","l":"extra(RelDataType)","u":"extra(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateReduceFunctionsRule.Config","l":"extraCondition()"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"EXTRACT"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"EXTRACT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"EXTRACT_VALUE"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"EXTRACT_VALUE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"EXTRACT_XML"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"EXTRACT_XML"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery","l":"extractColumnName(RexNode, RelDataType, DruidQuery)","u":"extractColumnName(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.druid.DruidQuery)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidDateTimeUtils","l":"extractGranularity(RexNode, String)","u":"extractGranularity(org.apache.calcite.rex.RexNode,java.lang.String)"},{"p":"org.apache.calcite.adapter.druid","c":"ExtractionDimensionSpec","l":"ExtractionDimensionSpec(String, ExtractionFunction, String)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.adapter.druid.ExtractionFunction,java.lang.String)"},{"p":"org.apache.calcite.adapter.druid","c":"ExtractionDimensionSpec","l":"ExtractionDimensionSpec(String, ExtractionFunction, String, DruidType)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.adapter.druid.ExtractionFunction,java.lang.String,org.apache.calcite.adapter.druid.DruidType)"},{"p":"org.apache.calcite.rel.rules","c":"HyperGraph","l":"extractJoinCond(RelNode, RelNode, List<HyperEdge>)","u":"extractJoinCond(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List)"},{"p":"org.apache.calcite.rel.rules","c":"HyperGraph","l":"extractJoinType(List<HyperEdge>)","u":"extractJoinType(java.util.List)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"extractLastNFields(RelDataTypeFactory, RelDataType, int)","u":"extractLastNFields(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,int)"},{"p":"org.apache.calcite.adapter.druid","c":"ExtractOperatorConversion","l":"ExtractOperatorConversion()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule","l":"extractPossibleMapping(List<Set<RexTableInputRef>>, List<Set<RexTableInputRef>>)","u":"extractPossibleMapping(java.util.List,java.util.List)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidDateTimeUtils","l":"extractRanges(RexNode, boolean)","u":"extractRanges(org.apache.calcite.rex.RexNode,boolean)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule","l":"extractReferences(RexBuilder, RelNode)","u":"extractReferences(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.runtime","c":"XmlFunctions","l":"extractValue(String, String)","u":"extractValue(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"XmlFunctions","l":"extractXml(String, String)","u":"extractXml(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"XmlFunctions","l":"extractXml(String, String, String)","u":"extractXml(java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"AggregatingSelectScope.Resolved","l":"extraExprList"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"extraSelectItems(SqlToRelConverter.Blackboard, SqlSelect, List<RexNode>, List<String>, Collection<String>, List<SqlMonotonicity>)","u":"extraSelectItems(org.apache.calcite.sql2rel.SqlToRelConverter.Blackboard,org.apache.calcite.sql.SqlSelect,java.util.List,java.util.List,java.util.Collection,java.util.List)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"F_SUGGESTER"},{"p":"org.apache.calcite.util","c":"Glossary","l":"FACADE_PATTERN"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"FACTORIAL"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"FACTORIAL"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"factorial(int)"},{"p":"org.apache.calcite.model","c":"JsonCustomSchema","l":"factory"},{"p":"org.apache.calcite.model","c":"JsonCustomTable","l":"factory"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserFixture","l":"factory"},{"p":"org.apache.calcite.sql.validate.implicit","c":"AbstractTypeCoercion","l":"factory"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture","l":"factory"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"factory"},{"p":"org.apache.calcite.plan","c":"RelOptCostImpl","l":"FACTORY"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserFixture","l":"FACTORY"},{"p":"org.apache.calcite.util","c":"Glossary","l":"FACTORY_METHOD_PATTERN"},{"p":"org.apache.calcite.util.graph","c":"DefaultEdge","l":"factory()"},{"p":"org.apache.calcite.adapter.clone","c":"CloneSchema.Factory","l":"Factory()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.java","c":"ReflectiveSchema.Factory","l":"Factory()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.linq4j.util","c":"Compatible.Factory","l":"Factory()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util","c":"Compatible.Factory","l":"Factory()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.hint","c":"HintStrategyTable.HintErrorLogger","l":"fail(String, Object...)","u":"fail(java.lang.String,java.lang.Object...)"},{"p":"org.apache.calcite.util","c":"Litmus","l":"fail(String, Object...)","u":"fail(java.lang.String,java.lang.Object...)"},{"p":"org.apache.calcite.rex","c":"RexChecker","l":"failCount"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"failedToAccessField(String, int, String)","u":"failedToAccessField(java.lang.String,int,java.lang.String)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserFixture","l":"fails(String)","u":"fails(java.lang.String)"},{"p":"org.apache.calcite.test","c":"IntervalTest.Fixture2","l":"fails(String)","u":"fails(java.lang.String)"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"fails(String)","u":"fails(java.lang.String)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertQuery","l":"failsAtValidation()"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertQuery","l":"failsAtValidation(String)","u":"failsAtValidation(java.lang.String)"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"failsIf(boolean, String)","u":"failsIf(boolean,java.lang.String)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.SchemaSpec","l":"FAKE_FOODMART"},{"p":"org.apache.calcite.sql","c":"SqlDialect.FakeUtil","l":"FakeUtil()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexImpTable.NullAs","l":"FALSE"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.Logic","l":"FALSE"},{"p":"org.apache.calcite.rex","c":"RexUnknownAs","l":"FALSE"},{"p":"org.apache.calcite.sql","c":"SqlJsonExistsErrorBehavior","l":"FALSE"},{"p":"org.apache.calcite.linq4j.function","c":"Predicate1","l":"FALSE"},{"p":"org.apache.calcite.linq4j.function","c":"Predicate2","l":"FALSE"},{"p":"org.apache.calcite.rel.rules","c":"PushProjector.ExprCondition","l":"FALSE"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexImpTable","l":"FALSE_EXPR"},{"p":"org.apache.calcite.linq4j.tree","c":"OptimizeShuttle","l":"FALSE_EXPR"},{"p":"org.apache.calcite.rex","c":"RexUnknownAs","l":"falseIf(boolean)"},{"p":"org.apache.calcite.linq4j.function","c":"Functions","l":"falsePredicate1()"},{"p":"org.apache.calcite.linq4j.function","c":"Functions","l":"falsePredicate2()"},{"p":"org.apache.calcite.sql.type","c":"FamilyOperandTypeChecker","l":"families"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"families(List<RelDataType>)","u":"families(java.util.List)"},{"p":"org.apache.calcite.sql","c":"SqlSyntax","l":"family"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"family(List<SqlTypeFamily>)","u":"family(java.util.List)"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"family(List<SqlTypeFamily>, Predicate<Integer>)","u":"family(java.util.List,java.util.function.Predicate)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"family(RelDataType)","u":"family(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"family(SqlTypeFamily...)","u":"family(org.apache.calcite.sql.type.SqlTypeFamily...)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule.Config","l":"fastBailOut()"},{"p":"org.apache.calcite.runtime","c":"Feature","l":"Feature(String, Locale, Method, Object...)","u":"%3Cinit%3E(java.lang.String,java.util.Locale,java.lang.reflect.Method,java.lang.Object...)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraLimit","l":"fetch"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableLimit","l":"fetch"},{"p":"org.apache.calcite.rel.core","c":"Sort","l":"fetch"},{"p":"org.apache.calcite.rel.mutable","c":"MutableSort","l":"fetch"},{"p":"org.apache.calcite.sql","c":"SqlOrderBy","l":"fetch"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Clause","l":"FETCH"},{"p":"org.apache.calcite.sql","c":"SqlWriter.FrameTypeEnum","l":"FETCH"},{"p":"org.apache.calcite.sql.fun","c":"SqlInternalOperators","l":"FETCH"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaImpl","l":"fetch(Meta.StatementHandle, long, int)","u":"fetch(org.apache.calcite.avatica.Meta.StatementHandle,long,int)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"fetchOffset(SqlNode, SqlNode)","u":"fetchOffset(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlWriter","l":"fetchOffset(SqlNode, SqlNode)","u":"fetchOffset(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"FF1"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"FF2"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"FF3"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"FF4"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"FF5"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"FF6"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"FF7"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"FF8"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"FF9"},{"p":"org.apache.calcite.util","c":"Smalls","l":"FIBONACCI_INSTANCE_TABLE_METHOD"},{"p":"org.apache.calcite.util","c":"Smalls","l":"FIBONACCI_LIMIT_100_TABLE_METHOD"},{"p":"org.apache.calcite.util","c":"Smalls","l":"FIBONACCI_LIMIT_TABLE_METHOD"},{"p":"org.apache.calcite.util","c":"Smalls","l":"FIBONACCI_TABLE_METHOD"},{"p":"org.apache.calcite.util","c":"Smalls","l":"fibonacciTable()"},{"p":"org.apache.calcite.util","c":"Smalls.FibonacciTableFunction","l":"FibonacciTableFunction(int)","u":"%3Cinit%3E(int)"},{"p":"org.apache.calcite.util","c":"Smalls","l":"fibonacciTableWithLimit(long)"},{"p":"org.apache.calcite.util","c":"Smalls","l":"fibonacciTableWithLimit100()"},{"p":"org.apache.calcite.linq4j.tree","c":"MemberExpression","l":"field"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"field"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"FIELD_ACCESS"},{"p":"org.apache.calcite.piglet","c":"Ast.Op","l":"FIELD_SCHEMA"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexToLixTranslator.InputGetter","l":"field(BlockBuilder, int, Type)","u":"field(org.apache.calcite.linq4j.tree.BlockBuilder,int,java.lang.reflect.Type)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexToLixTranslator.InputGetterImpl","l":"field(BlockBuilder, int, Type)","u":"field(org.apache.calcite.linq4j.tree.BlockBuilder,int,java.lang.reflect.Type)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"field(Expression, Field)","u":"field(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Field)"},{"p":"org.apache.calcite.adapter.enumerable","c":"JavaRowFormat","l":"field(Expression, int, Type, Type)","u":"field(org.apache.calcite.linq4j.tree.Expression,int,java.lang.reflect.Type,java.lang.reflect.Type)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"field(Expression, PseudoField)","u":"field(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.PseudoField)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"field(Expression, String)","u":"field(org.apache.calcite.linq4j.tree.Expression,java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"field(Expression, Type, String)","u":"field(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type,java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"Types","l":"field(Field)","u":"field(java.lang.reflect.Field)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysType","l":"field(int)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysTypeImpl","l":"field(int)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.AliasContext","l":"field(int)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Context","l":"field(int)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.SimpleContext","l":"field(int)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"field(int)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"field(int, int, int)","u":"field(int,int,int)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"field(int, int, String)","u":"field(int,int,java.lang.String)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"field(int, String, String)","u":"field(int,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.prepare","c":"CalciteCatalogReader","l":"field(RelDataType, String)","u":"field(org.apache.calcite.rel.type.RelDataType,java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"SqlNameMatcher","l":"field(RelDataType, String)","u":"field(org.apache.calcite.rel.type.RelDataType,java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorCatalogReader","l":"field(RelDataType, String)","u":"field(org.apache.calcite.rel.type.RelDataType,java.lang.String)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"field(RexNode, int)","u":"field(org.apache.calcite.rex.RexNode,int)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"field(RexNode, String)","u":"field(org.apache.calcite.rex.RexNode,java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"MatchRecognizeNamespace","l":"field(String)","u":"field(java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingNamespace","l":"field(String)","u":"field(java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorNamespace","l":"field(String)","u":"field(java.lang.String)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"field(String)","u":"field(java.lang.String)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"field(String, String)","u":"field(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.rex","c":"RexUtil.FieldAccessFinder","l":"FieldAccessFinder()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysType","l":"fieldClass(int)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysTypeImpl","l":"fieldClass(int)"},{"p":"org.apache.calcite.schema.impl","c":"StarTable","l":"fieldCounts"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"fieldDecl(int, ParameterExpression)","u":"fieldDecl(int,org.apache.calcite.linq4j.tree.ParameterExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"fieldDecl(int, ParameterExpression, Expression)","u":"fieldDecl(int,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"FieldDeclaration","l":"FieldDeclaration(int, ParameterExpression, Expression)","u":"%3Cinit%3E(int,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorNamespace","l":"fieldExists(String)","u":"fieldExists(java.lang.String)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory.FieldInfoBuilder","l":"FieldInfoBuilder(RelDataTypeFactory)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.rel","c":"RelNode","l":"fieldIsNullable(int)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeImpl","l":"fieldList"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Context","l":"fieldList()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableCollect","l":"fieldName"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysType","l":"fieldNullable(int)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysTypeImpl","l":"fieldNullable(int)"},{"p":"org.apache.calcite.prepare","c":"Prepare","l":"fieldOrigins"},{"p":"org.apache.calcite.prepare","c":"Prepare.PreparedResultImpl","l":"fieldOrigins"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysType","l":"fieldReference(Expression, int)","u":"fieldReference(org.apache.calcite.linq4j.tree.Expression,int)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysTypeImpl","l":"fieldReference(Expression, int)","u":"fieldReference(org.apache.calcite.linq4j.tree.Expression,int)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysType","l":"fieldReference(Expression, int, Type)","u":"fieldReference(org.apache.calcite.linq4j.tree.Expression,int,java.lang.reflect.Type)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysTypeImpl","l":"fieldReference(Expression, int, Type)","u":"fieldReference(org.apache.calcite.linq4j.tree.Expression,int,java.lang.reflect.Type)"},{"p":"org.apache.calcite.rel","c":"RelRoot","l":"fields"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchSearchResult.SearchHit","l":"fields()"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema.EveryType","l":"fields()"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"fields()"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"fields(ImmutableBitSet)","u":"fields(org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"fields(int, int)","u":"fields(int,int)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"fields(Iterable<String>)","u":"fields(java.lang.Iterable)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"fields(List<? extends Number>)","u":"fields(java.util.List)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"fields(Mappings.TargetMapping)","u":"fields(org.apache.calcite.util.mapping.Mappings.TargetMapping)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"fields(RelCollation)","u":"fields(org.apache.calcite.rel.RelCollation)"},{"p":"org.apache.calcite.linq4j.tree","c":"DeterministicCodeOptimizer","l":"fieldsByName"},{"p":"org.apache.calcite.piglet","c":"Ast.FieldSchema","l":"FieldSchema(SqlParserPos, Ast.Identifier, Ast.Type)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.piglet.Ast.Identifier,org.apache.calcite.piglet.Ast.Type)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlDdlNodes.FileType","l":"FILE"},{"p":"org.apache.calcite.util","c":"Util","l":"FILE_SEPARATOR"},{"p":"org.apache.calcite.util","c":"Util","l":"FILE_TIMESTAMP_FORMAT"},{"p":"org.apache.calcite.util","c":"Source","l":"file()"},{"p":"org.apache.calcite.util","c":"Sources","l":"file(File, String)","u":"file(java.io.File,java.lang.String)"},{"p":"org.apache.calcite.test","c":"DiffTestCase","l":"fileContents(File)","u":"fileContents(java.io.File)"},{"p":"org.apache.calcite.util","c":"Puffin.Line","l":"filename()"},{"p":"org.apache.calcite.util","c":"Source","l":"fileOpt()"},{"p":"org.apache.calcite.adapter.file","c":"FileReader","l":"FileReader(Source)","u":"%3Cinit%3E(org.apache.calcite.util.Source)"},{"p":"org.apache.calcite.adapter.file","c":"FileReader","l":"FileReader(Source, String)","u":"%3Cinit%3E(org.apache.calcite.util.Source,java.lang.String)"},{"p":"org.apache.calcite.adapter.file","c":"FileReader","l":"FileReader(Source, String, Integer)","u":"%3Cinit%3E(org.apache.calcite.util.Source,java.lang.String,java.lang.Integer)"},{"p":"org.apache.calcite.util","c":"ControlFlowException","l":"fillInStackTrace()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil.FlatAggregate","l":"filter"},{"p":"org.apache.calcite.piglet","c":"Ast.Op","l":"FILTER"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"FILTER"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraRules","l":"FILTER"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules","l":"FILTER"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbRules","l":"FILTER"},{"p":"org.apache.calcite.adapter.splunk","c":"SplunkPushDownRule","l":"FILTER"},{"p":"org.apache.calcite.rel.hint","c":"HintPredicates","l":"FILTER"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRules","l":"FILTER"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules.RemoveEmptySingleRule.RemoveEmptySingleRuleConfig","l":"FILTER"},{"p":"org.apache.calcite.rel.rules","c":"SubQueryRemoveRule.Config","l":"FILTER"},{"p":"org.apache.calcite.rel.rules","c":"ValuesReduceRule.Config","l":"FILTER"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"FILTER"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules","l":"FILTER_AGGREGATE_TRANSPOSE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"FILTER_AGGREGATE_TRANSPOSE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"FILTER_CALC_MERGE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"FILTER_CORRELATE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"FILTER_EXPAND_IS_NOT_DISTINCT_FROM"},{"p":"org.apache.calcite.rel.rules","c":"DateRangeRules","l":"FILTER_INSTANCE"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules","l":"FILTER_INSTANCE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"FILTER_INTERPRETER_SCAN"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"FILTER_INTO_JOIN"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"FILTER_INTO_JOIN_DUMB"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"FILTER_MERGE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"FILTER_MULTI_JOIN_MERGE"},{"p":"org.apache.calcite.adapter.splunk","c":"SplunkPushDownRule","l":"FILTER_ON_PROJECT"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"FILTER_PREDICATE"},{"p":"org.apache.calcite.rex","c":"RexUtil.SubQueryFinder","l":"FILTER_PREDICATE"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules","l":"FILTER_PROJECT_TRANSPOSE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"FILTER_PROJECT_TRANSPOSE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"FILTER_REDUCE_EXPRESSIONS"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"FILTER_SAMPLE_TRANSPOSE"},{"p":"org.apache.calcite.adapter.arrow","c":"ArrowRules","l":"FILTER_SCAN"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"FILTER_SCAN"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRules","l":"FILTER_SCAN"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"FILTER_SET_OP_TRANSPOSE"},{"p":"org.apache.calcite.rel.rules","c":"MeasureRules","l":"FILTER_SORT"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"FILTER_SUB_QUERY_TO_CORRELATE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"FILTER_TABLE_FUNCTION_TRANSPOSE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"FILTER_TO_CALC"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"FILTER_VALUES_MERGE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"FILTER_WINDOW_TRANSPOSE"},{"p":"org.apache.calcite.util","c":"Util","l":"filter(Collection<?>, Class<E>)","u":"filter(java.util.Collection,java.lang.Class)"},{"p":"org.apache.calcite.test","c":"DiffRepository.Filter","l":"filter(DiffRepository, String, String, String, String)","u":"filter(org.apache.calcite.test.DiffRepository,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.util","c":"Util","l":"filter(Iterable<?>, Class<E>)","u":"filter(java.lang.Iterable,java.lang.Class)"},{"p":"org.apache.calcite.util","c":"Util","l":"filter(Iterable<? extends E>, Predicate<? super E>)","u":"filter(java.lang.Iterable,java.util.function.Predicate)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"filter(Iterable<? extends RexNode>)","u":"filter(java.lang.Iterable)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"filter(Iterable<CorrelationId>, Iterable<? extends RexNode>)","u":"filter(java.lang.Iterable,java.lang.Iterable)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"filter(Iterable<CorrelationId>, RexNode...)","u":"filter(java.lang.Iterable,org.apache.calcite.rex.RexNode...)"},{"p":"org.apache.calcite.util","c":"Util","l":"filter(Iterator<? extends E>, Predicate<? super E>)","u":"filter(java.util.Iterator,java.util.function.Predicate)"},{"p":"org.apache.calcite.util","c":"Util","l":"filter(List<?>, Class<E>)","u":"filter(java.util.List,java.lang.Class)"},{"p":"org.apache.calcite.linq4j.function","c":"Functions","l":"filter(List<E>, Predicate1<E>)","u":"filter(java.util.List,org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.rel.core","c":"Filter","l":"Filter(RelInput)","u":"%3Cinit%3E(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdCollation","l":"filter(RelMetadataQuery, RelNode)","u":"filter(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdDistribution","l":"filter(RelMetadataQuery, RelNode)","u":"filter(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.core","c":"Filter","l":"Filter(RelOptCluster, RelTraitSet, List<RelHint>, RelNode, RexNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.core","c":"Filter","l":"Filter(RelOptCluster, RelTraitSet, RelNode, RexNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.tools","c":"RelBuilder.AggCall","l":"filter(RexNode)","u":"filter(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"filter(RexNode...)","u":"filter(org.apache.calcite.rex.RexNode...)"},{"p":"org.apache.calcite.adapter.csv","c":"CsvTable.Flavor","l":"FILTERABLE"},{"p":"org.apache.calcite.adapter.file","c":"CsvTable.Flavor","l":"FILTERABLE"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"filterableTableInventedFilter(String)","u":"filterableTableInventedFilter(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"filterableTableScanReturnedNull()"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewAggregateRule.Config","l":"filterAggregateTransposeRule()"},{"p":"org.apache.calcite.rel.rules","c":"FilterAggregateTransposeRule","l":"FilterAggregateTransposeRule(Class<? extends Filter>, RelBuilderFactory, Class<? extends Aggregate>)","u":"%3Cinit%3E(java.lang.Class,org.apache.calcite.tools.RelBuilderFactory,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"FilterAggregateTransposeRule","l":"FilterAggregateTransposeRule(Class<? extends Filter>, RelFactories.FilterFactory, Class<? extends Aggregate>)","u":"%3Cinit%3E(java.lang.Class,org.apache.calcite.rel.core.RelFactories.FilterFactory,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"FilterAggregateTransposeRule","l":"FilterAggregateTransposeRule(FilterAggregateTransposeRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.FilterAggregateTransposeRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"FilterAggregateTransposeRule","l":"FilterAggregateTransposeRule(RelOptRuleOperand, RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"filterArg"},{"p":"org.apache.calcite.util","c":"Filterator","l":"Filterator(Iterator<?>, Class<E>)","u":"%3Cinit%3E(java.util.Iterator,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"FilterCalcMergeRule","l":"FilterCalcMergeRule(FilterCalcMergeRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.FilterCalcMergeRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"FilterCalcMergeRule","l":"FilterCalcMergeRule(RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil.FlatAggregate","l":"filterCall"},{"p":"org.apache.calcite.rel.rules","c":"FilterCorrelateRule","l":"FilterCorrelateRule(FilterCorrelateRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.FilterCorrelateRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"FilterCorrelateRule","l":"FilterCorrelateRule(RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"FilterCorrelateRule","l":"FilterCorrelateRule(RelFactories.FilterFactory, RelFactories.ProjectFactory)","u":"%3Cinit%3E(org.apache.calcite.rel.core.RelFactories.FilterFactory,org.apache.calcite.rel.core.RelFactories.ProjectFactory)"},{"p":"org.apache.calcite.rel.rules","c":"DateRangeRules.FilterDateRangeRule","l":"FilterDateRangeRule(DateRangeRules.FilterDateRangeRule.FilterDateRangeRuleConfig)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.DateRangeRules.FilterDateRangeRule.FilterDateRangeRuleConfig)"},{"p":"org.apache.calcite.rel.rules","c":"DateRangeRules.FilterDateRangeRule","l":"FilterDateRangeRule(RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.Struct","l":"filterFactory"},{"p":"org.apache.calcite.sql.validate","c":"FilterRequirement","l":"filterFields"},{"p":"org.apache.calcite.rel.rules","c":"FilterFlattenCorrelatedConditionRule","l":"FilterFlattenCorrelatedConditionRule(FilterFlattenCorrelatedConditionRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.FilterFlattenCorrelatedConditionRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"SpatialRules.FilterHilbertRule","l":"FilterHilbertRule(SpatialRules.FilterHilbertRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.SpatialRules.FilterHilbertRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"FilterJoinRule.FilterIntoJoinRule","l":"FilterIntoJoinRule(boolean, RelBuilderFactory, FilterJoinRule.Predicate)","u":"%3Cinit%3E(boolean,org.apache.calcite.tools.RelBuilderFactory,org.apache.calcite.rel.rules.FilterJoinRule.Predicate)"},{"p":"org.apache.calcite.rel.rules","c":"FilterJoinRule.FilterIntoJoinRule","l":"FilterIntoJoinRule(boolean, RelFactories.FilterFactory, RelFactories.ProjectFactory, FilterJoinRule.Predicate)","u":"%3Cinit%3E(boolean,org.apache.calcite.rel.core.RelFactories.FilterFactory,org.apache.calcite.rel.core.RelFactories.ProjectFactory,org.apache.calcite.rel.rules.FilterJoinRule.Predicate)"},{"p":"org.apache.calcite.rel.rules","c":"FilterJoinRule.FilterIntoJoinRule","l":"FilterIntoJoinRule(FilterJoinRule.FilterIntoJoinRule.FilterIntoJoinRuleConfig)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.FilterJoinRule.FilterIntoJoinRule.FilterIntoJoinRuleConfig)"},{"p":"org.apache.calcite.rel.rules","c":"FilterJoinRule","l":"FilterJoinRule(C)","u":"%3Cinit%3E(C)"},{"p":"org.apache.calcite.rel.rules","c":"FilterMergeRule","l":"FilterMergeRule(FilterMergeRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.FilterMergeRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"FilterMergeRule","l":"FilterMergeRule(RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"FilterMergeRule","l":"FilterMergeRule(RelFactories.FilterFactory)","u":"%3Cinit%3E(org.apache.calcite.rel.core.RelFactories.FilterFactory)"},{"p":"org.apache.calcite.rel.rules","c":"FilterMultiJoinMergeRule","l":"FilterMultiJoinMergeRule(Class<? extends Filter>, RelBuilderFactory)","u":"%3Cinit%3E(java.lang.Class,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"FilterMultiJoinMergeRule","l":"FilterMultiJoinMergeRule(FilterMultiJoinMergeRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.FilterMultiJoinMergeRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"FilterMultiJoinMergeRule","l":"FilterMultiJoinMergeRule(RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"filterMustBeBoolean()"},{"p":"org.apache.calcite.interpreter","c":"FilterNode","l":"FilterNode(Compiler, Filter)","u":"%3Cinit%3E(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.Filter)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"filterNonAggregate()"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewAggregateRule.Config","l":"filterProjectTransposeRule()"},{"p":"org.apache.calcite.rel.rules","c":"FilterProjectTransposeRule","l":"FilterProjectTransposeRule(Class<? extends Filter>, Class<? extends Project>, boolean, boolean, RelBuilderFactory)","u":"%3Cinit%3E(java.lang.Class,java.lang.Class,boolean,boolean,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"FilterProjectTransposeRule","l":"FilterProjectTransposeRule(Class<? extends Filter>, RelFactories.FilterFactory, Class<? extends Project>, RelFactories.ProjectFactory)","u":"%3Cinit%3E(java.lang.Class,org.apache.calcite.rel.core.RelFactories.FilterFactory,java.lang.Class,org.apache.calcite.rel.core.RelFactories.ProjectFactory)"},{"p":"org.apache.calcite.rel.rules","c":"FilterProjectTransposeRule","l":"FilterProjectTransposeRule(Class<F>, Predicate<? super F>, Class<P>, Predicate<? super P>, boolean, boolean, RelBuilderFactory)","u":"%3Cinit%3E(java.lang.Class,java.util.function.Predicate,java.lang.Class,java.util.function.Predicate,boolean,boolean,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"FilterProjectTransposeRule","l":"FilterProjectTransposeRule(FilterProjectTransposeRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.FilterProjectTransposeRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"FilterProjectTransposeRule","l":"FilterProjectTransposeRule(RelOptRuleOperand, boolean, boolean, RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptRuleOperand,boolean,boolean,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.FilterReduceExpressionsRule","l":"FilterReduceExpressionsRule(Class<? extends Filter>, boolean, RelBuilderFactory)","u":"%3Cinit%3E(java.lang.Class,boolean,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.FilterReduceExpressionsRule","l":"FilterReduceExpressionsRule(Class<? extends Filter>, RelBuilderFactory)","u":"%3Cinit%3E(java.lang.Class,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.FilterReduceExpressionsRule","l":"FilterReduceExpressionsRule(ReduceExpressionsRule.FilterReduceExpressionsRule.FilterReduceExpressionsRuleConfig)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.ReduceExpressionsRule.FilterReduceExpressionsRule.FilterReduceExpressionsRuleConfig)"},{"p":"org.apache.calcite.rel.rules","c":"FilterRemoveIsNotDistinctFromRule","l":"FilterRemoveIsNotDistinctFromRule(RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.sql.validate","c":"MatchRecognizeNamespace","l":"filterRequirement"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableTableScan","l":"filters"},{"p":"org.apache.calcite.rel.rules","c":"FilterSampleTransposeRule","l":"FilterSampleTransposeRule(FilterSampleTransposeRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.FilterSampleTransposeRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"FilterSetOpTransposeRule","l":"FilterSetOpTransposeRule(FilterSetOpTransposeRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.FilterSetOpTransposeRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"FilterSetOpTransposeRule","l":"FilterSetOpTransposeRule(RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"FilterSetOpTransposeRule","l":"FilterSetOpTransposeRule(RelFactories.FilterFactory)","u":"%3Cinit%3E(org.apache.calcite.rel.core.RelFactories.FilterFactory)"},{"p":"org.apache.calcite.rel.rules","c":"MeasureRules.FilterSortMeasureRule","l":"FilterSortMeasureRule(MeasureRules.FilterSortMeasureRuleConfig)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.MeasureRules.FilterSortMeasureRuleConfig)"},{"p":"org.apache.calcite.piglet","c":"Ast.FilterStmt","l":"FilterStmt(SqlParserPos, Ast.Identifier, Ast.Identifier, Ast.Node)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.piglet.Ast.Identifier,org.apache.calcite.piglet.Ast.Identifier,org.apache.calcite.piglet.Ast.Node)"},{"p":"org.apache.calcite.rel.rules","c":"FilterTableFunctionTransposeRule","l":"FilterTableFunctionTransposeRule(FilterTableFunctionTransposeRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.FilterTableFunctionTransposeRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"FilterTableFunctionTransposeRule","l":"FilterTableFunctionTransposeRule(RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"FilterTableScanRule","l":"FilterTableScanRule(FilterTableScanRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.FilterTableScanRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"FilterTableScanRule","l":"FilterTableScanRule(RelOptRuleOperand, RelBuilderFactory, String)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.tools.RelBuilderFactory,java.lang.String)"},{"p":"org.apache.calcite.rel.rules","c":"FilterTableScanRule","l":"FilterTableScanRule(RelOptRuleOperand, String)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptRuleOperand,java.lang.String)"},{"p":"org.apache.calcite.rel.rules","c":"FilterToCalcRule","l":"FilterToCalcRule(FilterToCalcRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.FilterToCalcRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"FilterToCalcRule","l":"FilterToCalcRule(RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"FilterWindowTransposeRule","l":"FilterWindowTransposeRule(FilterWindowTransposeRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.FilterWindowTransposeRule.Config)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"FINAL"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"FINAL"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"FIND_IN_SET"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"FIND_IN_SET"},{"p":"org.apache.calcite.rex","c":"RexUtil.SubQueryFinder","l":"find(Iterable<RexNode>)","u":"find(java.lang.Iterable)"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchTable.ElasticsearchQueryable","l":"find(List<String>, List<Map.Entry<String, Class>>, List<Map.Entry<String, RelFieldCollation.Direction>>, List<Map.Entry<String, RelFieldCollation.NullDirection>>, List<String>, List<Map.Entry<String, String>>, Map<String, String>, Long, Long)","u":"find(java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.Map,java.lang.Long,java.lang.Long)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"find(NavigableMap<String, V>, String)","u":"find(java.util.NavigableMap,java.lang.String)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"find(NavigableSet<String>, String)","u":"find(java.util.NavigableSet,java.lang.String)"},{"p":"org.apache.calcite.rex","c":"LogicVisitor","l":"find(RelOptUtil.Logic, List<RexNode>, RexNode)","u":"find(org.apache.calcite.plan.RelOptUtil.Logic,java.util.List,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"find(RexInputRef)","u":"find(org.apache.calcite.rex.RexInputRef)"},{"p":"org.apache.calcite.rex","c":"RexUtil.SubQueryFinder","l":"find(RexNode)","u":"find(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"find(Set<SqlKind>)","u":"find(java.util.Set)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"find(SqlKind)","u":"find(org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoTable.MongoQueryable","l":"find(String, String, List<Map.Entry<String, Class>>)","u":"find(java.lang.String,java.lang.String,java.util.List)"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingScope","l":"findAliases(Collection<SqlMoniker>)","u":"findAliases(java.util.Collection)"},{"p":"org.apache.calcite.sql.validate","c":"ParameterScope","l":"findAliases(Collection<SqlMoniker>)","u":"findAliases(java.util.Collection)"},{"p":"org.apache.calcite.sql.validate","c":"ListScope","l":"findAliases(Collection<SqlMoniker>)","u":"findAliases(java.util.Collection)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope","l":"findAliases(Collection<SqlMoniker>)","u":"findAliases(java.util.Collection)"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingScope","l":"findAllColumnNames(List<SqlMoniker>)","u":"findAllColumnNames(java.util.List)"},{"p":"org.apache.calcite.sql.validate","c":"ParameterScope","l":"findAllColumnNames(List<SqlMoniker>)","u":"findAllColumnNames(java.util.List)"},{"p":"org.apache.calcite.sql.validate","c":"ListScope","l":"findAllColumnNames(List<SqlMoniker>)","u":"findAllColumnNames(java.util.List)"},{"p":"org.apache.calcite.sql.validate","c":"OrderByScope","l":"findAllColumnNames(List<SqlMoniker>)","u":"findAllColumnNames(java.util.List)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope","l":"findAllColumnNames(List<SqlMoniker>)","u":"findAllColumnNames(java.util.List)"},{"p":"org.apache.calcite.sql.validate","c":"ParameterScope","l":"findAllTableNames(List<SqlMoniker>)","u":"findAllTableNames(java.util.List)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"findAllTableQualifiedNames(RelNode)","u":"findAllTableQualifiedNames(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"findAllTables(RelNode)","u":"findAllTables(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan.hep","c":"HepPlanner","l":"findBestExp()"},{"p":"org.apache.calcite.plan","c":"RelOptPlanner","l":"findBestExp()"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"findBestExp()"},{"p":"org.apache.calcite.test","c":"MockRelOptPlanner","l":"findBestExp()"},{"p":"org.apache.calcite.util.graph","c":"CycleDetector","l":"findCycles()"},{"p":"org.apache.calcite.linq4j.tree","c":"ClassDeclarationFinder","l":"findDeclaredExpression(Expression)","u":"findDeclaredExpression(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"DeterministicCodeOptimizer","l":"findDeclaredExpression(Expression)","u":"findDeclaredExpression(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"findField(RelDataType, String)","u":"findField(org.apache.calcite.rel.type.RelDataType,java.lang.String)"},{"p":"org.apache.calcite.rex","c":"RexMultisetUtil","l":"findFirstMultiset(RexNode, boolean)","u":"findFirstMultiset(org.apache.calcite.rex.RexNode,boolean)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"findInSet(String, String)","u":"findInSet(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.util","c":"Util","l":"findMatch(List<String>, String, boolean)","u":"findMatch(java.util.List,java.lang.String,boolean)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"findOperatorCall(SqlOperator, RexNode)","u":"findOperatorCall(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"findPos(String)","u":"findPos(java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingScope","l":"findQualifyingTableName(String, SqlNode)","u":"findQualifyingTableName(java.lang.String,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"ParameterScope","l":"findQualifyingTableName(String, SqlNode)","u":"findQualifyingTableName(java.lang.String,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"ListScope","l":"findQualifyingTableName(String, SqlNode)","u":"findQualifyingTableName(java.lang.String,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope","l":"findQualifyingTableName(String, SqlNode)","u":"findQualifyingTableName(java.lang.String,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingScope","l":"findQualifyingTableNames(String, SqlNode, SqlNameMatcher)","u":"findQualifyingTableNames(java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlNameMatcher)"},{"p":"org.apache.calcite.sql.validate","c":"ParameterScope","l":"findQualifyingTableNames(String, SqlNode, SqlNameMatcher)","u":"findQualifyingTableNames(java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlNameMatcher)"},{"p":"org.apache.calcite.sql.validate","c":"ListScope","l":"findQualifyingTableNames(String, SqlNode, SqlNameMatcher)","u":"findQualifyingTableNames(java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlNameMatcher)"},{"p":"org.apache.calcite.sql.validate","c":"MatchRecognizeScope","l":"findQualifyingTableNames(String, SqlNode, SqlNameMatcher)","u":"findQualifyingTableNames(java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlNameMatcher)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope","l":"findQualifyingTableNames(String, SqlNode, SqlNameMatcher)","u":"findQualifyingTableNames(java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlNameMatcher)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule","l":"findReducibleExps(RelDataTypeFactory, List<RexNode>, ImmutableMap<RexNode, RexNode>, List<RexNode>, List<Boolean>, boolean)","u":"findReducibleExps(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,com.google.common.collect.ImmutableMap,java.util.List,java.util.List,boolean)"},{"p":"org.apache.calcite.rel.rules","c":"LoptMultiJoin","l":"findRef(int)"},{"p":"org.apache.calcite.rel","c":"RelNodes","l":"findRex(RelNode, RexUtil.RexFinder, Predicate<AggregateCall>, BiConsumer<RelNode, RexNode>)","u":"findRex(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexUtil.RexFinder,java.util.function.Predicate,java.util.function.BiConsumer)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"findTable(RelNode, String)","u":"findTable(org.apache.calcite.rel.RelNode,java.lang.String)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"findTables(RelNode)","u":"findTables(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.sql","c":"SqlCall","l":"findValidOptions(SqlValidator, SqlValidatorScope, SqlParserPos, Collection<SqlMoniker>)","u":"findValidOptions(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)"},{"p":"org.apache.calcite.sql","c":"SqlNode","l":"findValidOptions(SqlValidator, SqlValidatorScope, SqlParserPos, Collection<SqlMoniker>)","u":"findValidOptions(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.FiniteAbstractMapping","l":"FiniteAbstractMapping()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql","c":"SqlDialect.DatabaseProduct","l":"FIREBIRD"},{"p":"org.apache.calcite.sql.dialect","c":"FirebirdSqlDialect","l":"FirebirdSqlDialect(SqlDialect.Context)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect.Context)"},{"p":"org.apache.calcite.sql","c":"SqlDialect.DatabaseProduct","l":"FIREBOLT"},{"p":"org.apache.calcite.sql.dialect","c":"FireboltSqlDialect","l":"FireboltSqlDialect(SqlDialect.Context)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect.Context)"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"fireRule(RelOptRuleCall)","u":"fireRule(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.config","c":"NullCollation","l":"FIRST"},{"p":"org.apache.calcite.rel","c":"RelFieldCollation.NullDirection","l":"FIRST"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"FIRST"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"FIRST"},{"p":"org.apache.calcite.sql.type","c":"InferTypes","l":"FIRST_KNOWN"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"FIRST_VALUE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"FIRST_VALUE"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"first()"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"first()"},{"p":"org.apache.calcite.util","c":"Util","l":"first(Boolean, boolean)","u":"first(java.lang.Boolean,boolean)"},{"p":"org.apache.calcite.util","c":"Util","l":"first(Byte, byte)","u":"first(java.lang.Byte,byte)"},{"p":"org.apache.calcite.util","c":"Util","l":"first(Character, char)","u":"first(java.lang.Character,char)"},{"p":"org.apache.calcite.util","c":"Util","l":"first(Double, double)","u":"first(java.lang.Double,double)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"first(Enumerable<TSource>)","u":"first(org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"first(Enumerable<TSource>, Predicate1<TSource>)","u":"first(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.util","c":"Util","l":"first(Float, float)","u":"first(java.lang.Float,float)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"first(FunctionExpression<Predicate1<T>>)","u":"first(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"first(FunctionExpression<Predicate1<T>>)","u":"first(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"first(FunctionExpression<Predicate1<TSource>>)"},{"p":"","c":"","l":"first(FunctionExpression<Predicate1<TSource>>)"},{"p":"org.apache.calcite.util","c":"Util","l":"first(Integer, int)","u":"first(java.lang.Integer,int)"},{"p":"org.apache.calcite.util","c":"Util","l":"first(List<E>)","u":"first(java.util.List)"},{"p":"org.apache.calcite.util","c":"Util","l":"first(List<E>, int)","u":"first(java.util.List,int)"},{"p":"org.apache.calcite.util","c":"Util","l":"first(Long, long)","u":"first(java.lang.Long,long)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"first(Predicate1<T>)","u":"first(org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"first(Predicate1<TSource>)","u":"first(org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"first(Queryable<T>)","u":"first(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"first(Queryable<T>)","u":"first(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"first(Queryable<T>)","u":"first(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"first(Queryable<T>, FunctionExpression<Predicate1<T>>)","u":"first(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"first(Queryable<T>, FunctionExpression<Predicate1<T>>)","u":"first(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"first(Queryable<T>, FunctionExpression<Predicate1<T>>)","u":"first(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.util","c":"Util","l":"first(Short, short)","u":"first(java.lang.Short,short)"},{"p":"org.apache.calcite.util","c":"Util","l":"first(T, T)","u":"first(T,T)"},{"p":"org.apache.calcite.util","c":"Pair","l":"firstAnd(Iterable<? extends T>)","u":"firstAnd(java.lang.Iterable)"},{"p":"org.apache.calcite.materialize","c":"Lattice","l":"firstColumn(String)","u":"firstColumn(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"firstColumnOfOrderByMustBeTimestamp()"},{"p":"org.apache.calcite.util","c":"Util","l":"firstDuplicate(List<E>)","u":"firstDuplicate(java.util.List)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"firstOrDefault()"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"firstOrDefault()"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"firstOrDefault(Enumerable<TSource>)","u":"firstOrDefault(org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"firstOrDefault(Enumerable<TSource>, Predicate1<TSource>)","u":"firstOrDefault(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"firstOrDefault(FunctionExpression<Predicate1<T>>)","u":"firstOrDefault(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"firstOrDefault(FunctionExpression<Predicate1<T>>)","u":"firstOrDefault(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"firstOrDefault(FunctionExpression<Predicate1<TSource>>)"},{"p":"","c":"","l":"firstOrDefault(FunctionExpression<Predicate1<TSource>>)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"firstOrDefault(Predicate1<T>)","u":"firstOrDefault(org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"firstOrDefault(Predicate1<TSource>)","u":"firstOrDefault(org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"firstOrDefault(Queryable<T>)","u":"firstOrDefault(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"firstOrDefault(Queryable<T>)","u":"firstOrDefault(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"firstOrDefault(Queryable<T>)","u":"firstOrDefault(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"firstOrDefault(Queryable<T>, FunctionExpression<Predicate1<T>>)","u":"firstOrDefault(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"firstOrDefault(Queryable<T>, FunctionExpression<Predicate1<T>>)","u":"firstOrDefault(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"firstOrDefault(Queryable<T>, FunctionExpression<Predicate1<T>>)","u":"firstOrDefault(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"firstParameterOfAdd(String)","u":"firstParameterOfAdd(java.lang.String)"},{"p":"org.apache.calcite.rex","c":"RexUtil.FixNullabilityShuttle","l":"FixNullabilityShuttle(RexBuilder, List<RelDataType>)","u":"%3Cinit%3E(org.apache.calcite.rex.RexBuilder,java.util.List)"},{"p":"org.apache.calcite.test","c":"SqlValidatorTestCase","l":"FIXTURE"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest","l":"fixture()"},{"p":"org.apache.calcite.test","c":"SqlOperatorTest","l":"fixture()"},{"p":"org.apache.calcite.test","c":"SqlToRelTestBase","l":"fixture()"},{"p":"org.apache.calcite.test","c":"SqlValidatorTestCase","l":"fixture()"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"Fixture()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"fixUp(RexBuilder, List<RexNode>, List<RelDataType>)","u":"fixUp(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"fixUp(RexBuilder, List<RexNode>, RelDataType)","u":"fixUp(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"fl"},{"p":"org.apache.calcite.sql.fun","c":"SqlBetweenOperator","l":"flag"},{"p":"org.apache.calcite.rel.core","c":"Project.Flags","l":"Flags()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"FLAT_LIST"},{"p":"org.apache.calcite.adapter.spark","c":"SparkMethod","l":"FLAT_MAP_FUNCTION_CALL"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"FLAT_PRODUCT"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"flatList()"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"flatProduct(int[], boolean, SqlFunctions.FlatProductInputType[])","u":"flatProduct(int[],boolean,org.apache.calcite.runtime.SqlFunctions.FlatProductInputType[])"},{"p":"org.apache.calcite.util.format","c":"FormatElement","l":"flatten(Consumer<FormatElement>)","u":"flatten(java.util.function.Consumer)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"flatten(List<? extends RexNode>, SqlOperator)","u":"flatten(java.util.List,org.apache.calcite.sql.SqlOperator)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Blackboard","l":"flatten(List<RelNode>, int, int[], BiConsumer<RelNode, Integer>)","u":"flatten(java.util.List,int,int[],java.util.function.BiConsumer)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"flatten(RexBuilder, RexNode)","u":"flatten(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"flatten(SqlCall)","u":"flatten(org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"flattenAnd(Iterable<? extends RexNode>)","u":"flattenAnd(java.lang.Iterable)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableTableModify","l":"flattened"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"flattenOr(Iterable<? extends RexNode>)","u":"flattenOr(java.lang.Iterable)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"flattenRecordType(RelDataTypeFactory, RelDataType, int[])","u":"flattenRecordType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,int[])"},{"p":"org.apache.calcite.sql2rel","c":"RelStructuredTypeFlattener.SelfFlatteningRel","l":"flattenRel(RelStructuredTypeFlattener)","u":"flattenRel(org.apache.calcite.sql2rel.RelStructuredTypeFlattener)"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl.CalcitePreparingStmt","l":"flattenTypes(RelNode, boolean)","u":"flattenTypes(org.apache.calcite.rel.RelNode,boolean)"},{"p":"org.apache.calcite.prepare","c":"Prepare","l":"flattenTypes(RelNode, boolean)","u":"flattenTypes(org.apache.calcite.rel.RelNode,boolean)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"flattenTypes(RelNode, boolean)","u":"flattenTypes(org.apache.calcite.rel.RelNode,boolean)"},{"p":"org.apache.calcite.adapter.spark","c":"SparkHandlerImpl","l":"flattenTypes(RelOptPlanner, RelNode, boolean)","u":"flattenTypes(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,boolean)"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.SparkHandler","l":"flattenTypes(RelOptPlanner, RelNode, boolean)","u":"flattenTypes(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,boolean)"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator.AdjustProjectForCountAggregateRule.AdjustProjectForCountAggregateRuleConfig","l":"flavor()"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"flavor(Type)","u":"flavor(java.lang.reflect.Type)"},{"p":"org.apache.calcite.runtime","c":"FlipCoordinatesTransformer","l":"FlipCoordinatesTransformer()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.druid","c":"DruidType","l":"FLOAT"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"FLOAT"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"FLOAT"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"floatDataType"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"floatLiteral(double)"},{"p":"org.apache.calcite.test","c":"SqlOperatorTest","l":"floatPrecisionTest()"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"FLOOR"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"FLOOR"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"FLOOR"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"FLOOR_BIG_QUERY"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"FLOOR_DIV"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"FLOOR_MOD"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"floor(BigDecimal)","u":"floor(java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"floor(BigDecimal, BigDecimal)","u":"floor(java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"floor(BigDecimal, int)","u":"floor(java.math.BigDecimal,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"floor(byte, byte)","u":"floor(byte,byte)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"floor(double)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"floor(float)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"floor(int, BigDecimal)","u":"floor(int,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"floor(int, int)","u":"floor(int,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"floor(long, long)","u":"floor(long,long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"floor(short, short)","u":"floor(short,short)"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"floorCeil(boolean, SqlConformance)","u":"floorCeil(boolean,org.apache.calcite.sql.validate.SqlConformance)"},{"p":"org.apache.calcite.rel.type","c":"TimeFrameSet","l":"floorDate(int, TimeFrame)","u":"floorDate(int,org.apache.calcite.rel.type.TimeFrame)"},{"p":"org.apache.calcite.adapter.druid","c":"FloorOperatorConversion","l":"FloorOperatorConversion()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.type","c":"TimeFrameSet","l":"floorTimestamp(long, TimeFrame)","u":"floorTimestamp(long,org.apache.calcite.rel.type.TimeFrame)"},{"p":"org.apache.calcite.util","c":"Glossary","l":"FLYWEIGHT_PATTERN"},{"p":"org.apache.calcite.util.format.postgresql","c":"PatternModifier","l":"FM"},{"p":"org.apache.calcite.util","c":"Puffin.Line","l":"fnr()"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig.LineFolding","l":"FOLD"},{"p":"org.apache.calcite.util","c":"TestUtil","l":"fold(String...)","u":"fold(java.lang.String...)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"foldAnd(List<Expression>)","u":"foldAnd(java.util.List)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"foldLength()"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"foldOr(List<Expression>)","u":"foldOr(java.util.List)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"FOLLOWING"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"FOLLOWING_OPERATOR"},{"p":"org.apache.calcite.rex","c":"RexWindowBounds","l":"following(RexNode)","u":"following(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"following(RexNode)","u":"following(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"followingBeforePrecedingError()"},{"p":"org.apache.calcite.test.schemata.hr","c":"HrSchema","l":"foo(int)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.DatabaseInstance","l":"foodmart"},{"p":"org.apache.calcite.test","c":"CalciteAssert.Config","l":"FOODMART_CLONE"},{"p":"org.apache.calcite.test.schemata.foodmart","c":"FoodmartSchema","l":"FOODMART_MODEL"},{"p":"org.apache.calcite.test.schemata.foodmart","c":"FoodmartSchema","l":"FOODMART_SCHEMA"},{"p":"org.apache.calcite.test.schemata.foodmart","c":"FoodmartSchema","l":"FoodmartSchema()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"For"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"for_(DeclarationStatement, Expression, Expression, Statement)","u":"for_(org.apache.calcite.linq4j.tree.DeclarationStatement,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Statement)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"for_(Iterable<? extends DeclarationStatement>, Expression, Expression, Statement)","u":"for_(java.lang.Iterable,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Statement)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMeasure.Contexts","l":"forAggregate(Aggregate, Supplier<RelBuilder>, RexCorrelVariable)","u":"forAggregate(org.apache.calcite.rel.core.Aggregate,java.util.function.Supplier,org.apache.calcite.rex.RexCorrelVariable)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexToLixTranslator","l":"forAggregation(JavaTypeFactory, BlockBuilder, RexToLixTranslator.InputGetter, SqlConformance)","u":"forAggregation(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.RexToLixTranslator.InputGetter,org.apache.calcite.sql.validate.SqlConformance)"},{"p":"org.apache.calcite.util","c":"Optionality","l":"FORBIDDEN"},{"p":"org.apache.calcite.config","c":"CalciteConnectionProperty","l":"FORCE_DECORRELATE"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeTransforms","l":"FORCE_NULLABLE"},{"p":"org.apache.calcite.rel.rules","c":"ProjectMergeRule.Config","l":"force()"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfig","l":"forceDecorrelate()"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfigImpl","l":"forceDecorrelate()"},{"p":"org.apache.calcite.util","c":"SerializableCharset","l":"forCharset(Charset)","u":"forCharset(java.nio.charset.Charset)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"ForEach"},{"p":"org.apache.calcite.piglet","c":"Ast.Op","l":"FOREACH"},{"p":"org.apache.calcite.piglet","c":"Ast.Op","l":"FOREACH_NESTED"},{"p":"org.apache.calcite.runtime","c":"PairList","l":"forEach(BiConsumer<T, U>)","u":"forEach(java.util.function.BiConsumer)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"forEach(Consumer<? super Integer>)","u":"forEach(java.util.function.Consumer)"},{"p":"org.apache.calcite.util","c":"ImmutableIntList","l":"forEach(Consumer<? super Integer>)","u":"forEach(java.util.function.Consumer)"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"forEach(Consumer<? super SqlNode>)","u":"forEach(java.util.function.Consumer)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"foreach(Function1<T, R>)","u":"foreach(org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"foreach(Function1<TSource, R>)","u":"foreach(org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.util","c":"Pair","l":"forEach(Iterable<? extends K>, Iterable<? extends V>, BiConsumer<? super K, ? super V>)","u":"forEach(java.lang.Iterable,java.lang.Iterable,java.util.function.BiConsumer)"},{"p":"org.apache.calcite.util","c":"Pair","l":"forEach(Iterable<? extends Map.Entry<? extends K, ? extends V>>, BiConsumer<? super K, ? super V>)","u":"forEach(java.lang.Iterable,java.util.function.BiConsumer)"},{"p":"org.apache.calcite.linq4j","c":"Ord","l":"forEach(Iterable<T>, ObjIntConsumer<? super T>)","u":"forEach(java.lang.Iterable,java.util.function.ObjIntConsumer)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"forEach(ParameterExpression, Expression, Statement)","u":"forEach(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Statement)"},{"p":"org.apache.calcite.util","c":"RangeSets","l":"forEach(Range<C>, RangeSets.Consumer<C>)","u":"forEach(com.google.common.collect.Range,org.apache.calcite.util.RangeSets.Consumer)"},{"p":"org.apache.calcite.util","c":"RangeSets","l":"forEach(RangeSet<C>, RangeSets.Consumer<C>)","u":"forEach(com.google.common.collect.RangeSet,org.apache.calcite.util.RangeSets.Consumer)"},{"p":"org.apache.calcite.linq4j","c":"Ord","l":"forEach(T[], ObjIntConsumer<? super T>)","u":"forEach(T[],java.util.function.ObjIntConsumer)"},{"p":"org.apache.calcite.sql","c":"SqlPivot","l":"forEachAgg(BiConsumer<String, SqlNode>)","u":"forEachAgg(java.util.function.BiConsumer)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"forEachConformance(Iterable<? extends SqlConformanceEnum>, Consumer<SqlOperatorFixture>)","u":"forEachConformance(java.lang.Iterable,java.util.function.Consumer)"},{"p":"org.apache.calcite.util","c":"Pair","l":"forEachIndexed(Iterable<? extends Map.Entry<K, V>>, Pair.PairWithOrdinalConsumer<K, V>)","u":"forEachIndexed(java.lang.Iterable,org.apache.calcite.util.Pair.PairWithOrdinalConsumer)"},{"p":"org.apache.calcite.util","c":"Pair","l":"forEachIndexed(Iterable<K>, Iterable<V>, Pair.PairWithOrdinalConsumer<K, V>)","u":"forEachIndexed(java.lang.Iterable,java.lang.Iterable,org.apache.calcite.util.Pair.PairWithOrdinalConsumer)"},{"p":"org.apache.calcite.util","c":"Pair","l":"forEachIndexed(Map<K, V>, Pair.PairWithOrdinalConsumer<K, V>)","u":"forEachIndexed(java.util.Map,org.apache.calcite.util.Pair.PairWithOrdinalConsumer)"},{"p":"org.apache.calcite.runtime","c":"PairList","l":"forEachIndexed(PairList.IndexedBiConsumer<T, U>)","u":"forEachIndexed(org.apache.calcite.runtime.PairList.IndexedBiConsumer)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"forEachInt(IntConsumer)","u":"forEachInt(java.util.function.IntConsumer)"},{"p":"org.apache.calcite.util","c":"ImmutableIntList","l":"forEachInt(IntConsumer)","u":"forEachInt(java.util.function.IntConsumer)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"forEachLibrary(Iterable<? extends SqlLibrary>, Consumer<SqlOperatorFixture>)","u":"forEachLibrary(java.lang.Iterable,java.util.function.Consumer)"},{"p":"org.apache.calcite.sql","c":"SqlUnpivot","l":"forEachMeasure(Consumer<SqlIdentifier>)","u":"forEachMeasure(java.util.function.Consumer)"},{"p":"org.apache.calcite.test","c":"MockDdlExecutor","l":"forEachNameType(SqlCreateTable, BiConsumer<SqlIdentifier, SqlDataTypeSpec>)","u":"forEachNameType(org.apache.calcite.sql.ddl.SqlCreateTable,java.util.function.BiConsumer)"},{"p":"org.apache.calcite.sql","c":"SqlUnpivot","l":"forEachNameValues(BiConsumer<SqlNodeList, SqlNodeList>)","u":"forEachNameValues(java.util.function.BiConsumer)"},{"p":"org.apache.calcite.sql","c":"SqlPivot","l":"forEachNameValues(BiConsumer<String, SqlNodeList>)","u":"forEachNameValues(java.util.function.BiConsumer)"},{"p":"org.apache.calcite.piglet","c":"Ast.ForeachNestedStmt","l":"ForeachNestedStmt(SqlParserPos, Ast.Identifier, Ast.Identifier, List<Ast.Stmt>, List<Ast.Node>, Ast.Schema)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.piglet.Ast.Identifier,org.apache.calcite.piglet.Ast.Identifier,java.util.List,java.util.List,org.apache.calcite.piglet.Ast.Schema)"},{"p":"org.apache.calcite.sql.test","c":"AbstractSqlTester","l":"forEachQuery(SqlTestFactory, String, Consumer<String>)","u":"forEachQuery(org.apache.calcite.sql.test.SqlTestFactory,java.lang.String,java.util.function.Consumer)"},{"p":"org.apache.calcite.sql.test","c":"SqlTester","l":"forEachQuery(SqlTestFactory, String, Consumer<String>)","u":"forEachQuery(org.apache.calcite.sql.test.SqlTestFactory,java.lang.String,java.util.function.Consumer)"},{"p":"org.apache.calcite.linq4j.tree","c":"ForEachStatement","l":"ForEachStatement(ParameterExpression, Expression, Statement)","u":"%3Cinit%3E(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Statement)"},{"p":"org.apache.calcite.piglet","c":"Ast.ForeachStmt","l":"ForeachStmt(SqlParserPos, Ast.Identifier, Ast.Identifier, List<Ast.Node>, Ast.Schema)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.piglet.Ast.Identifier,org.apache.calcite.piglet.Ast.Identifier,java.util.List,org.apache.calcite.piglet.Ast.Schema)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"FOREIGN_KEY"},{"p":"org.apache.calcite.schema","c":"Schema.TableType","l":"FOREIGN_TABLE"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRel.Result","l":"format"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"FORMAT_DATE"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"FORMAT_DATE"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"FORMAT_DATETIME"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"FORMAT_NUMBER"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"FORMAT_NUMBER"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"FORMAT_TIME"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"FORMAT_TIME"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"FORMAT_TIMESTAMP"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"FORMAT_TIMESTAMP"},{"p":"org.apache.calcite.util","c":"Template","l":"format(Map<Object, Object>)","u":"format(java.util.Map)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"format(SqlNode)","u":"format(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery","l":"format(String, Object...)","u":"format(java.lang.String,java.lang.Object...)"},{"p":"org.apache.calcite.util.format","c":"FormatElement","l":"format(StringBuilder, Date)","u":"format(java.lang.StringBuilder,java.util.Date)"},{"p":"org.apache.calcite.util","c":"Template","l":"formatByName(String, Map<Object, Object>)","u":"formatByName(java.lang.String,java.util.Map)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.DateFormatFunction","l":"formatDate(String, int)","u":"formatDate(java.lang.String,int)"},{"p":"org.apache.calcite.util.format.postgresql","c":"CompiledDateTimeFormat","l":"formatDateTime(ZonedDateTime, Locale)","u":"formatDateTime(java.time.ZonedDateTime,java.util.Locale)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"formatNumber(BigDecimal, int)","u":"formatNumber(java.math.BigDecimal,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"formatNumber(BigDecimal, String)","u":"formatNumber(java.math.BigDecimal,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"formatNumber(double, int)","u":"formatNumber(double,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"formatNumber(double, String)","u":"formatNumber(double,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"formatNumber(long, int)","u":"formatNumber(long,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"formatNumber(long, String)","u":"formatNumber(long,java.lang.String)"},{"p":"org.apache.calcite.util.format.postgresql.format","c":"FormatPattern","l":"FormatPattern(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.DateFormatFunction","l":"formatTime(String, int)","u":"formatTime(java.lang.String,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.DateFormatFunction","l":"formatTimestamp(String, long)","u":"formatTimestamp(java.lang.String,long)"},{"p":"org.apache.calcite.test","c":"Fixtures","l":"forMetadata()"},{"p":"org.apache.calcite.test","c":"Fixtures","l":"forOperators(boolean)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"forOracle(SqlConformance)","u":"forOracle(org.apache.calcite.sql.validate.SqlConformance)"},{"p":"org.apache.calcite.test","c":"Fixtures","l":"forParser()"},{"p":"org.apache.calcite.rex","c":"RexProgramBuilder","l":"forProgram(RexProgram, RexBuilder, boolean)","u":"forProgram(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexBuilder,boolean)"},{"p":"org.apache.calcite.test","c":"Fixtures","l":"forRules()"},{"p":"org.apache.calcite.test","c":"Fixtures","l":"forSqlToRel()"},{"p":"org.apache.calcite.linq4j.tree","c":"ForStatement","l":"ForStatement(List<DeclarationStatement>, Expression, Expression, Statement)","u":"%3Cinit%3E(java.util.List,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Statement)"},{"p":"org.apache.calcite.test","c":"Fixtures","l":"forValidator()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope.Resolved","l":"found(SqlValidatorNamespace, boolean, SqlValidatorScope, SqlValidatorScope.Path, List<String>)","u":"found(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope.Path,java.util.List)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope.ResolvedImpl","l":"found(SqlValidatorNamespace, boolean, SqlValidatorScope, SqlValidatorScope.Path, List<String>)","u":"found(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope.Path,java.util.List)"},{"p":"org.apache.calcite.util","c":"Util.FoundOne","l":"FoundOne(Object)","u":"%3Cinit%3E(java.lang.Object)"},{"p":"org.apache.calcite.util.mapping","c":"MappingType","l":"FOURTEEN"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"FP_DECIMAL_CAST"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"FP_DECIMAL_CAST_ROUNDING_MODE"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"fpDecimalCast(Number, int, int)","u":"fpDecimalCast(java.lang.Number,int,int)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"fpDecimalCast(Number, int, int, RoundingMode)","u":"fpDecimalCast(java.lang.Number,int,int,java.math.RoundingMode)"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"FRACTIONAL_RANK"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"FRACTIONAL_TYPES"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"frame"},{"p":"org.apache.calcite.rel.type","c":"TimeFrame","l":"frameSet()"},{"p":"org.apache.calcite.sql.validate","c":"SqlNameMatcher","l":"frequency(Iterable<String>, String)","u":"frequency(java.lang.Iterable,java.lang.String)"},{"p":"org.apache.calcite.util","c":"Bug","l":"FRG189_FIXED"},{"p":"org.apache.calcite.util","c":"Bug","l":"FRG254_FIXED"},{"p":"org.apache.calcite.util","c":"Bug","l":"FRG296_FIXED"},{"p":"org.apache.calcite.util","c":"Bug","l":"FRG375_FIXED"},{"p":"org.apache.calcite.util","c":"Bug","l":"FRG377_FIXED"},{"p":"org.apache.calcite.util","c":"Bug","l":"FRG73_FIXED"},{"p":"org.apache.calcite.util","c":"Bug","l":"FRG78_FIXED"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Clause","l":"FROM"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"FROM_BASE32"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"FROM_BASE32"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"FROM_BASE64"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"FROM_BASE64"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"FROM_BIT_SET"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"FROM_HEX"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"FROM_HEX"},{"p":"org.apache.calcite.sql","c":"SqlWriter.FrameTypeEnum","l":"FROM_LIST"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeTransforms","l":"FROM_MEASURE"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeTransforms","l":"FROM_MEASURE_IF"},{"p":"org.apache.calcite.interpreter","c":"Bindables","l":"FROM_NONE_RULE"},{"p":"org.apache.calcite.sql","c":"SqlSelect","l":"FROM_OPERAND"},{"p":"org.apache.calcite.sql.type","c":"SqlOperandCountRanges","l":"from(int)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"from(SchemaPlus)","u":"from(org.apache.calcite.schema.SchemaPlus)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"fromAliasDuplicate(String)","u":"fromAliasDuplicate(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"fromBase32(String)","u":"fromBase32(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"fromBase64(String)","u":"fromBase64(java.lang.String)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"fromBitSet(BitSet)","u":"fromBitSet(java.util.BitSet)"},{"p":"org.apache.calcite.util","c":"DateString","l":"fromCalendarFields(Calendar)","u":"fromCalendarFields(java.util.Calendar)"},{"p":"org.apache.calcite.util","c":"TimestampString","l":"fromCalendarFields(Calendar)","u":"fromCalendarFields(java.util.Calendar)"},{"p":"org.apache.calcite.util","c":"TimestampWithTimeZoneString","l":"fromCalendarFields(Calendar)","u":"fromCalendarFields(java.util.Calendar)"},{"p":"org.apache.calcite.util","c":"TimeString","l":"fromCalendarFields(Calendar)","u":"fromCalendarFields(java.util.Calendar)"},{"p":"org.apache.calcite.util","c":"TimeWithTimeZoneString","l":"fromCalendarFields(Calendar)","u":"fromCalendarFields(java.util.Calendar)"},{"p":"org.apache.calcite.util","c":"Sources","l":"fromCharSource(CharSource)","u":"fromCharSource(com.google.common.io.CharSource)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidExpressions","l":"fromColumn(String)","u":"fromColumn(java.lang.String)"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.Struct","l":"fromContext(Context)","u":"fromContext(org.apache.calcite.plan.Context)"},{"p":"org.apache.calcite.util","c":"DateString","l":"fromDaysSinceEpoch(int)"},{"p":"org.apache.calcite.rel.externalize","c":"RelEnumTypes","l":"fromEnum(Enum)","u":"fromEnum(java.lang.Enum)"},{"p":"org.apache.calcite.rel.externalize","c":"RelEnumTypes","l":"fromEnum(Object)","u":"fromEnum(java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeUtils","l":"fromEwkt(String)","u":"fromEwkt(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"fromFolding()"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeUtils","l":"fromGeoJson(String)","u":"fromGeoJson(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeUtils.SpatialType","l":"fromGeometry(Geometry)","u":"fromGeometry(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeUtils","l":"fromGml(String)","u":"fromGml(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"fromHex(String)","u":"fromHex(java.lang.String)"},{"p":"org.apache.calcite.rex","c":"RexLiteral","l":"fromJdbcString(RelDataType, SqlTypeName, String)","u":"fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"fromMeasure(RelDataTypeFactory, RelDataType)","u":"fromMeasure(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.util","c":"TimeString","l":"fromMillisOfDay(int)"},{"p":"org.apache.calcite.util","c":"TimeWithTimeZoneString","l":"fromMillisOfDay(int)"},{"p":"org.apache.calcite.util","c":"TimestampString","l":"fromMillisSinceEpoch(long)"},{"p":"org.apache.calcite.util","c":"TimestampWithTimeZoneString","l":"fromMillisSinceEpoch(long)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableRels","l":"fromMutable(MutableRel)","u":"fromMutable(org.apache.calcite.rel.mutable.MutableRel)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableRels","l":"fromMutable(MutableRel, RelBuilder)","u":"fromMutable(org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.tools.RelBuilder)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"fromNotZero()"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"fromStatement(Statement)","u":"fromStatement(org.apache.calcite.linq4j.tree.Statement)"},{"p":"org.apache.calcite.adapter.redis","c":"RedisDataFormat","l":"fromTypeName(String)","u":"fromTypeName(java.lang.String)"},{"p":"org.apache.calcite.adapter.redis","c":"RedisDataType","l":"fromTypeName(String)","u":"fromTypeName(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeUtils","l":"fromWkb(ByteString)","u":"fromWkb(org.apache.calcite.avatica.util.ByteString)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeUtils","l":"fromWkt(String)","u":"fromWkt(java.lang.String)"},{"p":"org.apache.calcite.linq4j","c":"JoinType","l":"FULL"},{"p":"org.apache.calcite.rel.core","c":"JoinRelType","l":"FULL"},{"p":"org.apache.calcite.sql","c":"JoinType","l":"FULL"},{"p":"org.apache.calcite.rel","c":"RelFieldCollation","l":"fullString()"},{"p":"org.apache.calcite.rel.type","c":"StructKind","l":"FULLY_QUALIFIED"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingScope","l":"fullyQualify(SqlIdentifier)","u":"fullyQualify(org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.sql.validate","c":"MeasureScope","l":"fullyQualify(SqlIdentifier)","u":"fullyQualify(org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.sql.validate","c":"OrderByScope","l":"fullyQualify(SqlIdentifier)","u":"fullyQualify(org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.sql.validate","c":"ParameterScope","l":"fullyQualify(SqlIdentifier)","u":"fullyQualify(org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.sql.validate","c":"SqlLambdaScope","l":"fullyQualify(SqlIdentifier)","u":"fullyQualify(org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope","l":"fullyQualify(SqlIdentifier)","u":"fullyQualify(org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibrary","l":"fun"},{"p":"org.apache.calcite.config","c":"CalciteConnectionProperty","l":"FUN"},{"p":"org.apache.calcite.sql","c":"SqlWriter.FrameTypeEnum","l":"FUN_CALL"},{"p":"org.apache.calcite.sql","c":"SqlWriter.FrameTypeEnum","l":"FUN_DECL"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfig","l":"fun(Class<T>, T)","u":"fun(java.lang.Class,T)"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfigImpl","l":"fun(Class<T>, T)","u":"fun(java.lang.Class,T)"},{"p":"org.apache.calcite.util","c":"Smalls.MultipleFunction","l":"fun1(int)"},{"p":"org.apache.calcite.util","c":"Smalls.MultipleFunction","l":"fun1(int, int)","u":"fun1(int,int)"},{"p":"org.apache.calcite.util","c":"Smalls.MultipleFunction","l":"fun1(String)","u":"fun1(java.lang.String)"},{"p":"org.apache.calcite.util","c":"Smalls.MultipleFunction","l":"fun2(int)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"funcNeedsOrderBy()"},{"p":"org.apache.calcite.piglet","c":"PigUserDefinedFunction","l":"funcSpec"},{"p":"org.apache.calcite.linq4j.tree","c":"FunctionExpression","l":"function"},{"p":"org.apache.calcite.sql.validate","c":"SqlUserDefinedAggFunction","l":"function"},{"p":"org.apache.calcite.sql.validate","c":"SqlUserDefinedFunction","l":"function"},{"p":"org.apache.calcite.sql","c":"SqlSyntax","l":"FUNCTION"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFamily","l":"FUNCTION"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"FUNCTION"},{"p":"org.apache.calcite.sql.validate","c":"SqlMonikerType","l":"FUNCTION"},{"p":"org.apache.calcite.util.mapping","c":"MappingType","l":"FUNCTION"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"FUNCTION"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"FUNCTION_APPLY"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaImpl","l":"FUNCTION_COLUMNS"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"FUNCTION_CONTEXTS_OF"},{"p":"org.apache.calcite.sql","c":"SqlSyntax","l":"FUNCTION_ID"},{"p":"org.apache.calcite.sql","c":"SqlSyntax","l":"FUNCTION_ID_CONSTANT"},{"p":"org.apache.calcite.config","c":"CalciteSystemProperty","l":"FUNCTION_LEVEL_CACHE_MAX_SIZE"},{"p":"org.apache.calcite.linq4j.function","c":"Functions","l":"FUNCTION_RESULT_TYPES"},{"p":"org.apache.calcite.sql","c":"SqlSyntax","l":"FUNCTION_STAR"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"function(SqlTypeFamily, List<SqlTypeFamily>)","u":"function(org.apache.calcite.sql.type.SqlTypeFamily,java.util.List)"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"function(SqlTypeFamily, SqlTypeFamily...)","u":"function(org.apache.calcite.sql.type.SqlTypeFamily,org.apache.calcite.sql.type.SqlTypeFamily...)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"FUNCTION0_APPLY"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"FUNCTION1_APPLY"},{"p":"org.apache.calcite.profile","c":"Profiler.Profile","l":"functionalDependencyList"},{"p":"org.apache.calcite.adapter.druid","c":"DruidExpressions","l":"functionCall(String, List<String>)","u":"functionCall(java.lang.String,java.util.List)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"functionCallStack"},{"p":"org.apache.calcite.linq4j.function","c":"Functions","l":"functionClass(Type)","u":"functionClass(java.lang.reflect.Type)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema.FunctionEntry","l":"FunctionEntry(CalciteSchema, String)","u":"%3Cinit%3E(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema.FunctionEntryImpl","l":"FunctionEntryImpl(CalciteSchema, String, Function)","u":"%3Cinit%3E(org.apache.calcite.jdbc.CalciteSchema,java.lang.String,org.apache.calcite.schema.Function)"},{"p":"org.apache.calcite.linq4j.tree","c":"FunctionExpression","l":"FunctionExpression(Class<F>, BlockStatement, List<ParameterExpression>)","u":"%3Cinit%3E(java.lang.Class,org.apache.calcite.linq4j.tree.BlockStatement,java.util.List)"},{"p":"org.apache.calcite.linq4j.tree","c":"FunctionExpression","l":"FunctionExpression(F)","u":"%3Cinit%3E(F)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"functionMap"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"functionMatchRecognizeOnly(String)","u":"functionMatchRecognizeOnly(java.lang.String)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"functionNames"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"functionNotFound(String)","u":"functionNotFound(java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl.FunctionParamInfo","l":"FunctionParamInfo()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"functionQuantifierNotAllowed(String)","u":"functionQuantifierNotAllowed(java.lang.String)"},{"p":"org.apache.calcite.model","c":"JsonMapSchema","l":"functions"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"FUNCTIONS_MAPS"},{"p":"org.apache.calcite.schema.impl","c":"ScalarFunctionImpl","l":"functions(Class<?>)","u":"functions(java.lang.Class)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"functionScan(SqlOperator, int, Iterable<? extends RexNode>)","u":"functionScan(org.apache.calcite.sql.SqlOperator,int,java.lang.Iterable)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"functionScan(SqlOperator, int, RexNode...)","u":"functionScan(org.apache.calcite.sql.SqlOperator,int,org.apache.calcite.rex.RexNode...)"},{"p":"org.apache.calcite.sql.type","c":"FunctionSqlType","l":"FunctionSqlType(RelDataType, RelDataType)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateReduceFunctionsRule.Config","l":"functionsToReduce()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"functionUndefined(String)","u":"functionUndefined(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"FUSION"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"FUSION"},{"p":"org.apache.calcite.linq4j.tree","c":"TryStatement","l":"fynally"},{"p":"org.apache.calcite.rex","c":"RexProgram","l":"gatherExpr(RexNode)","u":"gatherExpr(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"gatherOrderExprs(SqlToRelConverter.Blackboard, SqlSelect, SqlNodeList, List<SqlNode>, List<RelFieldCollation>)","u":"gatherOrderExprs(org.apache.calcite.sql2rel.SqlToRelConverter.Blackboard,org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlNodeList,java.util.List,java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"gatherTableReferences(List<RexNode>)","u":"gatherTableReferences(java.util.List)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"ge(BigDecimal, BigDecimal)","u":"ge(java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"ge(boolean, boolean)","u":"ge(boolean,boolean)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"ge(ByteString, ByteString)","u":"ge(org.apache.calcite.avatica.util.ByteString,org.apache.calcite.avatica.util.ByteString)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"ge(List<?>, List<?>)","u":"ge(java.util.List,java.util.List)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"ge(Object[], Object[])","u":"ge(java.lang.Object[],java.lang.Object[])"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"ge(RexNode, RexNode)","u":"ge(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"ge(String, String)","u":"ge(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"ge(String, String, Comparator<String>)","u":"ge(java.lang.String,java.lang.String,java.util.Comparator)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"geAny(Object, Object)","u":"geAny(java.lang.Object,java.lang.Object)"},{"p":"org.apache.calcite.util","c":"Smalls","l":"GENERATE_STRINGS_METHOD"},{"p":"org.apache.calcite.util","c":"Smalls","l":"GENERATE_STRINGS_OF_INPUT_MAP_SIZE_METHOD"},{"p":"org.apache.calcite.util","c":"Smalls","l":"GENERATE_STRINGS_OF_INPUT_SIZE_METHOD"},{"p":"org.apache.calcite.example.maze","c":"MazeTable","l":"generate(int, int, int)","u":"generate(int,int,int)"},{"p":"org.apache.calcite.util","c":"Smalls.MazeTable","l":"generate(int, int, int)","u":"generate(int,int,int)"},{"p":"org.apache.calcite.linq4j.function","c":"Functions","l":"generate(int, IntFunction<E>)","u":"generate(int,java.util.function.IntFunction)"},{"p":"org.apache.calcite.util","c":"Smalls.MazeTable","l":"generate2(int, int, Integer)","u":"generate2(int,int,java.lang.Integer)"},{"p":"org.apache.calcite.util","c":"Smalls.MazeTable","l":"generate3(String)","u":"generate3(java.lang.String)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysType","l":"generateAccessor(List<Integer>)","u":"generateAccessor(java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysTypeImpl","l":"generateAccessor(List<Integer>)","u":"generateAccessor(java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysType","l":"generateAccessorWithoutNulls(List<Integer>)","u":"generateAccessorWithoutNulls(java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysTypeImpl","l":"generateAccessorWithoutNulls(List<Integer>)","u":"generateAccessorWithoutNulls(java.util.List)"},{"p":"org.apache.calcite.sql.test","c":"SqlTests","l":"generateAggQuery(String, String[])","u":"generateAggQuery(java.lang.String,java.lang.String[])"},{"p":"org.apache.calcite.sql.test","c":"SqlTests","l":"generateAggQueryWithMultipleArgs(String, String[][])","u":"generateAggQueryWithMultipleArgs(java.lang.String,java.lang.String[][])"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"generateCastExpressions(RexBuilder, RelDataType, List<RexNode>)","u":"generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"generateCastExpressions(RexBuilder, RelDataType, RelDataType)","u":"generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysType","l":"generateCollationKey(List<RelFieldCollation>)","u":"generateCollationKey(java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysTypeImpl","l":"generateCollationKey(List<RelFieldCollation>)","u":"generateCollationKey(java.util.List)"},{"p":"org.apache.calcite.jdbc","c":"JavaCollation","l":"generateCollationName(Charset)","u":"generateCollationName(java.nio.charset.Charset)"},{"p":"org.apache.calcite.sql","c":"SqlCollation","l":"generateCollationName(Charset)","u":"generateCollationName(java.nio.charset.Charset)"},{"p":"org.apache.calcite.runtime","c":"Utilities","l":"generateCollator(Locale, int)","u":"generateCollator(java.util.Locale,int)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumUtils","l":"generateCollatorExpression(SqlCollation)","u":"generateCollatorExpression(org.apache.calcite.sql.SqlCollation)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysType","l":"generateComparator(RelCollation)","u":"generateComparator(org.apache.calcite.rel.RelCollation)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysTypeImpl","l":"generateComparator(RelCollation)","u":"generateComparator(org.apache.calcite.rel.RelCollation)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateTableLike.LikeOption","l":"GENERATED"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"GENERATED_EXPR_ALIAS_PREFIX"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator","l":"generatedCorRels"},{"p":"org.apache.calcite.rel.metadata.janino","c":"CacheUtil","l":"generateEnum(String, E[])","u":"generateEnum(java.lang.String,E[])"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule","l":"generateEquivalenceClasses(RexBuilder, MaterializedViewRule.EquivalenceClasses, MaterializedViewRule.EquivalenceClasses)","u":"generateEquivalenceClasses(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.rules.materialize.MaterializedViewRule.EquivalenceClasses,org.apache.calcite.rel.rules.materialize.MaterializedViewRule.EquivalenceClasses)"},{"p":"org.apache.calcite.rel.metadata.janino","c":"RelMetadataHandlerGeneratorUtil","l":"generateHandler(Class<? extends MetadataHandler<?>>, List<? extends MetadataHandler<?>>)","u":"generateHandler(java.lang.Class,java.util.List)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewAggregateRule","l":"generateMapping(RexBuilder, RexSimplify, RelMetadataQuery, RelNode, RelNode, ImmutableBitSet, BiMap<RexTableInputRef.RelTableRef, RexTableInputRef.RelTableRef>, MaterializedViewRule.EquivalenceClasses, List<RexNode>)","u":"generateMapping(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.materialize.MaterializedViewRule.EquivalenceClasses,java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysType","l":"generateMergeJoinComparator(RelCollation)","u":"generateMergeJoinComparator(org.apache.calcite.rel.RelCollation)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysTypeImpl","l":"generateMergeJoinComparator(RelCollation)","u":"generateMergeJoinComparator(org.apache.calcite.rel.RelCollation)"},{"p":"org.apache.calcite.rel.metadata.janino","c":"CacheUtil","l":"generateRange(String, int, int)","u":"generateRange(java.lang.String,int,int)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysType","l":"generateSelector(ParameterExpression, List<Integer>)","u":"generateSelector(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysTypeImpl","l":"generateSelector(ParameterExpression, List<Integer>)","u":"generateSelector(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysType","l":"generateSelector(ParameterExpression, List<Integer>, JavaRowFormat)","u":"generateSelector(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysTypeImpl","l":"generateSelector(ParameterExpression, List<Integer>, JavaRowFormat)","u":"generateSelector(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysType","l":"generateSelector(ParameterExpression, List<Integer>, List<Integer>, JavaRowFormat)","u":"generateSelector(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List,java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysTypeImpl","l":"generateSelector(ParameterExpression, List<Integer>, List<Integer>, JavaRowFormat)","u":"generateSelector(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List,java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)"},{"p":"org.apache.calcite.rel.core","c":"JoinRelType","l":"generatesNullsOn(int)"},{"p":"org.apache.calcite.linq4j","c":"JoinType","l":"generatesNullsOnLeft()"},{"p":"org.apache.calcite.rel.core","c":"JoinRelType","l":"generatesNullsOnLeft()"},{"p":"org.apache.calcite.sql","c":"JoinType","l":"generatesNullsOnLeft()"},{"p":"org.apache.calcite.linq4j","c":"JoinType","l":"generatesNullsOnRight()"},{"p":"org.apache.calcite.rel.core","c":"JoinRelType","l":"generatesNullsOnRight()"},{"p":"org.apache.calcite.sql","c":"JoinType","l":"generatesNullsOnRight()"},{"p":"org.apache.calcite.util","c":"Smalls","l":"generateStrings(Integer)","u":"generateStrings(java.lang.Integer)"},{"p":"org.apache.calcite.util","c":"Smalls","l":"generateStringsOfInputMapSize(Map<Integer, Integer>)","u":"generateStringsOfInputMapSize(java.util.Map)"},{"p":"org.apache.calcite.util","c":"Smalls","l":"generateStringsOfInputSize(List<Integer>)","u":"generateStringsOfInputSize(java.util.List)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule","l":"generateSwapColumnTableReferencesLineage(RexBuilder, RelMetadataQuery, RelNode, BiMap<RexTableInputRef.RelTableRef, RexTableInputRef.RelTableRef>, MaterializedViewRule.EquivalenceClasses, List<RexNode>)","u":"generateSwapColumnTableReferencesLineage(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.materialize.MaterializedViewRule.EquivalenceClasses,java.util.List)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule","l":"generateSwapTableColumnReferencesLineage(RexBuilder, RelMetadataQuery, RelNode, BiMap<RexTableInputRef.RelTableRef, RexTableInputRef.RelTableRef>, MaterializedViewRule.EquivalenceClasses, List<RexNode>)","u":"generateSwapTableColumnReferencesLineage(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.materialize.MaterializedViewRule.EquivalenceClasses,java.util.List)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule","l":"generateTableMappings(Multimap<RexTableInputRef.RelTableRef, RexTableInputRef.RelTableRef>)","u":"generateTableMappings(com.google.common.collect.Multimap)"},{"p":"org.apache.calcite.rel.type","c":"DynamicRecordTypeImpl","l":"generateTypeString(StringBuilder, boolean)","u":"generateTypeString(java.lang.StringBuilder,boolean)"},{"p":"org.apache.calcite.rel.type","c":"RelCrossType","l":"generateTypeString(StringBuilder, boolean)","u":"generateTypeString(java.lang.StringBuilder,boolean)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactoryImpl.JavaType","l":"generateTypeString(StringBuilder, boolean)","u":"generateTypeString(java.lang.StringBuilder,boolean)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeImpl","l":"generateTypeString(StringBuilder, boolean)","u":"generateTypeString(java.lang.StringBuilder,boolean)"},{"p":"org.apache.calcite.rel.type","c":"RelRecordType","l":"generateTypeString(StringBuilder, boolean)","u":"generateTypeString(java.lang.StringBuilder,boolean)"},{"p":"org.apache.calcite.sql.type","c":"MeasureSqlType","l":"generateTypeString(StringBuilder, boolean)","u":"generateTypeString(java.lang.StringBuilder,boolean)"},{"p":"org.apache.calcite.sql.type","c":"ArraySqlType","l":"generateTypeString(StringBuilder, boolean)","u":"generateTypeString(java.lang.StringBuilder,boolean)"},{"p":"org.apache.calcite.sql.type","c":"BasicSqlType","l":"generateTypeString(StringBuilder, boolean)","u":"generateTypeString(java.lang.StringBuilder,boolean)"},{"p":"org.apache.calcite.sql.type","c":"FunctionSqlType","l":"generateTypeString(StringBuilder, boolean)","u":"generateTypeString(java.lang.StringBuilder,boolean)"},{"p":"org.apache.calcite.sql.type","c":"IntervalSqlType","l":"generateTypeString(StringBuilder, boolean)","u":"generateTypeString(java.lang.StringBuilder,boolean)"},{"p":"org.apache.calcite.sql.type","c":"MapSqlType","l":"generateTypeString(StringBuilder, boolean)","u":"generateTypeString(java.lang.StringBuilder,boolean)"},{"p":"org.apache.calcite.sql.type","c":"MultisetSqlType","l":"generateTypeString(StringBuilder, boolean)","u":"generateTypeString(java.lang.StringBuilder,boolean)"},{"p":"org.apache.calcite.sql.type","c":"ObjectSqlType","l":"generateTypeString(StringBuilder, boolean)","u":"generateTypeString(java.lang.StringBuilder,boolean)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule.Config","l":"generateUnionRewriting()"},{"p":"org.apache.calcite.sql.test","c":"SqlTests","l":"generateWinAggQuery(String, String, String[])","u":"generateWinAggQuery(java.lang.String,java.lang.String,java.lang.String[])"},{"p":"org.apache.calcite.sql2rel","c":"InitializerExpressionFactory","l":"generationStrategy(RelOptTable, int)","u":"generationStrategy(org.apache.calcite.plan.RelOptTable,int)"},{"p":"org.apache.calcite.sql2rel","c":"NullInitializerExpressionFactory","l":"generationStrategy(RelOptTable, int)","u":"generationStrategy(org.apache.calcite.plan.RelOptTable,int)"},{"p":"org.apache.calcite.test.catalog","c":"CountingFactory","l":"generationStrategy(RelOptTable, int)","u":"generationStrategy(org.apache.calcite.plan.RelOptTable,int)"},{"p":"org.apache.calcite.test.catalog","c":"VirtualColumnsExpressionFactory","l":"generationStrategy(RelOptTable, int)","u":"generationStrategy(org.apache.calcite.plan.RelOptTable,int)"},{"p":"org.apache.calcite.runtime.rtti","c":"GenericSqlTypeRtti","l":"GenericSqlTypeRtti(RuntimeTypeInformation.RuntimeSqlTypeName, RuntimeTypeInformation...)","u":"%3Cinit%3E(org.apache.calcite.runtime.rtti.RuntimeTypeInformation.RuntimeSqlTypeName,org.apache.calcite.runtime.rtti.RuntimeTypeInformation...)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFamily","l":"GEO"},{"p":"org.apache.calcite.test","c":"CalciteAssert.Config","l":"GEO"},{"p":"org.apache.calcite.test","c":"CalciteAssert.SchemaSpec","l":"GEO"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeAggregate","l":"GeodeAggregate(RelOptCluster, RelTraitSet, RelNode, boolean, ImmutableBitSet, List<ImmutableBitSet>, List<AggregateCall>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeAggregate","l":"GeodeAggregate(RelOptCluster, RelTraitSet, RelNode, ImmutableBitSet, List<ImmutableBitSet>, List<AggregateCall>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeRules.GeodeFilterRule","l":"GeodeFilterRule(GeodeRules.GeodeFilterRule.GeodeFilterRuleConfig)","u":"%3Cinit%3E(org.apache.calcite.adapter.geode.rel.GeodeRules.GeodeFilterRule.GeodeFilterRuleConfig)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeRel.GeodeImplementContext","l":"GeodeImplementContext()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeTable.GeodeQueryable","l":"GeodeQueryable(QueryProvider, SchemaPlus, GeodeTable, String)","u":"%3Cinit%3E(org.apache.calcite.linq4j.QueryProvider,org.apache.calcite.schema.SchemaPlus,org.apache.calcite.adapter.geode.rel.GeodeTable,java.lang.String)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeSchema","l":"GeodeSchema(GemFireCache, Iterable<String>)","u":"%3Cinit%3E(org.apache.geode.cache.GemFireCache,java.lang.Iterable)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeSchemaFactory","l":"GeodeSchemaFactory()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.geode.simple","c":"GeodeSimpleEnumerator","l":"GeodeSimpleEnumerator(ClientCache, String)","u":"%3Cinit%3E(org.apache.geode.cache.client.ClientCache,java.lang.String)"},{"p":"org.apache.calcite.adapter.geode.simple","c":"GeodeSimpleScannableTable","l":"GeodeSimpleScannableTable(String, RelDataType, ClientCache)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.rel.type.RelDataType,org.apache.geode.cache.client.ClientCache)"},{"p":"org.apache.calcite.adapter.geode.simple","c":"GeodeSimpleSchema","l":"GeodeSimpleSchema(String, int, String[], String)","u":"%3Cinit%3E(java.lang.String,int,java.lang.String[],java.lang.String)"},{"p":"org.apache.calcite.adapter.geode.simple","c":"GeodeSimpleSchemaFactory","l":"GeodeSimpleSchemaFactory()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeRules.GeodeSortLimitRule","l":"GeodeSortLimitRule(GeodeRules.GeodeSortLimitRule.GeodeSortLimitRuleConfig)","u":"%3Cinit%3E(org.apache.calcite.adapter.geode.rel.GeodeRules.GeodeSortLimitRule.GeodeSortLimitRuleConfig)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeToEnumerableConverter","l":"GeodeToEnumerableConverter(RelOptCluster, RelTraitSet, RelNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeToEnumerableConverterRule","l":"GeodeToEnumerableConverterRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.runtime.rtti","c":"RuntimeTypeInformation.RuntimeSqlTypeName","l":"GEOMETRY"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeUtils.SpatialType","l":"GEOMETRY"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"GEOMETRY"},{"p":"org.apache.calcite.sql.type","c":"ExtraSqlTypes","l":"GEOMETRY"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"GEOMETRY"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeUtils","l":"GEOMETRY_FACTORY"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"GEOMETRY_TYPES"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeUtils.SpatialType","l":"GEOMETRYCOLLECTION"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"geometryDisabled()"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"GET_OPERATOR"},{"p":"org.apache.calcite.adapter.spark","c":"SparkMethod","l":"GET_SPARK_CONTEXT"},{"p":"org.apache.calcite.linq4j","c":"MemoryFactory.Memory","l":"get()"},{"p":"org.apache.calcite.util","c":"Holder","l":"get()"},{"p":"org.apache.calcite.util","c":"MonotonicSupplier","l":"get()"},{"p":"org.apache.calcite.util","c":"TryThreadLocal","l":"get()"},{"p":"org.apache.calcite.sql.dialect","c":"JethroDataSqlDialect.JethroInfoCache","l":"get(DatabaseMetaData)","u":"get(java.sql.DatabaseMetaData)"},{"p":"org.apache.calcite","c":"DataContext.Variable","l":"get(DataContext)","u":"get(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.linq4j","c":"MemoryFactory.Memory","l":"get(int)"},{"p":"org.apache.calcite.plan","c":"RelTraitSet","l":"get(int)"},{"p":"org.apache.calcite.rex","c":"RexSlot.SelfPopulatingList","l":"get(int)"},{"p":"org.apache.calcite.runtime","c":"ConsList","l":"get(int)"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat1List","l":"get(int)"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat2List","l":"get(int)"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat3List","l":"get(int)"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat4List","l":"get(int)"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat5List","l":"get(int)"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat6List","l":"get(int)"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"get(int)"},{"p":"org.apache.calcite.util","c":"CastingList","l":"get(int)"},{"p":"org.apache.calcite.util","c":"CompositeList","l":"get(int)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet.Builder","l":"get(int)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"get(int)"},{"p":"org.apache.calcite.util","c":"ImmutableIntList","l":"get(int)"},{"p":"org.apache.calcite.util","c":"ImmutableNullableList","l":"get(int)"},{"p":"org.apache.calcite.util","c":"UnmodifiableArrayList","l":"get(int)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"get(int, int)","u":"get(int,int)"},{"p":"org.apache.calcite.util","c":"JdbcType","l":"get(int, ResultSet)","u":"get(int,java.sql.ResultSet)"},{"p":"org.apache.calcite.schema.lookup","c":"Lookup","l":"get(Lookup<T>, String, boolean)","u":"get(org.apache.calcite.schema.lookup.Lookup,java.lang.String,boolean)"},{"p":"org.apache.calcite.sql.validate","c":"SqlNameMatcher","l":"get(Map<K, V>, List<String>, List<String>)","u":"get(java.util.Map,java.util.List,java.util.List)"},{"p":"org.apache.calcite.linq4j.tree","c":"ArrayLengthRecordField","l":"get(Object)","u":"get(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"PseudoField","l":"get(Object)","u":"get(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"ReflectedPseudoField","l":"get(Object)","u":"get(java.lang.Object)"},{"p":"org.apache.calcite.util","c":"CompositeMap","l":"get(Object)","u":"get(java.lang.Object)"},{"p":"org.apache.calcite.rex","c":"RexSqlConvertletTable","l":"get(RexCall)","u":"get(org.apache.calcite.rex.RexCall)"},{"p":"org.apache.calcite.rex","c":"RexSqlReflectiveConvertletTable","l":"get(RexCall)","u":"get(org.apache.calcite.rex.RexCall)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexImpTable","l":"get(SqlAggFunction, boolean)","u":"get(org.apache.calcite.sql.SqlAggFunction,boolean)"},{"p":"org.apache.calcite.sql2rel","c":"ReflectiveConvertletTable","l":"get(SqlCall)","u":"get(org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql2rel","c":"SqlRexConvertletTable","l":"get(SqlCall)","u":"get(org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexImpTable","l":"get(SqlMatchFunction)","u":"get(org.apache.calcite.sql.SqlMatchFunction)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexImpTable","l":"get(SqlOperator)","u":"get(org.apache.calcite.sql.SqlOperator)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexImpTable","l":"get(SqlWindowTableFunction)","u":"get(org.apache.calcite.sql.SqlWindowTableFunction)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcCorrelationDataContext","l":"get(String)","u":"get(java.lang.String)"},{"p":"org.apache.calcite","c":"DataContext","l":"get(String)","u":"get(java.lang.String)"},{"p":"org.apache.calcite.plan","c":"VisitorDataContext","l":"get(String)","u":"get(java.lang.String)"},{"p":"org.apache.calcite.rel","c":"RelInput","l":"get(String)","u":"get(java.lang.String)"},{"p":"org.apache.calcite.rel.type","c":"TimeFrameSet","l":"get(String)","u":"get(java.lang.String)"},{"p":"org.apache.calcite.schema.lookup","c":"CompatibilityLookup","l":"get(String)","u":"get(java.lang.String)"},{"p":"org.apache.calcite.schema.lookup","c":"IgnoreCaseLookup","l":"get(String)","u":"get(java.lang.String)"},{"p":"org.apache.calcite.schema.lookup","c":"LoadingCacheLookup","l":"get(String)","u":"get(java.lang.String)"},{"p":"org.apache.calcite.schema.lookup","c":"Lookup","l":"get(String)","u":"get(java.lang.String)"},{"p":"org.apache.calcite.schema.lookup","c":"SnapshotLookup","l":"get(String)","u":"get(java.lang.String)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"get(String)","u":"get(java.lang.String)"},{"p":"org.apache.calcite.rel.type","c":"TimeFrameSet","l":"get(TimeUnit)","u":"get(org.apache.calcite.avatica.util.TimeUnit)"},{"p":"org.apache.calcite.runtime","c":"Hook","l":"get(V)"},{"p":"org.apache.calcite.util","c":"UnsafeX509ExtendedTrustManager","l":"getAcceptedIssuers()"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"getActionType(Class...)","u":"getActionType(java.lang.Class...)"},{"p":"org.apache.calcite.rel.rules","c":"PushProjector","l":"getAdjustments()"},{"p":"org.apache.calcite.rel.core","c":"Match","l":"getAfter()"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize","l":"getAfter()"},{"p":"org.apache.calcite.rel.core","c":"Aggregate","l":"getAggCallList()"},{"p":"org.apache.calcite.rex","c":"RexOver","l":"getAggOperator()"},{"p":"org.apache.calcite.plan","c":"RelOptLattice","l":"getAggregate(RelOptPlanner, ImmutableBitSet, List<Lattice.Measure>)","u":"getAggregate(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.util.ImmutableBitSet,java.util.List)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"getAggregate(SqlSelect)","u":"getAggregate(org.apache.calcite.sql.SqlSelect)"},{"p":"org.apache.calcite.rel","c":"RelInput","l":"getAggregateCalls(String)","u":"getAggregateCalls(java.lang.String)"},{"p":"org.apache.calcite.rel.core","c":"Window.Group","l":"getAggregateCalls(Window)","u":"getAggregateCalls(org.apache.calcite.rel.core.Window)"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"getAggregation()"},{"p":"org.apache.calcite.piglet","c":"PigRelBuilder","l":"getAlias()"},{"p":"org.apache.calcite.sql","c":"SqlDelete","l":"getAlias()"},{"p":"org.apache.calcite.sql","c":"SqlMerge","l":"getAlias()"},{"p":"org.apache.calcite.sql","c":"SqlUpdate","l":"getAlias()"},{"p":"org.apache.calcite.tools","c":"PigRelBuilder","l":"getAlias()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"getAlias(SqlNode, int)","u":"getAlias(org.apache.calcite.sql.SqlNode,int)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcImplementor","l":"getAliasContext(RexCorrelVariable)","u":"getAliasContext(org.apache.calcite.rex.RexCorrelVariable)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.BaseContext","l":"getAliasContext(RexCorrelVariable)","u":"getAliasContext(org.apache.calcite.rex.RexCorrelVariable)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Context","l":"getAliasContext(RexCorrelVariable)","u":"getAliasContext(org.apache.calcite.rex.RexCorrelVariable)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor","l":"getAliasContext(RexCorrelVariable)","u":"getAliasContext(org.apache.calcite.rex.RexCorrelVariable)"},{"p":"org.apache.calcite.rel.core","c":"Project","l":"getAliasedProjects(RelBuilder)","u":"getAliasedProjects(org.apache.calcite.tools.RelBuilder)"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"getAliasedSignature(SqlOperator, String, List<?>)","u":"getAliasedSignature(org.apache.calcite.sql.SqlOperator,java.lang.String,java.util.List)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"getAllFields(Aggregate)","u":"getAllFields(org.apache.calcite.rel.core.Aggregate)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"getAllFields2(ImmutableBitSet, List<AggregateCall>)","u":"getAllFields2(org.apache.calcite.util.ImmutableBitSet,java.util.List)"},{"p":"org.apache.calcite.prepare","c":"RelOptTableImpl","l":"getAllowedAccess()"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingSqlValidatorTable","l":"getAllowedAccess()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorTable","l":"getAllowedAccess()"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"getAllowedAccess()"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"getAllowedSignatures()"},{"p":"org.apache.calcite.sql.type","c":"ArrayElementOperandTypeChecker","l":"getAllowedSignatures(SqlOperator, String)","u":"getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)"},{"p":"org.apache.calcite.sql.type","c":"AssignableOperandTypeChecker","l":"getAllowedSignatures(SqlOperator, String)","u":"getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)"},{"p":"org.apache.calcite.sql.type","c":"CompositeOperandTypeChecker","l":"getAllowedSignatures(SqlOperator, String)","u":"getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)"},{"p":"org.apache.calcite.sql.type","c":"ExplicitOperandTypeChecker","l":"getAllowedSignatures(SqlOperator, String)","u":"getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)"},{"p":"org.apache.calcite.sql.type","c":"FamilyOperandTypeChecker","l":"getAllowedSignatures(SqlOperator, String)","u":"getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)"},{"p":"org.apache.calcite.sql.type","c":"IntervalOperandTypeChecker","l":"getAllowedSignatures(SqlOperator, String)","u":"getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)"},{"p":"org.apache.calcite.sql.type","c":"LiteralOperandTypeChecker","l":"getAllowedSignatures(SqlOperator, String)","u":"getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)"},{"p":"org.apache.calcite.sql.type","c":"MultisetOperandTypeChecker","l":"getAllowedSignatures(SqlOperator, String)","u":"getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)"},{"p":"org.apache.calcite.sql.type","c":"SameOperandTypeChecker","l":"getAllowedSignatures(SqlOperator, String)","u":"getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)"},{"p":"org.apache.calcite.sql.type","c":"SameOperandTypeExceptLastOperandChecker","l":"getAllowedSignatures(SqlOperator, String)","u":"getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)"},{"p":"org.apache.calcite.sql.type","c":"SetopOperandTypeChecker","l":"getAllowedSignatures(SqlOperator, String)","u":"getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)"},{"p":"org.apache.calcite.sql.type","c":"SqlOperandTypeChecker","l":"getAllowedSignatures(SqlOperator, String)","u":"getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)"},{"p":"org.apache.calcite.sql.fun","c":"SqlDotOperator","l":"getAllowedSignatures(String)","u":"getAllowedSignatures(java.lang.String)"},{"p":"org.apache.calcite.sql.fun","c":"SqlItemOperator","l":"getAllowedSignatures(String)","u":"getAllowedSignatures(java.lang.String)"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonExistsFunction","l":"getAllowedSignatures(String)","u":"getAllowedSignatures(java.lang.String)"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonRemoveFunction","l":"getAllowedSignatures(String)","u":"getAllowedSignatures(java.lang.String)"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonValueFunction","l":"getAllowedSignatures(String)","u":"getAllowedSignatures(java.lang.String)"},{"p":"org.apache.calcite.sql.fun","c":"SqlLiteralChainOperator","l":"getAllowedSignatures(String)","u":"getAllowedSignatures(java.lang.String)"},{"p":"org.apache.calcite.sql.fun","c":"SqlOverlapsOperator","l":"getAllowedSignatures(String)","u":"getAllowedSignatures(java.lang.String)"},{"p":"org.apache.calcite.sql.fun","c":"SqlSubstringFunction","l":"getAllowedSignatures(String)","u":"getAllowedSignatures(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlJdbcFunctionCall","l":"getAllowedSignatures(String)","u":"getAllowedSignatures(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"getAllowedSignatures(String)","u":"getAllowedSignatures(java.lang.String)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.AllPredicates","l":"getAllPredicates()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdAllPredicates","l":"getAllPredicates(Aggregate, RelMetadataQuery)","u":"getAllPredicates(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdAllPredicates","l":"getAllPredicates(Calc, RelMetadataQuery)","u":"getAllPredicates(org.apache.calcite.rel.core.Calc,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdAllPredicates","l":"getAllPredicates(Exchange, RelMetadataQuery)","u":"getAllPredicates(org.apache.calcite.rel.core.Exchange,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdAllPredicates","l":"getAllPredicates(Filter, RelMetadataQuery)","u":"getAllPredicates(org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdAllPredicates","l":"getAllPredicates(HepRelVertex, RelMetadataQuery)","u":"getAllPredicates(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdAllPredicates","l":"getAllPredicates(Join, RelMetadataQuery)","u":"getAllPredicates(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdAllPredicates","l":"getAllPredicates(Project, RelMetadataQuery)","u":"getAllPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"getAllPredicates(RelNode)","u":"getAllPredicates(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.AllPredicates.Handler","l":"getAllPredicates(RelNode, RelMetadataQuery)","u":"getAllPredicates(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdAllPredicates","l":"getAllPredicates(RelNode, RelMetadataQuery)","u":"getAllPredicates(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdAllPredicates","l":"getAllPredicates(RelSubset, RelMetadataQuery)","u":"getAllPredicates(org.apache.calcite.plan.volcano.RelSubset,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdAllPredicates","l":"getAllPredicates(Sample, RelMetadataQuery)","u":"getAllPredicates(org.apache.calcite.rel.core.Sample,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdAllPredicates","l":"getAllPredicates(SetOp, RelMetadataQuery)","u":"getAllPredicates(org.apache.calcite.rel.core.SetOp,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdAllPredicates","l":"getAllPredicates(Sort, RelMetadataQuery)","u":"getAllPredicates(org.apache.calcite.rel.core.Sort,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdAllPredicates","l":"getAllPredicates(TableModify, RelMetadataQuery)","u":"getAllPredicates(org.apache.calcite.rel.core.TableModify,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdAllPredicates","l":"getAllPredicates(TableScan, RelMetadataQuery)","u":"getAllPredicates(org.apache.calcite.rel.core.TableScan,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.prepare","c":"CalciteCatalogReader","l":"getAllSchemaObjectNames(List<String>)","u":"getAllSchemaObjectNames(java.util.List)"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingSqlValidatorCatalogReader","l":"getAllSchemaObjectNames(List<String>)","u":"getAllSchemaObjectNames(java.util.List)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorCatalogReader","l":"getAllSchemaObjectNames(List<String>)","u":"getAllSchemaObjectNames(java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexPatternFieldRef","l":"getAlpha()"},{"p":"org.apache.calcite.util","c":"PartiallyOrderedSet","l":"getAncestors(E)"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"getAncestry(SqlNode, Predicate<SqlNode>, Predicate<SqlNode>)","u":"getAncestry(org.apache.calcite.sql.SqlNode,java.util.function.Predicate,java.util.function.Predicate)"},{"p":"org.apache.calcite.plan","c":"RelOptMaterializations","l":"getApplicableMaterializations(RelNode, List<RelOptMaterialization>)","u":"getApplicableMaterializations(org.apache.calcite.rel.RelNode,java.util.List)"},{"p":"org.apache.calcite.util","c":"NumberUtil","l":"getApproxFormatter(boolean)"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"getArgList()"},{"p":"org.apache.calcite.util.javac","c":"JaninoCompiler","l":"getArgs()"},{"p":"org.apache.calcite.util.javac","c":"JavaCompiler","l":"getArgs()"},{"p":"org.apache.calcite.runtime.rtti","c":"GenericSqlTypeRtti","l":"getArgumentCount()"},{"p":"org.apache.calcite.schema","c":"FunctionContext","l":"getArgumentValueAs(int, Class<V>)","u":"getArgumentValueAs(int,java.lang.Class)"},{"p":"org.apache.calcite.sql","c":"SqlRowTypeNameSpec","l":"getArity()"},{"p":"org.apache.calcite.util","c":"BitString","l":"getAsByteArray()"},{"p":"org.apache.calcite.sql","c":"SqlGroupedWindowFunction","l":"getAuxiliaryFunctions()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"getAverageColumnSizes(RelNode)","u":"getAverageColumnSizes(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"getAverageColumnSizesNotNull(RelNode)","u":"getAverageColumnSizesNotNull(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"getAverageRowSize(RelNode)","u":"getAverageRowSize(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.util","c":"TestUtil","l":"getBaseDir(Class<?>)","u":"getBaseDir(java.lang.Class)"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"AmPmCompiledPattern","l":"getBaseFormatPatternLength()"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"BcAdCompiledPattern","l":"getBaseFormatPatternLength()"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"CompiledPattern","l":"getBaseFormatPatternLength()"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"DayOfWeekCompiledPattern","l":"getBaseFormatPatternLength()"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"MonthCompiledPattern","l":"getBaseFormatPatternLength()"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"NumberCompiledPattern","l":"getBaseFormatPatternLength()"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"RomanNumeralsCompiledPattern","l":"getBaseFormatPatternLength()"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"TimeZoneCompiledPattern","l":"getBaseFormatPatternLength()"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"TimeZoneHoursCompiledPattern","l":"getBaseFormatPatternLength()"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"TimeZoneMinutesCompiledPattern","l":"getBaseFormatPatternLength()"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"TimeZoneOffsetCompiledPattern","l":"getBaseFormatPatternLength()"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"YearWithCommasCompiledPattern","l":"getBaseFormatPatternLength()"},{"p":"org.apache.calcite.plan.volcano","c":"RelSubset","l":"getBest()"},{"p":"org.apache.calcite.plan.volcano","c":"RelSubset","l":"getBestOrOriginal()"},{"p":"org.apache.calcite.rel.rules","c":"DpHyp","l":"getBestPlan()"},{"p":"org.apache.calcite.rel","c":"RelInput","l":"getBigDecimal(String)","u":"getBigDecimal(java.lang.String)"},{"p":"org.apache.calcite.prepare","c":"Prepare.PreparedResult","l":"getBindable(Meta.CursorFactory)","u":"getBindable(org.apache.calcite.avatica.Meta.CursorFactory)"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"GETBIT"},{"p":"org.apache.calcite.util","c":"BitString","l":"getBitCount()"},{"p":"org.apache.calcite.rel","c":"RelInput","l":"getBitSet(String)","u":"getBitSet(java.lang.String)"},{"p":"org.apache.calcite.rel","c":"RelInput","l":"getBitSetList(String)","u":"getBitSetList(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlBinaryStringLiteral","l":"getBitString()"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive.Source","l":"getBoolean()"},{"p":"org.apache.calcite.rel","c":"RelInput","l":"getBoolean(String, boolean)","u":"getBoolean(java.lang.String,boolean)"},{"p":"org.apache.calcite.adapter.kafka","c":"KafkaTableOptions","l":"getBootstrapServers()"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"getBoxClass()"},{"p":"org.apache.calcite.util","c":"ReflectUtil","l":"getBoxingClass(Class)","u":"getBoxingClass(java.lang.Class)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"getBoxName()"},{"p":"org.apache.calcite.piglet","c":"PigConverter","l":"getBuilder()"},{"p":"org.apache.calcite.rel.rules","c":"LongBitmap","l":"getBvBitmap(long)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive.Source","l":"getByte()"},{"p":"org.apache.calcite.util","c":"ReflectUtil","l":"getByteBufferReadMethod(Class)","u":"getByteBufferReadMethod(java.lang.Class)"},{"p":"org.apache.calcite.util","c":"ReflectUtil","l":"getByteBufferWriteMethod(Class)","u":"getByteBufferWriteMethod(java.lang.Class)"},{"p":"org.apache.calcite.test","c":"SqlOperatorTest","l":"getCalendarNotTooNear(int)"},{"p":"org.apache.calcite.sql.dialect","c":"ClickHouseSqlDialect","l":"getCalendarPolicy()"},{"p":"org.apache.calcite.sql.dialect","c":"MysqlSqlDialect","l":"getCalendarPolicy()"},{"p":"org.apache.calcite.sql.dialect","c":"PrestoSqlDialect","l":"getCalendarPolicy()"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"getCalendarPolicy()"},{"p":"org.apache.calcite.util.format.postgresql","c":"ChronoUnitEnum","l":"getCalendars()"},{"p":"org.apache.calcite.rel.core","c":"TableFunctionScan","l":"getCall()"},{"p":"org.apache.calcite.sql","c":"SqlCallBinding","l":"getCall()"},{"p":"org.apache.calcite.sql","c":"SqlCall","l":"getCallSignature(SqlValidator, SqlValidatorScope)","u":"getCallSignature(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql.dialect","c":"BigQuerySqlDialect","l":"getCastSpec(RelDataType)","u":"getCastSpec(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.dialect","c":"ClickHouseSqlDialect","l":"getCastSpec(RelDataType)","u":"getCastSpec(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.dialect","c":"FireboltSqlDialect","l":"getCastSpec(RelDataType)","u":"getCastSpec(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.dialect","c":"HiveSqlDialect","l":"getCastSpec(RelDataType)","u":"getCastSpec(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.dialect","c":"MysqlSqlDialect","l":"getCastSpec(RelDataType)","u":"getCastSpec(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.dialect","c":"OracleSqlDialect","l":"getCastSpec(RelDataType)","u":"getCastSpec(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.dialect","c":"PostgresqlSqlDialect","l":"getCastSpec(RelDataType)","u":"getCastSpec(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.dialect","c":"PrestoSqlDialect","l":"getCastSpec(RelDataType)","u":"getCastSpec(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.dialect","c":"RedshiftSqlDialect","l":"getCastSpec(RelDataType)","u":"getCastSpec(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.dialect","c":"SparkSqlDialect","l":"getCastSpec(RelDataType)","u":"getCastSpec(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.dialect","c":"StarRocksSqlDialect","l":"getCastSpec(RelDataType)","u":"getCastSpec(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"getCastSpec(RelDataType)","u":"getCastSpec(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"getCastString(String, String, boolean, SqlOperatorFixture.CastType)","u":"getCastString(java.lang.String,java.lang.String,boolean,org.apache.calcite.sql.test.SqlOperatorFixture.CastType)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockSchema","l":"getCatalogName()"},{"p":"org.apache.calcite.rel.core","c":"TableModify","l":"getCatalogReader()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"getCatalogReader()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"getCatalogReader()"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaImpl","l":"getCatalogs(Meta.ConnectionHandle)","u":"getCatalogs(org.apache.calcite.avatica.Meta.ConnectionHandle)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParseException","l":"getCause()"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewAggregateRule","l":"getCeilSqlFunction(TimeUnitRange)","u":"getCeilSqlFunction(org.apache.calcite.avatica.util.TimeUnitRange)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive.Source","l":"getChar()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"getCharacterSet(String)","u":"getCharacterSet(java.lang.String)"},{"p":"org.apache.calcite.rel.type","c":"RelDataType","l":"getCharset()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactoryImpl.JavaType","l":"getCharset()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeImpl","l":"getCharset()"},{"p":"org.apache.calcite.rel.type","c":"SingleColumnAliasRelDataType","l":"getCharset()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil.ParsedCollation","l":"getCharset()"},{"p":"org.apache.calcite.sql","c":"SqlCollation","l":"getCharset()"},{"p":"org.apache.calcite.sql.type","c":"BasicSqlType","l":"getCharset()"},{"p":"org.apache.calcite.util","c":"NlsString","l":"getCharset()"},{"p":"org.apache.calcite.util","c":"SerializableCharset","l":"getCharset()"},{"p":"org.apache.calcite.sql.type","c":"NonNullableAccessors","l":"getCharset(RelDataType)","u":"getCharset(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"getCharset(String)","u":"getCharset(java.lang.String)"},{"p":"org.apache.calcite.util","c":"NlsString","l":"getCharsetName()"},{"p":"org.apache.calcite.sql","c":"SqlBasicTypeNameSpec","l":"getCharSetName()"},{"p":"org.apache.calcite.sql.validate","c":"PivotScope","l":"getChild()"},{"p":"org.apache.calcite.sql.validate","c":"UnpivotScope","l":"getChild()"},{"p":"org.apache.calcite.rel.rules","c":"LoptMultiJoin","l":"getChildFactors(LoptJoinTree, ImmutableBitSet.Builder)","u":"getChildFactors(org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.util.ImmutableBitSet.Builder)"},{"p":"org.apache.calcite.plan","c":"RelOptRuleOperand","l":"getChildOperands()"},{"p":"org.apache.calcite.plan","c":"RelOptRuleCall","l":"getChildRels(RelNode)","u":"getChildRels(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.sql.validate","c":"ListScope","l":"getChildren()"},{"p":"org.apache.calcite.util","c":"PartiallyOrderedSet","l":"getChildren(E)"},{"p":"org.apache.calcite.util","c":"PartiallyOrderedSet","l":"getChildren(E, boolean)","u":"getChildren(E,boolean)"},{"p":"org.apache.calcite.rel.rules","c":"LoptSemiJoinOptimizer","l":"getChosenSemiJoin(int)"},{"p":"org.apache.calcite.util.format.postgresql","c":"ChronoUnitEnum","l":"getChronoUnit()"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"CompiledPattern","l":"getChronoUnit()"},{"p":"org.apache.calcite.util.javac","c":"JaninoCompiler","l":"getClassLoader()"},{"p":"org.apache.calcite.util.javac","c":"JavaCompiler","l":"getClassLoader()"},{"p":"org.apache.calcite.util.javac","c":"JavaCompilerArgs","l":"getClassLoader()"},{"p":"org.apache.calcite.adapter.splunk.util","c":"StringUtils","l":"getClassTracer(Class)","u":"getClassTracer(java.lang.Class)"},{"p":"org.apache.calcite.plan","c":"RelOptNode","l":"getCluster()"},{"p":"org.apache.calcite.plan","c":"RelOptTable.ToRelContext","l":"getCluster()"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor.UnifyRuleCall","l":"getCluster()"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"getCluster()"},{"p":"org.apache.calcite.rel","c":"RelInput","l":"getCluster()"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"getCluster()"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"getCluster()"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraTable","l":"getClusteringKeys()"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraTable","l":"getClusteringOrder()"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraSchema","l":"getClusteringOrder(String, boolean)","u":"getClusteringOrder(java.lang.String,boolean)"},{"p":"org.apache.calcite.prepare","c":"Prepare.PreparedExplain","l":"getCode()"},{"p":"org.apache.calcite.prepare","c":"Prepare.PreparedResult","l":"getCode()"},{"p":"org.apache.calcite.sql","c":"SqlCollation","l":"getCoercibility()"},{"p":"org.apache.calcite.sql","c":"SqlCollation","l":"getCoercibilityDyadic(SqlCollation, SqlCollation)","u":"getCoercibilityDyadic(org.apache.calcite.sql.SqlCollation,org.apache.calcite.sql.SqlCollation)"},{"p":"org.apache.calcite.sql","c":"SqlCollation","l":"getCoercibilityDyadicComparison(SqlCollation, SqlCollation)","u":"getCoercibilityDyadicComparison(org.apache.calcite.sql.SqlCollation,org.apache.calcite.sql.SqlCollation)"},{"p":"org.apache.calcite.sql","c":"SqlCollation","l":"getCoercibilityDyadicOperator(SqlCollation, SqlCollation)","u":"getCoercibilityDyadicOperator(org.apache.calcite.sql.SqlCollation,org.apache.calcite.sql.SqlCollation)"},{"p":"org.apache.calcite.sql","c":"SqlCollation","l":"getCoercibilityDyadicOperatorThrows(SqlCollation, SqlCollation)","u":"getCoercibilityDyadicOperatorThrows(org.apache.calcite.sql.SqlCollation,org.apache.calcite.sql.SqlCollation)"},{"p":"org.apache.calcite.rel.rules","c":"CalcRelSplitter","l":"getCohorts()"},{"p":"org.apache.calcite.plan","c":"RelTraitSet","l":"getCollation()"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"getCollation()"},{"p":"org.apache.calcite.rel.core","c":"Sort","l":"getCollation()"},{"p":"org.apache.calcite.rel.core","c":"SortExchange","l":"getCollation()"},{"p":"org.apache.calcite.rel","c":"RelInput","l":"getCollation()"},{"p":"org.apache.calcite.rel.type","c":"RelDataType","l":"getCollation()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactoryImpl.JavaType","l":"getCollation()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeImpl","l":"getCollation()"},{"p":"org.apache.calcite.rel.type","c":"SingleColumnAliasRelDataType","l":"getCollation()"},{"p":"org.apache.calcite.sql","c":"SqlCharStringLiteral","l":"getCollation()"},{"p":"org.apache.calcite.sql","c":"SqlIdentifier","l":"getCollation()"},{"p":"org.apache.calcite.sql.type","c":"BasicSqlType","l":"getCollation()"},{"p":"org.apache.calcite.util","c":"NlsString","l":"getCollation()"},{"p":"org.apache.calcite.rel.core","c":"Window","l":"getCollation(List<RexFieldCollation>)","u":"getCollation(java.util.List)"},{"p":"org.apache.calcite.sql.type","c":"NonNullableAccessors","l":"getCollation(RelDataType)","u":"getCollation(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.CalciteSignature","l":"getCollationList()"},{"p":"org.apache.calcite.plan","c":"RelOptAbstractTable","l":"getCollationList()"},{"p":"org.apache.calcite.plan","c":"RelOptTable","l":"getCollationList()"},{"p":"org.apache.calcite.prepare","c":"RelOptTableImpl","l":"getCollationList()"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"getCollationList()"},{"p":"org.apache.calcite.sql","c":"SqlCollation","l":"getCollationName()"},{"p":"org.apache.calcite.schema","c":"Statistic","l":"getCollations()"},{"p":"org.apache.calcite.rex","c":"RexProgram","l":"getCollations(List<RelCollation>)","u":"getCollations(java.util.List)"},{"p":"org.apache.calcite.rel.core","c":"Aggregate.PercentileDiscAggCallBinding","l":"getCollationType()"},{"p":"org.apache.calcite.sql","c":"SqlOperatorBinding","l":"getCollationType()"},{"p":"org.apache.calcite.sql","c":"SqlWithinGroupOperator.PercentileDiscCallBinding","l":"getCollationType()"},{"p":"org.apache.calcite.jdbc","c":"JavaCollation","l":"getCollator()"},{"p":"org.apache.calcite.sql","c":"SqlCollation","l":"getCollator()"},{"p":"org.apache.calcite.sql","c":"SqlDataTypeSpec","l":"getCollectionsTypeName()"},{"p":"org.apache.calcite.rel.core","c":"Collect","l":"getCollectionType()"},{"p":"org.apache.calcite.sql","c":"SqlDescribeTable","l":"getColumn()"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"getColumnConstraints(ModifiableView, RelDataType, RelDataTypeFactory)","u":"getColumnConstraints(org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.sql","c":"SqlCallBinding","l":"getColumnListParamInfo(int, String, List<String>)","u":"getColumnListParamInfo(int,java.lang.String,java.util.List)"},{"p":"org.apache.calcite.sql","c":"SqlOperatorBinding","l":"getColumnListParamInfo(int, String, List<String>)","u":"getColumnListParamInfo(int,java.lang.String,java.util.List)"},{"p":"org.apache.calcite.schema.impl","c":"ModifiableViewTable","l":"getColumnMapping()"},{"p":"org.apache.calcite.schema","c":"ModifiableView","l":"getColumnMapping()"},{"p":"org.apache.calcite.rel.core","c":"TableFunctionScan","l":"getColumnMappings()"},{"p":"org.apache.calcite.sql.type","c":"TableFunctionReturnTypeInference","l":"getColumnMappings()"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Blackboard","l":"getColumnMonotonicities()"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaColumnFactory","l":"getColumnNames()"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaTableFactory","l":"getColumnNames()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserPos","l":"getColumnNum()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"getColumnOrigin(RelNode, int)","u":"getColumnOrigin(org.apache.calcite.rel.RelNode,int)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdColumnOrigins","l":"getColumnOrigins(Aggregate, RelMetadataQuery, int)","u":"getColumnOrigins(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,int)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdColumnOrigins","l":"getColumnOrigins(Calc, RelMetadataQuery, int)","u":"getColumnOrigins(org.apache.calcite.rel.core.Calc,org.apache.calcite.rel.metadata.RelMetadataQuery,int)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdColumnOrigins","l":"getColumnOrigins(Exchange, RelMetadataQuery, int)","u":"getColumnOrigins(org.apache.calcite.rel.core.Exchange,org.apache.calcite.rel.metadata.RelMetadataQuery,int)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdColumnOrigins","l":"getColumnOrigins(Filter, RelMetadataQuery, int)","u":"getColumnOrigins(org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.metadata.RelMetadataQuery,int)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.ColumnOrigin","l":"getColumnOrigins(int)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdColumnOrigins","l":"getColumnOrigins(Join, RelMetadataQuery, int)","u":"getColumnOrigins(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,int)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdColumnOrigins","l":"getColumnOrigins(Project, RelMetadataQuery, int)","u":"getColumnOrigins(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,int)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"getColumnOrigins(RelNode, int)","u":"getColumnOrigins(org.apache.calcite.rel.RelNode,int)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.ColumnOrigin.Handler","l":"getColumnOrigins(RelNode, RelMetadataQuery, int)","u":"getColumnOrigins(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery,int)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdColumnOrigins","l":"getColumnOrigins(RelNode, RelMetadataQuery, int)","u":"getColumnOrigins(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery,int)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdColumnOrigins","l":"getColumnOrigins(Sample, RelMetadataQuery, int)","u":"getColumnOrigins(org.apache.calcite.rel.core.Sample,org.apache.calcite.rel.metadata.RelMetadataQuery,int)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdColumnOrigins","l":"getColumnOrigins(SetOp, RelMetadataQuery, int)","u":"getColumnOrigins(org.apache.calcite.rel.core.SetOp,org.apache.calcite.rel.metadata.RelMetadataQuery,int)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdColumnOrigins","l":"getColumnOrigins(Snapshot, RelMetadataQuery, int)","u":"getColumnOrigins(org.apache.calcite.rel.core.Snapshot,org.apache.calcite.rel.metadata.RelMetadataQuery,int)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdColumnOrigins","l":"getColumnOrigins(Sort, RelMetadataQuery, int)","u":"getColumnOrigins(org.apache.calcite.rel.core.Sort,org.apache.calcite.rel.metadata.RelMetadataQuery,int)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdColumnOrigins","l":"getColumnOrigins(TableFunctionScan, RelMetadataQuery, int)","u":"getColumnOrigins(org.apache.calcite.rel.core.TableFunctionScan,org.apache.calcite.rel.metadata.RelMetadataQuery,int)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdColumnOrigins","l":"getColumnOrigins(TableModify, RelMetadataQuery, int)","u":"getColumnOrigins(org.apache.calcite.rel.core.TableModify,org.apache.calcite.rel.metadata.RelMetadataQuery,int)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdColumnOrigins","l":"getColumnOrigins(TableScan, RelMetadataQuery, int)","u":"getColumnOrigins(org.apache.calcite.rel.core.TableScan,org.apache.calcite.rel.metadata.RelMetadataQuery,int)"},{"p":"org.apache.calcite.rel","c":"RelReferentialConstraint","l":"getColumnPairs()"},{"p":"org.apache.calcite.rel","c":"RelReferentialConstraintImpl","l":"getColumnPairs()"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaImpl","l":"getColumns(Meta.ConnectionHandle, String, Meta.Pat, Meta.Pat, Meta.Pat)","u":"getColumns(org.apache.calcite.avatica.Meta.ConnectionHandle,java.lang.String,org.apache.calcite.avatica.Meta.Pat,org.apache.calcite.avatica.Meta.Pat,org.apache.calcite.avatica.Meta.Pat)"},{"p":"org.apache.calcite.plan","c":"RelOptAbstractTable","l":"getColumnStrategies()"},{"p":"org.apache.calcite.plan","c":"RelOptTable","l":"getColumnStrategies()"},{"p":"org.apache.calcite.prepare","c":"Prepare.AbstractPreparingTable","l":"getColumnStrategies()"},{"p":"org.apache.calcite.sql.test","c":"AbstractSqlTester","l":"getColumnType(SqlTestFactory, String)","u":"getColumnType(org.apache.calcite.sql.test.SqlTestFactory,java.lang.String)"},{"p":"org.apache.calcite.sql.test","c":"SqlTester","l":"getColumnType(SqlTestFactory, String)","u":"getColumnType(org.apache.calcite.sql.test.SqlTestFactory,java.lang.String)"},{"p":"org.apache.calcite.util","c":"XmlOutput","l":"getCompact()"},{"p":"org.apache.calcite.rel.type","c":"RelDataType","l":"getComparability()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeImpl","l":"getComparability()"},{"p":"org.apache.calcite.rel.type","c":"SingleColumnAliasRelDataType","l":"getComparability()"},{"p":"org.apache.calcite.sql.type","c":"ObjectSqlType","l":"getComparability()"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisorGetHintsFunction","l":"getCompletionHints(SqlAdvisor, String, int)","u":"getCompletionHints(org.apache.calcite.sql.advise.SqlAdvisor,java.lang.String,int)"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisorGetHintsFunction2","l":"getCompletionHints(SqlAdvisor, String, int)","u":"getCompletionHints(org.apache.calcite.sql.advise.SqlAdvisor,java.lang.String,int)"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisor","l":"getCompletionHints(String, int, String[])","u":"getCompletionHints(java.lang.String,int,java.lang.String[])"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisor","l":"getCompletionHints(String, SqlParserPos)","u":"getCompletionHints(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisor","l":"getCompletionHints0(String, int)","u":"getCompletionHints0(java.lang.String,int)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidTable","l":"getComplexMetricsFrom(String)","u":"getComplexMetricsFrom(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlIdentifier","l":"getComponent(int)"},{"p":"org.apache.calcite.sql","c":"SqlIdentifier","l":"getComponent(int, int)","u":"getComponent(int,int)"},{"p":"org.apache.calcite.sql","c":"SqlIdentifier","l":"getComponentParserPosition(int)"},{"p":"org.apache.calcite.linq4j.tree","c":"Types.ArrayType","l":"getComponentType()"},{"p":"org.apache.calcite.rel.type","c":"RelDataType","l":"getComponentType()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactoryImpl.JavaType","l":"getComponentType()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeImpl","l":"getComponentType()"},{"p":"org.apache.calcite.rel.type","c":"SingleColumnAliasRelDataType","l":"getComponentType()"},{"p":"org.apache.calcite.sql.type","c":"ArraySqlType","l":"getComponentType()"},{"p":"org.apache.calcite.sql.type","c":"MultisetSqlType","l":"getComponentType()"},{"p":"org.apache.calcite.sql.fun","c":"SqlMultisetValueConstructor","l":"getComponentType(RelDataTypeFactory, List<RelDataType>)","u":"getComponentType(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List)"},{"p":"org.apache.calcite.linq4j.tree","c":"Types","l":"getComponentType(Type)","u":"getComponentType(java.lang.reflect.Type)"},{"p":"org.apache.calcite.sql.type","c":"NonNullableAccessors","l":"getComponentTypeOrThrow(RelDataType)","u":"getComponentTypeOrThrow(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql","c":"SqlDataTypeSpec","l":"getComponentTypeSpec()"},{"p":"org.apache.calcite.linq4j.tree","c":"BlockBuilder","l":"getComputedExpression(Expression)","u":"getComputedExpression(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.rel.core","c":"Filter","l":"getCondition()"},{"p":"org.apache.calcite.rel.core","c":"Join","l":"getCondition()"},{"p":"org.apache.calcite.rel.rules","c":"HyperEdge","l":"getCondition()"},{"p":"org.apache.calcite.rex","c":"RexProgram","l":"getCondition()"},{"p":"org.apache.calcite.sql","c":"SqlDelete","l":"getCondition()"},{"p":"org.apache.calcite.sql","c":"SqlJoin","l":"getCondition()"},{"p":"org.apache.calcite.sql","c":"SqlMerge","l":"getCondition()"},{"p":"org.apache.calcite.sql","c":"SqlUpdate","l":"getCondition()"},{"p":"org.apache.calcite.sql.validate","c":"SqlNonNullableAccessors","l":"getCondition(SqlJoin)","u":"getCondition(org.apache.calcite.sql.SqlJoin)"},{"p":"org.apache.calcite.sql","c":"SqlJoin","l":"getConditionType()"},{"p":"org.apache.calcite.sql","c":"SqlJoin","l":"getConditionTypeNode()"},{"p":"org.apache.calcite.prepare","c":"CalciteCatalogReader","l":"getConfig()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorCatalogReader","l":"getConfig()"},{"p":"org.apache.calcite.tools","c":"Frameworks.PrepareAction","l":"getConfig()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRelImplementor","l":"getConformance()"},{"p":"org.apache.calcite.plan","c":"RelImplementor","l":"getConformance()"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"getConformance()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"getConformance()"},{"p":"org.apache.calcite.test","c":"SqlToRelFixture","l":"getConformance()"},{"p":"org.apache.calcite.jdbc","c":"CalciteStatement","l":"getConnection()"},{"p":"org.apache.calcite.server","c":"CalciteServerStatement","l":"getConnection()"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery","l":"getConnectionConfig()"},{"p":"org.apache.calcite.jdbc","c":"Driver","l":"getConnectionProperties()"},{"p":"org.apache.calcite.adapter.splunk","c":"SplunkDriver","l":"getConnectStringPrefix()"},{"p":"org.apache.calcite.jdbc","c":"Driver","l":"getConnectStringPrefix()"},{"p":"org.apache.calcite.sql.type","c":"ComparableOperandTypeChecker","l":"getConsistency()"},{"p":"org.apache.calcite.sql.type","c":"SqlOperandTypeChecker","l":"getConsistency()"},{"p":"org.apache.calcite.rel.core","c":"Window","l":"getConstants()"},{"p":"org.apache.calcite.schema.impl","c":"ModifiableViewTable","l":"getConstraint(RexBuilder, RelDataType)","u":"getConstraint(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.schema","c":"ModifiableView","l":"getConstraint(RexBuilder, RelDataType)","u":"getConstraint(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockViewTable","l":"getConstraint(RexBuilder, RelDataType)","u":"getConstraint(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.externalize","c":"RelJson","l":"getConstructor(String)","u":"getConstructor(java.lang.String)"},{"p":"org.apache.calcite.adapter.kafka","c":"KafkaTableOptions","l":"getConsumer()"},{"p":"org.apache.calcite.adapter.kafka","c":"KafkaTableOptions","l":"getConsumerParams()"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"getContext()"},{"p":"org.apache.calcite.plan","c":"RelOptPlanner","l":"getContext()"},{"p":"org.apache.calcite.tools","c":"FrameworkConfig","l":"getContext()"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"getContext(RelOptCluster)","u":"getContext(org.apache.calcite.plan.RelOptCluster)"},{"p":"org.apache.calcite.plan","c":"RelTraitSet","l":"getConvention()"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"getConvention()"},{"p":"org.apache.calcite.rel","c":"RelNode","l":"getConvention()"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"getConvertFuncByConformance(SqlConformance)","u":"getConvertFuncByConformance(org.apache.calcite.sql.validate.SqlConformance)"},{"p":"org.apache.calcite.tools","c":"FrameworkConfig","l":"getConvertletTable()"},{"p":"org.apache.calcite.rel.rules","c":"MultiJoin","l":"getCopyJoinFieldRefCountsMap()"},{"p":"org.apache.calcite.rel.core","c":"Correlate","l":"getCorrelationId()"},{"p":"org.apache.calcite.plan","c":"RelOptQuery","l":"getCorrelOrdinal(String)","u":"getCorrelOrdinal(java.lang.String)"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"getCorrelVariable()"},{"p":"org.apache.calcite.rel.core","c":"Correlate","l":"getCorrelVariable()"},{"p":"org.apache.calcite.rel","c":"RelNode","l":"getCorrelVariable()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRelImplementor","l":"getCorrelVariableGetter(String)","u":"getCorrelVariableGetter(java.lang.String)"},{"p":"org.apache.calcite.rex","c":"RexProgram","l":"getCorrelVariableNames()"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"getCost(RelNode)","u":"getCost(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan","c":"RelOptPlanner","l":"getCost(RelNode)","u":"getCost(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"getCost(RelNode, RelMetadataQuery)","u":"getCost(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.plan","c":"RelOptPlanner","l":"getCost(RelNode, RelMetadataQuery)","u":"getCost(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"getCost(RelNode, RelMetadataQuery)","u":"getCost(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.rules","c":"LoptOptimizeJoinRule.CostFunction","l":"getCost(RelOptRuleCall, RelNode)","u":"getCost(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"getCostFactory()"},{"p":"org.apache.calcite.plan","c":"RelOptPlanner","l":"getCostFactory()"},{"p":"org.apache.calcite.tools","c":"FrameworkConfig","l":"getCostFactory()"},{"p":"org.apache.calcite.plan","c":"RelOptCost","l":"getCpu()"},{"p":"org.apache.calcite.plan","c":"RelOptCostImpl","l":"getCpu()"},{"p":"org.apache.calcite.adapter.utils","c":"OsQueryTableUtil","l":"getCpuInfo()"},{"p":"org.apache.calcite.adapter.utils","c":"OsQueryTableUtil","l":"getCpuTimeInfo()"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.CumulativeCost","l":"getCumulativeCost()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPercentageOriginalRows","l":"getCumulativeCost(EnumerableInterpreter, RelMetadataQuery)","u":"getCumulativeCost(org.apache.calcite.adapter.enumerable.EnumerableInterpreter,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"getCumulativeCost(RelNode)","u":"getCumulativeCost(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.CumulativeCost.Handler","l":"getCumulativeCost(RelNode, RelMetadataQuery)","u":"getCumulativeCost(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPercentageOriginalRows","l":"getCumulativeCost(RelNode, RelMetadataQuery)","u":"getCumulativeCost(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.plan.hep","c":"HepRelVertex","l":"getCurrentRel()"},{"p":"org.apache.calcite.sql","c":"SqlCallBinding","l":"getCursorOperand(int)"},{"p":"org.apache.calcite.sql","c":"SqlOperatorBinding","l":"getCursorOperand(int)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"getCursorScope(SqlSelect)","u":"getCursorScope(org.apache.calcite.sql.SqlSelect)"},{"p":"org.apache.calcite.adapter.redis","c":"RedisConfig","l":"getDatabase()"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"getDatabaseProduct()"},{"p":"org.apache.calcite.sql","c":"SqlUtil.DatabaseMetaDataInvocationHandler","l":"getDatabaseProductName()"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaImpl","l":"getDatabaseProperties(Meta.ConnectionHandle)","u":"getDatabaseProperties(org.apache.calcite.avatica.Meta.ConnectionHandle)"},{"p":"org.apache.calcite.interpreter","c":"Compiler","l":"getDataContext()"},{"p":"org.apache.calcite.interpreter","c":"Nodes.CoreCompiler","l":"getDataContext()"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.Context","l":"getDataContext()"},{"p":"org.apache.calcite.adapter.redis","c":"RedisTableFieldInfo","l":"getDataFormat()"},{"p":"org.apache.calcite.adapter.file","c":"JsonTable","l":"getDataList(RelDataTypeFactory)","u":"getDataList(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcCatalogSchema","l":"getDataSource()"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcSchema","l":"getDataSource()"},{"p":"org.apache.calcite.sql","c":"SqlDateLiteral","l":"getDate()"},{"p":"org.apache.calcite.util","c":"DateTimeStringUtils","l":"getDateFormatter(String)","u":"getDateFormatter(java.lang.String)"},{"p":"org.apache.calcite.util","c":"DateTimeStringUtils","l":"getDateFormatter(String, TimeZone)","u":"getDateFormatter(java.lang.String,java.util.TimeZone)"},{"p":"org.apache.calcite.util","c":"DateString","l":"getDaysSinceEpoch()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserImplFactory","l":"getDdlExecutor()"},{"p":"org.apache.calcite.linq4j.tree","c":"ArrayLengthRecordField","l":"getDeclaringClass()"},{"p":"org.apache.calcite.linq4j.tree","c":"PseudoField","l":"getDeclaringClass()"},{"p":"org.apache.calcite.linq4j.tree","c":"ReflectedPseudoField","l":"getDeclaringClass()"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"getDeclName()"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"getDecorrelator()"},{"p":"org.apache.calcite.plan","c":"RelOptPlanner","l":"getDecorrelator()"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.AllPredicates.Handler","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Collation.Handler","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.ColumnOrigin.Handler","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.ColumnUniqueness.Handler","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.CumulativeCost.Handler","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.DistinctRowCount.Handler","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Distribution.Handler","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.ExplainVisibility.Handler","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.ExpressionLineage.Handler","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.LowerBoundCost.Handler","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.MaxRowCount.Handler","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Measure.Handler","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Memory.Handler","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.MinRowCount.Handler","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.NodeTypes.Handler","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.NonCumulativeCost.Handler","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Parallelism.Handler","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.PercentageOriginalRows.Handler","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.PopulationSize.Handler","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Predicates.Handler","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.RowCount.Handler","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Selectivity.Handler","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Size.Handler","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.TableReferences.Handler","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.UniqueKeys.Handler","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"MetadataHandler","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdAllPredicates","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdCollation","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdColumnOrigins","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdColumnUniqueness","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdDistinctRowCount","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdDistribution","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdExplainVisibility","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdExpressionLineage","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdLowerBoundCost","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMaxRowCount","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMeasure","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMemory","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMinRowCount","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdNodeTypes","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdParallelism","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPopulationSize","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPredicates","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdRowCount","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdSelectivity","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdSize","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdTableReferences","l":"getDef()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUniqueKeys","l":"getDef()"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"getDef()"},{"p":"org.apache.calcite.plan","c":"ConventionTraitDef","l":"getDefault()"},{"p":"org.apache.calcite.plan","c":"RelTraitDef","l":"getDefault()"},{"p":"org.apache.calcite.plan","c":"RelTraitSet","l":"getDefault()"},{"p":"org.apache.calcite.rel","c":"RelCollationTraitDef","l":"getDefault()"},{"p":"org.apache.calcite.rel","c":"RelDistributionTraitDef","l":"getDefault()"},{"p":"org.apache.calcite.runtime","c":"SocketFactoryImpl","l":"getDefault()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory","l":"getDefaultCharset()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactoryImpl","l":"getDefaultCharset()"},{"p":"org.apache.calcite.util","c":"Util","l":"getDefaultCharset()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFamily","l":"getDefaultConcreteType(RelDataTypeFactory)","u":"getDefaultConcreteType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture.MetadataConfig","l":"getDefaultHandlerProvider()"},{"p":"org.apache.calcite.rel.type","c":"DelegatingTypeSystem","l":"getDefaultPrecision(SqlTypeName)","u":"getDefaultPrecision(org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystem","l":"getDefaultPrecision(SqlTypeName)","u":"getDefaultPrecision(org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystemImpl","l":"getDefaultPrecision(SqlTypeName)","u":"getDefaultPrecision(org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.plan","c":"RelTraitSet","l":"getDefaultSansConvention()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"getDefaultScale()"},{"p":"org.apache.calcite.rel.type","c":"DelegatingTypeSystem","l":"getDefaultScale(SqlTypeName)","u":"getDefaultScale(org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystem","l":"getDefaultScale(SqlTypeName)","u":"getDefaultScale(org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystemImpl","l":"getDefaultScale(SqlTypeName)","u":"getDefaultScale(org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.tools","c":"FrameworkConfig","l":"getDefaultSchema()"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.Context","l":"getDefaultSchemaPath()"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcCatalogSchema","l":"getDefaultSubSchemaName()"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"getDelegateType(Class...)","u":"getDelegateType(java.lang.Class...)"},{"p":"org.apache.calcite.sql","c":"SqlExplain","l":"getDepth()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableBatchNestedLoopJoin","l":"getDeriveMode()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableCorrelate","l":"getDeriveMode()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableHashJoin","l":"getDeriveMode()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableMergeJoin","l":"getDeriveMode()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableNestedLoopJoin","l":"getDeriveMode()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRel","l":"getDeriveMode()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableTableScan","l":"getDeriveMode()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableValues","l":"getDeriveMode()"},{"p":"org.apache.calcite.rel","c":"PhysicalNode","l":"getDeriveMode()"},{"p":"org.apache.calcite.util","c":"PartiallyOrderedSet","l":"getDescendants(E)"},{"p":"org.apache.calcite.plan","c":"RelOptNode","l":"getDescription()"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"getDescription()"},{"p":"org.apache.calcite.util.format","c":"FormatElement","l":"getDescription()"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"getDescription()"},{"p":"org.apache.calcite.prepare","c":"Prepare","l":"getDesiredRootTraitSet(RelRoot)","u":"getDesiredRootTraitSet(org.apache.calcite.rel.RelRoot)"},{"p":"org.apache.calcite.rel.externalize","c":"RelJsonWriter","l":"getDetailLevel()"},{"p":"org.apache.calcite.rel.externalize","c":"RelWriterImpl","l":"getDetailLevel()"},{"p":"org.apache.calcite.rel","c":"RelWriter","l":"getDetailLevel()"},{"p":"org.apache.calcite.sql","c":"SqlExplain","l":"getDetailLevel()"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"getDialect()"},{"p":"org.apache.calcite.sql","c":"SqlDialect.DatabaseProduct","l":"getDialect()"},{"p":"org.apache.calcite.sql","c":"SqlWriter","l":"getDialect()"},{"p":"org.apache.calcite.sql.util","c":"SqlBuilder","l":"getDialect()"},{"p":"org.apache.calcite.sql.util","c":"SqlString","l":"getDialect()"},{"p":"org.apache.calcite.plan.hep","c":"HepRelVertex","l":"getDigest()"},{"p":"org.apache.calcite.plan","c":"RelOptNode","l":"getDigest()"},{"p":"org.apache.calcite.plan.volcano","c":"RelSubset","l":"getDigest()"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"getDigest()"},{"p":"org.apache.calcite.rel","c":"RelNode","l":"getDigest()"},{"p":"org.apache.calcite.adapter.druid","c":"DefaultDimensionSpec","l":"getDimension()"},{"p":"org.apache.calcite.adapter.druid","c":"DimensionSpec","l":"getDimension()"},{"p":"org.apache.calcite.adapter.druid","c":"ExtractionDimensionSpec","l":"getDimension()"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Measure.Context","l":"getDimensionCount()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMeasure.DelegatingContext","l":"getDimensionCount()"},{"p":"org.apache.calcite.rel","c":"RelFieldCollation","l":"getDirection()"},{"p":"org.apache.calcite.rex","c":"RexFieldCollation","l":"getDirection()"},{"p":"org.apache.calcite.sql.fun","c":"SqlAnyValueAggFunction","l":"getDistinctOptionality()"},{"p":"org.apache.calcite.sql.fun","c":"SqlBasicAggFunction","l":"getDistinctOptionality()"},{"p":"org.apache.calcite.sql.fun","c":"SqlBitOpAggFunction","l":"getDistinctOptionality()"},{"p":"org.apache.calcite.sql.fun","c":"SqlMinMaxAggFunction","l":"getDistinctOptionality()"},{"p":"org.apache.calcite.sql.fun","c":"SqlSingleValueAggFunction","l":"getDistinctOptionality()"},{"p":"org.apache.calcite.sql","c":"SqlAggFunction","l":"getDistinctOptionality()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdDistinctRowCount","l":"getDistinctRowCount(Aggregate, RelMetadataQuery, ImmutableBitSet, RexNode)","u":"getDistinctRowCount(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdDistinctRowCount","l":"getDistinctRowCount(Exchange, RelMetadataQuery, ImmutableBitSet, RexNode)","u":"getDistinctRowCount(org.apache.calcite.rel.core.Exchange,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdDistinctRowCount","l":"getDistinctRowCount(Filter, RelMetadataQuery, ImmutableBitSet, RexNode)","u":"getDistinctRowCount(org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.DistinctRowCount","l":"getDistinctRowCount(ImmutableBitSet, RexNode)","u":"getDistinctRowCount(org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdDistinctRowCount","l":"getDistinctRowCount(Join, RelMetadataQuery, ImmutableBitSet, RexNode)","u":"getDistinctRowCount(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdDistinctRowCount","l":"getDistinctRowCount(Project, RelMetadataQuery, ImmutableBitSet, RexNode)","u":"getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"getDistinctRowCount(RelNode, ImmutableBitSet, RexNode)","u":"getDistinctRowCount(org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.DistinctRowCount.Handler","l":"getDistinctRowCount(RelNode, RelMetadataQuery, ImmutableBitSet, RexNode)","u":"getDistinctRowCount(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdDistinctRowCount","l":"getDistinctRowCount(RelNode, RelMetadataQuery, ImmutableBitSet, RexNode)","u":"getDistinctRowCount(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdDistinctRowCount","l":"getDistinctRowCount(RelSubset, RelMetadataQuery, ImmutableBitSet, RexNode)","u":"getDistinctRowCount(org.apache.calcite.plan.volcano.RelSubset,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdDistinctRowCount","l":"getDistinctRowCount(Sort, RelMetadataQuery, ImmutableBitSet, RexNode)","u":"getDistinctRowCount(org.apache.calcite.rel.core.Sort,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdDistinctRowCount","l":"getDistinctRowCount(TableModify, RelMetadataQuery, ImmutableBitSet, RexNode)","u":"getDistinctRowCount(org.apache.calcite.rel.core.TableModify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdDistinctRowCount","l":"getDistinctRowCount(TableScan, RelMetadataQuery, ImmutableBitSet, RexNode)","u":"getDistinctRowCount(org.apache.calcite.rel.core.TableScan,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdDistinctRowCount","l":"getDistinctRowCount(Union, RelMetadataQuery, ImmutableBitSet, RexNode)","u":"getDistinctRowCount(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdDistinctRowCount","l":"getDistinctRowCount(Values, RelMetadataQuery, ImmutableBitSet, RexNode)","u":"getDistinctRowCount(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.plan","c":"RelOptAbstractTable","l":"getDistribution()"},{"p":"org.apache.calcite.plan","c":"RelOptTable","l":"getDistribution()"},{"p":"org.apache.calcite.plan","c":"RelTraitSet","l":"getDistribution()"},{"p":"org.apache.calcite.prepare","c":"RelOptTableImpl","l":"getDistribution()"},{"p":"org.apache.calcite.rel.core","c":"Exchange","l":"getDistribution()"},{"p":"org.apache.calcite.rel","c":"RelInput","l":"getDistribution()"},{"p":"org.apache.calcite.schema","c":"Statistic","l":"getDistribution()"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"getDistribution()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"getDistribution(RelNode)","u":"getDistribution(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive.Source","l":"getDouble()"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery","l":"getDruidTable()"},{"p":"org.apache.calcite.adapter.druid","c":"ComplexMetric","l":"getDruidType()"},{"p":"org.apache.calcite.util.trace","c":"CalciteTrace","l":"getDynamicHandler()"},{"p":"org.apache.calcite.sql","c":"SqlExplain","l":"getDynamicParamCount()"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"getDynamicParamCount()"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"getDynamicParamCountInExplain(boolean)"},{"p":"org.apache.calcite.sql.util","c":"SqlString","l":"getDynamicParameters()"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"getDynamicParamType(int)"},{"p":"org.apache.calcite.util.graph","c":"AttributedDirectedGraph","l":"getEdge(V, V)","u":"getEdge(V,V)"},{"p":"org.apache.calcite.util.graph","c":"DefaultDirectedGraph","l":"getEdge(V, V)","u":"getEdge(V,V)"},{"p":"org.apache.calcite.util.graph","c":"DirectedGraph","l":"getEdge(V, V)","u":"getEdge(V,V)"},{"p":"org.apache.calcite.rel.rules","c":"HyperGraph","l":"getEdges()"},{"p":"org.apache.calcite.util.graph","c":"AttributedDirectedGraph","l":"getEdges(V, V)","u":"getEdges(V,V)"},{"p":"org.apache.calcite.util.format","c":"FormatModel","l":"getElementMap()"},{"p":"org.apache.calcite.adapter.arrow","c":"ArrowTable","l":"getElementType()"},{"p":"org.apache.calcite.adapter.csv","c":"CsvTranslatableTable","l":"getElementType()"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery","l":"getElementType()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableBindable","l":"getElementType()"},{"p":"org.apache.calcite.adapter.file","c":"CsvTranslatableTable","l":"getElementType()"},{"p":"org.apache.calcite.adapter.java","c":"AbstractQueryableTable","l":"getElementType()"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableAggregate","l":"getElementType()"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableFilter","l":"getElementType()"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableIntersect","l":"getElementType()"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableJoin","l":"getElementType()"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableMatch","l":"getElementType()"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableMinus","l":"getElementType()"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableProject","l":"getElementType()"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableSort","l":"getElementType()"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableTableScan","l":"getElementType()"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableUnion","l":"getElementType()"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableValues","l":"getElementType()"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableWindow","l":"getElementType()"},{"p":"org.apache.calcite.interpreter","c":"InterpretableConverter","l":"getElementType()"},{"p":"org.apache.calcite.linq4j","c":"BaseQueryable","l":"getElementType()"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults.NonLeafReplayableQueryable","l":"getElementType()"},{"p":"org.apache.calcite.linq4j","c":"RawQueryable","l":"getElementType()"},{"p":"org.apache.calcite.prepare","c":"Prepare.PreparedResultImpl","l":"getElementType()"},{"p":"org.apache.calcite.rel.core","c":"TableFunctionScan","l":"getElementType()"},{"p":"org.apache.calcite.runtime","c":"ArrayBindable","l":"getElementType()"},{"p":"org.apache.calcite.runtime","c":"Typed","l":"getElementType()"},{"p":"org.apache.calcite.schema.impl","c":"AbstractTableQueryable","l":"getElementType()"},{"p":"org.apache.calcite.schema.impl","c":"ListTransientTable","l":"getElementType()"},{"p":"org.apache.calcite.schema","c":"QueryableTable","l":"getElementType()"},{"p":"org.apache.calcite.schema.impl","c":"TableFunctionImpl","l":"getElementType(List<? extends Object>)","u":"getElementType(java.util.List)"},{"p":"org.apache.calcite.schema","c":"TableFunction","l":"getElementType(List<? extends Object>)","u":"getElementType(java.util.List)"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisorGetHintsFunction","l":"getElementType(List<? extends Object>)","u":"getElementType(java.util.List)"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisorGetHintsFunction2","l":"getElementType(List<? extends Object>)","u":"getElementType(java.util.List)"},{"p":"org.apache.calcite.sql.validate","c":"SqlUserDefinedTableFunction","l":"getElementType(SqlOperatorBinding)","u":"getElementType(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.linq4j.tree","c":"Types","l":"getElementType(Type)","u":"getElementType(java.lang.reflect.Type)"},{"p":"org.apache.calcite.sql","c":"SqlCollectionTypeNameSpec","l":"getElementTypeName()"},{"p":"org.apache.calcite.sql.fun","c":"SqlCase","l":"getElseOperand()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"getEmptyScope()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"getEmptyScope()"},{"p":"org.apache.calcite.prepare","c":"PlannerImpl","l":"getEmptyTraitSet()"},{"p":"org.apache.calcite.tools","c":"Planner","l":"getEmptyTraitSet()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"getEnclosingAggregateSelectScope(SqlValidatorScope)","u":"getEnclosingAggregateSelectScope(org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql.validate","c":"MatchRecognizeNamespace","l":"getEnclosingNode()"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingNamespace","l":"getEnclosingNode()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorNamespace","l":"getEnclosingNode()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"getEnclosingSelectScope(SqlValidatorScope)","u":"getEnclosingSelectScope(org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisor.ValidateErrorInfo","l":"getEndColumnNum()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserPos","l":"getEndColumnNum()"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisor.ValidateErrorInfo","l":"getEndLineNum()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserPos","l":"getEndLineNum()"},{"p":"org.apache.calcite.runtime","c":"CalciteContextException","l":"getEndPosColumn()"},{"p":"org.apache.calcite.runtime","c":"CalciteContextException","l":"getEndPosLine()"},{"p":"org.apache.calcite.runtime","c":"DeterministicAutomaton","l":"getEndStates()"},{"p":"org.apache.calcite.sql","c":"SqlIntervalQualifier","l":"getEndUnit()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"getEndUnit()"},{"p":"org.apache.calcite.rex","c":"RexTableInputRef.RelTableRef","l":"getEntityNumber()"},{"p":"org.apache.calcite.rel","c":"RelInput","l":"getEnum(String, Class<E>)","u":"getEnum(java.lang.String,java.lang.Class)"},{"p":"org.apache.calcite.adapter.os","c":"OsQuery","l":"getEnumerator()"},{"p":"org.apache.calcite.runtime","c":"Automaton","l":"getEpsilonTransitions()"},{"p":"org.apache.calcite.rel.core","c":"JoinInfo","l":"getEquiCondition(RelNode, RelNode, RexBuilder)","u":"getEquiCondition(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexBuilder)"},{"p":"org.apache.calcite.plan","c":"RelOptListener.RelEquivalenceEvent","l":"getEquivalenceClass()"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule.EquivalenceClasses","l":"getEquivalenceClasses()"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule.EquivalenceClasses","l":"getEquivalenceClassesMap()"},{"p":"org.apache.calcite.adapter.enumerable","c":"WinAggContext","l":"getExclude()"},{"p":"org.apache.calcite.rex","c":"RexWindow","l":"getExclude()"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"getExclude()"},{"p":"org.apache.calcite.rex","c":"RexExecutorImpl","l":"getExecutable(RexBuilder, List<RexNode>, RelDataType)","u":"getExecutable(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"getExecutor()"},{"p":"org.apache.calcite.plan","c":"RelOptPlanner","l":"getExecutor()"},{"p":"org.apache.calcite.tools","c":"FrameworkConfig","l":"getExecutor()"},{"p":"org.apache.calcite.sql.validate","c":"SelectScope","l":"getExpandedSelectList()"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"getExpectedInputRowType(int)"},{"p":"org.apache.calcite.rel.core","c":"TableModify","l":"getExpectedInputRowType(int)"},{"p":"org.apache.calcite.rel","c":"RelNode","l":"getExpectedInputRowType(int)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParseException","l":"getExpectedTokenNames()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParseException","l":"getExpectedTokenSequences()"},{"p":"org.apache.calcite.sql","c":"SqlExplain","l":"getExplicandum()"},{"p":"org.apache.calcite.rex","c":"RexProgram","l":"getExprCount()"},{"p":"org.apache.calcite.adapter.druid","c":"VirtualColumn","l":"getExpression()"},{"p":"org.apache.calcite.linq4j","c":"BaseQueryable","l":"getExpression()"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults.NonLeafReplayableQueryable","l":"getExpression()"},{"p":"org.apache.calcite.linq4j","c":"RawQueryable","l":"getExpression()"},{"p":"org.apache.calcite.rex","c":"RexLambda","l":"getExpression()"},{"p":"org.apache.calcite.schema.impl","c":"AbstractTableQueryable","l":"getExpression()"},{"p":"org.apache.calcite.sql","c":"SqlLambda","l":"getExpression()"},{"p":"org.apache.calcite.plan","c":"RelOptAbstractTable","l":"getExpression(Class)","u":"getExpression(java.lang.Class)"},{"p":"org.apache.calcite.plan","c":"RelOptTable","l":"getExpression(Class)","u":"getExpression(java.lang.Class)"},{"p":"org.apache.calcite.prepare","c":"RelOptTableImpl","l":"getExpression(Class)","u":"getExpression(java.lang.Class)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"getExpression(Class)","u":"getExpression(java.lang.Class)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcBaseSchema","l":"getExpression(SchemaPlus, String)","u":"getExpression(org.apache.calcite.schema.SchemaPlus,java.lang.String)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcSchema","l":"getExpression(SchemaPlus, String)","u":"getExpression(org.apache.calcite.schema.SchemaPlus,java.lang.String)"},{"p":"org.apache.calcite.schema.impl","c":"AbstractSchema","l":"getExpression(SchemaPlus, String)","u":"getExpression(org.apache.calcite.schema.SchemaPlus,java.lang.String)"},{"p":"org.apache.calcite.schema.impl","c":"DelegatingSchema","l":"getExpression(SchemaPlus, String)","u":"getExpression(org.apache.calcite.schema.SchemaPlus,java.lang.String)"},{"p":"org.apache.calcite.schema","c":"Schema","l":"getExpression(SchemaPlus, String)","u":"getExpression(org.apache.calcite.schema.SchemaPlus,java.lang.String)"},{"p":"org.apache.calcite.adapter.arrow","c":"ArrowTable","l":"getExpression(SchemaPlus, String, Class)","u":"getExpression(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.lang.Class)"},{"p":"org.apache.calcite.adapter.csv","c":"CsvTranslatableTable","l":"getExpression(SchemaPlus, String, Class)","u":"getExpression(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.lang.Class)"},{"p":"org.apache.calcite.adapter.file","c":"CsvTranslatableTable","l":"getExpression(SchemaPlus, String, Class)","u":"getExpression(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.lang.Class)"},{"p":"org.apache.calcite.adapter.java","c":"AbstractQueryableTable","l":"getExpression(SchemaPlus, String, Class)","u":"getExpression(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.lang.Class)"},{"p":"org.apache.calcite.schema.impl","c":"ListTransientTable","l":"getExpression(SchemaPlus, String, Class)","u":"getExpression(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.lang.Class)"},{"p":"org.apache.calcite.schema","c":"QueryableTable","l":"getExpression(SchemaPlus, String, Class)","u":"getExpression(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.lang.Class)"},{"p":"org.apache.calcite.util","c":"Smalls.SimpleTable","l":"getExpression(SchemaPlus, String, Class)","u":"getExpression(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.lang.Class)"},{"p":"org.apache.calcite.rel","c":"RelInput","l":"getExpression(String)","u":"getExpression(java.lang.String)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdExpressionLineage","l":"getExpressionLineage(Aggregate, RelMetadataQuery, RexNode)","u":"getExpressionLineage(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdExpressionLineage","l":"getExpressionLineage(Calc, RelMetadataQuery, RexNode)","u":"getExpressionLineage(org.apache.calcite.rel.core.Calc,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdExpressionLineage","l":"getExpressionLineage(Exchange, RelMetadataQuery, RexNode)","u":"getExpressionLineage(org.apache.calcite.rel.core.Exchange,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdExpressionLineage","l":"getExpressionLineage(Filter, RelMetadataQuery, RexNode)","u":"getExpressionLineage(org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdExpressionLineage","l":"getExpressionLineage(Join, RelMetadataQuery, RexNode)","u":"getExpressionLineage(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdExpressionLineage","l":"getExpressionLineage(Project, RelMetadataQuery, RexNode)","u":"getExpressionLineage(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.ExpressionLineage.Handler","l":"getExpressionLineage(RelNode, RelMetadataQuery, RexNode)","u":"getExpressionLineage(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdExpressionLineage","l":"getExpressionLineage(RelNode, RelMetadataQuery, RexNode)","u":"getExpressionLineage(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"getExpressionLineage(RelNode, RexNode)","u":"getExpressionLineage(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdExpressionLineage","l":"getExpressionLineage(RelSubset, RelMetadataQuery, RexNode)","u":"getExpressionLineage(org.apache.calcite.plan.volcano.RelSubset,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.ExpressionLineage","l":"getExpressionLineage(RexNode)","u":"getExpressionLineage(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdExpressionLineage","l":"getExpressionLineage(Sample, RelMetadataQuery, RexNode)","u":"getExpressionLineage(org.apache.calcite.rel.core.Sample,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdExpressionLineage","l":"getExpressionLineage(Snapshot, RelMetadataQuery, RexNode)","u":"getExpressionLineage(org.apache.calcite.rel.core.Snapshot,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdExpressionLineage","l":"getExpressionLineage(Sort, RelMetadataQuery, RexNode)","u":"getExpressionLineage(org.apache.calcite.rel.core.Sort,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdExpressionLineage","l":"getExpressionLineage(TableModify, RelMetadataQuery, RexNode)","u":"getExpressionLineage(org.apache.calcite.rel.core.TableModify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdExpressionLineage","l":"getExpressionLineage(TableScan, RelMetadataQuery, RexNode)","u":"getExpressionLineage(org.apache.calcite.rel.core.TableScan,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdExpressionLineage","l":"getExpressionLineage(Union, RelMetadataQuery, RexNode)","u":"getExpressionLineage(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel","c":"RelInput","l":"getExpressionList(String)","u":"getExpressionList(java.lang.String)"},{"p":"org.apache.calcite.rex","c":"RexProgram","l":"getExprList()"},{"p":"org.apache.calcite.schema","c":"ExtensibleTable","l":"getExtendedColumnOffset()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"getExtendedColumns(SqlValidator, SqlValidatorTable, SqlNodeList)","u":"getExtendedColumns(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.adapter.druid","c":"DefaultDimensionSpec","l":"getExtractionFn()"},{"p":"org.apache.calcite.adapter.druid","c":"DimensionSpec","l":"getExtractionFn()"},{"p":"org.apache.calcite.adapter.druid","c":"ExtractionDimensionSpec","l":"getExtractionFn()"},{"p":"org.apache.calcite.rel.rules","c":"LoptMultiJoin","l":"getFactorsRefByFactor(int)"},{"p":"org.apache.calcite.rel.rules","c":"LoptMultiJoin","l":"getFactorsRefByJoinFilter(RexNode)","u":"getFactorsRefByJoinFilter(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.rules","c":"LoptJoinTree","l":"getFactorTree()"},{"p":"org.apache.calcite.rel.rules","c":"LoptMultiJoin","l":"getFactorWeights()"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"getFactory()"},{"p":"org.apache.calcite.jdbc","c":"Driver","l":"getFactoryClassName(UnregisteredDriver.JdbcVersion)","u":"getFactoryClassName(org.apache.calcite.avatica.UnregisteredDriver.JdbcVersion)"},{"p":"org.apache.calcite.materialize","c":"Lattice","l":"getFactRowCount()"},{"p":"org.apache.calcite.rex","c":"RexChecker","l":"getFailureCount()"},{"p":"org.apache.calcite.rel.type","c":"DynamicRecordTypeImpl","l":"getFamily()"},{"p":"org.apache.calcite.rel.type","c":"RelDataType","l":"getFamily()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactoryImpl.JavaType","l":"getFamily()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeImpl","l":"getFamily()"},{"p":"org.apache.calcite.rel.type","c":"SingleColumnAliasRelDataType","l":"getFamily()"},{"p":"org.apache.calcite.sql.type","c":"AbstractSqlType","l":"getFamily()"},{"p":"org.apache.calcite.sql.type","c":"ArraySqlType","l":"getFamily()"},{"p":"org.apache.calcite.sql.type","c":"FunctionSqlType","l":"getFamily()"},{"p":"org.apache.calcite.sql.type","c":"MapSqlType","l":"getFamily()"},{"p":"org.apache.calcite.sql.type","c":"MultisetSqlType","l":"getFamily()"},{"p":"org.apache.calcite.sql.type","c":"ObjectSqlType","l":"getFamily()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"getFamily()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFamily","l":"getFamilyForJdbcType(int)"},{"p":"org.apache.calcite.sql","c":"SqlSelect","l":"getFetch()"},{"p":"org.apache.calcite.rex","c":"RexFieldAccess","l":"getField()"},{"p":"org.apache.calcite.runtime.rtti","c":"RowSqlTypeRtti","l":"getField(int)"},{"p":"org.apache.calcite.piglet","c":"DynamicTupleRecordType","l":"getField(String, boolean, boolean)","u":"getField(java.lang.String,boolean,boolean)"},{"p":"org.apache.calcite.rel.type","c":"DynamicRecordTypeImpl","l":"getField(String, boolean, boolean)","u":"getField(java.lang.String,boolean,boolean)"},{"p":"org.apache.calcite.rel.type","c":"RelDataType","l":"getField(String, boolean, boolean)","u":"getField(java.lang.String,boolean,boolean)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeImpl","l":"getField(String, boolean, boolean)","u":"getField(java.lang.String,boolean,boolean)"},{"p":"org.apache.calcite.rel.type","c":"SingleColumnAliasRelDataType","l":"getField(String, boolean, boolean)","u":"getField(java.lang.String,boolean,boolean)"},{"p":"org.apache.calcite.rex","c":"RexUtil.FieldAccessFinder","l":"getFieldAccessList()"},{"p":"org.apache.calcite.rel","c":"RelCollation","l":"getFieldCollations()"},{"p":"org.apache.calcite.rel","c":"RelCollationImpl","l":"getFieldCollations()"},{"p":"org.apache.calcite.rel.type","c":"DynamicRecordTypeImpl","l":"getFieldCount()"},{"p":"org.apache.calcite.rel.type","c":"RelDataType","l":"getFieldCount()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory.Builder","l":"getFieldCount()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory.FieldInfo","l":"getFieldCount()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeImpl","l":"getFieldCount()"},{"p":"org.apache.calcite.rel.type","c":"SingleColumnAliasRelDataType","l":"getFieldCount()"},{"p":"org.apache.calcite.rel","c":"RelFieldCollation","l":"getFieldIndex()"},{"p":"org.apache.calcite.rel.type","c":"DynamicRecordTypeImpl","l":"getFieldList()"},{"p":"org.apache.calcite.rel.type","c":"RelDataType","l":"getFieldList()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeImpl","l":"getFieldList()"},{"p":"org.apache.calcite.rel.type","c":"SingleColumnAliasRelDataType","l":"getFieldList()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeImpl","l":"getFieldMap()"},{"p":"org.apache.calcite.rel.type","c":"RelRecordType","l":"getFieldMap()"},{"p":"org.apache.calcite.rel.core","c":"Collect","l":"getFieldName()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory.Builder","l":"getFieldName(int)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory.FieldInfo","l":"getFieldName(int)"},{"p":"org.apache.calcite.adapter.pig","c":"PigRel.Implementor","l":"getFieldName(RelNode, int)","u":"getFieldName(org.apache.calcite.rel.RelNode,int)"},{"p":"org.apache.calcite.rel.type","c":"DynamicRecordTypeImpl","l":"getFieldNames()"},{"p":"org.apache.calcite.rel.type","c":"RelDataType","l":"getFieldNames()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeImpl","l":"getFieldNames()"},{"p":"org.apache.calcite.rel.type","c":"SingleColumnAliasRelDataType","l":"getFieldNames()"},{"p":"org.apache.calcite.sql","c":"SqlRowTypeNameSpec","l":"getFieldNames()"},{"p":"org.apache.calcite.prepare","c":"Prepare.PreparedExplain","l":"getFieldOrigins()"},{"p":"org.apache.calcite.prepare","c":"Prepare.PreparedResult","l":"getFieldOrigins()"},{"p":"org.apache.calcite.prepare","c":"Prepare.PreparedResultImpl","l":"getFieldOrigins()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"getFieldOrigins(SqlNode)","u":"getFieldOrigins(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"getFieldOrigins(SqlNode)","u":"getFieldOrigins(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.adapter.redis","c":"RedisTableFieldInfo","l":"getFields()"},{"p":"org.apache.calcite.piglet","c":"PigRelBuilder","l":"getFields(int, int, int)","u":"getFields(int,int,int)"},{"p":"org.apache.calcite.rel.rules","c":"LoptMultiJoin","l":"getFieldsRefByJoinFilter(RexNode)","u":"getFieldsRefByJoinFilter(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.adapter.splunk","c":"SplunkPushDownRule","l":"getFieldsString(RelDataType)","u":"getFieldsString(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory.Builder","l":"getFieldType(int)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory.FieldInfo","l":"getFieldType(int)"},{"p":"org.apache.calcite.runtime.rtti","c":"RowSqlTypeRtti","l":"getFieldType(Object)","u":"getFieldType(java.lang.Object)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"getFieldTypeList(RelDataType)","u":"getFieldTypeList(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql","c":"SqlRowTypeNameSpec","l":"getFieldTypes()"},{"p":"org.apache.calcite.adapter.csv","c":"CsvTable","l":"getFieldTypes(RelDataTypeFactory)","u":"getFieldTypes(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.adapter.file","c":"CsvTable","l":"getFieldTypes(RelDataTypeFactory)","u":"getFieldTypes(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.util.javac","c":"JavaCompilerArgs","l":"getFileNames()"},{"p":"org.apache.calcite.adapter.pig","c":"PigTable","l":"getFilePath()"},{"p":"org.apache.calcite.util","c":"Util","l":"getFileTimestamp()"},{"p":"org.apache.calcite.sql.validate","c":"SemanticTable","l":"getFilter(int)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MustFilterMockTable","l":"getFilter(int)"},{"p":"org.apache.calcite.sql.validate","c":"MatchRecognizeNamespace","l":"getFilterRequirement()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorNamespace","l":"getFilterRequirement()"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Measure.Context","l":"getFilters(RelBuilder)","u":"getFilters(org.apache.calcite.tools.RelBuilder)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMeasure.DelegatingContext","l":"getFilters(RelBuilder)","u":"getFilters(org.apache.calcite.tools.RelBuilder)"},{"p":"org.apache.calcite.adapter.spark","c":"SparkRules.SparkCalc","l":"getFlags()"},{"p":"org.apache.calcite.rel.core","c":"Project","l":"getFlags()"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive.Source","l":"getFloat()"},{"p":"org.apache.calcite.rel","c":"RelInput","l":"getFloat(String)","u":"getFloat(java.lang.String)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewAggregateRule","l":"getFloorSqlFunction(TimeUnitRange)","u":"getFloorSqlFunction(org.apache.calcite.avatica.util.TimeUnitRange)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbTableScan","l":"getForceIndexName()"},{"p":"org.apache.calcite.adapter.druid","c":"TimeExtractionFunction","l":"getFormat()"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysType","l":"getFormat()"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysTypeImpl","l":"getFormat()"},{"p":"org.apache.calcite.sql","c":"SqlExplain","l":"getFormat()"},{"p":"org.apache.calcite.sql.dialect","c":"BigQuerySqlDialect","l":"getFormatModel()"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"getFormatModel()"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"getFormatPattern(int)"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"CompiledItem","l":"getFormatPatternLength()"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"CompiledPattern","l":"getFormatPatternLength()"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"LiteralCompiledItem","l":"getFormatPatternLength()"},{"p":"org.apache.calcite.sql","c":"SqlIntervalQualifier","l":"getFractionalSecondPrecision(RelDataTypeSystem)","u":"getFractionalSecondPrecision(org.apache.calcite.rel.type.RelDataTypeSystem)"},{"p":"org.apache.calcite.sql","c":"SqlIntervalQualifier","l":"getFractionalSecondPrecisionPreservingDefault()"},{"p":"org.apache.calcite.adapter.enumerable.impl","c":"WinAggResetContextImpl","l":"getFrameRowCount()"},{"p":"org.apache.calcite.adapter.enumerable.impl","c":"WinAggResultContextImpl","l":"getFrameRowCount()"},{"p":"org.apache.calcite.adapter.enumerable","c":"WinAggFrameContext","l":"getFrameRowCount()"},{"p":"org.apache.calcite.sql","c":"SqlSelect","l":"getFrom()"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"getFromNode(SqlSelect, int)","u":"getFromNode(org.apache.calcite.sql.SqlSelect,int)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"getFromScope(SqlSelect)","u":"getFromScope(org.apache.calcite.sql.SqlSelect)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"getFromScope(SqlSelect)","u":"getFromScope(org.apache.calcite.sql.SqlSelect)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"getFullTypeDifferenceString(String, RelDataType, String, RelDataType)","u":"getFullTypeDifferenceString(java.lang.String,org.apache.calcite.rel.type.RelDataType,java.lang.String,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.type","c":"RelDataType","l":"getFullTypeString()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeImpl","l":"getFullTypeString()"},{"p":"org.apache.calcite.rel.type","c":"SingleColumnAliasRelDataType","l":"getFullTypeString()"},{"p":"org.apache.calcite.sql.validate","c":"SqlIdentifierMoniker","l":"getFullyQualifiedNames()"},{"p":"org.apache.calcite.sql.validate","c":"SqlMoniker","l":"getFullyQualifiedNames()"},{"p":"org.apache.calcite.sql.validate","c":"SqlMonikerImpl","l":"getFullyQualifiedNames()"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema.FunctionEntry","l":"getFunction()"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema.FunctionEntryImpl","l":"getFunction()"},{"p":"org.apache.calcite.linq4j.tree","c":"FunctionExpression","l":"getFunction()"},{"p":"org.apache.calcite.rex","c":"RexExecutable","l":"getFunction()"},{"p":"org.apache.calcite.sql.validate","c":"SqlUserDefinedFunction","l":"getFunction()"},{"p":"org.apache.calcite.sql.validate","c":"SqlUserDefinedTableFunction","l":"getFunction()"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"getFunctionKind()"},{"p":"org.apache.calcite.adapter.java","c":"ReflectiveSchema","l":"getFunctionMultimap()"},{"p":"org.apache.calcite.schema.impl","c":"AbstractSchema","l":"getFunctionMultimap()"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcBaseSchema","l":"getFunctionNames()"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"getFunctionNames()"},{"p":"org.apache.calcite.schema.impl","c":"AbstractSchema","l":"getFunctionNames()"},{"p":"org.apache.calcite.schema.impl","c":"DelegatingSchema","l":"getFunctionNames()"},{"p":"org.apache.calcite.schema","c":"Schema","l":"getFunctionNames()"},{"p":"org.apache.calcite.sql","c":"SqlBasicCall","l":"getFunctionQuantifier()"},{"p":"org.apache.calcite.sql","c":"SqlCall","l":"getFunctionQuantifier()"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaImpl","l":"getFunctions(Meta.ConnectionHandle, String, Meta.Pat, Meta.Pat)","u":"getFunctions(org.apache.calcite.avatica.Meta.ConnectionHandle,java.lang.String,org.apache.calcite.avatica.Meta.Pat,org.apache.calcite.avatica.Meta.Pat)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcBaseSchema","l":"getFunctions(String)","u":"getFunctions(java.lang.String)"},{"p":"org.apache.calcite.schema.impl","c":"AbstractSchema","l":"getFunctions(String)","u":"getFunctions(java.lang.String)"},{"p":"org.apache.calcite.schema.impl","c":"DelegatingSchema","l":"getFunctions(String)","u":"getFunctions(java.lang.String)"},{"p":"org.apache.calcite.schema","c":"Schema","l":"getFunctions(String)","u":"getFunctions(java.lang.String)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"getFunctions(String, boolean)","u":"getFunctions(java.lang.String,boolean)"},{"p":"org.apache.calcite.sql","c":"SqlFunction","l":"getFunctionType()"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"getFuncType(Class...)","u":"getFuncType(java.lang.Class...)"},{"p":"org.apache.calcite.rel.metadata.janino","c":"RelMetadataHandlerGeneratorUtil.HandlerNameAndGeneratedCode","l":"getGeneratedCode()"},{"p":"org.apache.calcite.adapter.druid","c":"TimeExtractionFunction","l":"getGranularity()"},{"p":"org.apache.calcite.sql","c":"SqlSelect","l":"getGroup()"},{"p":"org.apache.calcite.rel.core","c":"Aggregate.AggCallBinding","l":"getGroupCount()"},{"p":"org.apache.calcite.rel.core","c":"Aggregate","l":"getGroupCount()"},{"p":"org.apache.calcite.sql","c":"SqlCallBinding","l":"getGroupCount()"},{"p":"org.apache.calcite.sql","c":"SqlOperatorBinding","l":"getGroupCount()"},{"p":"org.apache.calcite.sql2rel","c":"SqlRexContext","l":"getGroupCount()"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Blackboard","l":"getGroupCount()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"getGroupScope(SqlSelect)","u":"getGroupScope(org.apache.calcite.sql.SqlSelect)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"getGroupScope(SqlSelect)","u":"getGroupScope(org.apache.calcite.sql.SqlSelect)"},{"p":"org.apache.calcite.rel.core","c":"Aggregate","l":"getGroupSet()"},{"p":"org.apache.calcite.rel.core","c":"Aggregate","l":"getGroupSets()"},{"p":"org.apache.calcite.rel.core","c":"Aggregate","l":"getGroupType()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableAggregate","l":"getGroupType()"},{"p":"org.apache.calcite.util","c":"TestUtil","l":"getGuavaMajorVersion()"},{"p":"org.apache.calcite.rel.metadata.janino","c":"RelMetadataHandlerGeneratorUtil.HandlerNameAndGeneratedCode","l":"getHandlerName()"},{"p":"org.apache.calcite.sql","c":"SqlSelect","l":"getHaving()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"getHavingScope(SqlSelect)","u":"getHavingScope(org.apache.calcite.sql.SqlSelect)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"getHavingScope(SqlSelect)","u":"getHavingScope(org.apache.calcite.sql.SqlSelect)"},{"p":"org.apache.calcite.rel.core","c":"Aggregate","l":"getHints()"},{"p":"org.apache.calcite.rel.core","c":"Calc","l":"getHints()"},{"p":"org.apache.calcite.rel.core","c":"Correlate","l":"getHints()"},{"p":"org.apache.calcite.rel.core","c":"Filter","l":"getHints()"},{"p":"org.apache.calcite.rel.core","c":"Join","l":"getHints()"},{"p":"org.apache.calcite.rel.core","c":"Project","l":"getHints()"},{"p":"org.apache.calcite.rel.core","c":"SetOp","l":"getHints()"},{"p":"org.apache.calcite.rel.core","c":"Snapshot","l":"getHints()"},{"p":"org.apache.calcite.rel.core","c":"Sort","l":"getHints()"},{"p":"org.apache.calcite.rel.core","c":"TableFunctionScan","l":"getHints()"},{"p":"org.apache.calcite.rel.core","c":"TableScan","l":"getHints()"},{"p":"org.apache.calcite.rel.core","c":"Values","l":"getHints()"},{"p":"org.apache.calcite.rel.core","c":"Window","l":"getHints()"},{"p":"org.apache.calcite.rel.hint","c":"Hintable","l":"getHints()"},{"p":"org.apache.calcite.sql","c":"SqlSelect","l":"getHints()"},{"p":"org.apache.calcite.plan","c":"RelOptCluster","l":"getHintStrategies()"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Config","l":"getHintStrategyTable()"},{"p":"org.apache.calcite.adapter.redis","c":"RedisConfig","l":"getHost()"},{"p":"org.apache.calcite.plan","c":"RelOptNode","l":"getId()"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"getId()"},{"p":"org.apache.calcite.rel.core","c":"CorrelationId","l":"getId()"},{"p":"org.apache.calcite.rel.rules","c":"LoptJoinTree.Leaf","l":"getId()"},{"p":"org.apache.calcite.sql.validate","c":"IdentifierNamespace","l":"getId()"},{"p":"org.apache.calcite.rex","c":"RexTableInputRef","l":"getIdentifier()"},{"p":"org.apache.calcite.sql","c":"SqlUtil.DatabaseMetaDataInvocationHandler","l":"getIdentifierQuoteString()"},{"p":"org.apache.calcite.schema.lookup","c":"IgnoreCaseLookup","l":"getIgnoreCase(String)","u":"getIgnoreCase(java.lang.String)"},{"p":"org.apache.calcite.schema.lookup","c":"LoadingCacheLookup","l":"getIgnoreCase(String)","u":"getIgnoreCase(java.lang.String)"},{"p":"org.apache.calcite.schema.lookup","c":"Lookup","l":"getIgnoreCase(String)","u":"getIgnoreCase(java.lang.String)"},{"p":"org.apache.calcite.schema.lookup","c":"SnapshotLookup","l":"getIgnoreCase(String)","u":"getIgnoreCase(java.lang.String)"},{"p":"org.apache.calcite.util","c":"XmlOutput","l":"getIgnorePcdata()"},{"p":"org.apache.calcite.schema.impl","c":"ScalarFunctionImpl","l":"getImplementor()"},{"p":"org.apache.calcite.schema.impl","c":"TableFunctionImpl","l":"getImplementor()"},{"p":"org.apache.calcite.schema","c":"ImplementableFunction","l":"getImplementor()"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisorGetHintsFunction","l":"getImplementor()"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisorGetHintsFunction2","l":"getImplementor()"},{"p":"org.apache.calcite.schema.impl","c":"AggregateFunctionImpl","l":"getImplementor(boolean)"},{"p":"org.apache.calcite.schema","c":"ImplementableAggFunction","l":"getImplementor(boolean)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraFilter","l":"getImplicitCollation()"},{"p":"org.apache.calcite.adapter.innodb","c":"IndexCondition","l":"getImplicitCollation()"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbFilter","l":"getImplicitCollation()"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbTableScan","l":"getImplicitCollation()"},{"p":"org.apache.calcite.jdbc","c":"CalciteRootSchema","l":"getImplicitTableBasedOnNullaryFunction(String, boolean)","u":"getImplicitTableBasedOnNullaryFunction(java.lang.String,boolean)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"getImplicitTableBasedOnNullaryFunction(String, boolean)","u":"getImplicitTableBasedOnNullaryFunction(java.lang.String,boolean)"},{"p":"org.apache.calcite.jdbc","c":"CalciteRootSchema","l":"getImplicitType(String, boolean)","u":"getImplicitType(java.lang.String,boolean)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"getImplicitType(String, boolean)","u":"getImplicitType(java.lang.String,boolean)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlFormatOptions","l":"getIndentation()"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"getIndentation()"},{"p":"org.apache.calcite.sql","c":"SqlWriter","l":"getIndentation()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeField","l":"getIndex()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFieldImpl","l":"getIndex()"},{"p":"org.apache.calcite.rex","c":"RexDynamicParam","l":"getIndex()"},{"p":"org.apache.calcite.rex","c":"RexSlot","l":"getIndex()"},{"p":"org.apache.calcite.sql","c":"SqlDynamicParam","l":"getIndex()"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbTable","l":"getIndexesNameSet()"},{"p":"org.apache.calcite.adapter.innodb","c":"IndexCondition","l":"getIndexName()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"getIndexToFieldMap(List<RelDataTypeField>, RelDataType)","u":"getIndexToFieldMap(java.util.List,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.core","c":"Aggregate","l":"getIndicatorCount()"},{"p":"org.apache.calcite.adapter.os","c":"OsQueryType","l":"getInfo()"},{"p":"org.apache.calcite.sql2rel","c":"SqlRexContext","l":"getInitializerExpressionFactory()"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Blackboard","l":"getInitializerExpressionFactory()"},{"p":"org.apache.calcite.rel.convert","c":"Converter","l":"getInput()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableSort","l":"getInput()"},{"p":"org.apache.calcite.rel","c":"RelInput","l":"getInput()"},{"p":"org.apache.calcite.rel","c":"SingleRel","l":"getInput()"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"getInput(int)"},{"p":"org.apache.calcite.rel","c":"RelNode","l":"getInput(int)"},{"p":"org.apache.calcite.rex","c":"RexProgram","l":"getInputRowType()"},{"p":"org.apache.calcite.rex","c":"RexProgramBuilder","l":"getInputRowType()"},{"p":"org.apache.calcite.plan","c":"RelOptNode","l":"getInputs()"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"getInputs()"},{"p":"org.apache.calcite.rel","c":"BiRel","l":"getInputs()"},{"p":"org.apache.calcite.rel.core","c":"SetOp","l":"getInputs()"},{"p":"org.apache.calcite.rel.core","c":"TableFunctionScan","l":"getInputs()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableJoin","l":"getInputs()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableValues","l":"getInputs()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableSetOp","l":"getInputs()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableRel","l":"getInputs()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableSort","l":"getInputs()"},{"p":"org.apache.calcite.rel","c":"RelInput","l":"getInputs()"},{"p":"org.apache.calcite.rel","c":"RelNode","l":"getInputs()"},{"p":"org.apache.calcite.rel.rules","c":"HyperGraph","l":"getInputs()"},{"p":"org.apache.calcite.rel.rules","c":"MultiJoin","l":"getInputs()"},{"p":"org.apache.calcite.rel","c":"SingleRel","l":"getInputs()"},{"p":"org.apache.calcite.rel.convert","c":"Converter","l":"getInputTraits()"},{"p":"org.apache.calcite.rel.convert","c":"ConverterImpl","l":"getInputTraits()"},{"p":"org.apache.calcite.sql","c":"SqlMerge","l":"getInsertCall()"},{"p":"org.apache.calcite.runtime.variant","c":"VariantNull","l":"getInstance()"},{"p":"org.apache.calcite.util","c":"UnsafeX509ExtendedTrustManager","l":"getInstance()"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"getInSubqueryThreshold()"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Config","l":"getInSubQueryThreshold()"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive.Source","l":"getInt()"},{"p":"org.apache.calcite.util","c":"ImmutableIntList","l":"getInt(int)"},{"p":"org.apache.calcite.rel","c":"RelInput","l":"getIntegerList(String)","u":"getIntegerList(java.lang.String)"},{"p":"org.apache.calcite.rel","c":"RelInput","l":"getIntegerListList(String)","u":"getIntegerListList(java.lang.String)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableConvention","l":"getInterface()"},{"p":"org.apache.calcite.interpreter","c":"BindableConvention","l":"getInterface()"},{"p":"org.apache.calcite.interpreter","c":"InterpretableConvention","l":"getInterface()"},{"p":"org.apache.calcite.plan","c":"Convention","l":"getInterface()"},{"p":"org.apache.calcite.plan","c":"Convention.Impl","l":"getInterface()"},{"p":"org.apache.calcite.adapter.utils","c":"OsQueryTableUtil","l":"getInterfaceAddressesInfo()"},{"p":"org.apache.calcite.adapter.utils","c":"OsQueryTableUtil","l":"getInterfaceDetailsInfo()"},{"p":"org.apache.calcite.rel.core","c":"Match","l":"getInterval()"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize","l":"getInterval()"},{"p":"org.apache.calcite.sql","c":"SqlIntervalLiteral.IntervalValue","l":"getIntervalLiteral()"},{"p":"org.apache.calcite.rel.type","c":"RelDataType","l":"getIntervalQualifier()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeImpl","l":"getIntervalQualifier()"},{"p":"org.apache.calcite.rel.type","c":"SingleColumnAliasRelDataType","l":"getIntervalQualifier()"},{"p":"org.apache.calcite.sql","c":"SqlIntervalLiteral.IntervalValue","l":"getIntervalQualifier()"},{"p":"org.apache.calcite.sql.type","c":"IntervalSqlType","l":"getIntervalQualifier()"},{"p":"org.apache.calcite.sql","c":"SqlIntervalQualifier","l":"getIntervalSign(String)","u":"getIntervalSign(java.lang.String)"},{"p":"org.apache.calcite.rex","c":"RexCallBinding","l":"getIntLiteralOperand(int)"},{"p":"org.apache.calcite.sql","c":"SqlCallBinding","l":"getIntLiteralOperand(int)"},{"p":"org.apache.calcite.sql","c":"SqlOperatorBinding","l":"getIntLiteralOperand(int)"},{"p":"org.apache.calcite.rel.convert","c":"ConverterRule","l":"getInTrait()"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator","l":"getInvoke(RelNode, boolean, RelNode)","u":"getInvoke(org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.util.graph","c":"DefaultDirectedGraph","l":"getInwardEdges(V)"},{"p":"org.apache.calcite.util.graph","c":"DirectedGraph","l":"getInwardEdges(V)"},{"p":"org.apache.calcite.plan","c":"RelOptCost","l":"getIo()"},{"p":"org.apache.calcite.plan","c":"RelOptCostImpl","l":"getIo()"},{"p":"org.apache.calcite.adapter.utils","c":"OsQueryTableUtil","l":"getIPAddressesString(String[])","u":"getIPAddressesString(java.lang.String[])"},{"p":"org.apache.calcite.rel.core","c":"RepeatUnion","l":"getIterativeRel()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactoryImpl.JavaType","l":"getJavaClass()"},{"p":"org.apache.calcite.adapter.java","c":"JavaTypeFactory","l":"getJavaClass(RelDataType)","u":"getJavaClass(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.jdbc","c":"JavaTypeFactoryImpl","l":"getJavaClass(RelDataType)","u":"getJavaClass(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysType","l":"getJavaFieldType(int)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysTypeImpl","l":"getJavaFieldType(int)"},{"p":"org.apache.calcite.adapter.utils","c":"OsQueryTableUtil","l":"getJavaInfo()"},{"p":"org.apache.calcite.util","c":"TestUtil","l":"getJavaMajorVersion()"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysType","l":"getJavaRowType()"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysTypeImpl","l":"getJavaRowType()"},{"p":"org.apache.calcite.util","c":"TestUtil","l":"getJavaVirtualMachineVendor()"},{"p":"org.apache.calcite.jdbc","c":"CalciteFactory","l":"getJdbcMajorVersion()"},{"p":"org.apache.calcite.jdbc","c":"CalciteFactory","l":"getJdbcMinorVersion()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"getJdbcOrdinal()"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcTable","l":"getJdbcTableType()"},{"p":"org.apache.calcite.adapter.kafka","c":"KafkaStreamTable","l":"getJdbcTableType()"},{"p":"org.apache.calcite.schema.impl","c":"AbstractTable","l":"getJdbcTableType()"},{"p":"org.apache.calcite.schema.impl","c":"StarTable","l":"getJdbcTableType()"},{"p":"org.apache.calcite.schema.impl","c":"ViewTable","l":"getJdbcTableType()"},{"p":"org.apache.calcite.schema","c":"Table","l":"getJdbcTableType()"},{"p":"org.apache.calcite.sql.fun","c":"SqlSpatialTypeFunctions.ExplodeTable","l":"getJdbcTableType()"},{"p":"org.apache.calcite.sql.fun","c":"SqlSpatialTypeFunctions.GridTable","l":"getJdbcTableType()"},{"p":"org.apache.calcite.test.schemata.orderstream","c":"BaseOrderStreamTable","l":"getJdbcTableType()"},{"p":"org.apache.calcite.test.schemata.orderstream","c":"ProductsTable","l":"getJdbcTableType()"},{"p":"org.apache.calcite.test.schemata.orderstream","c":"ProductsTemporalTable","l":"getJdbcTableType()"},{"p":"org.apache.calcite.adapter.redis","c":"RedisJedisManager","l":"getJedisPool()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUtil","l":"getJoinDistinctRowCount(RelMetadataQuery, RelNode, JoinRelType, ImmutableBitSet, RexNode, boolean)","u":"getJoinDistinctRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode,boolean)"},{"p":"org.apache.calcite.rel.rules","c":"LoptMultiJoin","l":"getJoinFactor(int)"},{"p":"org.apache.calcite.rel.rules","c":"LoptMultiJoin","l":"getJoinFieldRefCounts(int)"},{"p":"org.apache.calcite.rel.rules","c":"MultiJoin","l":"getJoinFieldRefCountsMap()"},{"p":"org.apache.calcite.rel.rules","c":"LoptMultiJoin","l":"getJoinFields(LoptJoinTree, LoptJoinTree)","u":"getJoinFields(org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree)"},{"p":"org.apache.calcite.rel.rules","c":"MultiJoin","l":"getJoinFilter()"},{"p":"org.apache.calcite.rel.rules","c":"LoptMultiJoin","l":"getJoinFilters()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUtil","l":"getJoinPopulationSize(RelMetadataQuery, RelNode, ImmutableBitSet)","u":"getJoinPopulationSize(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.rel.rules","c":"LoptMultiJoin","l":"getJoinRemovalFactor(int)"},{"p":"org.apache.calcite.rel.rules","c":"LoptMultiJoin","l":"getJoinRemovalSemiJoin(int)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUtil","l":"getJoinRowCount(RelMetadataQuery, Join, RexNode)","u":"getJoinRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.core.Join,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"getJoinScope(SqlNode)","u":"getJoinScope(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"getJoinScope(SqlNode)","u":"getJoinScope(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.rel.rules","c":"LoptMultiJoin","l":"getJoinStart(int)"},{"p":"org.apache.calcite.rel.rules","c":"LoptJoinTree","l":"getJoinTree()"},{"p":"org.apache.calcite.rel.core","c":"Correlate","l":"getJoinType()"},{"p":"org.apache.calcite.rel.core","c":"Join","l":"getJoinType()"},{"p":"org.apache.calcite.rel.rules","c":"HyperEdge","l":"getJoinType()"},{"p":"org.apache.calcite.sql","c":"SqlJoin","l":"getJoinType()"},{"p":"org.apache.calcite.sql","c":"SqlJoin","l":"getJoinTypeNode()"},{"p":"org.apache.calcite.rel.rules","c":"MultiJoin","l":"getJoinTypes()"},{"p":"org.apache.calcite.plan.visualizer","c":"RuleMatchVisualizer","l":"getJsonStringResult()"},{"p":"org.apache.calcite.linq4j","c":"Grouping","l":"getKey()"},{"p":"org.apache.calcite.linq4j","c":"Ord","l":"getKey()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFieldImpl","l":"getKey()"},{"p":"org.apache.calcite.runtime","c":"MapEntry","l":"getKey()"},{"p":"org.apache.calcite.util","c":"Pair","l":"getKey()"},{"p":"org.apache.calcite.adapter.redis","c":"RedisTableFieldInfo","l":"getKeyDelimiter()"},{"p":"org.apache.calcite.plan","c":"RelOptAbstractTable","l":"getKeys()"},{"p":"org.apache.calcite.plan","c":"RelOptTable","l":"getKeys()"},{"p":"org.apache.calcite.prepare","c":"RelOptTableImpl","l":"getKeys()"},{"p":"org.apache.calcite.rel","c":"RelCollation","l":"getKeys()"},{"p":"org.apache.calcite.rel","c":"RelDistribution","l":"getKeys()"},{"p":"org.apache.calcite.schema","c":"Statistic","l":"getKeys()"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"getKeys()"},{"p":"org.apache.calcite.linq4j.tree","c":"Types.MapType","l":"getKeyType()"},{"p":"org.apache.calcite.rel.type","c":"RelDataType","l":"getKeyType()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactoryImpl.JavaType","l":"getKeyType()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeImpl","l":"getKeyType()"},{"p":"org.apache.calcite.rel.type","c":"SingleColumnAliasRelDataType","l":"getKeyType()"},{"p":"org.apache.calcite.sql","c":"SqlMapTypeNameSpec","l":"getKeyType()"},{"p":"org.apache.calcite.sql.type","c":"MapSqlType","l":"getKeyType()"},{"p":"org.apache.calcite.sql.type","c":"NonNullableAccessors","l":"getKeyTypeOrThrow(RelDataType)","u":"getKeyTypeOrThrow(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rex","c":"RexCall","l":"getKind()"},{"p":"org.apache.calcite.rex","c":"RexCorrelVariable","l":"getKind()"},{"p":"org.apache.calcite.rex","c":"RexDynamicParam","l":"getKind()"},{"p":"org.apache.calcite.rex","c":"RexFieldAccess","l":"getKind()"},{"p":"org.apache.calcite.rex","c":"RexInputRef","l":"getKind()"},{"p":"org.apache.calcite.rex","c":"RexLambda","l":"getKind()"},{"p":"org.apache.calcite.rex","c":"RexLambdaRef","l":"getKind()"},{"p":"org.apache.calcite.rex","c":"RexLiteral","l":"getKind()"},{"p":"org.apache.calcite.rex","c":"RexLocalRef","l":"getKind()"},{"p":"org.apache.calcite.rex","c":"RexNode","l":"getKind()"},{"p":"org.apache.calcite.rex","c":"RexPatternFieldRef","l":"getKind()"},{"p":"org.apache.calcite.rex","c":"RexTableInputRef","l":"getKind()"},{"p":"org.apache.calcite.sql.fun","c":"SqlCase","l":"getKind()"},{"p":"org.apache.calcite.sql","c":"SqlBasicCall","l":"getKind()"},{"p":"org.apache.calcite.sql","c":"SqlCall","l":"getKind()"},{"p":"org.apache.calcite.sql","c":"SqlDelete","l":"getKind()"},{"p":"org.apache.calcite.sql","c":"SqlDynamicParam","l":"getKind()"},{"p":"org.apache.calcite.sql","c":"SqlExplain","l":"getKind()"},{"p":"org.apache.calcite.sql","c":"SqlIdentifier","l":"getKind()"},{"p":"org.apache.calcite.sql","c":"SqlInsert","l":"getKind()"},{"p":"org.apache.calcite.sql","c":"SqlIntervalQualifier","l":"getKind()"},{"p":"org.apache.calcite.sql","c":"SqlJoin","l":"getKind()"},{"p":"org.apache.calcite.sql","c":"SqlLambda","l":"getKind()"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"getKind()"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize","l":"getKind()"},{"p":"org.apache.calcite.sql","c":"SqlMerge","l":"getKind()"},{"p":"org.apache.calcite.sql","c":"SqlNode","l":"getKind()"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"getKind()"},{"p":"org.apache.calcite.sql","c":"SqlOrderBy","l":"getKind()"},{"p":"org.apache.calcite.sql","c":"SqlSelect","l":"getKind()"},{"p":"org.apache.calcite.sql","c":"SqlSetOption","l":"getKind()"},{"p":"org.apache.calcite.sql","c":"SqlUpdate","l":"getKind()"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"getKind()"},{"p":"org.apache.calcite.sql","c":"SqlWith","l":"getKind()"},{"p":"org.apache.calcite.sql","c":"SqlWithItem","l":"getKind()"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"getKind()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"getLambdaScope(SqlLambda)","u":"getLambdaScope(org.apache.calcite.sql.SqlLambda)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"getLambdaScope(SqlLambda)","u":"getLambdaScope(org.apache.calcite.sql.SqlLambda)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema.LatticeEntry","l":"getLattice()"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema.LatticeEntryImpl","l":"getLattice()"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"getLattice(RelOptTable)","u":"getLattice(org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.plan","c":"RelOptPlanner","l":"getLattice(RelOptTable)","u":"getLattice(org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"getLattice(RelOptTable)","u":"getLattice(org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.schema","c":"Schemas","l":"getLatticeEntries(CalciteSchema)","u":"getLatticeEntries(org.apache.calcite.jdbc.CalciteSchema)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"getLatticeMap()"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl.CalcitePreparingStmt","l":"getLattices()"},{"p":"org.apache.calcite.prepare","c":"Prepare","l":"getLattices()"},{"p":"org.apache.calcite.schema","c":"Schemas","l":"getLattices(CalciteSchema)","u":"getLattices(org.apache.calcite.jdbc.CalciteSchema)"},{"p":"org.apache.calcite.materialize","c":"LatticeSuggester","l":"getLatticeSet()"},{"p":"org.apache.calcite.rel","c":"BiRel","l":"getLeft()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableJoin","l":"getLeft()"},{"p":"org.apache.calcite.rel.rules","c":"LoptJoinTree","l":"getLeft()"},{"p":"org.apache.calcite.rel.rules","c":"LoptJoinTree.Node","l":"getLeft()"},{"p":"org.apache.calcite.sql.fun","c":"SqlTrimFunction.Flag","l":"getLeft()"},{"p":"org.apache.calcite.sql","c":"SqlJoin","l":"getLeft()"},{"p":"org.apache.calcite.rel.core","c":"EquiJoin","l":"getLeftKeys()"},{"p":"org.apache.calcite.rel.rules","c":"HyperEdge","l":"getLeftNodeBitmap()"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"getLeftPrec()"},{"p":"org.apache.calcite.sql.type","c":"BasicSqlType","l":"getLimit(boolean, SqlTypeName.Limit, boolean)","u":"getLimit(boolean,org.apache.calcite.sql.type.SqlTypeName.Limit,boolean)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"getLimit(boolean, SqlTypeName.Limit, boolean, int, int)","u":"getLimit(boolean,org.apache.calcite.sql.type.SqlTypeName.Limit,boolean,int,int)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlFormatOptions","l":"getLineLength()"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"getLineLength()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserPos","l":"getLineNum()"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"getList()"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"getListener()"},{"p":"org.apache.calcite.rel.type","c":"DelegatingTypeSystem","l":"getLiteral(SqlTypeName, boolean)","u":"getLiteral(org.apache.calcite.sql.type.SqlTypeName,boolean)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystem","l":"getLiteral(SqlTypeName, boolean)","u":"getLiteral(org.apache.calcite.sql.type.SqlTypeName,boolean)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystemImpl","l":"getLiteral(SqlTypeName, boolean)","u":"getLiteral(org.apache.calcite.sql.type.SqlTypeName,boolean)"},{"p":"org.apache.calcite.util","c":"TimestampWithTimeZoneString","l":"getLocalDateString()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil.ParsedCollation","l":"getLocale()"},{"p":"org.apache.calcite.sql","c":"SqlCollation","l":"getLocale()"},{"p":"org.apache.calcite.util","c":"TimestampWithTimeZoneString","l":"getLocalTimestampString()"},{"p":"org.apache.calcite.util","c":"TimestampWithTimeZoneString","l":"getLocalTimeString()"},{"p":"org.apache.calcite.util","c":"TimeWithTimeZoneString","l":"getLocalTimeString()"},{"p":"org.apache.calcite.util.trace","c":"CalciteLogger","l":"getLogger()"},{"p":"org.apache.calcite.prepare","c":"CalciteSqlValidator","l":"getLogicalSourceRowType(RelDataType, SqlInsert)","u":"getLogicalSourceRowType(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlInsert)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"getLogicalSourceRowType(RelDataType, SqlInsert)","u":"getLogicalSourceRowType(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlInsert)"},{"p":"org.apache.calcite.prepare","c":"CalciteSqlValidator","l":"getLogicalTargetRowType(RelDataType, SqlInsert)","u":"getLogicalTargetRowType(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlInsert)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"getLogicalTargetRowType(RelDataType, SqlInsert)","u":"getLogicalTargetRowType(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlInsert)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive.Source","l":"getLong()"},{"p":"org.apache.calcite.sql","c":"SqlJdbcFunctionCall","l":"getLookupCall()"},{"p":"org.apache.calcite.rex","c":"RexWindow","l":"getLowerBound()"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"getLowerBound()"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"getLowerBound(RelNode)","u":"getLowerBound(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.LowerBoundCost.Handler","l":"getLowerBoundCost(RelNode, RelMetadataQuery, VolcanoPlanner)","u":"getLowerBoundCost(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.plan.volcano.VolcanoPlanner)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdLowerBoundCost","l":"getLowerBoundCost(RelNode, RelMetadataQuery, VolcanoPlanner)","u":"getLowerBoundCost(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.plan.volcano.VolcanoPlanner)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"getLowerBoundCost(RelNode, VolcanoPlanner)","u":"getLowerBoundCost(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.VolcanoPlanner)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdLowerBoundCost","l":"getLowerBoundCost(RelSubset, RelMetadataQuery, VolcanoPlanner)","u":"getLowerBoundCost(org.apache.calcite.plan.volcano.RelSubset,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.plan.volcano.VolcanoPlanner)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.LowerBoundCost","l":"getLowerBoundCost(VolcanoPlanner)","u":"getLowerBoundCost(org.apache.calcite.plan.volcano.VolcanoPlanner)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"getMapConvertedNonCorrSubqs()"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator.CorelMap","l":"getMapCorToCorRel()"},{"p":"org.apache.calcite.rel.core","c":"Project","l":"getMapping()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableProject","l":"getMapping()"},{"p":"org.apache.calcite.rel.core","c":"Project","l":"getMapping(int, List<? extends RexNode>)","u":"getMapping(int,java.util.List)"},{"p":"org.apache.calcite.util.mapping","c":"AbstractSourceMapping","l":"getMappingType()"},{"p":"org.apache.calcite.util.mapping","c":"AbstractTargetMapping","l":"getMappingType()"},{"p":"org.apache.calcite.util.mapping","c":"Mapping","l":"getMappingType()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.CoreMapping","l":"getMappingType()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.FunctionMapping","l":"getMappingType()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.IdentityMapping","l":"getMappingType()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.OverridingSourceMapping","l":"getMappingType()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.OverridingTargetMapping","l":"getMappingType()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.PartialMapping","l":"getMappingType()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.SourceMapping","l":"getMappingType()"},{"p":"org.apache.calcite.util","c":"Permutation","l":"getMappingType()"},{"p":"org.apache.calcite.rel.core","c":"AsofJoin","l":"getMatchCondition()"},{"p":"org.apache.calcite.sql","c":"SqlAsofJoin","l":"getMatchCondition()"},{"p":"org.apache.calcite.sql.validate","c":"SqlNonNullableAccessors","l":"getMatchCondition(SqlAsofJoin)","u":"getMatchCondition(org.apache.calcite.sql.SqlAsofJoin)"},{"p":"org.apache.calcite.plan","c":"RelOptRuleOperand","l":"getMatchedClass()"},{"p":"org.apache.calcite.sql.validate","c":"MatchRecognizeScope","l":"getMatchRecognize()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"getMatchRecognizeScope(SqlMatchRecognize)","u":"getMatchRecognizeScope(org.apache.calcite.sql.SqlMatchRecognize)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"getMatchRecognizeScope(SqlMatchRecognize)","u":"getMatchRecognizeScope(org.apache.calcite.sql.SqlMatchRecognize)"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"getMaterializations()"},{"p":"org.apache.calcite.plan.hep","c":"HepPlanner","l":"getMaterializations()"},{"p":"org.apache.calcite.plan","c":"RelOptPlanner","l":"getMaterializations()"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"getMaterializations()"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl.CalcitePreparingStmt","l":"getMaterializations()"},{"p":"org.apache.calcite.prepare","c":"Prepare","l":"getMaterializations()"},{"p":"org.apache.calcite.sql","c":"SqlOperandCountRange","l":"getMax()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"getMaxByteSize(RelDataType)","u":"getMaxByteSize(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.type","c":"DelegatingTypeSystem","l":"getMaxNumericPrecision()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystem","l":"getMaxNumericPrecision()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystemImpl","l":"getMaxNumericPrecision()"},{"p":"org.apache.calcite.rel.type","c":"DelegatingTypeSystem","l":"getMaxNumericScale()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystem","l":"getMaxNumericScale()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystemImpl","l":"getMaxNumericScale()"},{"p":"org.apache.calcite.rel.type","c":"DelegatingTypeSystem","l":"getMaxPrecision(SqlTypeName)","u":"getMaxPrecision(org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystem","l":"getMaxPrecision(SqlTypeName)","u":"getMaxPrecision(org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystemImpl","l":"getMaxPrecision(SqlTypeName)","u":"getMaxPrecision(org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"getMaxPrecisionScaleDecimal(RelDataTypeFactory)","u":"getMaxPrecisionScaleDecimal(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.MaxRowCount","l":"getMaxRowCount()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMaxRowCount","l":"getMaxRowCount(Aggregate, RelMetadataQuery)","u":"getMaxRowCount(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMaxRowCount","l":"getMaxRowCount(Calc, RelMetadataQuery)","u":"getMaxRowCount(org.apache.calcite.rel.core.Calc,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMaxRowCount","l":"getMaxRowCount(EnumerableLimit, RelMetadataQuery)","u":"getMaxRowCount(org.apache.calcite.adapter.enumerable.EnumerableLimit,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMaxRowCount","l":"getMaxRowCount(Exchange, RelMetadataQuery)","u":"getMaxRowCount(org.apache.calcite.rel.core.Exchange,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMaxRowCount","l":"getMaxRowCount(Filter, RelMetadataQuery)","u":"getMaxRowCount(org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMaxRowCount","l":"getMaxRowCount(Intersect, RelMetadataQuery)","u":"getMaxRowCount(org.apache.calcite.rel.core.Intersect,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMaxRowCount","l":"getMaxRowCount(Join, RelMetadataQuery)","u":"getMaxRowCount(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMaxRowCount","l":"getMaxRowCount(Minus, RelMetadataQuery)","u":"getMaxRowCount(org.apache.calcite.rel.core.Minus,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMaxRowCount","l":"getMaxRowCount(Project, RelMetadataQuery)","u":"getMaxRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"getMaxRowCount(RelNode)","u":"getMaxRowCount(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.MaxRowCount.Handler","l":"getMaxRowCount(RelNode, RelMetadataQuery)","u":"getMaxRowCount(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMaxRowCount","l":"getMaxRowCount(RelNode, RelMetadataQuery)","u":"getMaxRowCount(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"getMaxRowCount(RelNode, RelMetadataQuery)","u":"getMaxRowCount(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMaxRowCount","l":"getMaxRowCount(RelSubset, RelMetadataQuery)","u":"getMaxRowCount(org.apache.calcite.plan.volcano.RelSubset,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMaxRowCount","l":"getMaxRowCount(Sample, RelMetadataQuery)","u":"getMaxRowCount(org.apache.calcite.rel.core.Sample,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMaxRowCount","l":"getMaxRowCount(Sort, RelMetadataQuery)","u":"getMaxRowCount(org.apache.calcite.rel.core.Sort,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMaxRowCount","l":"getMaxRowCount(TableModify, RelMetadataQuery)","u":"getMaxRowCount(org.apache.calcite.rel.core.TableModify,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMaxRowCount","l":"getMaxRowCount(TableScan, RelMetadataQuery)","u":"getMaxRowCount(org.apache.calcite.rel.core.TableScan,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMaxRowCount","l":"getMaxRowCount(Union, RelMetadataQuery)","u":"getMaxRowCount(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMaxRowCount","l":"getMaxRowCount(Values, RelMetadataQuery)","u":"getMaxRowCount(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.type","c":"DelegatingTypeSystem","l":"getMaxScale(SqlTypeName)","u":"getMaxScale(org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystem","l":"getMaxScale(SqlTypeName)","u":"getMaxScale(org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystemImpl","l":"getMaxScale(SqlTypeName)","u":"getMaxScale(org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.util","c":"NumberUtil","l":"getMaxUnscaled(int)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"getMaxValue(RelDataType)","u":"getMaxValue(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"getMeasure(SqlNode)","u":"getMeasure(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.rel.type","c":"RelDataType","l":"getMeasureElementType()"},{"p":"org.apache.calcite.sql.type","c":"MeasureSqlType","l":"getMeasureElementType()"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize","l":"getMeasureList()"},{"p":"org.apache.calcite.rel.core","c":"Match","l":"getMeasures()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"getMeasureScope(SqlSelect)","u":"getMeasureScope(org.apache.calcite.sql.SqlSelect)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"getMeasureScope(SqlSelect)","u":"getMeasureScope(org.apache.calcite.sql.SqlSelect)"},{"p":"org.apache.calcite.adapter.utils","c":"OsQueryTableUtil","l":"getMemoryInfo()"},{"p":"org.apache.calcite.sql","c":"SqlSplittableAggFunction.AbstractSumSplitter","l":"getMergeAggFunctionOfTopSplit()"},{"p":"org.apache.calcite.sql","c":"SqlSplittableAggFunction.Sum0Splitter","l":"getMergeAggFunctionOfTopSplit()"},{"p":"org.apache.calcite.sql","c":"SqlSplittableAggFunction.SumSplitter","l":"getMergeAggFunctionOfTopSplit()"},{"p":"org.apache.calcite.runtime","c":"CalciteContextException","l":"getMessage()"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisor.ValidateErrorInfo","l":"getMessage()"},{"p":"org.apache.calcite.util","c":"Util","l":"getMessages(Throwable)","u":"getMessages(java.lang.Throwable)"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaColumnFactory","l":"getMetaColumnClass()"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaColumnFactoryImpl","l":"getMetaColumnClass()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser","l":"getMetadata()"},{"p":"org.apache.calcite.plan.hep","c":"HepRelVertex","l":"getMetadataDelegateRel()"},{"p":"org.apache.calcite.rel.metadata","c":"DelegatingMetadataRel","l":"getMetadataDelegateRel()"},{"p":"org.apache.calcite.plan","c":"RelOptCluster","l":"getMetadataFactory()"},{"p":"org.apache.calcite.plan","c":"RelOptCluster","l":"getMetadataProvider()"},{"p":"org.apache.calcite.plan","c":"RelOptCluster","l":"getMetadataQuery()"},{"p":"org.apache.calcite.plan","c":"RelOptRuleCall","l":"getMetadataQuery()"},{"p":"org.apache.calcite.plan","c":"RelOptCluster","l":"getMetadataQuerySupplier()"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaTableFactory","l":"getMetaTableClass()"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaTableFactoryImpl","l":"getMetaTableClass()"},{"p":"org.apache.calcite.linq4j","c":"Linq4j","l":"getMethod(String, String, Class...)","u":"getMethod(java.lang.String,java.lang.String,java.lang.Class...)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"getMethodName()"},{"p":"org.apache.calcite.adapter.druid","c":"ComplexMetric","l":"getMetricName()"},{"p":"org.apache.calcite.adapter.druid","c":"ComplexMetric","l":"getMetricType()"},{"p":"org.apache.calcite.util","c":"TimeString","l":"getMillisOfDay()"},{"p":"org.apache.calcite.util","c":"DateString","l":"getMillisSinceEpoch()"},{"p":"org.apache.calcite.util","c":"TimestampString","l":"getMillisSinceEpoch()"},{"p":"org.apache.calcite.sql","c":"SqlOperandCountRange","l":"getMin()"},{"p":"org.apache.calcite.sql.fun","c":"SqlMinMaxAggFunction","l":"getMinMaxKind()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"getMinPrecision()"},{"p":"org.apache.calcite.rel.type","c":"DelegatingTypeSystem","l":"getMinPrecision(SqlTypeName)","u":"getMinPrecision(org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystem","l":"getMinPrecision(SqlTypeName)","u":"getMinPrecision(org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystemImpl","l":"getMinPrecision(SqlTypeName)","u":"getMinPrecision(org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.MinRowCount","l":"getMinRowCount()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMinRowCount","l":"getMinRowCount(Aggregate, RelMetadataQuery)","u":"getMinRowCount(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMinRowCount","l":"getMinRowCount(Calc, RelMetadataQuery)","u":"getMinRowCount(org.apache.calcite.rel.core.Calc,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMinRowCount","l":"getMinRowCount(EnumerableLimit, RelMetadataQuery)","u":"getMinRowCount(org.apache.calcite.adapter.enumerable.EnumerableLimit,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMinRowCount","l":"getMinRowCount(Exchange, RelMetadataQuery)","u":"getMinRowCount(org.apache.calcite.rel.core.Exchange,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMinRowCount","l":"getMinRowCount(Filter, RelMetadataQuery)","u":"getMinRowCount(org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMinRowCount","l":"getMinRowCount(Intersect, RelMetadataQuery)","u":"getMinRowCount(org.apache.calcite.rel.core.Intersect,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMinRowCount","l":"getMinRowCount(Join, RelMetadataQuery)","u":"getMinRowCount(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMinRowCount","l":"getMinRowCount(Minus, RelMetadataQuery)","u":"getMinRowCount(org.apache.calcite.rel.core.Minus,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMinRowCount","l":"getMinRowCount(Project, RelMetadataQuery)","u":"getMinRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"getMinRowCount(RelNode)","u":"getMinRowCount(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.MinRowCount.Handler","l":"getMinRowCount(RelNode, RelMetadataQuery)","u":"getMinRowCount(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMinRowCount","l":"getMinRowCount(RelNode, RelMetadataQuery)","u":"getMinRowCount(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMinRowCount","l":"getMinRowCount(RelSubset, RelMetadataQuery)","u":"getMinRowCount(org.apache.calcite.plan.volcano.RelSubset,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMinRowCount","l":"getMinRowCount(Sample, RelMetadataQuery)","u":"getMinRowCount(org.apache.calcite.rel.core.Sample,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMinRowCount","l":"getMinRowCount(Sort, RelMetadataQuery)","u":"getMinRowCount(org.apache.calcite.rel.core.Sort,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMinRowCount","l":"getMinRowCount(TableModify, RelMetadataQuery)","u":"getMinRowCount(org.apache.calcite.rel.core.TableModify,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMinRowCount","l":"getMinRowCount(TableScan, RelMetadataQuery)","u":"getMinRowCount(org.apache.calcite.rel.core.TableScan,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMinRowCount","l":"getMinRowCount(Union, RelMetadataQuery)","u":"getMinRowCount(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMinRowCount","l":"getMinRowCount(Values, RelMetadataQuery)","u":"getMinRowCount(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"getMinScale()"},{"p":"org.apache.calcite.rel.type","c":"DelegatingTypeSystem","l":"getMinScale(SqlTypeName)","u":"getMinScale(org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystem","l":"getMinScale(SqlTypeName)","u":"getMinScale(org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystemImpl","l":"getMinScale(SqlTypeName)","u":"getMinScale(org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.util","c":"NumberUtil","l":"getMinUnscaled(int)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUtil","l":"getMinusRowCount(RelMetadataQuery, Minus)","u":"getMinusRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.core.Minus)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"getMinValue(RelDataType)","u":"getMinValue(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.fun","c":"SqlCollectionTableOperator","l":"getModality()"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcTable","l":"getModifiableCollection()"},{"p":"org.apache.calcite.schema.impl","c":"ListTransientTable","l":"getModifiableCollection()"},{"p":"org.apache.calcite.schema","c":"ModifiableTable","l":"getModifiableCollection()"},{"p":"org.apache.calcite.sql","c":"SqlInsert","l":"getModifierNode(SqlInsertKeyword)","u":"getModifierNode(org.apache.calcite.sql.SqlInsertKeyword)"},{"p":"org.apache.calcite.sql","c":"SqlSelect","l":"getModifierNode(SqlSelectKeyword)","u":"getModifierNode(org.apache.calcite.sql.SqlSelectKeyword)"},{"p":"org.apache.calcite.linq4j.tree","c":"ArrayLengthRecordField","l":"getModifiers()"},{"p":"org.apache.calcite.linq4j.tree","c":"PseudoField","l":"getModifiers()"},{"p":"org.apache.calcite.linq4j.tree","c":"ReflectedPseudoField","l":"getModifiers()"},{"p":"org.apache.calcite.util.format.postgresql","c":"PatternModifier","l":"getModifierString()"},{"p":"org.apache.calcite.sql.validate","c":"MatchRecognizeNamespace","l":"getMonotonicExprs()"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingNamespace","l":"getMonotonicExprs()"},{"p":"org.apache.calcite.sql.validate","c":"IdentifierNamespace","l":"getMonotonicExprs()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorNamespace","l":"getMonotonicExprs()"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"getMonotonicity(SqlCall, SqlValidatorScope)","u":"getMonotonicity(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingScope","l":"getMonotonicity(SqlNode)","u":"getMonotonicity(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"ParameterScope","l":"getMonotonicity(SqlNode)","u":"getMonotonicity(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"OverScope","l":"getMonotonicity(SqlNode)","u":"getMonotonicity(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"SelectScope","l":"getMonotonicity(SqlNode)","u":"getMonotonicity(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope","l":"getMonotonicity(SqlNode)","u":"getMonotonicity(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.fun","c":"SqlAbstractTimeFunction","l":"getMonotonicity(SqlOperatorBinding)","u":"getMonotonicity(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql.fun","c":"SqlBaseContextVariable","l":"getMonotonicity(SqlOperatorBinding)","u":"getMonotonicity(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql.fun","c":"SqlCastFunction","l":"getMonotonicity(SqlOperatorBinding)","u":"getMonotonicity(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql.fun","c":"SqlCurrentDateFunction","l":"getMonotonicity(SqlOperatorBinding)","u":"getMonotonicity(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql.fun","c":"SqlDatetimePlusOperator","l":"getMonotonicity(SqlOperatorBinding)","u":"getMonotonicity(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql.fun","c":"SqlDatetimeSubtractionOperator","l":"getMonotonicity(SqlOperatorBinding)","u":"getMonotonicity(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql.fun","c":"SqlExtractFunction","l":"getMonotonicity(SqlOperatorBinding)","u":"getMonotonicity(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql.fun","c":"SqlFloorFunction","l":"getMonotonicity(SqlOperatorBinding)","u":"getMonotonicity(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql.fun","c":"SqlMonotonicBinaryOperator","l":"getMonotonicity(SqlOperatorBinding)","u":"getMonotonicity(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql.fun","c":"SqlMonotonicUnaryFunction","l":"getMonotonicity(SqlOperatorBinding)","u":"getMonotonicity(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql.fun","c":"SqlSubstringFunction","l":"getMonotonicity(SqlOperatorBinding)","u":"getMonotonicity(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql","c":"SqlAsOperator","l":"getMonotonicity(SqlOperatorBinding)","u":"getMonotonicity(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql","c":"SqlBasicFunction","l":"getMonotonicity(SqlOperatorBinding)","u":"getMonotonicity(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql","c":"SqlBinaryOperator","l":"getMonotonicity(SqlOperatorBinding)","u":"getMonotonicity(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql","c":"SqlGroupedWindowFunction","l":"getMonotonicity(SqlOperatorBinding)","u":"getMonotonicity(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"getMonotonicity(SqlOperatorBinding)","u":"getMonotonicity(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql","c":"SqlPrefixOperator","l":"getMonotonicity(SqlOperatorBinding)","u":"getMonotonicity(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql","c":"SqlCall","l":"getMonotonicity(SqlValidatorScope)","u":"getMonotonicity(org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql","c":"SqlDataTypeSpec","l":"getMonotonicity(SqlValidatorScope)","u":"getMonotonicity(org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql","c":"SqlDynamicParam","l":"getMonotonicity(SqlValidatorScope)","u":"getMonotonicity(org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql","c":"SqlIdentifier","l":"getMonotonicity(SqlValidatorScope)","u":"getMonotonicity(org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"getMonotonicity(SqlValidatorScope)","u":"getMonotonicity(org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql","c":"SqlNode","l":"getMonotonicity(SqlValidatorScope)","u":"getMonotonicity(org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.prepare","c":"RelOptTableImpl","l":"getMonotonicity(String)","u":"getMonotonicity(java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"MatchRecognizeNamespace","l":"getMonotonicity(String)","u":"getMonotonicity(java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingNamespace","l":"getMonotonicity(String)","u":"getMonotonicity(java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingSqlValidatorTable","l":"getMonotonicity(String)","u":"getMonotonicity(java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"IdentifierNamespace","l":"getMonotonicity(String)","u":"getMonotonicity(java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"SelectNamespace","l":"getMonotonicity(String)","u":"getMonotonicity(java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"SetopNamespace","l":"getMonotonicity(String)","u":"getMonotonicity(java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorNamespace","l":"getMonotonicity(String)","u":"getMonotonicity(java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorTable","l":"getMonotonicity(String)","u":"getMonotonicity(java.lang.String)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"getMonotonicity(String)","u":"getMonotonicity(java.lang.String)"},{"p":"org.apache.calcite.adapter.utils","c":"OsQueryTableUtil","l":"getMountsInfo()"},{"p":"org.apache.calcite.rel.rules","c":"LoptMultiJoin","l":"getMultiJoinFields()"},{"p":"org.apache.calcite.rel.rules","c":"LoptMultiJoin","l":"getMultiJoinRel()"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.Context","l":"getMutableRootSchema()"},{"p":"org.apache.calcite.adapter.druid","c":"VirtualColumn","l":"getName()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableConvention","l":"getName()"},{"p":"org.apache.calcite.interpreter","c":"BindableConvention","l":"getName()"},{"p":"org.apache.calcite.interpreter","c":"InterpretableConvention","l":"getName()"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"getName()"},{"p":"org.apache.calcite.jdbc","c":"JavaTypeFactoryImpl.SyntheticRecordType","l":"getName()"},{"p":"org.apache.calcite.linq4j.tree","c":"ArrayLengthRecordField","l":"getName()"},{"p":"org.apache.calcite.linq4j.tree","c":"PseudoField","l":"getName()"},{"p":"org.apache.calcite.linq4j.tree","c":"ReflectedPseudoField","l":"getName()"},{"p":"org.apache.calcite.linq4j.tree","c":"Types.RecordType","l":"getName()"},{"p":"org.apache.calcite.plan","c":"Convention","l":"getName()"},{"p":"org.apache.calcite.plan","c":"Convention.Impl","l":"getName()"},{"p":"org.apache.calcite.plan","c":"RelOptAbstractTable","l":"getName()"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"getName()"},{"p":"org.apache.calcite.rel.core","c":"CorrelationId","l":"getName()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeField","l":"getName()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFieldImpl","l":"getName()"},{"p":"org.apache.calcite.rex","c":"RexVariable","l":"getName()"},{"p":"org.apache.calcite.schema","c":"FunctionParameter","l":"getName()"},{"p":"org.apache.calcite.schema","c":"Member","l":"getName()"},{"p":"org.apache.calcite.schema","c":"SchemaPlus","l":"getName()"},{"p":"org.apache.calcite.sql.babel.postgres","c":"SqlShow","l":"getName()"},{"p":"org.apache.calcite.sql.fun","c":"SqlBetweenOperator","l":"getName()"},{"p":"org.apache.calcite.sql.fun","c":"SqlFloorFunction","l":"getName()"},{"p":"org.apache.calcite.sql","c":"SqlHint","l":"getName()"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"getName()"},{"p":"org.apache.calcite.sql","c":"SqlSampleSpec.SqlSubstitutionSampleSpec","l":"getName()"},{"p":"org.apache.calcite.sql","c":"SqlSetOption","l":"getName()"},{"p":"org.apache.calcite.sql","c":"SqlWriter.FrameType","l":"getName()"},{"p":"org.apache.calcite.sql","c":"SqlWriter.FrameTypeEnum","l":"getName()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"getName()"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockSchema","l":"getName()"},{"p":"org.apache.calcite.sql","c":"SqlFunction","l":"getNameAsId()"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"getNameAsId()"},{"p":"org.apache.calcite.rel.core","c":"Aggregate","l":"getNamedAggCalls()"},{"p":"org.apache.calcite.rel.core","c":"Project","l":"getNamedProjects()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableProject","l":"getNamedProjects()"},{"p":"org.apache.calcite.rex","c":"RexProgram","l":"getNamedProjects()"},{"p":"org.apache.calcite.prepare","c":"CalciteCatalogReader","l":"getNamedType(SqlIdentifier)","u":"getNamedType(org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingSqlValidatorCatalogReader","l":"getNamedType(SqlIdentifier)","u":"getNamedType(org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorCatalogReader","l":"getNamedType(SqlIdentifier)","u":"getNamedType(org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReaderSimple","l":"getNamedType(SqlIdentifier)","u":"getNamedType(org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"getNameForJdbcType(int)"},{"p":"org.apache.calcite.schema.lookup","c":"CompatibilityLookup","l":"getNames(LikePattern)","u":"getNames(org.apache.calcite.schema.lookup.LikePattern)"},{"p":"org.apache.calcite.schema.lookup","c":"IgnoreCaseLookup","l":"getNames(LikePattern)","u":"getNames(org.apache.calcite.schema.lookup.LikePattern)"},{"p":"org.apache.calcite.schema.lookup","c":"LoadingCacheLookup","l":"getNames(LikePattern)","u":"getNames(org.apache.calcite.schema.lookup.LikePattern)"},{"p":"org.apache.calcite.schema.lookup","c":"Lookup","l":"getNames(LikePattern)","u":"getNames(org.apache.calcite.schema.lookup.LikePattern)"},{"p":"org.apache.calcite.schema.lookup","c":"SnapshotLookup","l":"getNames(LikePattern)","u":"getNames(org.apache.calcite.schema.lookup.LikePattern)"},{"p":"org.apache.calcite.sql.validate","c":"SqlNonNullableAccessors","l":"getNamespace(SqlCallBinding)","u":"getNamespace(org.apache.calcite.sql.SqlCallBinding)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"getNamespace(SqlNode)","u":"getNamespace(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"getNamespace(SqlNode)","u":"getNamespace(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.util","c":"SimpleNamespaceContext","l":"getNamespaceURI(String)","u":"getNamespaceURI(java.lang.String)"},{"p":"org.apache.calcite.rel.rules","c":"HyperGraph","l":"getNeighborBitmap(long, long)","u":"getNeighborBitmap(long,long)"},{"p":"org.apache.calcite.adapter.utils","c":"OsQueryTableUtil","l":"getNetFileSizeDescription(long)"},{"p":"org.apache.calcite.sql2rel","c":"RelStructuredTypeFlattener","l":"getNewFieldForOldInput(int)"},{"p":"org.apache.calcite.sql2rel","c":"RelStructuredTypeFlattener","l":"getNewForOldInput(int)"},{"p":"org.apache.calcite.sql2rel","c":"RelStructuredTypeFlattener","l":"getNewForOldRel(RelNode)","u":"getNewForOldRel(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.sql","c":"SqlCharStringLiteral","l":"getNlsString()"},{"p":"org.apache.calcite.sql.validate","c":"AggregatingSelectScope","l":"getNode()"},{"p":"org.apache.calcite.sql.validate","c":"AliasNamespace","l":"getNode()"},{"p":"org.apache.calcite.sql.validate","c":"CollectNamespace","l":"getNode()"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingNamespace","l":"getNode()"},{"p":"org.apache.calcite.sql.validate","c":"ParameterScope","l":"getNode()"},{"p":"org.apache.calcite.sql.validate","c":"GroupByScope","l":"getNode()"},{"p":"org.apache.calcite.sql.validate","c":"IdentifierNamespace","l":"getNode()"},{"p":"org.apache.calcite.sql.validate","c":"JoinScope","l":"getNode()"},{"p":"org.apache.calcite.sql.validate","c":"LambdaNamespace","l":"getNode()"},{"p":"org.apache.calcite.sql.validate","c":"MatchRecognizeNamespace","l":"getNode()"},{"p":"org.apache.calcite.sql.validate","c":"MatchRecognizeScope","l":"getNode()"},{"p":"org.apache.calcite.sql.validate","c":"MeasureScope","l":"getNode()"},{"p":"org.apache.calcite.sql.validate","c":"OrderByScope","l":"getNode()"},{"p":"org.apache.calcite.sql.validate","c":"OverScope","l":"getNode()"},{"p":"org.apache.calcite.sql.validate","c":"PivotNamespace","l":"getNode()"},{"p":"org.apache.calcite.sql.validate","c":"PivotScope","l":"getNode()"},{"p":"org.apache.calcite.sql.validate","c":"ProcedureNamespace","l":"getNode()"},{"p":"org.apache.calcite.sql.validate","c":"SelectNamespace","l":"getNode()"},{"p":"org.apache.calcite.sql.validate","c":"SelectScope","l":"getNode()"},{"p":"org.apache.calcite.sql.validate","c":"SetopNamespace","l":"getNode()"},{"p":"org.apache.calcite.sql.validate","c":"SqlLambdaScope","l":"getNode()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorNamespace","l":"getNode()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope","l":"getNode()"},{"p":"org.apache.calcite.sql.validate","c":"TableConstructorNamespace","l":"getNode()"},{"p":"org.apache.calcite.sql.validate","c":"UnpivotNamespace","l":"getNode()"},{"p":"org.apache.calcite.sql.validate","c":"UnpivotScope","l":"getNode()"},{"p":"org.apache.calcite.sql.validate","c":"WithNamespace","l":"getNode()"},{"p":"org.apache.calcite.util","c":"Util.FoundOne","l":"getNode()"},{"p":"org.apache.calcite.rel.rules","c":"HyperEdge","l":"getNodeBitmap()"},{"p":"org.apache.calcite.linq4j.tree","c":"AbstractNode","l":"getNodeType()"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.NodeTypes","l":"getNodeTypes()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdNodeTypes","l":"getNodeTypes(Aggregate, RelMetadataQuery)","u":"getNodeTypes(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdNodeTypes","l":"getNodeTypes(Calc, RelMetadataQuery)","u":"getNodeTypes(org.apache.calcite.rel.core.Calc,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdNodeTypes","l":"getNodeTypes(Correlate, RelMetadataQuery)","u":"getNodeTypes(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdNodeTypes","l":"getNodeTypes(Exchange, RelMetadataQuery)","u":"getNodeTypes(org.apache.calcite.rel.core.Exchange,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdNodeTypes","l":"getNodeTypes(Filter, RelMetadataQuery)","u":"getNodeTypes(org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdNodeTypes","l":"getNodeTypes(Intersect, RelMetadataQuery)","u":"getNodeTypes(org.apache.calcite.rel.core.Intersect,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdNodeTypes","l":"getNodeTypes(Join, RelMetadataQuery)","u":"getNodeTypes(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdNodeTypes","l":"getNodeTypes(Match, RelMetadataQuery)","u":"getNodeTypes(org.apache.calcite.rel.core.Match,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdNodeTypes","l":"getNodeTypes(Minus, RelMetadataQuery)","u":"getNodeTypes(org.apache.calcite.rel.core.Minus,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdNodeTypes","l":"getNodeTypes(Project, RelMetadataQuery)","u":"getNodeTypes(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"getNodeTypes(RelNode)","u":"getNodeTypes(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.NodeTypes.Handler","l":"getNodeTypes(RelNode, RelMetadataQuery)","u":"getNodeTypes(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdNodeTypes","l":"getNodeTypes(RelNode, RelMetadataQuery)","u":"getNodeTypes(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdNodeTypes","l":"getNodeTypes(RelSubset, RelMetadataQuery)","u":"getNodeTypes(org.apache.calcite.plan.volcano.RelSubset,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdNodeTypes","l":"getNodeTypes(Sample, RelMetadataQuery)","u":"getNodeTypes(org.apache.calcite.rel.core.Sample,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdNodeTypes","l":"getNodeTypes(Sort, RelMetadataQuery)","u":"getNodeTypes(org.apache.calcite.rel.core.Sort,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdNodeTypes","l":"getNodeTypes(TableModify, RelMetadataQuery)","u":"getNodeTypes(org.apache.calcite.rel.core.TableModify,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdNodeTypes","l":"getNodeTypes(TableScan, RelMetadataQuery)","u":"getNodeTypes(org.apache.calcite.rel.core.TableScan,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdNodeTypes","l":"getNodeTypes(Union, RelMetadataQuery)","u":"getNodeTypes(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdNodeTypes","l":"getNodeTypes(Values, RelMetadataQuery)","u":"getNodeTypes(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdNodeTypes","l":"getNodeTypes(Window, RelMetadataQuery)","u":"getNodeTypes(org.apache.calcite.rel.core.Window,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.util","c":"PartiallyOrderedSet","l":"getNonChildren()"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"getNonConstColumns(ImmutableBitSet, List<RexNode>)","u":"getNonConstColumns(org.apache.calcite.util.ImmutableBitSet,java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"getNonConstColumns(List<RexNode>)","u":"getNonConstColumns(java.util.List)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.NonCumulativeCost","l":"getNonCumulativeCost()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"getNonCumulativeCost(RelNode)","u":"getNonCumulativeCost(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.NonCumulativeCost.Handler","l":"getNonCumulativeCost(RelNode, RelMetadataQuery)","u":"getNonCumulativeCost(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPercentageOriginalRows","l":"getNonCumulativeCost(RelNode, RelMetadataQuery)","u":"getNonCumulativeCost(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.util","c":"PartiallyOrderedSet","l":"getNonParents()"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexImpTable.UserDefinedAggReflectiveImplementor","l":"getNotNullState(AggContext)","u":"getNotNullState(org.apache.calcite.adapter.enumerable.AggContext)"},{"p":"org.apache.calcite.adapter.enumerable","c":"StrictAggImplementor","l":"getNotNullState(AggContext)","u":"getNotNullState(org.apache.calcite.adapter.enumerable.AggContext)"},{"p":"org.apache.calcite.adapter.enumerable","c":"StrictWinAggImplementor","l":"getNotNullState(AggContext)","u":"getNotNullState(org.apache.calcite.adapter.enumerable.AggContext)"},{"p":"org.apache.calcite.adapter.enumerable","c":"StrictWinAggImplementor","l":"getNotNullState(WinAggContext)","u":"getNotNullState(org.apache.calcite.adapter.enumerable.WinAggContext)"},{"p":"org.apache.calcite.sql","c":"SqlDataTypeSpec","l":"getNullable()"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonArrayAggAggFunction","l":"getNullClause()"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonObjectAggAggFunction","l":"getNullClause()"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"getNullCollation()"},{"p":"org.apache.calcite.rex","c":"RexFieldCollation","l":"getNullDirection()"},{"p":"org.apache.calcite.rel","c":"RelReferentialConstraint","l":"getNumColumns()"},{"p":"org.apache.calcite.sql","c":"SqlJdbcFunctionCall","l":"getNumericFunctions()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"getNumericJavaClassName(RelDataType)","u":"getNumericJavaClassName(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.rules","c":"LoptMultiJoin","l":"getNumFieldsInJoinFactor(int)"},{"p":"org.apache.calcite.rel.rules","c":"LoptMultiJoin","l":"getNumJoinFactors()"},{"p":"org.apache.calcite.rel.rules","c":"LoptMultiJoin","l":"getNumTotalFields()"},{"p":"org.apache.calcite.rel.type","c":"DelegatingTypeSystem","l":"getNumTypeRadix(SqlTypeName)","u":"getNumTypeRadix(org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystem","l":"getNumTypeRadix(SqlTypeName)","u":"getNumTypeRadix(org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystemImpl","l":"getNumTypeRadix(SqlTypeName)","u":"getNumTypeRadix(org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive.Source","l":"getObject()"},{"p":"org.apache.calcite.interpreter","c":"Row","l":"getObject(int)"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.Context","l":"getObjectPath()"},{"p":"org.apache.calcite.rex","c":"RexRangeRef","l":"getOffset()"},{"p":"org.apache.calcite.rex","c":"RexWindowBound","l":"getOffset()"},{"p":"org.apache.calcite.sql","c":"SqlSelect","l":"getOffset()"},{"p":"org.apache.calcite.plan","c":"RelOptRule","l":"getOperand()"},{"p":"org.apache.calcite.plan","c":"RelOptRuleCall","l":"getOperand0()"},{"p":"org.apache.calcite.rel.core","c":"Aggregate.AggCallBinding","l":"getOperandCount()"},{"p":"org.apache.calcite.rex","c":"RexCallBinding","l":"getOperandCount()"},{"p":"org.apache.calcite.sql","c":"ExplicitOperatorBinding","l":"getOperandCount()"},{"p":"org.apache.calcite.sql","c":"SqlCallBinding","l":"getOperandCount()"},{"p":"org.apache.calcite.sql","c":"SqlOperatorBinding","l":"getOperandCount()"},{"p":"org.apache.calcite.sql.fun","c":"SqlCaseOperator","l":"getOperandCountRange()"},{"p":"org.apache.calcite.sql.fun","c":"SqlCastFunction","l":"getOperandCountRange()"},{"p":"org.apache.calcite.sql.fun","c":"SqlConvertFunction","l":"getOperandCountRange()"},{"p":"org.apache.calcite.sql.fun","c":"SqlDatePartFunction","l":"getOperandCountRange()"},{"p":"org.apache.calcite.sql.fun","c":"SqlDotOperator","l":"getOperandCountRange()"},{"p":"org.apache.calcite.sql.fun","c":"SqlItemOperator","l":"getOperandCountRange()"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonArrayFunction","l":"getOperandCountRange()"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonDepthFunction","l":"getOperandCountRange()"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonModifyFunction","l":"getOperandCountRange()"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonObjectFunction","l":"getOperandCountRange()"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonPrettyFunction","l":"getOperandCountRange()"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonRemoveFunction","l":"getOperandCountRange()"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonTypeFunction","l":"getOperandCountRange()"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonValueFunction","l":"getOperandCountRange()"},{"p":"org.apache.calcite.sql.fun","c":"SqlLikeOperator","l":"getOperandCountRange()"},{"p":"org.apache.calcite.sql.fun","c":"SqlMultisetMemberOfOperator","l":"getOperandCountRange()"},{"p":"org.apache.calcite.sql.fun","c":"SqlOracleConvertFunction","l":"getOperandCountRange()"},{"p":"org.apache.calcite.sql.fun","c":"SqlOverlapsOperator","l":"getOperandCountRange()"},{"p":"org.apache.calcite.sql.fun","c":"SqlPosixRegexOperator","l":"getOperandCountRange()"},{"p":"org.apache.calcite.sql.fun","c":"SqlSubstringFunction","l":"getOperandCountRange()"},{"p":"org.apache.calcite.sql.fun","c":"SqlTranslateFunction","l":"getOperandCountRange()"},{"p":"org.apache.calcite.sql","c":"SqlDescriptorOperator","l":"getOperandCountRange()"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"getOperandCountRange()"},{"p":"org.apache.calcite.sql","c":"SqlWindowTableFunction.AbstractOperandMetadata","l":"getOperandCountRange()"},{"p":"org.apache.calcite.sql.type","c":"ArrayElementOperandTypeChecker","l":"getOperandCountRange()"},{"p":"org.apache.calcite.sql.type","c":"AssignableOperandTypeChecker","l":"getOperandCountRange()"},{"p":"org.apache.calcite.sql.type","c":"CompositeOperandTypeChecker","l":"getOperandCountRange()"},{"p":"org.apache.calcite.sql.type","c":"ExplicitOperandTypeChecker","l":"getOperandCountRange()"},{"p":"org.apache.calcite.sql.type","c":"FamilyOperandTypeChecker","l":"getOperandCountRange()"},{"p":"org.apache.calcite.sql.type","c":"MultisetOperandTypeChecker","l":"getOperandCountRange()"},{"p":"org.apache.calcite.sql.type","c":"SameOperandTypeChecker","l":"getOperandCountRange()"},{"p":"org.apache.calcite.sql.type","c":"SetopOperandTypeChecker","l":"getOperandCountRange()"},{"p":"org.apache.calcite.sql.type","c":"SqlOperandTypeChecker","l":"getOperandCountRange()"},{"p":"org.apache.calcite.sql.type","c":"SqlSingleOperandTypeChecker","l":"getOperandCountRange()"},{"p":"org.apache.calcite.sql.babel.postgres","c":"SqlBegin","l":"getOperandList()"},{"p":"org.apache.calcite.sql.babel.postgres","c":"SqlCommit","l":"getOperandList()"},{"p":"org.apache.calcite.sql.babel.postgres","c":"SqlDiscard","l":"getOperandList()"},{"p":"org.apache.calcite.sql.babel.postgres","c":"SqlRollback","l":"getOperandList()"},{"p":"org.apache.calcite.sql.babel.postgres","c":"SqlShow","l":"getOperandList()"},{"p":"org.apache.calcite.sql.ddl","c":"SqlAttributeDefinition","l":"getOperandList()"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCheckConstraint","l":"getOperandList()"},{"p":"org.apache.calcite.sql.ddl","c":"SqlColumnDeclaration","l":"getOperandList()"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateForeignSchema","l":"getOperandList()"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateFunction","l":"getOperandList()"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateMaterializedView","l":"getOperandList()"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateSchema","l":"getOperandList()"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateTable","l":"getOperandList()"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateTableLike","l":"getOperandList()"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateType","l":"getOperandList()"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateView","l":"getOperandList()"},{"p":"org.apache.calcite.sql.ddl","c":"SqlDropObject","l":"getOperandList()"},{"p":"org.apache.calcite.sql.ddl","c":"SqlDropSchema","l":"getOperandList()"},{"p":"org.apache.calcite.sql.ddl","c":"SqlKeyConstraint","l":"getOperandList()"},{"p":"org.apache.calcite.sql.ddl","c":"SqlTruncateTable","l":"getOperandList()"},{"p":"org.apache.calcite.sql.fun","c":"SqlCase","l":"getOperandList()"},{"p":"org.apache.calcite.sql","c":"SqlAsofJoin","l":"getOperandList()"},{"p":"org.apache.calcite.sql","c":"SqlBasicCall","l":"getOperandList()"},{"p":"org.apache.calcite.sql","c":"SqlCall","l":"getOperandList()"},{"p":"org.apache.calcite.sql","c":"SqlDelete","l":"getOperandList()"},{"p":"org.apache.calcite.sql","c":"SqlDescribeSchema","l":"getOperandList()"},{"p":"org.apache.calcite.sql","c":"SqlDescribeTable","l":"getOperandList()"},{"p":"org.apache.calcite.sql","c":"SqlExplain","l":"getOperandList()"},{"p":"org.apache.calcite.sql","c":"SqlHint","l":"getOperandList()"},{"p":"org.apache.calcite.sql","c":"SqlInsert","l":"getOperandList()"},{"p":"org.apache.calcite.sql","c":"SqlJoin","l":"getOperandList()"},{"p":"org.apache.calcite.sql","c":"SqlLambda","l":"getOperandList()"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize","l":"getOperandList()"},{"p":"org.apache.calcite.sql","c":"SqlMerge","l":"getOperandList()"},{"p":"org.apache.calcite.sql","c":"SqlOrderBy","l":"getOperandList()"},{"p":"org.apache.calcite.sql","c":"SqlPivot","l":"getOperandList()"},{"p":"org.apache.calcite.sql","c":"SqlSelect","l":"getOperandList()"},{"p":"org.apache.calcite.sql","c":"SqlSetOption","l":"getOperandList()"},{"p":"org.apache.calcite.sql","c":"SqlSnapshot","l":"getOperandList()"},{"p":"org.apache.calcite.sql","c":"SqlTableRef","l":"getOperandList()"},{"p":"org.apache.calcite.sql","c":"SqlUnpivot","l":"getOperandList()"},{"p":"org.apache.calcite.sql","c":"SqlUpdate","l":"getOperandList()"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"getOperandList()"},{"p":"org.apache.calcite.sql","c":"SqlWith","l":"getOperandList()"},{"p":"org.apache.calcite.sql","c":"SqlWithItem","l":"getOperandList()"},{"p":"org.apache.calcite.sql.type","c":"SameOperandTypeChecker","l":"getOperandList(int)"},{"p":"org.apache.calcite.sql","c":"SqlOperatorBinding","l":"getOperandLiteralValue(int)"},{"p":"org.apache.calcite.rex","c":"RexCallBinding","l":"getOperandLiteralValue(int, Class<T>)","u":"getOperandLiteralValue(int,java.lang.Class)"},{"p":"org.apache.calcite.sql","c":"SqlCallBinding","l":"getOperandLiteralValue(int, Class<T>)","u":"getOperandLiteralValue(int,java.lang.Class)"},{"p":"org.apache.calcite.sql","c":"SqlOperatorBinding","l":"getOperandLiteralValue(int, Class<T>)","u":"getOperandLiteralValue(int,java.lang.Class)"},{"p":"org.apache.calcite.sql","c":"SqlOperatorBinding","l":"getOperandLiteralValue(int, RelDataType)","u":"getOperandLiteralValue(int,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate","c":"SqlNonNullableAccessors","l":"getOperandLiteralValueOrThrow(SqlOperatorBinding, int, Class<T>)","u":"getOperandLiteralValueOrThrow(org.apache.calcite.sql.SqlOperatorBinding,int,java.lang.Class)"},{"p":"org.apache.calcite.rex","c":"RexCallBinding","l":"getOperandMonotonicity(int)"},{"p":"org.apache.calcite.sql","c":"SqlCallBinding","l":"getOperandMonotonicity(int)"},{"p":"org.apache.calcite.sql","c":"SqlOperatorBinding","l":"getOperandMonotonicity(int)"},{"p":"org.apache.calcite.plan","c":"RelOptRule","l":"getOperands()"},{"p":"org.apache.calcite.rex","c":"RexCall","l":"getOperands()"},{"p":"org.apache.calcite.sql.validate","c":"AggregatingSelectScope","l":"getOperandScope(SqlCall)","u":"getOperandScope(org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingScope","l":"getOperandScope(SqlCall)","u":"getOperandScope(org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.validate","c":"ParameterScope","l":"getOperandScope(SqlCall)","u":"getOperandScope(org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope","l":"getOperandScope(SqlCall)","u":"getOperandScope(org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.type","c":"FamilyOperandTypeChecker","l":"getOperandSqlTypeFamily(int)"},{"p":"org.apache.calcite.sql.type","c":"ImplicitCastOperandTypeChecker","l":"getOperandSqlTypeFamily(int)"},{"p":"org.apache.calcite.rel.core","c":"Aggregate.AggCallBinding","l":"getOperandType(int)"},{"p":"org.apache.calcite.rex","c":"RexCallBinding","l":"getOperandType(int)"},{"p":"org.apache.calcite.sql","c":"ExplicitOperatorBinding","l":"getOperandType(int)"},{"p":"org.apache.calcite.sql","c":"SqlCallBinding","l":"getOperandType(int)"},{"p":"org.apache.calcite.sql","c":"SqlOperatorBinding","l":"getOperandType(int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlBasicAggFunction","l":"getOperandTypeChecker()"},{"p":"org.apache.calcite.sql.fun","c":"SqlItemOperator","l":"getOperandTypeChecker()"},{"p":"org.apache.calcite.sql","c":"SqlBasicFunction","l":"getOperandTypeChecker()"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"getOperandTypeChecker()"},{"p":"org.apache.calcite.sql","c":"SqlWindowTableFunction","l":"getOperandTypeChecker()"},{"p":"org.apache.calcite.sql.validate","c":"SqlUserDefinedAggFunction","l":"getOperandTypeChecker()"},{"p":"org.apache.calcite.sql.validate","c":"SqlUserDefinedFunction","l":"getOperandTypeChecker()"},{"p":"org.apache.calcite.sql.validate","c":"SqlUserDefinedTableMacro","l":"getOperandTypeChecker()"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"getOperandTypeInference()"},{"p":"org.apache.calcite.rel.core","c":"TableModify","l":"getOperation()"},{"p":"org.apache.calcite.rex","c":"RexCall","l":"getOperator()"},{"p":"org.apache.calcite.sql.babel.postgres","c":"SqlBegin","l":"getOperator()"},{"p":"org.apache.calcite.sql.babel.postgres","c":"SqlCommit","l":"getOperator()"},{"p":"org.apache.calcite.sql.babel.postgres","c":"SqlDiscard","l":"getOperator()"},{"p":"org.apache.calcite.sql.babel.postgres","c":"SqlRollback","l":"getOperator()"},{"p":"org.apache.calcite.sql.babel.postgres","c":"SqlShow","l":"getOperator()"},{"p":"org.apache.calcite.sql.ddl","c":"SqlAttributeDefinition","l":"getOperator()"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCheckConstraint","l":"getOperator()"},{"p":"org.apache.calcite.sql.ddl","c":"SqlColumnDeclaration","l":"getOperator()"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateFunction","l":"getOperator()"},{"p":"org.apache.calcite.sql.ddl","c":"SqlKeyConstraint","l":"getOperator()"},{"p":"org.apache.calcite.sql.fun","c":"SqlCase","l":"getOperator()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil.ToTreeListItem","l":"getOperator()"},{"p":"org.apache.calcite.sql","c":"SqlAsofJoin","l":"getOperator()"},{"p":"org.apache.calcite.sql","c":"SqlBasicCall","l":"getOperator()"},{"p":"org.apache.calcite.sql","c":"SqlCall","l":"getOperator()"},{"p":"org.apache.calcite.sql","c":"SqlDdl","l":"getOperator()"},{"p":"org.apache.calcite.sql","c":"SqlDelete","l":"getOperator()"},{"p":"org.apache.calcite.sql","c":"SqlDescribeSchema","l":"getOperator()"},{"p":"org.apache.calcite.sql","c":"SqlDescribeTable","l":"getOperator()"},{"p":"org.apache.calcite.sql","c":"SqlExplain","l":"getOperator()"},{"p":"org.apache.calcite.sql","c":"SqlHint","l":"getOperator()"},{"p":"org.apache.calcite.sql","c":"SqlInsert","l":"getOperator()"},{"p":"org.apache.calcite.sql","c":"SqlJdbcFunctionCall.SimpleMakeCall","l":"getOperator()"},{"p":"org.apache.calcite.sql","c":"SqlJoin","l":"getOperator()"},{"p":"org.apache.calcite.sql","c":"SqlLambda","l":"getOperator()"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize","l":"getOperator()"},{"p":"org.apache.calcite.sql","c":"SqlMerge","l":"getOperator()"},{"p":"org.apache.calcite.sql","c":"SqlOperatorBinding","l":"getOperator()"},{"p":"org.apache.calcite.sql","c":"SqlOrderBy","l":"getOperator()"},{"p":"org.apache.calcite.sql","c":"SqlPivot","l":"getOperator()"},{"p":"org.apache.calcite.sql","c":"SqlSelect","l":"getOperator()"},{"p":"org.apache.calcite.sql","c":"SqlSetOption","l":"getOperator()"},{"p":"org.apache.calcite.sql","c":"SqlSnapshot","l":"getOperator()"},{"p":"org.apache.calcite.sql","c":"SqlTableRef","l":"getOperator()"},{"p":"org.apache.calcite.sql","c":"SqlUnpivot","l":"getOperator()"},{"p":"org.apache.calcite.sql","c":"SqlUpdate","l":"getOperator()"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"getOperator()"},{"p":"org.apache.calcite.sql","c":"SqlWith","l":"getOperator()"},{"p":"org.apache.calcite.sql","c":"SqlWithItem","l":"getOperator()"},{"p":"org.apache.calcite.sql.validate","c":"SqlWithItemTableRef","l":"getOperator()"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery","l":"getOperatorConversionMap()"},{"p":"org.apache.calcite.prepare","c":"CalciteCatalogReader","l":"getOperatorList()"},{"p":"org.apache.calcite.sql","c":"SqlOperatorTable","l":"getOperatorList()"},{"p":"org.apache.calcite.sql","c":"SqlSpatialTypeOperatorTable","l":"getOperatorList()"},{"p":"org.apache.calcite.sql.util","c":"ChainedSqlOperatorTable","l":"getOperatorList()"},{"p":"org.apache.calcite.sql.util","c":"ReflectiveSqlOperatorTable","l":"getOperatorList()"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"getOperatorSignature(SqlOperator, List<?>)","u":"getOperatorSignature(org.apache.calcite.sql.SqlOperator,java.util.List)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"getOperatorTable()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"getOperatorTable()"},{"p":"org.apache.calcite.tools","c":"FrameworkConfig","l":"getOperatorTable()"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperatorTableFactory","l":"getOperatorTable(Iterable<SqlLibrary>)","u":"getOperatorTable(java.lang.Iterable)"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperatorTableFactory","l":"getOperatorTable(Iterable<SqlLibrary>, boolean)","u":"getOperatorTable(java.lang.Iterable,boolean)"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperatorTableFactory","l":"getOperatorTable(SqlLibrary...)","u":"getOperatorTable(org.apache.calcite.sql.fun.SqlLibrary...)"},{"p":"org.apache.calcite.rel.type","c":"TimeFrameSet","l":"getOpt(String)","u":"getOpt(java.lang.String)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"getOpTab()"},{"p":"org.apache.calcite.sql","c":"SqlHint","l":"getOptionFormat()"},{"p":"org.apache.calcite.sql","c":"SqlHint","l":"getOptionKVPairs()"},{"p":"org.apache.calcite.sql","c":"SqlHint","l":"getOptionList()"},{"p":"org.apache.calcite.util","c":"LazyReference","l":"getOrCompute(Supplier<T>)","u":"getOrCompute(java.util.function.Supplier)"},{"p":"org.apache.calcite.rex","c":"RexWindowBound","l":"getOrderKey()"},{"p":"org.apache.calcite.rel.core","c":"Match","l":"getOrderKeys()"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize","l":"getOrderList()"},{"p":"org.apache.calcite.sql","c":"SqlSelect","l":"getOrderList()"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"getOrderList()"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingScope","l":"getOrderList()"},{"p":"org.apache.calcite.sql.validate","c":"ParameterScope","l":"getOrderList()"},{"p":"org.apache.calcite.sql.validate","c":"SelectScope","l":"getOrderList()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope","l":"getOrderList()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"getOrderScope(SqlSelect)","u":"getOrderScope(org.apache.calcite.sql.SqlSelect)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"getOrderScope(SqlSelect)","u":"getOrderScope(org.apache.calcite.sql.SqlSelect)"},{"p":"org.apache.calcite.schema","c":"FunctionParameter","l":"getOrdinal()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"getOrdinalBitSet(RelDataType, Map<Integer, RelDataTypeField>)","u":"getOrdinalBitSet(org.apache.calcite.rel.type.RelDataType,java.util.Map)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"getOrdinalBitSet(RelDataType, RelDataType)","u":"getOrdinalBitSet(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.plan.volcano","c":"RelSubset","l":"getOriginal()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"getOriginal(SqlNode)","u":"getOriginal(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.plan","c":"RelOptCluster","l":"getOriginalExpression()"},{"p":"org.apache.calcite.runtime","c":"CalciteContextException","l":"getOriginalStatement()"},{"p":"org.apache.calcite.rel.metadata","c":"RelColumnOrigin","l":"getOriginColumnOrdinal()"},{"p":"org.apache.calcite.rel.metadata","c":"RelColumnOrigin","l":"getOriginTable()"},{"p":"org.apache.calcite.adapter.utils","c":"OsQueryTableUtil","l":"getOsVersionInfo()"},{"p":"org.apache.calcite.rel.rules","c":"LoptMultiJoin","l":"getOtherSelfJoinFactor(int)"},{"p":"org.apache.calcite.plan","c":"RelOptRule","l":"getOutConvention()"},{"p":"org.apache.calcite.rel.convert","c":"ConverterRule","l":"getOutConvention()"},{"p":"org.apache.calcite.rel.convert","c":"TraitMatchingRule","l":"getOutConvention()"},{"p":"org.apache.calcite.rel.rules","c":"CoerceInputsRule","l":"getOutConvention()"},{"p":"org.apache.calcite.rel.rules","c":"ReduceDecimalsRule","l":"getOutConvention()"},{"p":"org.apache.calcite.rel.rules","c":"LoptMultiJoin","l":"getOuterJoinCond(int)"},{"p":"org.apache.calcite.rel.rules","c":"MultiJoin","l":"getOuterJoinConditions()"},{"p":"org.apache.calcite.rel.rules","c":"LoptMultiJoin","l":"getOuterJoinFactors(int)"},{"p":"org.apache.calcite.adapter.druid","c":"DefaultDimensionSpec","l":"getOutputName()"},{"p":"org.apache.calcite.adapter.druid","c":"DimensionSpec","l":"getOutputName()"},{"p":"org.apache.calcite.adapter.druid","c":"ExtractionDimensionSpec","l":"getOutputName()"},{"p":"org.apache.calcite.rex","c":"RexProgram","l":"getOutputRowType()"},{"p":"org.apache.calcite.adapter.druid","c":"DefaultDimensionSpec","l":"getOutputType()"},{"p":"org.apache.calcite.adapter.druid","c":"DimensionSpec","l":"getOutputType()"},{"p":"org.apache.calcite.adapter.druid","c":"ExtractionDimensionSpec","l":"getOutputType()"},{"p":"org.apache.calcite.adapter.druid","c":"VirtualColumn","l":"getOutputType()"},{"p":"org.apache.calcite.plan","c":"RelOptRule","l":"getOutTrait()"},{"p":"org.apache.calcite.rel.convert","c":"ConverterRule","l":"getOutTrait()"},{"p":"org.apache.calcite.util.graph","c":"DefaultDirectedGraph","l":"getOutwardEdges(V)"},{"p":"org.apache.calcite.util.graph","c":"DirectedGraph","l":"getOutwardEdges(V)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"getOverScope(SqlNode)","u":"getOverScope(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"getOverScope(SqlNode)","u":"getOverScope(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.schema","c":"FunctionContext","l":"getParameterCount()"},{"p":"org.apache.calcite.util","c":"ReflectUtil","l":"getParameterName(Method, int)","u":"getParameterName(java.lang.reflect.Method,int)"},{"p":"org.apache.calcite.util","c":"Template","l":"getParameterNames()"},{"p":"org.apache.calcite.prepare","c":"PlannerImpl","l":"getParameterRowType()"},{"p":"org.apache.calcite.prepare","c":"Prepare.PreparedExplain","l":"getParameterRowType()"},{"p":"org.apache.calcite.prepare","c":"Prepare.PreparedResult","l":"getParameterRowType()"},{"p":"org.apache.calcite.prepare","c":"Prepare.PreparedResultImpl","l":"getParameterRowType()"},{"p":"org.apache.calcite.tools","c":"Planner","l":"getParameterRowType()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"getParameterRowType(SqlNode)","u":"getParameterRowType(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"getParameterRowType(SqlNode)","u":"getParameterRowType(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.rex","c":"RexLambda","l":"getParameters()"},{"p":"org.apache.calcite.schema","c":"Function","l":"getParameters()"},{"p":"org.apache.calcite.schema.impl","c":"AggregateFunctionImpl","l":"getParameters()"},{"p":"org.apache.calcite.schema.impl","c":"ReflectiveFunctionBase","l":"getParameters()"},{"p":"org.apache.calcite.schema.impl","c":"ViewTableMacro","l":"getParameters()"},{"p":"org.apache.calcite.schema","c":"Member","l":"getParameters()"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisorGetHintsFunction","l":"getParameters()"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisorGetHintsFunction2","l":"getParameters()"},{"p":"org.apache.calcite.sql","c":"SqlLambda","l":"getParameters()"},{"p":"org.apache.calcite.util","c":"Smalls.SimpleTableMacro","l":"getParameters()"},{"p":"org.apache.calcite.sql.validate","c":"SqlLambdaScope","l":"getParameterTypes()"},{"p":"org.apache.calcite.sql.fun","c":"SqlCountAggFunction","l":"getParameterTypes(RelDataTypeFactory)","u":"getParameterTypes(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.sql.fun","c":"SqlFirstLastValueAggFunction","l":"getParameterTypes(RelDataTypeFactory)","u":"getParameterTypes(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.sql.fun","c":"SqlHistogramAggFunction","l":"getParameterTypes(RelDataTypeFactory)","u":"getParameterTypes(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.sql.fun","c":"SqlMinMaxAggFunction","l":"getParameterTypes(RelDataTypeFactory)","u":"getParameterTypes(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.sql.fun","c":"SqlSingleValueAggFunction","l":"getParameterTypes(RelDataTypeFactory)","u":"getParameterTypes(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.sql.fun","c":"SqlSumAggFunction","l":"getParameterTypes(RelDataTypeFactory)","u":"getParameterTypes(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.sql.fun","c":"SqlSumEmptyIsZeroAggFunction","l":"getParameterTypes(RelDataTypeFactory)","u":"getParameterTypes(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.sql","c":"SqlAggFunction","l":"getParameterTypes(RelDataTypeFactory)","u":"getParameterTypes(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.sql","c":"SqlFunction","l":"getParamNames()"},{"p":"org.apache.calcite.sql.validate","c":"SqlUserDefinedFunction","l":"getParamNames()"},{"p":"org.apache.calcite.sql.validate","c":"SqlUserDefinedTableMacro","l":"getParamNames()"},{"p":"org.apache.calcite.sql","c":"SqlFunction","l":"getParamTypes()"},{"p":"org.apache.calcite.plan","c":"RelOptRuleOperand","l":"getParent()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableRel","l":"getParent()"},{"p":"org.apache.calcite.rel.rules","c":"LoptJoinTree.BinaryTree","l":"getParent()"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingScope","l":"getParent()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"getParentCursor(String)","u":"getParentCursor(java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"getParentCursor(String)","u":"getParentCursor(java.lang.String)"},{"p":"org.apache.calcite.plan.volcano","c":"RelSubset","l":"getParentRels()"},{"p":"org.apache.calcite.plan","c":"RelOptRuleCall","l":"getParents()"},{"p":"org.apache.calcite.util","c":"PartiallyOrderedSet","l":"getParents(E)"},{"p":"org.apache.calcite.util","c":"PartiallyOrderedSet","l":"getParents(E, boolean)","u":"getParents(E,boolean)"},{"p":"org.apache.calcite.schema","c":"SchemaPlus","l":"getParentSchema()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserImplFactory","l":"getParser(Reader)","u":"getParser(java.io.Reader)"},{"p":"org.apache.calcite.tools","c":"FrameworkConfig","l":"getParserConfig()"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisor","l":"getParserMetadata()"},{"p":"org.apache.calcite.sql","c":"SqlTypeNameSpec","l":"getParserPos()"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"getParserPosition()"},{"p":"org.apache.calcite.rex","c":"RexCall","l":"getParserPosition()"},{"p":"org.apache.calcite.sql","c":"SqlNode","l":"getParserPosition()"},{"p":"org.apache.calcite.util.trace","c":"CalciteTrace","l":"getParserTracer()"},{"p":"org.apache.calcite.rex","c":"RexProgram","l":"getPartialMapping(int)"},{"p":"org.apache.calcite.rel.core","c":"Project","l":"getPartialMapping(int, List<? extends RexNode>)","u":"getPartialMapping(int,java.util.List)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraTable","l":"getPartitionKeys()"},{"p":"org.apache.calcite.rel.core","c":"Match","l":"getPartitionKeys()"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize","l":"getPartitionList()"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"getPartitionList()"},{"p":"org.apache.calcite.adapter.enumerable.impl","c":"WinAggResetContextImpl","l":"getPartitionRowCount()"},{"p":"org.apache.calcite.adapter.enumerable.impl","c":"WinAggResultContextImpl","l":"getPartitionRowCount()"},{"p":"org.apache.calcite.adapter.enumerable","c":"WinAggFrameContext","l":"getPartitionRowCount()"},{"p":"org.apache.calcite.adapter.redis","c":"RedisConfig","l":"getPassword()"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"getPath()"},{"p":"org.apache.calcite.test","c":"QuidemTest","l":"getPath()"},{"p":"org.apache.calcite.util.graph","c":"Graphs.FrozenGraph","l":"getPaths(V, V)","u":"getPaths(V,V)"},{"p":"org.apache.calcite.rel.core","c":"Match","l":"getPattern()"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize","l":"getPattern()"},{"p":"org.apache.calcite.util.format.postgresql.format","c":"FormatPattern","l":"getPattern()"},{"p":"org.apache.calcite.rel.core","c":"Match","l":"getPatternDefinitions()"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize","l":"getPatternDefList()"},{"p":"org.apache.calcite.sql.validate","c":"MatchRecognizeScope","l":"getPatternVars()"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.PercentageOriginalRows","l":"getPercentageOriginalRows()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPercentageOriginalRows","l":"getPercentageOriginalRows(Aggregate, RelMetadataQuery)","u":"getPercentageOriginalRows(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPercentageOriginalRows","l":"getPercentageOriginalRows(Join, RelMetadataQuery)","u":"getPercentageOriginalRows(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"getPercentageOriginalRows(RelNode)","u":"getPercentageOriginalRows(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.PercentageOriginalRows.Handler","l":"getPercentageOriginalRows(RelNode, RelMetadataQuery)","u":"getPercentageOriginalRows(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPercentageOriginalRows","l":"getPercentageOriginalRows(RelNode, RelMetadataQuery)","u":"getPercentageOriginalRows(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPercentageOriginalRows","l":"getPercentageOriginalRows(TableScan, RelMetadataQuery)","u":"getPercentageOriginalRows(org.apache.calcite.rel.core.TableScan,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPercentageOriginalRows","l":"getPercentageOriginalRows(Union, RelMetadataQuery)","u":"getPercentageOriginalRows(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.core","c":"Snapshot","l":"getPeriod()"},{"p":"org.apache.calcite.sql","c":"SqlSnapshot","l":"getPeriod()"},{"p":"org.apache.calcite.rel.core","c":"Project","l":"getPermutation()"},{"p":"org.apache.calcite.rex","c":"RexProgram","l":"getPermutation()"},{"p":"org.apache.calcite.rel.core","c":"Project","l":"getPermutation(int, List<? extends RexNode>)","u":"getPermutation(int,java.util.List)"},{"p":"org.apache.calcite.prepare","c":"Prepare.PreparedResultImpl","l":"getPhysicalRowType()"},{"p":"org.apache.calcite.adapter.pig","c":"PigRel.Implementor","l":"getPigRelationAlias(RelNode)","u":"getPigRelationAlias(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.piglet","c":"PigConverter","l":"getPigScript(InputStream, Map<String, String>)","u":"getPigScript(java.io.InputStream,java.util.Map)"},{"p":"org.apache.calcite.adapter.pig","c":"PigDataType","l":"getPigType()"},{"p":"org.apache.calcite.plan","c":"RelOptCluster","l":"getPlanner()"},{"p":"org.apache.calcite.plan","c":"RelOptRuleCall","l":"getPlanner()"},{"p":"org.apache.calcite.tools","c":"Frameworks","l":"getPlanner(FrameworkConfig)","u":"getPlanner(org.apache.calcite.tools.FrameworkConfig)"},{"p":"org.apache.calcite.util.trace","c":"CalciteTrace","l":"getPlannerTaskTracer()"},{"p":"org.apache.calcite.util.trace","c":"CalciteTrace","l":"getPlannerTracer()"},{"p":"org.apache.calcite.adapter.innodb","c":"IndexCondition","l":"getPointQueryKey()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPopulationSize","l":"getPopulationSize(Aggregate, RelMetadataQuery, ImmutableBitSet)","u":"getPopulationSize(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPopulationSize","l":"getPopulationSize(Exchange, RelMetadataQuery, ImmutableBitSet)","u":"getPopulationSize(org.apache.calcite.rel.core.Exchange,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPopulationSize","l":"getPopulationSize(Filter, RelMetadataQuery, ImmutableBitSet)","u":"getPopulationSize(org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.PopulationSize","l":"getPopulationSize(ImmutableBitSet)","u":"getPopulationSize(org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPopulationSize","l":"getPopulationSize(Join, RelMetadataQuery, ImmutableBitSet)","u":"getPopulationSize(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPopulationSize","l":"getPopulationSize(Project, RelMetadataQuery, ImmutableBitSet)","u":"getPopulationSize(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"getPopulationSize(RelNode, ImmutableBitSet)","u":"getPopulationSize(org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.PopulationSize.Handler","l":"getPopulationSize(RelNode, RelMetadataQuery, ImmutableBitSet)","u":"getPopulationSize(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPopulationSize","l":"getPopulationSize(RelNode, RelMetadataQuery, ImmutableBitSet)","u":"getPopulationSize(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPopulationSize","l":"getPopulationSize(Sort, RelMetadataQuery, ImmutableBitSet)","u":"getPopulationSize(org.apache.calcite.rel.core.Sort,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPopulationSize","l":"getPopulationSize(TableModify, RelMetadataQuery, ImmutableBitSet)","u":"getPopulationSize(org.apache.calcite.rel.core.TableModify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPopulationSize","l":"getPopulationSize(TableScan, RelMetadataQuery, ImmutableBitSet)","u":"getPopulationSize(org.apache.calcite.rel.core.TableScan,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPopulationSize","l":"getPopulationSize(Union, RelMetadataQuery, ImmutableBitSet)","u":"getPopulationSize(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPopulationSize","l":"getPopulationSize(Values, RelMetadataQuery, ImmutableBitSet)","u":"getPopulationSize(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.adapter.redis","c":"RedisConfig","l":"getPort()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParseException","l":"getPos()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil.ToTreeListItem","l":"getPos()"},{"p":"org.apache.calcite.runtime","c":"CalciteContextException","l":"getPosColumn()"},{"p":"org.apache.calcite.tools","c":"RelBuilder.AggCall","l":"getPosition()"},{"p":"org.apache.calcite.runtime","c":"CalciteContextException","l":"getPosLine()"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator","l":"getPostDecorrelateRules()"},{"p":"org.apache.calcite.rel.rules","c":"MultiJoin","l":"getPostJoinFilter()"},{"p":"org.apache.calcite.sql","c":"SqlAbstractDateTimeLiteral","l":"getPrec()"},{"p":"org.apache.calcite.sql","c":"SqlNumericLiteral","l":"getPrec()"},{"p":"org.apache.calcite.rel.type","c":"DynamicRecordTypeImpl","l":"getPrecedenceList()"},{"p":"org.apache.calcite.rel.type","c":"RelDataType","l":"getPrecedenceList()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeImpl","l":"getPrecedenceList()"},{"p":"org.apache.calcite.rel.type","c":"SingleColumnAliasRelDataType","l":"getPrecedenceList()"},{"p":"org.apache.calcite.sql.type","c":"AbstractSqlType","l":"getPrecedenceList()"},{"p":"org.apache.calcite.sql.type","c":"ArraySqlType","l":"getPrecedenceList()"},{"p":"org.apache.calcite.sql.type","c":"MultisetSqlType","l":"getPrecedenceList()"},{"p":"org.apache.calcite.rel.type","c":"RelDataType","l":"getPrecision()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeImpl","l":"getPrecision()"},{"p":"org.apache.calcite.rel.type","c":"RelRecordType","l":"getPrecision()"},{"p":"org.apache.calcite.rel.type","c":"SingleColumnAliasRelDataType","l":"getPrecision()"},{"p":"org.apache.calcite.sql","c":"SqlBasicTypeNameSpec","l":"getPrecision()"},{"p":"org.apache.calcite.sql.type","c":"BasicSqlType","l":"getPrecision()"},{"p":"org.apache.calcite.sql.type","c":"IntervalSqlType","l":"getPrecision()"},{"p":"org.apache.calcite.rel.rules","c":"FilterJoinRule.Config","l":"getPredicate()"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Predicates","l":"getPredicates()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPredicates","l":"getPredicates(Aggregate, RelMetadataQuery)","u":"getPredicates(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPredicates","l":"getPredicates(Correlate, RelMetadataQuery)","u":"getPredicates(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPredicates","l":"getPredicates(Exchange, RelMetadataQuery)","u":"getPredicates(org.apache.calcite.rel.core.Exchange,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPredicates","l":"getPredicates(Filter, RelMetadataQuery)","u":"getPredicates(org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPredicates","l":"getPredicates(Intersect, RelMetadataQuery)","u":"getPredicates(org.apache.calcite.rel.core.Intersect,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPredicates","l":"getPredicates(Join, RelMetadataQuery)","u":"getPredicates(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPredicates","l":"getPredicates(Minus, RelMetadataQuery)","u":"getPredicates(org.apache.calcite.rel.core.Minus,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPredicates","l":"getPredicates(Project, RelMetadataQuery)","u":"getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Predicates.Handler","l":"getPredicates(RelNode, RelMetadataQuery)","u":"getPredicates(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPredicates","l":"getPredicates(RelNode, RelMetadataQuery)","u":"getPredicates(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPredicates","l":"getPredicates(RelSubset, RelMetadataQuery)","u":"getPredicates(org.apache.calcite.plan.volcano.RelSubset,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPredicates","l":"getPredicates(Sample, RelMetadataQuery)","u":"getPredicates(org.apache.calcite.rel.core.Sample,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPredicates","l":"getPredicates(Sort, RelMetadataQuery)","u":"getPredicates(org.apache.calcite.rel.core.Sort,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPredicates","l":"getPredicates(TableModify, RelMetadataQuery)","u":"getPredicates(org.apache.calcite.rel.core.TableModify,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPredicates","l":"getPredicates(TableScan, RelMetadataQuery)","u":"getPredicates(org.apache.calcite.rel.core.TableScan,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPredicates","l":"getPredicates(Union, RelMetadataQuery)","u":"getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPredicates","l":"getPredicates(Values, RelMetadataQuery)","u":"getPredicates(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.util","c":"SimpleNamespaceContext","l":"getPrefix(String)","u":"getPrefix(java.lang.String)"},{"p":"org.apache.calcite.util","c":"SimpleNamespaceContext","l":"getPrefixes(String)","u":"getPrefixes(java.lang.String)"},{"p":"org.apache.calcite.rel.core","c":"Aggregate.AggCallBinding","l":"getPreOperandCount()"},{"p":"org.apache.calcite.sql","c":"SqlOperatorBinding","l":"getPreOperandCount()"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl","l":"getPreparingStmt(CalcitePrepare.Context, Type, CalciteCatalogReader, RelOptPlanner)","u":"getPreparingStmt(org.apache.calcite.jdbc.CalcitePrepare.Context,java.lang.reflect.Type,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"getPrimitiveClass()"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"getPrimitiveName()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"getPrimitiveWrapperJavaClassName(RelDataType)","u":"getPrimitiveWrapperJavaClassName(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"getProduct(String, String)","u":"getProduct(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableCalc","l":"getProgram()"},{"p":"org.apache.calcite.prepare","c":"Prepare","l":"getProgram()"},{"p":"org.apache.calcite.rel.core","c":"Calc","l":"getProgram()"},{"p":"org.apache.calcite.rex","c":"RexProgramBuilder","l":"getProgram()"},{"p":"org.apache.calcite.tools","c":"Programs","l":"getProgram()"},{"p":"org.apache.calcite.rex","c":"RexProgramBuilder","l":"getProgram(boolean)"},{"p":"org.apache.calcite.tools","c":"FrameworkConfig","l":"getPrograms()"},{"p":"org.apache.calcite.rel.rules","c":"JoinProjectTransposeRule","l":"getProjectChild(RelOptRuleCall, Project, boolean)","u":"getProjectChild(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,boolean)"},{"p":"org.apache.calcite.rel.rules","c":"MultiJoinProjectTransposeRule","l":"getProjectChild(RelOptRuleCall, Project, boolean)","u":"getProjectChild(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,boolean)"},{"p":"org.apache.calcite.rex","c":"RexProgram","l":"getProjectList()"},{"p":"org.apache.calcite.rex","c":"RexProgramBuilder","l":"getProjectList()"},{"p":"org.apache.calcite.rel.core","c":"Window","l":"getProjectOrdinals(List<RexNode>)","u":"getProjectOrdinals(java.util.List)"},{"p":"org.apache.calcite.rel.core","c":"Project","l":"getProjects()"},{"p":"org.apache.calcite.rel.rules","c":"MultiJoin","l":"getProjFields()"},{"p":"org.apache.calcite.rel.rules","c":"LoptMultiJoin","l":"getProjFields(int)"},{"p":"org.apache.calcite.jdbc","c":"CalciteConnection","l":"getProperties()"},{"p":"org.apache.calcite.linq4j","c":"BaseQueryable","l":"getProvider()"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults.NonLeafReplayableQueryable","l":"getProvider()"},{"p":"org.apache.calcite.linq4j","c":"RawQueryable","l":"getProvider()"},{"p":"org.apache.calcite.schema.impl","c":"AbstractTableQueryable","l":"getProvider()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"getPulledUpPredicates(RelNode)","u":"getPulledUpPredicates(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.innodb","c":"IndexCondition","l":"getPushDownConditions()"},{"p":"org.apache.calcite.plan","c":"RelOptAbstractTable","l":"getQualifiedName()"},{"p":"org.apache.calcite.plan","c":"RelOptTable","l":"getQualifiedName()"},{"p":"org.apache.calcite.prepare","c":"RelOptTableImpl","l":"getQualifiedName()"},{"p":"org.apache.calcite.rex","c":"RexTableInputRef","l":"getQualifiedName()"},{"p":"org.apache.calcite.rex","c":"RexTableInputRef.RelTableRef","l":"getQualifiedName()"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingSqlValidatorTable","l":"getQualifiedName()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorTable","l":"getQualifiedName()"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"getQualifiedName()"},{"p":"org.apache.calcite.plan","c":"TableAccessMap","l":"getQualifiedName(RelOptTable)","u":"getQualifiedName(org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisor","l":"getQualifiedName(String, int)","u":"getQualifiedName(java.lang.String,int)"},{"p":"org.apache.calcite.sql","c":"SqlSelect","l":"getQualify()"},{"p":"org.apache.calcite.plan","c":"RelOptCluster","l":"getQuery()"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery","l":"getQuery(RelDataType, Filter, Project, ImmutableBitSet, List<AggregateCall>, List<String>, List<Integer>, List<RelFieldCollation.Direction>, ImmutableBitSet, Integer, Project, Filter)","u":"getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.lang.Integer,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Filter)"},{"p":"org.apache.calcite.adapter.druid","c":"QueryType","l":"getQueryName()"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcCorrelationDataContext","l":"getQueryProvider()"},{"p":"org.apache.calcite","c":"DataContext","l":"getQueryProvider()"},{"p":"org.apache.calcite.plan","c":"VisitorDataContext","l":"getQueryProvider()"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery","l":"getQuerySpec()"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery","l":"getQueryString()"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery.QuerySpec","l":"getQueryString(String, int)","u":"getQueryString(java.lang.String,int)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery","l":"getQueryType()"},{"p":"org.apache.calcite.adapter.innodb","c":"IndexCondition","l":"getQueryType()"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"getQuotedCasing()"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"getQuoting()"},{"p":"org.apache.calcite.adapter.innodb","c":"IndexCondition","l":"getRangeQueryLowerKey()"},{"p":"org.apache.calcite.adapter.innodb","c":"IndexCondition","l":"getRangeQueryLowerOp()"},{"p":"org.apache.calcite.adapter.innodb","c":"IndexCondition","l":"getRangeQueryUpperKey()"},{"p":"org.apache.calcite.adapter.innodb","c":"IndexCondition","l":"getRangeQueryUpperOp()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"getRawSelectScope(SqlSelect)","u":"getRawSelectScope(org.apache.calcite.sql.SqlSelect)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"getRawSelectScope(SqlSelect)","u":"getRawSelectScope(org.apache.calcite.sql.SqlSelect)"},{"p":"org.apache.calcite.jdbc","c":"JavaTypeFactoryImpl.SyntheticRecordType","l":"getRecordFields()"},{"p":"org.apache.calcite.linq4j.tree","c":"Types.RecordType","l":"getRecordFields()"},{"p":"org.apache.calcite.rex","c":"RexProgram","l":"getReferenceCounts()"},{"p":"org.apache.calcite.rex","c":"RexFieldAccess","l":"getReferenceExpr()"},{"p":"org.apache.calcite.plan","c":"RelOptAbstractTable","l":"getReferentialConstraints()"},{"p":"org.apache.calcite.plan","c":"RelOptTable","l":"getReferentialConstraints()"},{"p":"org.apache.calcite.prepare","c":"RelOptTableImpl","l":"getReferentialConstraints()"},{"p":"org.apache.calcite.schema","c":"Statistic","l":"getReferentialConstraints()"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"getReferentialConstraints()"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"getRefName()"},{"p":"org.apache.calcite.plan","c":"RelDigest","l":"getRel()"},{"p":"org.apache.calcite.plan","c":"RelOptListener.RelEvent","l":"getRel()"},{"p":"org.apache.calcite.piglet","c":"PigRelBuilder","l":"getRel(Operator)","u":"getRel(org.apache.pig.newplan.Operator)"},{"p":"org.apache.calcite.piglet","c":"PigRelBuilder","l":"getRel(String)","u":"getRel(java.lang.String)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Measure.Context","l":"getRelBuilder()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMeasure.DelegatingContext","l":"getRelBuilder()"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Config","l":"getRelBuilderConfigTransform()"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Config","l":"getRelBuilderFactory()"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"getRelDigest()"},{"p":"org.apache.calcite.rel","c":"RelNode","l":"getRelDigest()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableConvention","l":"getRelFactories()"},{"p":"org.apache.calcite.plan","c":"Convention","l":"getRelFactories()"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"getRelHint(HintStrategyTable, SqlNodeList)","u":"getRelHint(org.apache.calcite.rel.hint.HintStrategyTable,org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.util.trace","c":"CalciteTrace","l":"getRelImplementorTracer()"},{"p":"org.apache.calcite.plan","c":"RelOptRuleCall","l":"getRelList()"},{"p":"org.apache.calcite.plan.volcano","c":"RelSubset","l":"getRelList()"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"getRelMetadataTimestamp(RelNode)","u":"getRelMetadataTimestamp(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan.hep","c":"HepPlanner","l":"getRelMetadataTimestamp(RelNode)","u":"getRelMetadataTimestamp(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan","c":"RelOptPlanner","l":"getRelMetadataTimestamp(RelNode)","u":"getRelMetadataTimestamp(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"getRelMetadataTimestamp(RelNode)","u":"getRelMetadataTimestamp(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.test","c":"MockRelOptPlanner","l":"getRelMetadataTimestamp(RelNode)","u":"getRelMetadataTimestamp(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.externalize","c":"RelDotWriter","l":"getRelNodeLabel(RelNode, List<Pair<String, Object>>)","u":"getRelNodeLabel(org.apache.calcite.rel.RelNode,java.util.List)"},{"p":"org.apache.calcite.plan","c":"RelOptAbstractTable","l":"getRelOptSchema()"},{"p":"org.apache.calcite.plan","c":"RelOptConnection","l":"getRelOptSchema()"},{"p":"org.apache.calcite.plan","c":"RelOptTable","l":"getRelOptSchema()"},{"p":"org.apache.calcite.prepare","c":"RelOptTableImpl","l":"getRelOptSchema()"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"getRelOptSchema()"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"getRelOptSchema()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"getRelOptTable(SqlValidatorNamespace, Prepare.CatalogReader, String, boolean[])","u":"getRelOptTable(org.apache.calcite.sql.validate.SqlValidatorNamespace,org.apache.calcite.prepare.Prepare.CatalogReader,java.lang.String,boolean[])"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.Context","l":"getRelRunner()"},{"p":"org.apache.calcite.plan","c":"RelOptRuleCall","l":"getRels()"},{"p":"org.apache.calcite.plan.volcano","c":"RelSubset","l":"getRels()"},{"p":"org.apache.calcite.piglet","c":"PigRelBuilder","l":"getRelsForStores()"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"getRelTraitDefs()"},{"p":"org.apache.calcite.plan","c":"RelOptPlanner","l":"getRelTraitDefs()"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"getRelTraitDefs()"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"getRelTypeName()"},{"p":"org.apache.calcite.rel","c":"RelNode","l":"getRelTypeName()"},{"p":"org.apache.calcite.adapter.innodb","c":"IndexCondition","l":"getRemainderConditions()"},{"p":"org.apache.calcite.rel.core","c":"JoinInfo","l":"getRemaining(RexBuilder)","u":"getRemaining(org.apache.calcite.rex.RexBuilder)"},{"p":"org.apache.calcite.plan","c":"RelOptSamplingParameters","l":"getRepeatableSeed()"},{"p":"org.apache.calcite.sql","c":"SqlSampleSpec.SqlTableSampleSpec","l":"getRepeatableSeed()"},{"p":"org.apache.calcite.sql","c":"SqlCreate","l":"getReplace()"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisor","l":"getReplacement(SqlMoniker, boolean, Casing)","u":"getReplacement(org.apache.calcite.sql.validate.SqlMoniker,boolean,org.apache.calcite.avatica.util.Casing)"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisor","l":"getReplacement(SqlMoniker, String)","u":"getReplacement(org.apache.calcite.sql.validate.SqlMoniker,java.lang.String)"},{"p":"org.apache.calcite.rel.core","c":"Correlate","l":"getRequiredColumns()"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisor","l":"getReservedAndKeyWords()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest","l":"getReservedKeywords()"},{"p":"org.apache.calcite.adapter.redis","c":"RedisJedisManager","l":"getResource()"},{"p":"org.apache.calcite.adapter.splunk.search","c":"SplunkConnectionImpl.CountingSearchResultListener","l":"getResultCount()"},{"p":"org.apache.calcite.server","c":"CalciteServerStatement","l":"getResultSet()"},{"p":"org.apache.calcite.sql.test","c":"AbstractSqlTester","l":"getResultType(SqlTestFactory, String)","u":"getResultType(org.apache.calcite.sql.test.SqlTestFactory,java.lang.String)"},{"p":"org.apache.calcite.sql.test","c":"SqlTester","l":"getResultType(SqlTestFactory, String)","u":"getResultType(org.apache.calcite.sql.test.SqlTestFactory,java.lang.String)"},{"p":"org.apache.calcite.sql.type","c":"FunctionSqlType","l":"getReturnType()"},{"p":"org.apache.calcite.schema","c":"AggregateFunction","l":"getReturnType(RelDataTypeFactory)","u":"getReturnType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.schema.impl","c":"AggregateFunctionImpl","l":"getReturnType(RelDataTypeFactory)","u":"getReturnType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.schema.impl","c":"ScalarFunctionImpl","l":"getReturnType(RelDataTypeFactory)","u":"getReturnType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.schema","c":"ScalarFunction","l":"getReturnType(RelDataTypeFactory)","u":"getReturnType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.sql.fun","c":"SqlCountAggFunction","l":"getReturnType(RelDataTypeFactory)","u":"getReturnType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.sql.fun","c":"SqlFirstLastValueAggFunction","l":"getReturnType(RelDataTypeFactory)","u":"getReturnType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.sql.fun","c":"SqlHistogramAggFunction","l":"getReturnType(RelDataTypeFactory)","u":"getReturnType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.sql.fun","c":"SqlMinMaxAggFunction","l":"getReturnType(RelDataTypeFactory)","u":"getReturnType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.sql.fun","c":"SqlSingleValueAggFunction","l":"getReturnType(RelDataTypeFactory)","u":"getReturnType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.sql.fun","c":"SqlSumAggFunction","l":"getReturnType(RelDataTypeFactory)","u":"getReturnType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.sql.fun","c":"SqlSumEmptyIsZeroAggFunction","l":"getReturnType(RelDataTypeFactory)","u":"getReturnType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.sql","c":"SqlAggFunction","l":"getReturnType(RelDataTypeFactory)","u":"getReturnType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.schema.impl","c":"ScalarFunctionImpl","l":"getReturnType(RelDataTypeFactory, SqlOperatorBinding)","u":"getReturnType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql.fun","c":"SqlBasicAggFunction","l":"getReturnTypeInference()"},{"p":"org.apache.calcite.sql","c":"SqlBasicFunction","l":"getReturnTypeInference()"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"getReturnTypeInference()"},{"p":"org.apache.calcite.adapter.enumerable","c":"JavaRelImplementor","l":"getRexBuilder()"},{"p":"org.apache.calcite.plan","c":"RelOptCluster","l":"getRexBuilder()"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Measure.Context","l":"getRexBuilder()"},{"p":"org.apache.calcite.sql2rel","c":"InitializerContext","l":"getRexBuilder()"},{"p":"org.apache.calcite.sql2rel","c":"SqlRexContext","l":"getRexBuilder()"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Blackboard","l":"getRexBuilder()"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"getRexBuilder()"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"getRexBuilder()"},{"p":"org.apache.calcite.rel.rules","c":"SingleValuesOptimizationRules.PruneSingleValueRule","l":"getRexTransformer(RexBuilder, JoinRelType)","u":"getRexTransformer(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.rel","c":"BiRel","l":"getRight()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableJoin","l":"getRight()"},{"p":"org.apache.calcite.rel.rules","c":"LoptJoinTree","l":"getRight()"},{"p":"org.apache.calcite.rel.rules","c":"LoptJoinTree.Node","l":"getRight()"},{"p":"org.apache.calcite.sql.fun","c":"SqlTrimFunction.Flag","l":"getRight()"},{"p":"org.apache.calcite.sql","c":"SqlJoin","l":"getRight()"},{"p":"org.apache.calcite.rel.rules","c":"JoinProjectTransposeRule","l":"getRightChild(RelOptRuleCall)","u":"getRightChild(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"MultiJoinProjectTransposeRule","l":"getRightChild(RelOptRuleCall)","u":"getRightChild(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"LoptMultiJoin","l":"getRightColumnMapping(int, int)","u":"getRightColumnMapping(int,int)"},{"p":"org.apache.calcite.rel.core","c":"EquiJoin","l":"getRightKeys()"},{"p":"org.apache.calcite.rel.rules","c":"HyperEdge","l":"getRightNodeBitmap()"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"getRightPrec()"},{"p":"org.apache.calcite.sql.fun","c":"SqlAnyValueAggFunction","l":"getRollup()"},{"p":"org.apache.calcite.sql.fun","c":"SqlCountAggFunction","l":"getRollup()"},{"p":"org.apache.calcite.sql.fun","c":"SqlMinMaxAggFunction","l":"getRollup()"},{"p":"org.apache.calcite.sql.fun","c":"SqlSingleValueAggFunction","l":"getRollup()"},{"p":"org.apache.calcite.sql.fun","c":"SqlSumAggFunction","l":"getRollup()"},{"p":"org.apache.calcite.sql.fun","c":"SqlSumEmptyIsZeroAggFunction","l":"getRollup()"},{"p":"org.apache.calcite.sql","c":"SqlAggFunction","l":"getRollup()"},{"p":"org.apache.calcite.rel.core","c":"Aggregate.Group","l":"getRollup(List<ImmutableBitSet>)","u":"getRollup(java.util.List)"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor","l":"getRollup(SqlAggFunction)","u":"getRollup(org.apache.calcite.sql.SqlAggFunction)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewAggregateRule","l":"getRollup(SqlAggFunction)","u":"getRollup(org.apache.calcite.sql.SqlAggFunction)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexToLixTranslator","l":"getRoot()"},{"p":"org.apache.calcite.plan.hep","c":"HepPlanner","l":"getRoot()"},{"p":"org.apache.calcite.plan","c":"RelOptPlanner","l":"getRoot()"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"getRoot()"},{"p":"org.apache.calcite.test","c":"MockRelOptPlanner","l":"getRoot()"},{"p":"org.apache.calcite.adapter.enumerable","c":"JavaRelImplementor","l":"getRootExpression()"},{"p":"org.apache.calcite.prepare","c":"Prepare.PreparedResultImpl","l":"getRootRel()"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcCorrelationDataContext","l":"getRootSchema()"},{"p":"org.apache.calcite","c":"DataContext","l":"getRootSchema()"},{"p":"org.apache.calcite.jdbc","c":"CalciteConnection","l":"getRootSchema()"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.Context","l":"getRootSchema()"},{"p":"org.apache.calcite.plan","c":"VisitorDataContext","l":"getRootSchema()"},{"p":"org.apache.calcite.prepare","c":"CalciteCatalogReader","l":"getRootSchema()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorCatalogReader","l":"getRootSchema()"},{"p":"org.apache.calcite.adapter.kafka","c":"KafkaTableOptions","l":"getRowConverter()"},{"p":"org.apache.calcite.plan","c":"RelOptAbstractTable","l":"getRowCount()"},{"p":"org.apache.calcite.plan","c":"RelOptTable","l":"getRowCount()"},{"p":"org.apache.calcite.prepare","c":"RelOptTableImpl","l":"getRowCount()"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.RowCount","l":"getRowCount()"},{"p":"org.apache.calcite.schema","c":"Statistic","l":"getRowCount()"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"getRowCount()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdRowCount","l":"getRowCount(Aggregate, RelMetadataQuery)","u":"getRowCount(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdRowCount","l":"getRowCount(Calc, RelMetadataQuery)","u":"getRowCount(org.apache.calcite.rel.core.Calc,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.materialize","c":"Lattice","l":"getRowCount(double, double...)","u":"getRowCount(double,double...)"},{"p":"org.apache.calcite.materialize","c":"Lattice","l":"getRowCount(double, List<Double>)","u":"getRowCount(double,java.util.List)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdRowCount","l":"getRowCount(EnumerableLimit, RelMetadataQuery)","u":"getRowCount(org.apache.calcite.adapter.enumerable.EnumerableLimit,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdRowCount","l":"getRowCount(Exchange, RelMetadataQuery)","u":"getRowCount(org.apache.calcite.rel.core.Exchange,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdRowCount","l":"getRowCount(Filter, RelMetadataQuery)","u":"getRowCount(org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdRowCount","l":"getRowCount(Intersect, RelMetadataQuery)","u":"getRowCount(org.apache.calcite.rel.core.Intersect,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdRowCount","l":"getRowCount(Join, RelMetadataQuery)","u":"getRowCount(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.materialize","c":"Lattice","l":"getRowCount(List<Lattice.Column>)","u":"getRowCount(java.util.List)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdRowCount","l":"getRowCount(Minus, RelMetadataQuery)","u":"getRowCount(org.apache.calcite.rel.core.Minus,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.java","c":"ReflectiveSchema","l":"getRowCount(Object)","u":"getRowCount(java.lang.Object)"},{"p":"org.apache.calcite.test","c":"ReflectiveSchemaWithoutRowCount","l":"getRowCount(Object)","u":"getRowCount(java.lang.Object)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdRowCount","l":"getRowCount(Project, RelMetadataQuery)","u":"getRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"getRowCount(RelNode)","u":"getRowCount(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.RowCount.Handler","l":"getRowCount(RelNode, RelMetadataQuery)","u":"getRowCount(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdRowCount","l":"getRowCount(RelNode, RelMetadataQuery)","u":"getRowCount(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdRowCount","l":"getRowCount(RelSubset, RelMetadataQuery)","u":"getRowCount(org.apache.calcite.plan.volcano.RelSubset,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdRowCount","l":"getRowCount(Sample, RelMetadataQuery)","u":"getRowCount(org.apache.calcite.rel.core.Sample,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdRowCount","l":"getRowCount(SingleRel, RelMetadataQuery)","u":"getRowCount(org.apache.calcite.rel.SingleRel,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdRowCount","l":"getRowCount(Sort, RelMetadataQuery)","u":"getRowCount(org.apache.calcite.rel.core.Sort,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdRowCount","l":"getRowCount(TableModify, RelMetadataQuery)","u":"getRowCount(org.apache.calcite.rel.core.TableModify,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdRowCount","l":"getRowCount(TableScan, RelMetadataQuery)","u":"getRowCount(org.apache.calcite.rel.core.TableScan,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdRowCount","l":"getRowCount(Union, RelMetadataQuery)","u":"getRowCount(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdRowCount","l":"getRowCount(Values, RelMetadataQuery)","u":"getRowCount(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.test.schemata.orderstream","c":"OrdersStreamTableFactory","l":"getRowList()"},{"p":"org.apache.calcite.plan","c":"RelOptCost","l":"getRows()"},{"p":"org.apache.calcite.plan","c":"RelOptCostImpl","l":"getRows()"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize","l":"getRowsPerMatch()"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysType","l":"getRowType()"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysTypeImpl","l":"getRowType()"},{"p":"org.apache.calcite.plan","c":"RelOptAbstractTable","l":"getRowType()"},{"p":"org.apache.calcite.plan","c":"RelOptNode","l":"getRowType()"},{"p":"org.apache.calcite.plan","c":"RelOptTable","l":"getRowType()"},{"p":"org.apache.calcite.prepare","c":"RelOptTableImpl","l":"getRowType()"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"getRowType()"},{"p":"org.apache.calcite.rel","c":"RelNode","l":"getRowType()"},{"p":"org.apache.calcite.sql.validate","c":"MatchRecognizeNamespace","l":"getRowType()"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingNamespace","l":"getRowType()"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingSqlValidatorTable","l":"getRowType()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorNamespace","l":"getRowType()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorTable","l":"getRowType()"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockModifiableViewRelOptTable","l":"getRowType()"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockRelViewTable","l":"getRowType()"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"getRowType()"},{"p":"org.apache.calcite.adapter.arrow","c":"ArrowTable","l":"getRowType(RelDataTypeFactory)","u":"getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraTable","l":"getRowType(RelDataTypeFactory)","u":"getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.adapter.csv","c":"CsvTable","l":"getRowType(RelDataTypeFactory)","u":"getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidTable","l":"getRowType(RelDataTypeFactory)","u":"getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchTable","l":"getRowType(RelDataTypeFactory)","u":"getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.adapter.file","c":"CsvTable","l":"getRowType(RelDataTypeFactory)","u":"getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.adapter.file","c":"JsonTable","l":"getRowType(RelDataTypeFactory)","u":"getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeTable","l":"getRowType(RelDataTypeFactory)","u":"getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.adapter.geode.simple","c":"GeodeSimpleScannableTable","l":"getRowType(RelDataTypeFactory)","u":"getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbTable","l":"getRowType(RelDataTypeFactory)","u":"getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcTable","l":"getRowType(RelDataTypeFactory)","u":"getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.adapter.kafka","c":"KafkaStreamTable","l":"getRowType(RelDataTypeFactory)","u":"getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoTable","l":"getRowType(RelDataTypeFactory)","u":"getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.adapter.pig","c":"PigTable","l":"getRowType(RelDataTypeFactory)","u":"getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.adapter.redis","c":"RedisTable","l":"getRowType(RelDataTypeFactory)","u":"getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.example.maze","c":"MazeTable","l":"getRowType(RelDataTypeFactory)","u":"getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.piglet","c":"PigTable","l":"getRowType(RelDataTypeFactory)","u":"getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.schema.impl","c":"ListTransientTable","l":"getRowType(RelDataTypeFactory)","u":"getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.schema.impl","c":"StarTable","l":"getRowType(RelDataTypeFactory)","u":"getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.schema.impl","c":"ViewTable","l":"getRowType(RelDataTypeFactory)","u":"getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.schema","c":"Table","l":"getRowType(RelDataTypeFactory)","u":"getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.sql.fun","c":"SqlSpatialTypeFunctions.ExplodeTable","l":"getRowType(RelDataTypeFactory)","u":"getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.sql.fun","c":"SqlSpatialTypeFunctions.GridTable","l":"getRowType(RelDataTypeFactory)","u":"getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockDynamicTable","l":"getRowType(RelDataTypeFactory)","u":"getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.test.schemata.orderstream","c":"BaseOrderStreamTable","l":"getRowType(RelDataTypeFactory)","u":"getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.test.schemata.orderstream","c":"ProductsTable","l":"getRowType(RelDataTypeFactory)","u":"getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.test.schemata.orderstream","c":"ProductsTemporalTable","l":"getRowType(RelDataTypeFactory)","u":"getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.util","c":"Smalls.MazeTable","l":"getRowType(RelDataTypeFactory)","u":"getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.util","c":"Smalls.SimpleTable","l":"getRowType(RelDataTypeFactory)","u":"getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.schema.impl","c":"TableFunctionImpl","l":"getRowType(RelDataTypeFactory, List<? extends Object>)","u":"getRowType(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List)"},{"p":"org.apache.calcite.schema","c":"TableFunction","l":"getRowType(RelDataTypeFactory, List<? extends Object>)","u":"getRowType(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List)"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisorGetHintsFunction","l":"getRowType(RelDataTypeFactory, List<? extends Object>)","u":"getRowType(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List)"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisorGetHintsFunction2","l":"getRowType(RelDataTypeFactory, List<? extends Object>)","u":"getRowType(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List)"},{"p":"org.apache.calcite.rel","c":"RelInput","l":"getRowType(String)","u":"getRowType(java.lang.String)"},{"p":"org.apache.calcite.rel","c":"RelInput","l":"getRowType(String, String)","u":"getRowType(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlTableFunction","l":"getRowTypeInference()"},{"p":"org.apache.calcite.sql","c":"SqlWindowTableFunction","l":"getRowTypeInference()"},{"p":"org.apache.calcite.sql.validate","c":"SqlUserDefinedTableFunction","l":"getRowTypeInference()"},{"p":"org.apache.calcite.sql.validate","c":"SqlUserDefinedTableMacro","l":"getRowTypeInference()"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.BadTableFunction","l":"getRowTypeInference()"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.DedupFunction","l":"getRowTypeInference()"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.DynamicTypeFunction","l":"getRowTypeInference()"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.InvalidTableFunction","l":"getRowTypeInference()"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.RampFunction","l":"getRowTypeInference()"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.RowFunction","l":"getRowTypeInference()"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.ScoreTableFunction","l":"getRowTypeInference()"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.SimilarlityTableFunction","l":"getRowTypeInference()"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.TopNTableFunction","l":"getRowTypeInference()"},{"p":"org.apache.calcite.sql.validate","c":"MatchRecognizeNamespace","l":"getRowTypeSansSystemColumns()"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingNamespace","l":"getRowTypeSansSystemColumns()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorNamespace","l":"getRowTypeSansSystemColumns()"},{"p":"org.apache.calcite.plan","c":"RelOptRuleCall","l":"getRule()"},{"p":"org.apache.calcite.plan","c":"RelOptRuleOperand","l":"getRule()"},{"p":"org.apache.calcite.util.trace","c":"CalciteTrace","l":"getRuleAttemptsTracer()"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"getRuleByDescription(String)","u":"getRuleByDescription(java.lang.String)"},{"p":"org.apache.calcite.plan","c":"RelOptListener.RuleEvent","l":"getRuleCall()"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"getRules()"},{"p":"org.apache.calcite.plan","c":"RelOptPlanner","l":"getRules()"},{"p":"org.apache.calcite.sql.type","c":"CompositeOperandTypeChecker","l":"getRules()"},{"p":"org.apache.calcite.sql.type","c":"CompositeSingleOperandTypeChecker","l":"getRules()"},{"p":"org.apache.calcite.test","c":"MockRelOptPlanner","l":"getRules()"},{"p":"org.apache.calcite.sql","c":"SqlSampleSpec.SqlTableSampleSpec","l":"getSamplePercentage()"},{"p":"org.apache.calcite.rel.core","c":"Sample","l":"getSamplingParameters()"},{"p":"org.apache.calcite.plan","c":"RelOptSamplingParameters","l":"getSamplingPercentage()"},{"p":"org.apache.calcite.plan.volcano","c":"RelSubset","l":"getSatisfyingSubsets()"},{"p":"org.apache.calcite.rel.type","c":"RelDataType","l":"getScale()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeImpl","l":"getScale()"},{"p":"org.apache.calcite.rel.type","c":"SingleColumnAliasRelDataType","l":"getScale()"},{"p":"org.apache.calcite.sql","c":"SqlBasicTypeNameSpec","l":"getScale()"},{"p":"org.apache.calcite.sql","c":"SqlNumericLiteral","l":"getScale()"},{"p":"org.apache.calcite.sql.type","c":"BasicSqlType","l":"getScale()"},{"p":"org.apache.calcite.sql.type","c":"IntervalSqlType","l":"getScale()"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"getScanFactory()"},{"p":"org.apache.calcite.jdbc","c":"CalciteConnection","l":"getSchema()"},{"p":"org.apache.calcite.sql","c":"SqlDescribeSchema","l":"getSchema()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"getSchema(CalciteSchema, Iterable<String>, SqlNameMatcher)","u":"getSchema(org.apache.calcite.jdbc.CalciteSchema,java.lang.Iterable,org.apache.calcite.sql.validate.SqlNameMatcher)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"getSchemaObjectMonikers(SqlValidatorCatalogReader, List<String>, List<SqlMoniker>)","u":"getSchemaObjectMonikers(org.apache.calcite.sql.validate.SqlValidatorCatalogReader,java.util.List,java.util.List)"},{"p":"org.apache.calcite.schema.impl","c":"ViewTable","l":"getSchemaPath()"},{"p":"org.apache.calcite.prepare","c":"CalciteCatalogReader","l":"getSchemaPaths()"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingSqlValidatorCatalogReader","l":"getSchemaPaths()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorCatalogReader","l":"getSchemaPaths()"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaImpl","l":"getSchemas(Meta.ConnectionHandle, String, Meta.Pat)","u":"getSchemas(org.apache.calcite.avatica.Meta.ConnectionHandle,java.lang.String,org.apache.calcite.avatica.Meta.Pat)"},{"p":"org.apache.calcite.sql","c":"SqlAlter","l":"getScope()"},{"p":"org.apache.calcite.sql","c":"SqlCallBinding","l":"getScope()"},{"p":"org.apache.calcite.sql.validate","c":"CollectNamespace","l":"getScope()"},{"p":"org.apache.calcite.sql.validate","c":"SqlScopedShuttle","l":"getScope()"},{"p":"org.apache.calcite.sql.validate","c":"TableConstructorNamespace","l":"getScope()"},{"p":"org.apache.calcite.sql.validate","c":"SqlNonNullableAccessors","l":"getScope(SqlCallBinding)","u":"getScope(org.apache.calcite.sql.SqlCallBinding)"},{"p":"org.apache.calcite.adapter.pig","c":"PigRel.Implementor","l":"getScript()"},{"p":"org.apache.calcite.adapter.splunk.search","c":"SplunkConnection","l":"getSearchResultEnumerator(String, Map<String, String>, List<String>)","u":"getSearchResultEnumerator(java.lang.String,java.util.Map,java.util.List)"},{"p":"org.apache.calcite.adapter.splunk.search","c":"SplunkConnectionImpl","l":"getSearchResultEnumerator(String, Map<String, String>, List<String>)","u":"getSearchResultEnumerator(java.lang.String,java.util.Map,java.util.List)"},{"p":"org.apache.calcite.adapter.splunk.search","c":"SplunkConnection","l":"getSearchResults(String, Map<String, String>, List<String>, SearchResultListener)","u":"getSearchResults(java.lang.String,java.util.Map,java.util.List,org.apache.calcite.adapter.splunk.search.SearchResultListener)"},{"p":"org.apache.calcite.adapter.splunk.search","c":"SplunkConnectionImpl","l":"getSearchResults(String, Map<String, String>, List<String>, SearchResultListener)","u":"getSearchResults(java.lang.String,java.util.Map,java.util.List,org.apache.calcite.adapter.splunk.search.SearchResultListener)"},{"p":"org.apache.calcite.rel.core","c":"RepeatUnion","l":"getSeedRel()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdSelectivity","l":"getSelectivity(Aggregate, RelMetadataQuery, RexNode)","u":"getSelectivity(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdSelectivity","l":"getSelectivity(Calc, RelMetadataQuery, RexNode)","u":"getSelectivity(org.apache.calcite.rel.core.Calc,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdSelectivity","l":"getSelectivity(Filter, RelMetadataQuery, RexNode)","u":"getSelectivity(org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdSelectivity","l":"getSelectivity(Join, RelMetadataQuery, RexNode)","u":"getSelectivity(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdSelectivity","l":"getSelectivity(Project, RelMetadataQuery, RexNode)","u":"getSelectivity(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Selectivity.Handler","l":"getSelectivity(RelNode, RelMetadataQuery, RexNode)","u":"getSelectivity(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdSelectivity","l":"getSelectivity(RelNode, RelMetadataQuery, RexNode)","u":"getSelectivity(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"getSelectivity(RelNode, RexNode)","u":"getSelectivity(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Selectivity","l":"getSelectivity(RexNode)","u":"getSelectivity(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"getSelectivity(RexNode)","u":"getSelectivity(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdSelectivity","l":"getSelectivity(Sort, RelMetadataQuery, RexNode)","u":"getSelectivity(org.apache.calcite.rel.core.Sort,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdSelectivity","l":"getSelectivity(TableModify, RelMetadataQuery, RexNode)","u":"getSelectivity(org.apache.calcite.rel.core.TableModify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdSelectivity","l":"getSelectivity(TableScan, RelMetadataQuery, RexNode)","u":"getSelectivity(org.apache.calcite.rel.core.TableScan,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdSelectivity","l":"getSelectivity(Union, RelMetadataQuery, RexNode)","u":"getSelectivity(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUtil","l":"getSelectivityValue(RexNode)","u":"getSelectivityValue(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.sql","c":"SqlSelect","l":"getSelectList()"},{"p":"org.apache.calcite.sql.validate","c":"SqlNonNullableAccessors","l":"getSelectList(SqlSelect)","u":"getSelectList(org.apache.calcite.sql.SqlSelect)"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"getSelectListItem(SqlNode, int)","u":"getSelectListItem(org.apache.calcite.sql.SqlNode,int)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"getSelectScope(SqlSelect)","u":"getSelectScope(org.apache.calcite.sql.SqlSelect)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"getSelectScope(SqlSelect)","u":"getSelectScope(org.apache.calcite.sql.SqlSelect)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"getSelfJoinExprForUpdate(SqlNode, String)","u":"getSelfJoinExprForUpdate(org.apache.calcite.sql.SqlNode,java.lang.String)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUtil","l":"getSemiJoinDistinctRowCount(Join, RelMetadataQuery, ImmutableBitSet, RexNode)","u":"getSemiJoinDistinctRowCount(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"getSet(RelNode)","u":"getSet(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive.Source","l":"getShort()"},{"p":"org.apache.calcite.util.graph","c":"Graphs.FrozenGraph","l":"getShortestDistance(V, V)","u":"getShortestDistance(V,V)"},{"p":"org.apache.calcite.sql","c":"SqlIntervalLiteral.IntervalValue","l":"getSign()"},{"p":"org.apache.calcite.server","c":"CalciteServerStatement","l":"getSignature()"},{"p":"org.apache.calcite.sql.fun","c":"SqlBetweenOperator","l":"getSignatureTemplate(int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlCastFunction","l":"getSignatureTemplate(int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlConvertFunction","l":"getSignatureTemplate(int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlDatePartFunction","l":"getSignatureTemplate(int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlExtractFunction","l":"getSignatureTemplate(int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlIntervalOperator","l":"getSignatureTemplate(int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonArrayFunction","l":"getSignatureTemplate(int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonModifyFunction","l":"getSignatureTemplate(int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonObjectFunction","l":"getSignatureTemplate(int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonQueryFunction","l":"getSignatureTemplate(int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlOracleConvertFunction","l":"getSignatureTemplate(int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlOverlayFunction","l":"getSignatureTemplate(int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlPositionFunction","l":"getSignatureTemplate(int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlSubstringFunction","l":"getSignatureTemplate(int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlTranslate3Function","l":"getSignatureTemplate(int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlTranslateFunction","l":"getSignatureTemplate(int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlTrimFunction","l":"getSignatureTemplate(int)"},{"p":"org.apache.calcite.sql","c":"SqlBinaryOperator","l":"getSignatureTemplate(int)"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"getSignatureTemplate(int)"},{"p":"org.apache.calcite.sql","c":"SqlPostfixOperator","l":"getSignatureTemplate(int)"},{"p":"org.apache.calcite.sql","c":"SqlPrefixOperator","l":"getSignatureTemplate(int)"},{"p":"org.apache.calcite.sql","c":"SqlIdentifier","l":"getSimple()"},{"p":"org.apache.calcite.plan","c":"ConventionTraitDef","l":"getSimpleName()"},{"p":"org.apache.calcite.plan","c":"RelTraitDef","l":"getSimpleName()"},{"p":"org.apache.calcite.rel","c":"RelCollationTraitDef","l":"getSimpleName()"},{"p":"org.apache.calcite.rel","c":"RelDistributionTraitDef","l":"getSimpleName()"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor.UnifyRuleCall","l":"getSimplify()"},{"p":"org.apache.calcite.sql.dialect","c":"OracleSqlDialect","l":"getSingleRowTableName()"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"getSingleRowTableName()"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchSchemaFactory","l":"getSortedHost(List<HttpHost>)","u":"getSortedHost(java.util.List)"},{"p":"org.apache.calcite.rel.core","c":"Sort","l":"getSortExps()"},{"p":"org.apache.calcite.rex","c":"RexExecutable","l":"getSource()"},{"p":"org.apache.calcite.sql","c":"SqlInsert","l":"getSource()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.AbstractMapping","l":"getSource(int)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.IdentityMapping","l":"getSource(int)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.OverridingSourceMapping","l":"getSource(int)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.SourceMapping","l":"getSource(int)"},{"p":"org.apache.calcite.util","c":"Permutation","l":"getSource(int)"},{"p":"org.apache.calcite.util.mapping","c":"AbstractSourceMapping","l":"getSourceCount()"},{"p":"org.apache.calcite.util.mapping","c":"AbstractTargetMapping","l":"getSourceCount()"},{"p":"org.apache.calcite.util.mapping","c":"Mapping","l":"getSourceCount()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.AbstractMapping","l":"getSourceCount()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.FunctionMapping","l":"getSourceCount()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.IdentityMapping","l":"getSourceCount()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.PartialMapping","l":"getSourceCount()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.SourceMapping","l":"getSourceCount()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.TargetMapping","l":"getSourceCount()"},{"p":"org.apache.calcite.util","c":"Permutation","l":"getSourceCount()"},{"p":"org.apache.calcite.rel.core","c":"TableModify","l":"getSourceExpressionList()"},{"p":"org.apache.calcite.sql","c":"SqlUpdate","l":"getSourceExpressionList()"},{"p":"org.apache.calcite.rex","c":"RexProgram","l":"getSourceField(int)"},{"p":"org.apache.calcite.util.mapping","c":"AbstractSourceMapping","l":"getSourceOpt(int)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.AbstractMapping","l":"getSourceOpt(int)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.IdentityMapping","l":"getSourceOpt(int)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.PartialMapping","l":"getSourceOpt(int)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.SourceMapping","l":"getSourceOpt(int)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.TargetMapping","l":"getSourceOpt(int)"},{"p":"org.apache.calcite.util","c":"Permutation","l":"getSourceOpt(int)"},{"p":"org.apache.calcite.rel","c":"RelReferentialConstraint","l":"getSourceQualifiedName()"},{"p":"org.apache.calcite.rel","c":"RelReferentialConstraintImpl","l":"getSourceQualifiedName()"},{"p":"org.apache.calcite.sql","c":"SqlDelete","l":"getSourceSelect()"},{"p":"org.apache.calcite.sql","c":"SqlMerge","l":"getSourceSelect()"},{"p":"org.apache.calcite.sql","c":"SqlUpdate","l":"getSourceSelect()"},{"p":"org.apache.calcite.sql.validate","c":"SqlNonNullableAccessors","l":"getSourceSelect(SqlDelete)","u":"getSourceSelect(org.apache.calcite.sql.SqlDelete)"},{"p":"org.apache.calcite.sql.validate","c":"SqlNonNullableAccessors","l":"getSourceSelect(SqlMerge)","u":"getSourceSelect(org.apache.calcite.sql.SqlMerge)"},{"p":"org.apache.calcite.sql.validate","c":"SqlNonNullableAccessors","l":"getSourceSelect(SqlUpdate)","u":"getSourceSelect(org.apache.calcite.sql.SqlUpdate)"},{"p":"org.apache.calcite.util","c":"SourceStringReader","l":"getSourceString()"},{"p":"org.apache.calcite.sql","c":"SqlMerge","l":"getSourceTableRef()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"getSpaceName()"},{"p":"org.apache.calcite.adapter.spark","c":"SparkRuntime","l":"getSparkContext(DataContext)","u":"getSparkContext(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.Dummy","l":"getSparkHandler(boolean)"},{"p":"org.apache.calcite.model","c":"JsonLattice","l":"getSql()"},{"p":"org.apache.calcite.model","c":"JsonMaterialization","l":"getSql()"},{"p":"org.apache.calcite.model","c":"JsonView","l":"getSql()"},{"p":"org.apache.calcite.sql.util","c":"SqlBuilder","l":"getSql()"},{"p":"org.apache.calcite.sql.util","c":"SqlString","l":"getSql()"},{"p":"org.apache.calcite.sql.util","c":"SqlBuilder","l":"getSqlAndClear()"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"getSqlCallFactory()"},{"p":"org.apache.calcite.rel.type","c":"RelDataType","l":"getSqlIdentifier()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeImpl","l":"getSqlIdentifier()"},{"p":"org.apache.calcite.rel.type","c":"SingleColumnAliasRelDataType","l":"getSqlIdentifier()"},{"p":"org.apache.calcite.sql","c":"SqlFunction","l":"getSqlIdentifier()"},{"p":"org.apache.calcite.sql.type","c":"ObjectSqlType","l":"getSqlIdentifier()"},{"p":"org.apache.calcite.util.trace","c":"CalciteTrace","l":"getSqlTimingTracer()"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl.CalcitePreparingStmt","l":"getSqlToRelConverter(SqlValidator, Prepare.CatalogReader, SqlToRelConverter.Config)","u":"getSqlToRelConverter(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.prepare.Prepare.CatalogReader,org.apache.calcite.sql2rel.SqlToRelConverter.Config)"},{"p":"org.apache.calcite.prepare","c":"Prepare","l":"getSqlToRelConverter(SqlValidator, Prepare.CatalogReader, SqlToRelConverter.Config)","u":"getSqlToRelConverter(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.prepare.Prepare.CatalogReader,org.apache.calcite.sql2rel.SqlToRelConverter.Config)"},{"p":"org.apache.calcite.tools","c":"FrameworkConfig","l":"getSqlToRelConverterConfig()"},{"p":"org.apache.calcite.util.trace","c":"CalciteTrace","l":"getSqlToRelTracer()"},{"p":"org.apache.calcite.adapter.pig","c":"PigDataType","l":"getSqlType()"},{"p":"org.apache.calcite.rel.type","c":"DynamicRecordTypeImpl","l":"getSqlTypeName()"},{"p":"org.apache.calcite.rel.type","c":"RelDataType","l":"getSqlTypeName()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactoryImpl.JavaType","l":"getSqlTypeName()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeImpl","l":"getSqlTypeName()"},{"p":"org.apache.calcite.rel.type","c":"RelRecordType","l":"getSqlTypeName()"},{"p":"org.apache.calcite.rel.type","c":"SingleColumnAliasRelDataType","l":"getSqlTypeName()"},{"p":"org.apache.calcite.sql.type","c":"AbstractSqlType","l":"getSqlTypeName()"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl.CalcitePreparingStmt","l":"getSqlValidator()"},{"p":"org.apache.calcite.prepare","c":"Prepare","l":"getSqlValidator()"},{"p":"org.apache.calcite.tools","c":"FrameworkConfig","l":"getSqlValidatorConfig()"},{"p":"org.apache.calcite.util","c":"Util","l":"getStackTrace(Throwable)","u":"getStackTrace(java.lang.Throwable)"},{"p":"org.apache.calcite.sql","c":"SqlJsonEncoding","l":"getStandardName()"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema.LatticeEntry","l":"getStarTable()"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema.LatticeEntryImpl","l":"getStarTable()"},{"p":"org.apache.calcite.schema","c":"Schemas","l":"getStarTables(CalciteSchema)","u":"getStarTables(org.apache.calcite.jdbc.CalciteSchema)"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisor.ValidateErrorInfo","l":"getStartColumnNum()"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisor.ValidateErrorInfo","l":"getStartLineNum()"},{"p":"org.apache.calcite.sql","c":"SqlIntervalQualifier","l":"getStartPrecision(RelDataTypeSystem)","u":"getStartPrecision(org.apache.calcite.rel.type.RelDataTypeSystem)"},{"p":"org.apache.calcite.sql","c":"SqlIntervalQualifier","l":"getStartPrecisionPreservingDefault()"},{"p":"org.apache.calcite.sql","c":"SqlIntervalQualifier","l":"getStartUnit()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"getStartUnit()"},{"p":"org.apache.calcite.sql","c":"SqlStateCodes","l":"getState()"},{"p":"org.apache.calcite.sql","c":"SqlStateCodes","l":"getStateClass()"},{"p":"org.apache.calcite.server","c":"CalciteServer","l":"getStatement(Meta.StatementHandle)","u":"getStatement(org.apache.calcite.avatica.Meta.StatementHandle)"},{"p":"org.apache.calcite.adapter.pig","c":"PigRel.Implementor","l":"getStatements()"},{"p":"org.apache.calcite.util.trace","c":"CalciteTrace","l":"getStatementTracer()"},{"p":"org.apache.calcite.adapter.enumerable","c":"StrictAggImplementor","l":"getStateSize()"},{"p":"org.apache.calcite.sql","c":"SqlStateCodes","l":"getStateSubClass()"},{"p":"org.apache.calcite.adapter.enumerable","c":"AggImplementor","l":"getStateType(AggContext)","u":"getStateType(org.apache.calcite.adapter.enumerable.AggContext)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexImpTable.LagImplementor","l":"getStateType(AggContext)","u":"getStateType(org.apache.calcite.adapter.enumerable.AggContext)"},{"p":"org.apache.calcite.adapter.enumerable","c":"StrictAggImplementor","l":"getStateType(AggContext)","u":"getStateType(org.apache.calcite.adapter.enumerable.AggContext)"},{"p":"org.apache.calcite.adapter.file","c":"JsonTable","l":"getStatistic()"},{"p":"org.apache.calcite.adapter.kafka","c":"KafkaStreamTable","l":"getStatistic()"},{"p":"org.apache.calcite.piglet","c":"PigTable","l":"getStatistic()"},{"p":"org.apache.calcite.schema.impl","c":"AbstractTable","l":"getStatistic()"},{"p":"org.apache.calcite.schema","c":"Table","l":"getStatistic()"},{"p":"org.apache.calcite.sql.fun","c":"SqlSpatialTypeFunctions.ExplodeTable","l":"getStatistic()"},{"p":"org.apache.calcite.sql.fun","c":"SqlSpatialTypeFunctions.GridTable","l":"getStatistic()"},{"p":"org.apache.calcite.test.schemata.orderstream","c":"BaseOrderStreamTable","l":"getStatistic()"},{"p":"org.apache.calcite.test.schemata.orderstream","c":"ProductsTable","l":"getStatistic()"},{"p":"org.apache.calcite.test.schemata.orderstream","c":"ProductsTemporalTable","l":"getStatistic()"},{"p":"org.apache.calcite.tools","c":"FrameworkConfig","l":"getStatisticProvider()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil.ParsedCollation","l":"getStrength()"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize","l":"getStrictEnd()"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize","l":"getStrictStart()"},{"p":"org.apache.calcite.sql","c":"SqlIdentifier","l":"getString(List<String>)","u":"getString(java.util.List)"},{"p":"org.apache.calcite.rel","c":"RelInput","l":"getString(String)","u":"getString(java.lang.String)"},{"p":"org.apache.calcite.util.javac","c":"JavaCompilerArgs","l":"getStringArray()"},{"p":"org.apache.calcite.sql","c":"SqlJdbcFunctionCall","l":"getStringFunctions()"},{"p":"org.apache.calcite.rel","c":"RelInput","l":"getStringList(String)","u":"getStringList(java.lang.String)"},{"p":"org.apache.calcite.rex","c":"RexCallBinding","l":"getStringLiteralOperand(int)"},{"p":"org.apache.calcite.sql","c":"SqlCallBinding","l":"getStringLiteralOperand(int)"},{"p":"org.apache.calcite.sql","c":"SqlOperatorBinding","l":"getStringLiteralOperand(int)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"getStringValue()"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"getStrongPolicyInference()"},{"p":"org.apache.calcite.rel.type","c":"RelDataType","l":"getStructKind()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeImpl","l":"getStructKind()"},{"p":"org.apache.calcite.rel.type","c":"RelRecordType","l":"getStructKind()"},{"p":"org.apache.calcite.rel.type","c":"SingleColumnAliasRelDataType","l":"getStructKind()"},{"p":"org.apache.calcite.sql2rel","c":"SqlRexContext","l":"getSubQueryExpr(SqlCall)","u":"getSubQueryExpr(org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Blackboard","l":"getSubQueryExpr(SqlCall)","u":"getSubQueryExpr(org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcBaseSchema","l":"getSubSchema(String)","u":"getSubSchema(java.lang.String)"},{"p":"org.apache.calcite.schema.impl","c":"AbstractSchema","l":"getSubSchema(String)","u":"getSubSchema(java.lang.String)"},{"p":"org.apache.calcite.schema.impl","c":"DelegatingSchema","l":"getSubSchema(String)","u":"getSubSchema(java.lang.String)"},{"p":"org.apache.calcite.schema","c":"Schema","l":"getSubSchema(String)","u":"getSubSchema(java.lang.String)"},{"p":"org.apache.calcite.schema","c":"SchemaPlus","l":"getSubSchema(String)","u":"getSubSchema(java.lang.String)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"getSubSchema(String, boolean)","u":"getSubSchema(java.lang.String,boolean)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"getSubSchemaMap()"},{"p":"org.apache.calcite.schema.impl","c":"AbstractSchema","l":"getSubSchemaMap()"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcBaseSchema","l":"getSubSchemaNames()"},{"p":"org.apache.calcite.schema.impl","c":"AbstractSchema","l":"getSubSchemaNames()"},{"p":"org.apache.calcite.schema.impl","c":"DelegatingSchema","l":"getSubSchemaNames()"},{"p":"org.apache.calcite.schema","c":"Schema","l":"getSubSchemaNames()"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"getSubset(RelNode)","u":"getSubset(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"getSubset(RelNode, RelTraitSet)","u":"getSubset(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize","l":"getSubsetList()"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"getSubsetNonNull(RelNode)","u":"getSubsetNonNull(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.core","c":"Match","l":"getSubsets()"},{"p":"org.apache.calcite.plan.volcano","c":"RelSubset","l":"getSubsetsSatisfyingThis()"},{"p":"org.apache.calcite.sql.fun","c":"SqlAvgAggFunction","l":"getSubtype()"},{"p":"org.apache.calcite.sql.fun","c":"SqlCovarAggFunction","l":"getSubtype()"},{"p":"org.apache.calcite.sql.fun","c":"SqlAbstractTimeFunction","l":"getSyntax()"},{"p":"org.apache.calcite.sql.fun","c":"SqlBaseContextVariable","l":"getSyntax()"},{"p":"org.apache.calcite.sql.fun","c":"SqlBasicAggFunction","l":"getSyntax()"},{"p":"org.apache.calcite.sql.fun","c":"SqlBasicOperator","l":"getSyntax()"},{"p":"org.apache.calcite.sql.fun","c":"SqlCaseOperator","l":"getSyntax()"},{"p":"org.apache.calcite.sql.fun","c":"SqlCastFunction","l":"getSyntax()"},{"p":"org.apache.calcite.sql.fun","c":"SqlCountAggFunction","l":"getSyntax()"},{"p":"org.apache.calcite.sql.fun","c":"SqlCurrentDateFunction","l":"getSyntax()"},{"p":"org.apache.calcite.sql","c":"SqlAsofJoin.SqlAsofJoinOperator","l":"getSyntax()"},{"p":"org.apache.calcite.sql","c":"SqlBasicFunction","l":"getSyntax()"},{"p":"org.apache.calcite.sql","c":"SqlBinaryOperator","l":"getSyntax()"},{"p":"org.apache.calcite.sql","c":"SqlDescriptorOperator","l":"getSyntax()"},{"p":"org.apache.calcite.sql","c":"SqlFunction","l":"getSyntax()"},{"p":"org.apache.calcite.sql","c":"SqlInternalOperator","l":"getSyntax()"},{"p":"org.apache.calcite.sql","c":"SqlJoin.SqlJoinOperator","l":"getSyntax()"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize.SqlMatchRecognizeOperator","l":"getSyntax()"},{"p":"org.apache.calcite.sql","c":"SqlMeasureOperator","l":"getSyntax()"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"getSyntax()"},{"p":"org.apache.calcite.sql","c":"SqlPostfixOperator","l":"getSyntax()"},{"p":"org.apache.calcite.sql","c":"SqlPrefixOperator","l":"getSyntax()"},{"p":"org.apache.calcite.sql","c":"SqlSelectOperator","l":"getSyntax()"},{"p":"org.apache.calcite.sql","c":"SqlSnapshot.SqlSnapshotOperator","l":"getSyntax()"},{"p":"org.apache.calcite.sql","c":"SqlSpecialOperator","l":"getSyntax()"},{"p":"org.apache.calcite.sql.validate","c":"SqlUserDefinedFunction","l":"getSyntax()"},{"p":"org.apache.calcite.schema","c":"TemporalTable","l":"getSysEndFieldName()"},{"p":"org.apache.calcite.test.schemata.orderstream","c":"ProductsTemporalTable","l":"getSysEndFieldName()"},{"p":"org.apache.calcite.schema","c":"TemporalTable","l":"getSysStartFieldName()"},{"p":"org.apache.calcite.test.schemata.orderstream","c":"ProductsTemporalTable","l":"getSysStartFieldName()"},{"p":"org.apache.calcite.rel.core","c":"Join","l":"getSystemFieldList()"},{"p":"org.apache.calcite.rel.logical","c":"LogicalAsofJoin","l":"getSystemFieldList()"},{"p":"org.apache.calcite.rel.logical","c":"LogicalJoin","l":"getSystemFieldList()"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"getSystemFields()"},{"p":"org.apache.calcite.sql","c":"SqlJdbcFunctionCall","l":"getSystemFunctions()"},{"p":"org.apache.calcite.adapter.utils","c":"OsQueryTableUtil","l":"getSystemInfo()"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery","l":"getTable()"},{"p":"org.apache.calcite.adapter.pig","c":"PigAggregate","l":"getTable()"},{"p":"org.apache.calcite.adapter.pig","c":"PigFilter","l":"getTable()"},{"p":"org.apache.calcite.adapter.pig","c":"PigJoin","l":"getTable()"},{"p":"org.apache.calcite.adapter.pig","c":"PigProject","l":"getTable()"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema.TableEntry","l":"getTable()"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema.TableEntryImpl","l":"getTable()"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"getTable()"},{"p":"org.apache.calcite.rel.core","c":"TableModify","l":"getTable()"},{"p":"org.apache.calcite.rel.core","c":"TableScan","l":"getTable()"},{"p":"org.apache.calcite.rel.core","c":"TableSpool","l":"getTable()"},{"p":"org.apache.calcite.rel","c":"RelNode","l":"getTable()"},{"p":"org.apache.calcite.rex","c":"RexTableInputRef.RelTableRef","l":"getTable()"},{"p":"org.apache.calcite.schema.impl","c":"ModifiableViewTable","l":"getTable()"},{"p":"org.apache.calcite.schema","c":"ModifiableView","l":"getTable()"},{"p":"org.apache.calcite.sql","c":"SqlDescribeTable","l":"getTable()"},{"p":"org.apache.calcite.sql.validate","c":"MatchRecognizeNamespace","l":"getTable()"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingNamespace","l":"getTable()"},{"p":"org.apache.calcite.sql.validate","c":"IdentifierNamespace","l":"getTable()"},{"p":"org.apache.calcite.sql.validate","c":"SelectScope","l":"getTable()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorNamespace","l":"getTable()"},{"p":"org.apache.calcite.prepare","c":"CalciteCatalogReader","l":"getTable(List<String>)","u":"getTable(java.util.List)"},{"p":"org.apache.calcite.prepare","c":"Prepare.CatalogReader","l":"getTable(List<String>)","u":"getTable(java.util.List)"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingSqlValidatorCatalogReader","l":"getTable(List<String>)","u":"getTable(java.util.List)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorCatalogReader","l":"getTable(List<String>)","u":"getTable(java.util.List)"},{"p":"org.apache.calcite.sql.validate","c":"SqlUserDefinedTableMacro","l":"getTable(SqlOperatorBinding)","u":"getTable(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql.validate","c":"SqlNonNullableAccessors","l":"getTable(SqlValidatorNamespace)","u":"getTable(org.apache.calcite.sql.validate.SqlValidatorNamespace)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcBaseSchema","l":"getTable(String)","u":"getTable(java.lang.String)"},{"p":"org.apache.calcite.chinook","c":"CodesFunction","l":"getTable(String)","u":"getTable(java.lang.String)"},{"p":"org.apache.calcite.rel","c":"RelInput","l":"getTable(String)","u":"getTable(java.lang.String)"},{"p":"org.apache.calcite.schema.impl","c":"AbstractSchema","l":"getTable(String)","u":"getTable(java.lang.String)"},{"p":"org.apache.calcite.schema.impl","c":"DelegatingSchema","l":"getTable(String)","u":"getTable(java.lang.String)"},{"p":"org.apache.calcite.schema","c":"Schema","l":"getTable(String)","u":"getTable(java.lang.String)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"getTable(String, boolean)","u":"getTable(java.lang.String,boolean)"},{"p":"org.apache.calcite.plan","c":"TableAccessMap","l":"getTableAccessMode(List<String>)","u":"getTableAccessMode(java.util.List)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"getTableBasedOnNullaryFunction(String, boolean)","u":"getTableBasedOnNullaryFunction(java.lang.String,boolean)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"getTableBySql(String)","u":"getTableBySql(java.lang.String)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbTable","l":"getTableDef()"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbSchema","l":"getTableDef(String)","u":"getTableDef(java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"getTableEntry(SqlValidatorCatalogReader, List<String>)","u":"getTableEntry(org.apache.calcite.sql.validate.SqlValidatorCatalogReader,java.util.List)"},{"p":"org.apache.calcite.schema","c":"Schemas","l":"getTableExpression(SchemaPlus, String, Table, Class<?>)","u":"getTableExpression(org.apache.calcite.schema.SchemaPlus,java.lang.String,org.apache.calcite.schema.Table,java.lang.Class)"},{"p":"org.apache.calcite.plan","c":"RelOptSchema","l":"getTableForMember(List<String>)","u":"getTableForMember(java.util.List)"},{"p":"org.apache.calcite.prepare","c":"CalciteCatalogReader","l":"getTableForMember(List<String>)","u":"getTableForMember(java.util.List)"},{"p":"org.apache.calcite.prepare","c":"Prepare.CatalogReader","l":"getTableForMember(List<String>)","u":"getTableForMember(java.util.List)"},{"p":"org.apache.calcite.plan","c":"RelOptSchemaWithSampling","l":"getTableForMember(List<String>, String, boolean[])","u":"getTableForMember(java.util.List,java.lang.String,boolean[])"},{"p":"org.apache.calcite.plan","c":"RelOptTable.ToRelContext","l":"getTableHints()"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraSchema","l":"getTableMap()"},{"p":"org.apache.calcite.adapter.clone","c":"CloneSchema","l":"getTableMap()"},{"p":"org.apache.calcite.adapter.csv","c":"CsvSchema","l":"getTableMap()"},{"p":"org.apache.calcite.adapter.druid","c":"DruidSchema","l":"getTableMap()"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchSchema","l":"getTableMap()"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeSchema","l":"getTableMap()"},{"p":"org.apache.calcite.adapter.geode.simple","c":"GeodeSimpleSchema","l":"getTableMap()"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbSchema","l":"getTableMap()"},{"p":"org.apache.calcite.adapter.java","c":"ReflectiveSchema","l":"getTableMap()"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoSchema","l":"getTableMap()"},{"p":"org.apache.calcite.adapter.pig","c":"PigSchema","l":"getTableMap()"},{"p":"org.apache.calcite.adapter.splunk","c":"SplunkSchema","l":"getTableMap()"},{"p":"org.apache.calcite.adapter.tpcds","c":"TpcdsSchema","l":"getTableMap()"},{"p":"org.apache.calcite.adapter.tpch","c":"TpchSchema","l":"getTableMap()"},{"p":"org.apache.calcite.schema.impl","c":"AbstractSchema","l":"getTableMap()"},{"p":"org.apache.calcite.prepare","c":"Prepare.PreparedExplain","l":"getTableModOp()"},{"p":"org.apache.calcite.prepare","c":"Prepare.PreparedResult","l":"getTableModOp()"},{"p":"org.apache.calcite.prepare","c":"Prepare.PreparedResultImpl","l":"getTableModOp()"},{"p":"org.apache.calcite.adapter.redis","c":"RedisTableFieldInfo","l":"getTableName()"},{"p":"org.apache.calcite.adapter.pig","c":"PigRel.Implementor","l":"getTableName(RelNode)","u":"getTableName(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcBaseSchema","l":"getTableNames()"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"getTableNames()"},{"p":"org.apache.calcite.schema.impl","c":"AbstractSchema","l":"getTableNames()"},{"p":"org.apache.calcite.schema.impl","c":"DelegatingSchema","l":"getTableNames()"},{"p":"org.apache.calcite.schema","c":"Schema","l":"getTableNames()"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"getTableNames(LikePattern)","u":"getTableNames(org.apache.calcite.schema.lookup.LikePattern)"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingScope","l":"getTableNamespace(List<String>)","u":"getTableNamespace(java.util.List)"},{"p":"org.apache.calcite.sql.validate","c":"ParameterScope","l":"getTableNamespace(List<String>)","u":"getTableNamespace(java.util.List)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope","l":"getTableNamespace(List<String>)","u":"getTableNamespace(java.util.List)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"getTableOrigin(RelNode)","u":"getTableOrigin(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.schema.impl","c":"ModifiableViewTable","l":"getTablePath()"},{"p":"org.apache.calcite.schema","c":"ModifiableView","l":"getTablePath()"},{"p":"org.apache.calcite.rex","c":"RexTableInputRef","l":"getTableRef()"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize","l":"getTableRef()"},{"p":"org.apache.calcite.sql","c":"SqlSnapshot","l":"getTableRef()"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.TableReferences","l":"getTableReferences()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdTableReferences","l":"getTableReferences(Aggregate, RelMetadataQuery)","u":"getTableReferences(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdTableReferences","l":"getTableReferences(Calc, RelMetadataQuery)","u":"getTableReferences(org.apache.calcite.rel.core.Calc,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdTableReferences","l":"getTableReferences(Exchange, RelMetadataQuery)","u":"getTableReferences(org.apache.calcite.rel.core.Exchange,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdTableReferences","l":"getTableReferences(Filter, RelMetadataQuery)","u":"getTableReferences(org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdTableReferences","l":"getTableReferences(Join, RelMetadataQuery)","u":"getTableReferences(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdTableReferences","l":"getTableReferences(Project, RelMetadataQuery)","u":"getTableReferences(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"getTableReferences(RelNode)","u":"getTableReferences(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.TableReferences.Handler","l":"getTableReferences(RelNode, RelMetadataQuery)","u":"getTableReferences(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdTableReferences","l":"getTableReferences(RelNode, RelMetadataQuery)","u":"getTableReferences(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdTableReferences","l":"getTableReferences(RelSubset, RelMetadataQuery)","u":"getTableReferences(org.apache.calcite.plan.volcano.RelSubset,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdTableReferences","l":"getTableReferences(Sample, RelMetadataQuery)","u":"getTableReferences(org.apache.calcite.rel.core.Sample,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdTableReferences","l":"getTableReferences(SetOp, RelMetadataQuery)","u":"getTableReferences(org.apache.calcite.rel.core.SetOp,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdTableReferences","l":"getTableReferences(Sort, RelMetadataQuery)","u":"getTableReferences(org.apache.calcite.rel.core.Sort,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdTableReferences","l":"getTableReferences(TableModify, RelMetadataQuery)","u":"getTableReferences(org.apache.calcite.rel.core.TableModify,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdTableReferences","l":"getTableReferences(TableScan, RelMetadataQuery)","u":"getTableReferences(org.apache.calcite.rel.core.TableScan,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdTableReferences","l":"getTableReferences(Window, RelMetadataQuery)","u":"getTableReferences(org.apache.calcite.rel.core.Window,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaImpl","l":"getTables(Meta.ConnectionHandle, String, Meta.Pat, Meta.Pat, List<String>)","u":"getTables(org.apache.calcite.avatica.Meta.ConnectionHandle,java.lang.String,org.apache.calcite.avatica.Meta.Pat,org.apache.calcite.avatica.Meta.Pat,java.util.List)"},{"p":"org.apache.calcite.plan","c":"TableAccessMap","l":"getTablesAccessed()"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"getTablesBasedOnNullaryFunctions()"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery","l":"getTableScan()"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaImpl","l":"getTableTypes(Meta.ConnectionHandle)","u":"getTableTypes(org.apache.calcite.avatica.Meta.ConnectionHandle)"},{"p":"org.apache.calcite.adapter.java","c":"ReflectiveSchema","l":"getTarget()"},{"p":"org.apache.calcite.util","c":"DelegatingInvocationHandler","l":"getTarget()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.AbstractMapping","l":"getTarget(int)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.FunctionMapping","l":"getTarget(int)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.IdentityMapping","l":"getTarget(int)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.OverridingTargetMapping","l":"getTarget(int)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.TargetMapping","l":"getTarget(int)"},{"p":"org.apache.calcite.util","c":"Permutation","l":"getTarget(int)"},{"p":"org.apache.calcite.sql","c":"SqlInsert","l":"getTargetColumnList()"},{"p":"org.apache.calcite.sql","c":"SqlUpdate","l":"getTargetColumnList()"},{"p":"org.apache.calcite.util.mapping","c":"AbstractSourceMapping","l":"getTargetCount()"},{"p":"org.apache.calcite.util.mapping","c":"AbstractTargetMapping","l":"getTargetCount()"},{"p":"org.apache.calcite.util.mapping","c":"Mapping","l":"getTargetCount()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.AbstractMapping","l":"getTargetCount()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.IdentityMapping","l":"getTargetCount()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.PartialMapping","l":"getTargetCount()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.SourceMapping","l":"getTargetCount()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.TargetMapping","l":"getTargetCount()"},{"p":"org.apache.calcite.util","c":"Permutation","l":"getTargetCount()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"getTargetField(RelDataType, RelDataTypeFactory, SqlIdentifier, SqlValidatorCatalogReader, RelOptTable)","u":"getTargetField(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.validate.SqlValidatorCatalogReader,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.util.mapping","c":"AbstractTargetMapping","l":"getTargetOpt(int)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.AbstractMapping","l":"getTargetOpt(int)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.FunctionMapping","l":"getTargetOpt(int)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.IdentityMapping","l":"getTargetOpt(int)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.PartialMapping","l":"getTargetOpt(int)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.SourceMapping","l":"getTargetOpt(int)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.TargetMapping","l":"getTargetOpt(int)"},{"p":"org.apache.calcite.util","c":"Permutation","l":"getTargetOpt(int)"},{"p":"org.apache.calcite.rel","c":"RelReferentialConstraint","l":"getTargetQualifiedName()"},{"p":"org.apache.calcite.rel","c":"RelReferentialConstraintImpl","l":"getTargetQualifiedName()"},{"p":"org.apache.calcite.sql","c":"SqlDelete","l":"getTargetTable()"},{"p":"org.apache.calcite.sql","c":"SqlInsert","l":"getTargetTable()"},{"p":"org.apache.calcite.sql","c":"SqlMerge","l":"getTargetTable()"},{"p":"org.apache.calcite.sql","c":"SqlUpdate","l":"getTargetTable()"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"getTargetTable(SqlNode)","u":"getTargetTable(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"getTargetType(String, SqlOperatorFixture.CastType)","u":"getTargetType(java.lang.String,org.apache.calcite.sql.test.SqlOperatorFixture.CastType)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"getTester()"},{"p":"org.apache.calcite.test","c":"DiffTestCase","l":"getTestlogRoot()"},{"p":"org.apache.calcite.util.trace","c":"CalciteTrace","l":"getTestTracer(Class<?>)","u":"getTestTracer(java.lang.Class)"},{"p":"org.apache.calcite.sql.fun","c":"SqlCase","l":"getThenOperands()"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"getThis()"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"getThis()"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"getThisOrdered()"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"getThisOrderedQueryable()"},{"p":"org.apache.calcite.sql.validate.implicit","c":"AbstractTypeCoercion","l":"getTightestCommonType(RelDataType, RelDataType)","u":"getTightestCommonType(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate.implicit","c":"TypeCoercion","l":"getTightestCommonType(RelDataType, RelDataType)","u":"getTightestCommonType(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql","c":"SqlTimeLiteral","l":"getTime()"},{"p":"org.apache.calcite.sql","c":"SqlTimeTzLiteral","l":"getTime()"},{"p":"org.apache.calcite.sql","c":"SqlJdbcFunctionCall","l":"getTimeDateFunctions()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"getTimeFrameSet()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"getTimeFrameSet()"},{"p":"org.apache.calcite.sql","c":"SqlAbstractDateTimeLiteral","l":"getTimestamp()"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery","l":"getTimestampFieldIndex()"},{"p":"org.apache.calcite.sql","c":"SqlDataTypeSpec","l":"getTimeZone()"},{"p":"org.apache.calcite.util","c":"TimestampWithTimeZoneString","l":"getTimeZone()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParseException","l":"getTokenImages()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"getTokenVal(String)","u":"getTokenVal(java.lang.String)"},{"p":"org.apache.calcite.adapter.kafka","c":"KafkaTableOptions","l":"getTopicName()"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery","l":"getTopNode()"},{"p":"org.apache.calcite.util.javac","c":"JaninoCompiler","l":"getTotalByteCodeSize()"},{"p":"org.apache.calcite.util.javac","c":"JavaCompiler","l":"getTotalByteCodeSize()"},{"p":"org.apache.calcite.plan","c":"RelTraitSet","l":"getTrait(int)"},{"p":"org.apache.calcite.plan","c":"RelTraitSet","l":"getTrait(RelTraitDef<T>)","u":"getTrait(org.apache.calcite.plan.RelTraitDef)"},{"p":"org.apache.calcite.plan","c":"ConventionTraitDef","l":"getTraitClass()"},{"p":"org.apache.calcite.plan","c":"RelTraitDef","l":"getTraitClass()"},{"p":"org.apache.calcite.rel","c":"RelCollationTraitDef","l":"getTraitClass()"},{"p":"org.apache.calcite.rel","c":"RelDistributionTraitDef","l":"getTraitClass()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableConvention","l":"getTraitDef()"},{"p":"org.apache.calcite.interpreter","c":"BindableConvention","l":"getTraitDef()"},{"p":"org.apache.calcite.interpreter","c":"InterpretableConvention","l":"getTraitDef()"},{"p":"org.apache.calcite.plan","c":"Convention.Impl","l":"getTraitDef()"},{"p":"org.apache.calcite.plan","c":"RelTrait","l":"getTraitDef()"},{"p":"org.apache.calcite.rel.convert","c":"Converter","l":"getTraitDef()"},{"p":"org.apache.calcite.rel.convert","c":"ConverterImpl","l":"getTraitDef()"},{"p":"org.apache.calcite.rel.convert","c":"ConverterRule","l":"getTraitDef()"},{"p":"org.apache.calcite.rel","c":"RelCollationImpl","l":"getTraitDef()"},{"p":"org.apache.calcite.tools","c":"FrameworkConfig","l":"getTraitDefs()"},{"p":"org.apache.calcite.plan","c":"RelTraitSet","l":"getTraits(int)"},{"p":"org.apache.calcite.plan","c":"RelTraitSet","l":"getTraits(RelTraitDef<T>)","u":"getTraits(org.apache.calcite.plan.RelTraitDef)"},{"p":"org.apache.calcite.plan","c":"RelOptNode","l":"getTraitSet()"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"getTraitSet()"},{"p":"org.apache.calcite.rel","c":"RelInput","l":"getTraitSet()"},{"p":"org.apache.calcite.rel.core","c":"RepeatUnion","l":"getTransientTable()"},{"p":"org.apache.calcite.runtime","c":"Automaton","l":"getTransitions()"},{"p":"org.apache.calcite.runtime","c":"DeterministicAutomaton","l":"getTransitions()"},{"p":"org.apache.calcite.rel.rules","c":"LoptJoinTree","l":"getTreeOrder()"},{"p":"org.apache.calcite.rel.rules","c":"LoptJoinTree.BinaryTree","l":"getTreeOrder(List<Integer>)","u":"getTreeOrder(java.util.List)"},{"p":"org.apache.calcite.rel.rules","c":"LoptJoinTree","l":"getTreeOrder(List<Integer>)","u":"getTreeOrder(java.util.List)"},{"p":"org.apache.calcite.rel.rules","c":"LoptJoinTree.Leaf","l":"getTreeOrder(List<Integer>)","u":"getTreeOrder(java.util.List)"},{"p":"org.apache.calcite.rel.rules","c":"LoptJoinTree.Node","l":"getTreeOrder(List<Integer>)","u":"getTreeOrder(java.util.List)"},{"p":"org.apache.calcite.rel.core","c":"Values","l":"getTuples()"},{"p":"org.apache.calcite.rel.core","c":"Values","l":"getTuples(RelInput)","u":"getTuples(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel","c":"RelInput","l":"getTuples(String)","u":"getTuples(java.lang.String)"},{"p":"org.apache.calcite.adapter.druid","c":"Granularity","l":"getType()"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema.TypeEntry","l":"getType()"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema.TypeEntryImpl","l":"getType()"},{"p":"org.apache.calcite.linq4j.tree","c":"AbstractNode","l":"getType()"},{"p":"org.apache.calcite.linq4j.tree","c":"ArrayLengthRecordField","l":"getType()"},{"p":"org.apache.calcite.linq4j.tree","c":"PseudoField","l":"getType()"},{"p":"org.apache.calcite.linq4j.tree","c":"ReflectedPseudoField","l":"getType()"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"getType()"},{"p":"org.apache.calcite.rel","c":"RelDistribution","l":"getType()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeField","l":"getType()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFieldImpl","l":"getType()"},{"p":"org.apache.calcite.rex","c":"RexCall","l":"getType()"},{"p":"org.apache.calcite.rex","c":"RexFieldAccess","l":"getType()"},{"p":"org.apache.calcite.rex","c":"RexLambda","l":"getType()"},{"p":"org.apache.calcite.rex","c":"RexLiteral","l":"getType()"},{"p":"org.apache.calcite.rex","c":"RexNode","l":"getType()"},{"p":"org.apache.calcite.rex","c":"RexRangeRef","l":"getType()"},{"p":"org.apache.calcite.rex","c":"RexVariable","l":"getType()"},{"p":"org.apache.calcite.schema","c":"Member","l":"getType()"},{"p":"org.apache.calcite.sql.fun","c":"SqlHistogramAggFunction","l":"getType()"},{"p":"org.apache.calcite.sql.fun","c":"SqlSingleValueAggFunction","l":"getType()"},{"p":"org.apache.calcite.sql.fun","c":"SqlSumAggFunction","l":"getType()"},{"p":"org.apache.calcite.sql.validate","c":"MatchRecognizeNamespace","l":"getType()"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingNamespace","l":"getType()"},{"p":"org.apache.calcite.sql.validate","c":"SqlIdentifierMoniker","l":"getType()"},{"p":"org.apache.calcite.sql.validate","c":"SqlMoniker","l":"getType()"},{"p":"org.apache.calcite.sql.validate","c":"SqlMonikerImpl","l":"getType()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorNamespace","l":"getType()"},{"p":"org.apache.calcite.schema","c":"FunctionParameter","l":"getType(RelDataTypeFactory)","u":"getType(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcBaseSchema","l":"getType(String)","u":"getType(java.lang.String)"},{"p":"org.apache.calcite.schema.impl","c":"AbstractSchema","l":"getType(String)","u":"getType(java.lang.String)"},{"p":"org.apache.calcite.schema.impl","c":"DelegatingSchema","l":"getType(String)","u":"getType(java.lang.String)"},{"p":"org.apache.calcite.schema","c":"Schema","l":"getType(String)","u":"getType(java.lang.String)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"getType(String, boolean)","u":"getType(java.lang.String,boolean)"},{"p":"org.apache.calcite.runtime.rtti","c":"GenericSqlTypeRtti","l":"getTypeArgument(int)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"getTypeCoercion()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"getTypeCoercion()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"getTypeEntry(CalciteSchema, SqlIdentifier)","u":"getTypeEntry(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.adapter.enumerable","c":"JavaRelImplementor","l":"getTypeFactory()"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysType","l":"getTypeFactory()"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysTypeImpl","l":"getTypeFactory()"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcCorrelationDataContext","l":"getTypeFactory()"},{"p":"org.apache.calcite","c":"DataContext","l":"getTypeFactory()"},{"p":"org.apache.calcite.jdbc","c":"CalciteConnection","l":"getTypeFactory()"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.Context","l":"getTypeFactory()"},{"p":"org.apache.calcite.plan","c":"RelOptCluster","l":"getTypeFactory()"},{"p":"org.apache.calcite.plan","c":"RelOptSchema","l":"getTypeFactory()"},{"p":"org.apache.calcite.plan","c":"VisitorDataContext","l":"getTypeFactory()"},{"p":"org.apache.calcite.prepare","c":"CalciteCatalogReader","l":"getTypeFactory()"},{"p":"org.apache.calcite.prepare","c":"PlannerImpl","l":"getTypeFactory()"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Measure.Context","l":"getTypeFactory()"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"getTypeFactory()"},{"p":"org.apache.calcite.schema","c":"FunctionContext","l":"getTypeFactory()"},{"p":"org.apache.calcite.sql","c":"SqlOperatorBinding","l":"getTypeFactory()"},{"p":"org.apache.calcite.sql.test","c":"SqlTestFactory","l":"getTypeFactory()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"getTypeFactory()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"getTypeFactory()"},{"p":"org.apache.calcite.sql2rel","c":"SqlRexContext","l":"getTypeFactory()"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Blackboard","l":"getTypeFactory()"},{"p":"org.apache.calcite.tools","c":"Planner","l":"getTypeFactory()"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"getTypeFactory()"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaImpl","l":"getTypeInfo(Meta.ConnectionHandle)","u":"getTypeInfo(org.apache.calcite.avatica.Meta.ConnectionHandle)"},{"p":"org.apache.calcite.schema.impl","c":"AbstractSchema","l":"getTypeMap()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeAssignmentRule","l":"getTypeMapping()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeCoercionRule","l":"getTypeMapping()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeMappingRule","l":"getTypeMapping()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"getTypeMappingRule()"},{"p":"org.apache.calcite.adapter.redis","c":"RedisDataFormat","l":"getTypeName()"},{"p":"org.apache.calcite.adapter.redis","c":"RedisDataType","l":"getTypeName()"},{"p":"org.apache.calcite.rex","c":"RexLiteral","l":"getTypeName()"},{"p":"org.apache.calcite.runtime.rtti","c":"RuntimeTypeInformation","l":"getTypeName()"},{"p":"org.apache.calcite.sql","c":"SqlDataTypeSpec","l":"getTypeName()"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"getTypeName()"},{"p":"org.apache.calcite.sql","c":"SqlTypeNameSpec","l":"getTypeName()"},{"p":"org.apache.calcite.sql.type","c":"ComparableOperandTypeChecker","l":"getTypeName()"},{"p":"org.apache.calcite.sql.type","c":"SameOperandTypeChecker","l":"getTypeName()"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcBaseSchema","l":"getTypeNames()"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"getTypeNames()"},{"p":"org.apache.calcite.schema.impl","c":"AbstractSchema","l":"getTypeNames()"},{"p":"org.apache.calcite.schema.impl","c":"DelegatingSchema","l":"getTypeNames()"},{"p":"org.apache.calcite.schema","c":"Schema","l":"getTypeNames()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFamily","l":"getTypeNames()"},{"p":"org.apache.calcite.sql","c":"SqlDataTypeSpec","l":"getTypeNameSpec()"},{"p":"org.apache.calcite.rel.type","c":"RelCrossType","l":"getTypes()"},{"p":"org.apache.calcite.sql.test","c":"SqlTests","l":"getTypes(RelDataTypeFactory)","u":"getTypes(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.runtime.rtti","c":"BasicSqlTypeRtti","l":"getTypeString()"},{"p":"org.apache.calcite.runtime.rtti","c":"GenericSqlTypeRtti","l":"getTypeString()"},{"p":"org.apache.calcite.runtime.rtti","c":"RowSqlTypeRtti","l":"getTypeString()"},{"p":"org.apache.calcite.runtime.rtti","c":"RuntimeTypeInformation","l":"getTypeString()"},{"p":"org.apache.calcite.runtime.variant","c":"VariantNull","l":"getTypeString()"},{"p":"org.apache.calcite.runtime.variant","c":"VariantSqlValue","l":"getTypeString()"},{"p":"org.apache.calcite.runtime.variant","c":"VariantValue","l":"getTypeString()"},{"p":"org.apache.calcite.runtime.variant","c":"VariantValue","l":"getTypeString(Object)","u":"getTypeString(java.lang.Object)"},{"p":"org.apache.calcite.sql.test","c":"SqlTests","l":"getTypeString(RelDataType)","u":"getTypeString(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory","l":"getTypeSystem()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactoryImpl","l":"getTypeSystem()"},{"p":"org.apache.calcite.sql.dialect","c":"BigQuerySqlDialect","l":"getTypeSystem()"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"getTypeSystem()"},{"p":"org.apache.calcite.tools","c":"FrameworkConfig","l":"getTypeSystem()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUtil","l":"getUnionAllRowCount(RelMetadataQuery, Union)","u":"getUnionAllRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.core.Union)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUniqueKeys","l":"getUniqueKeys(Aggregate, RelMetadataQuery, boolean)","u":"getUniqueKeys(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.UniqueKeys","l":"getUniqueKeys(boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUniqueKeys","l":"getUniqueKeys(Calc, RelMetadataQuery, boolean)","u":"getUniqueKeys(org.apache.calcite.rel.core.Calc,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUniqueKeys","l":"getUniqueKeys(Correlate, RelMetadataQuery, boolean)","u":"getUniqueKeys(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUniqueKeys","l":"getUniqueKeys(Filter, RelMetadataQuery, boolean)","u":"getUniqueKeys(org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUniqueKeys","l":"getUniqueKeys(Intersect, RelMetadataQuery, boolean)","u":"getUniqueKeys(org.apache.calcite.rel.core.Intersect,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUniqueKeys","l":"getUniqueKeys(Join, RelMetadataQuery, boolean)","u":"getUniqueKeys(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUniqueKeys","l":"getUniqueKeys(Minus, RelMetadataQuery, boolean)","u":"getUniqueKeys(org.apache.calcite.rel.core.Minus,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUniqueKeys","l":"getUniqueKeys(Project, RelMetadataQuery, boolean)","u":"getUniqueKeys(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"getUniqueKeys(RelNode)","u":"getUniqueKeys(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"getUniqueKeys(RelNode, boolean)","u":"getUniqueKeys(org.apache.calcite.rel.RelNode,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.UniqueKeys.Handler","l":"getUniqueKeys(RelNode, RelMetadataQuery, boolean)","u":"getUniqueKeys(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUniqueKeys","l":"getUniqueKeys(RelNode, RelMetadataQuery, boolean)","u":"getUniqueKeys(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUniqueKeys","l":"getUniqueKeys(Sort, RelMetadataQuery, boolean)","u":"getUniqueKeys(org.apache.calcite.rel.core.Sort,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUniqueKeys","l":"getUniqueKeys(TableModify, RelMetadataQuery, boolean)","u":"getUniqueKeys(org.apache.calcite.rel.core.TableModify,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUniqueKeys","l":"getUniqueKeys(TableScan, RelMetadataQuery, boolean)","u":"getUniqueKeys(org.apache.calcite.rel.core.TableScan,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUniqueKeys","l":"getUniqueKeys(Union, RelMetadataQuery, boolean)","u":"getUniqueKeys(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUniqueKeys","l":"getUniqueKeys(Values, RelMetadataQuery, boolean)","u":"getUniqueKeys(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)"},{"p":"org.apache.calcite.sql","c":"SqlIntervalQualifier","l":"getUnit()"},{"p":"org.apache.calcite.rel.type","c":"TimeFrameSet","l":"getUnit(TimeFrame)","u":"getUnit(org.apache.calcite.rel.type.TimeFrame)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"getUnknownType()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"getUnknownType()"},{"p":"org.apache.calcite.util","c":"ReflectUtil","l":"getUnmangledMethodName(Class, String, Class[])","u":"getUnmangledMethodName(java.lang.Class,java.lang.String,java.lang.Class[])"},{"p":"org.apache.calcite.util","c":"ReflectUtil","l":"getUnmangledMethodName(Method)","u":"getUnmangledMethodName(java.lang.reflect.Method)"},{"p":"org.apache.calcite.util","c":"ReflectUtil","l":"getUnqualifiedClassName(Class)","u":"getUnqualifiedClassName(java.lang.Class)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"getUnquotedCasing()"},{"p":"org.apache.calcite.sql","c":"SqlMerge","l":"getUpdateCall()"},{"p":"org.apache.calcite.rel.core","c":"TableModify","l":"getUpdateColumnList()"},{"p":"org.apache.calcite.rex","c":"RexWindow","l":"getUpperBound()"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"getUpperBound()"},{"p":"org.apache.calcite.chinook","c":"ChinookAvaticaServer","l":"getURL()"},{"p":"org.apache.calcite.runtime","c":"HttpUtils","l":"getURLConnection(String)","u":"getURLConnection(java.lang.String)"},{"p":"org.apache.calcite.chinook","c":"EnvironmentFairy","l":"getUser()"},{"p":"org.apache.calcite.sql.validate","c":"JoinScope","l":"getUsingScope()"},{"p":"org.apache.calcite.sql","c":"SqlUuidLiteral","l":"getUuid()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"getValidatedNodeType(SqlNode)","u":"getValidatedNodeType(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"getValidatedNodeType(SqlNode)","u":"getValidatedNodeType(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"getValidatedNodeTypeIfKnown(SqlNode)","u":"getValidatedNodeTypeIfKnown(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"getValidatedNodeTypeIfKnown(SqlNode)","u":"getValidatedNodeTypeIfKnown(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"getValidatedOperandTypes(SqlCall)","u":"getValidatedOperandTypes(org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"getValidatedOperandTypes(SqlCall)","u":"getValidatedOperandTypes(org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"getValidationErrorFunction()"},{"p":"org.apache.calcite.sql","c":"SqlCallBinding","l":"getValidator()"},{"p":"org.apache.calcite.sql.validate","c":"MatchRecognizeNamespace","l":"getValidator()"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingNamespace","l":"getValidator()"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingScope","l":"getValidator()"},{"p":"org.apache.calcite.sql.validate","c":"ParameterScope","l":"getValidator()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorNamespace","l":"getValidator()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope","l":"getValidator()"},{"p":"org.apache.calcite.sql2rel","c":"SqlRexContext","l":"getValidator()"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Blackboard","l":"getValidator()"},{"p":"org.apache.calcite.sql","c":"SqlMapTypeNameSpec","l":"getValType()"},{"p":"org.apache.calcite.linq4j","c":"Ord","l":"getValue()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFieldImpl","l":"getValue()"},{"p":"org.apache.calcite.rex","c":"RexLiteral","l":"getValue()"},{"p":"org.apache.calcite.runtime","c":"MapEntry","l":"getValue()"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"getValue()"},{"p":"org.apache.calcite.sql","c":"SqlSetOption","l":"getValue()"},{"p":"org.apache.calcite.sql","c":"SqlUnknownLiteral","l":"getValue()"},{"p":"org.apache.calcite.util","c":"NlsString","l":"getValue()"},{"p":"org.apache.calcite.util","c":"Pair","l":"getValue()"},{"p":"org.apache.calcite.plan","c":"VisitorDataContext","l":"getValue(RexNode, RexNode)","u":"getValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rex","c":"RexLiteral","l":"getValue2()"},{"p":"org.apache.calcite.rex","c":"RexLiteral","l":"getValue3()"},{"p":"org.apache.calcite.rex","c":"RexLiteral","l":"getValue4()"},{"p":"org.apache.calcite.rex","c":"RexLiteral","l":"getValueAs(Class<T>)","u":"getValueAs(java.lang.Class)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"getValueAs(Class<T>)","u":"getValueAs(java.lang.Class)"},{"p":"org.apache.calcite.util","c":"NlsString","l":"getValueBytes()"},{"p":"org.apache.calcite.sql.fun","c":"SqlCase","l":"getValueOperand()"},{"p":"org.apache.calcite.linq4j.tree","c":"Types.MapType","l":"getValueType()"},{"p":"org.apache.calcite.rel.type","c":"RelDataType","l":"getValueType()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactoryImpl.JavaType","l":"getValueType()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeImpl","l":"getValueType()"},{"p":"org.apache.calcite.rel.type","c":"SingleColumnAliasRelDataType","l":"getValueType()"},{"p":"org.apache.calcite.sql.type","c":"MapSqlType","l":"getValueType()"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"getVariablesSet()"},{"p":"org.apache.calcite.rel.core","c":"Correlate","l":"getVariablesSet()"},{"p":"org.apache.calcite.rel.core","c":"Join","l":"getVariablesSet()"},{"p":"org.apache.calcite.rel.core","c":"Project","l":"getVariablesSet()"},{"p":"org.apache.calcite.rel.logical","c":"LogicalFilter","l":"getVariablesSet()"},{"p":"org.apache.calcite.rel","c":"RelNode","l":"getVariablesSet()"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"getVariablesSet(RelNode)","u":"getVariablesSet(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"getVariablesSetAndUsed(RelNode, RelNode)","u":"getVariablesSetAndUsed(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"getVariablesUsed(List<RexSubQuery>)","u":"getVariablesUsed(java.util.List)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"getVariablesUsed(RelNode)","u":"getVariablesUsed(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.util.graph","c":"DefaultDirectedGraph","l":"getVertex(V)"},{"p":"org.apache.calcite.tools","c":"FrameworkConfig","l":"getViewExpander()"},{"p":"org.apache.calcite.schema.impl","c":"ViewTable","l":"getViewPath()"},{"p":"org.apache.calcite.schema.impl","c":"ViewTable","l":"getViewSql()"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator","l":"getVisitor()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser","l":"getWarnings()"},{"p":"org.apache.calcite.sql.fun","c":"SqlCase","l":"getWhenOperands()"},{"p":"org.apache.calcite.sql","c":"SqlSelect","l":"getWhere()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"getWhereScope(SqlSelect)","u":"getWhereScope(org.apache.calcite.sql.SqlSelect)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"getWhereScope(SqlSelect)","u":"getWhereScope(org.apache.calcite.sql.SqlSelect)"},{"p":"org.apache.calcite.sql.validate.implicit","c":"AbstractTypeCoercion","l":"getWiderTypeFor(List<RelDataType>, boolean)","u":"getWiderTypeFor(java.util.List,boolean)"},{"p":"org.apache.calcite.sql.validate.implicit","c":"TypeCoercion","l":"getWiderTypeFor(List<RelDataType>, boolean)","u":"getWiderTypeFor(java.util.List,boolean)"},{"p":"org.apache.calcite.sql.validate.implicit","c":"AbstractTypeCoercion","l":"getWiderTypeForDecimal(RelDataType, RelDataType)","u":"getWiderTypeForDecimal(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate.implicit","c":"TypeCoercion","l":"getWiderTypeForDecimal(RelDataType, RelDataType)","u":"getWiderTypeForDecimal(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate.implicit","c":"AbstractTypeCoercion","l":"getWiderTypeForTwo(RelDataType, RelDataType, boolean)","u":"getWiderTypeForTwo(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,boolean)"},{"p":"org.apache.calcite.sql.validate.implicit","c":"TypeCoercion","l":"getWiderTypeForTwo(RelDataType, RelDataType, boolean)","u":"getWiderTypeForTwo(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,boolean)"},{"p":"org.apache.calcite.rex","c":"RexOver","l":"getWindow()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"getWindowByName(SqlIdentifier, SqlValidatorScope)","u":"getWindowByName(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"getWindowCall()"},{"p":"org.apache.calcite.sql","c":"SqlSelect","l":"getWindowList()"},{"p":"org.apache.calcite.plan.volcano","c":"RelSubset","l":"getWinnerCost()"},{"p":"org.apache.calcite.sql.validate","c":"SqlWithItemTableRef","l":"getWithItem()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"getWithScope(SqlNode)","u":"getWithScope(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"getWithScope(SqlNode)","u":"getWithScope(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.schema","c":"Schema.TableType","l":"GLOBAL_TEMPORARY"},{"p":"org.apache.calcite.schema","c":"Schema.TableType","l":"GLOBAL_TEMPORARY_TABLE"},{"p":"org.apache.calcite.util","c":"Puffin.Context","l":"globalState()"},{"p":"org.apache.calcite.util","c":"Puffin.Line","l":"globalState()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableRelVisitor","l":"go(MutableRel)","u":"go(org.apache.calcite.rel.mutable.MutableRel)"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor","l":"go(RelNode)","u":"go(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel","c":"RelVisitor","l":"go(RelNode)","u":"go(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"go(RelVisitor, RelNode)","u":"go(org.apache.calcite.rel.RelVisitor,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.sql2rel","c":"DeduplicateCorrelateVariables","l":"go(RexBuilder, CorrelationId, Iterable<? extends CorrelationId>, RelNode)","u":"go(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.core.CorrelationId,java.lang.Iterable,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor","l":"go0(RelNode)","u":"go0(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.linq4j.tree","c":"ClassDeclarationFinder","l":"goDeeper()"},{"p":"org.apache.calcite.linq4j.tree","c":"DeterministicCodeOptimizer","l":"goDeeper()"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"Goto"},{"p":"org.apache.calcite.linq4j.tree","c":"GotoExpressionKind","l":"Goto"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"goto_(LabelTarget)","u":"goto_(org.apache.calcite.linq4j.tree.LabelTarget)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"goto_(LabelTarget, Expression)","u":"goto_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"goto_(LabelTarget, Expression, Type)","u":"goto_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"goto_(LabelTarget, Type)","u":"goto_(org.apache.calcite.linq4j.tree.LabelTarget,java.lang.reflect.Type)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"GREATER"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"GREATER_THAN"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"GREATER_THAN"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"GREATER_THAN_OR_EQUAL"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"GREATER_THAN_OR_EQUAL"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"greater(boolean, boolean)","u":"greater(boolean,boolean)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"greater(byte, byte)","u":"greater(byte,byte)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"greater(char, char)","u":"greater(char,char)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"greater(double, double)","u":"greater(double,double)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"greater(float, float)","u":"greater(float,float)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"greater(int, int)","u":"greater(int,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"greater(List<T>, List<T>)","u":"greater(java.util.List,java.util.List)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"greater(long, long)","u":"greater(long,long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"greater(short, short)","u":"greater(short,short)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"greater(T, T)","u":"greater(T,T)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"GreaterThan"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"greaterThan(Expression, Expression)","u":"greaterThan(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"greaterThan(Expression, Expression, boolean, Method)","u":"greaterThan(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,boolean,java.lang.reflect.Method)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"greaterThan(RexNode, RexNode)","u":"greaterThan(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.util","c":"RangeSets.Consumer","l":"greaterThan(V)"},{"p":"org.apache.calcite.util","c":"RangeSets.Handler","l":"greaterThan(V)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"GreaterThanOrEqual"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"greaterThanOrEqual(Expression, Expression)","u":"greaterThanOrEqual(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"greaterThanOrEqual(Expression, Expression, boolean, Method)","u":"greaterThanOrEqual(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,boolean,java.lang.reflect.Method)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"greaterThanOrEqual(RexNode, RexNode)","u":"greaterThanOrEqual(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"GREATEST"},{"p":"org.apache.calcite.sql.fun","c":"OracleSqlOperatorTable","l":"GREATEST"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"GREATEST"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"GREATEST_PG"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"GREATEST_PG"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"greatest(T, T)","u":"greatest(T,T)"},{"p":"org.apache.calcite.util.format.postgresql","c":"DateCalendarEnum","l":"GREGORIAN"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions.GridEnumerable","l":"GridEnumerable(Envelope, BigDecimal, BigDecimal, boolean)","u":"%3Cinit%3E(org.locationtech.jts.geom.Envelope,java.math.BigDecimal,java.math.BigDecimal,boolean)"},{"p":"org.apache.calcite.piglet","c":"Ast.Op","l":"GROUP"},{"p":"org.apache.calcite.adapter.druid","c":"QueryType","l":"GROUP_BY"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Clause","l":"GROUP_BY"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"GROUP_BY"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"GROUP_BY_DISTINCT"},{"p":"org.apache.calcite.sql.fun","c":"SqlInternalOperators","l":"GROUP_BY_DISTINCT"},{"p":"org.apache.calcite.sql","c":"SqlWriter.FrameTypeEnum","l":"GROUP_BY_LIST"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"GROUP_BY_MULTIPLE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"GROUP_BY2"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"GROUP_CONCAT"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"GROUP_CONCAT"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"GROUP_ID"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"GROUP_ID"},{"p":"org.apache.calcite.rel.core","c":"Window.Group","l":"Group(ImmutableBitSet, boolean, RexWindowBound, RexWindowBound, RexWindowExclusion, RelCollation, List<Window.RexWinAggCall>)","u":"%3Cinit%3E(org.apache.calcite.util.ImmutableBitSet,boolean,org.apache.calcite.rex.RexWindowBound,org.apache.calcite.rex.RexWindowBound,org.apache.calcite.rex.RexWindowExclusion,org.apache.calcite.rel.RelCollation,java.util.List)"},{"p":"org.apache.calcite.tools","c":"PigRelBuilder","l":"group(PigRelBuilder.GroupOption, PigRelBuilder.Partitioner, int, Iterable<? extends RelBuilder.GroupKey>)","u":"group(org.apache.calcite.tools.PigRelBuilder.GroupOption,org.apache.calcite.tools.PigRelBuilder.Partitioner,int,java.lang.Iterable)"},{"p":"org.apache.calcite.tools","c":"PigRelBuilder","l":"group(PigRelBuilder.GroupOption, PigRelBuilder.Partitioner, int, RelBuilder.GroupKey...)","u":"group(org.apache.calcite.tools.PigRelBuilder.GroupOption,org.apache.calcite.tools.PigRelBuilder.Partitioner,int,org.apache.calcite.tools.RelBuilder.GroupKey...)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"groupBy(Enumerable<TSource>, Function1<TSource, TKey>)","u":"groupBy(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"groupBy(Enumerable<TSource>, Function1<TSource, TKey>, EqualityComparer<TKey>)","u":"groupBy(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"groupBy(Enumerable<TSource>, Function1<TSource, TKey>, Function0<TAccumulate>, Function2<TAccumulate, TSource, TAccumulate>, Function2<TKey, TAccumulate, TResult>)","u":"groupBy(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function0,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"groupBy(Enumerable<TSource>, Function1<TSource, TKey>, Function0<TAccumulate>, Function2<TAccumulate, TSource, TAccumulate>, Function2<TKey, TAccumulate, TResult>, EqualityComparer<TKey>)","u":"groupBy(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function0,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"groupBy(Enumerable<TSource>, Function1<TSource, TKey>, Function1<TSource, TElement>)","u":"groupBy(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"groupBy(Enumerable<TSource>, Function1<TSource, TKey>, Function1<TSource, TElement>, EqualityComparer<TKey>)","u":"groupBy(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"groupBy(Enumerable<TSource>, Function1<TSource, TKey>, Function1<TSource, TElement>, Function2<TKey, Enumerable<TElement>, TResult>)","u":"groupBy(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"groupBy(Enumerable<TSource>, Function1<TSource, TKey>, Function1<TSource, TElement>, Function2<TKey, Enumerable<TElement>, TResult>, EqualityComparer<TKey>)","u":"groupBy(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"groupBy(Enumerable<TSource>, Function1<TSource, TKey>, Function2<TKey, Enumerable<TSource>, TResult>)","u":"groupBy(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"groupBy(Enumerable<TSource>, Function1<TSource, TKey>, Function2<TKey, Enumerable<TSource>, TResult>, EqualityComparer<TKey>)","u":"groupBy(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"groupBy(Function1<T, TKey>)","u":"groupBy(org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"groupBy(Function1<T, TKey>, EqualityComparer<TKey>)","u":"groupBy(org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"groupBy(Function1<T, TKey>, Function0<TAccumulate>, Function2<TAccumulate, T, TAccumulate>, Function2<TKey, TAccumulate, TResult>)","u":"groupBy(org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function0,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"groupBy(Function1<T, TKey>, Function0<TAccumulate>, Function2<TAccumulate, T, TAccumulate>, Function2<TKey, TAccumulate, TResult>, EqualityComparer<TKey>)","u":"groupBy(org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function0,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"groupBy(Function1<T, TKey>, Function1<T, TElement>)","u":"groupBy(org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"groupBy(Function1<T, TKey>, Function1<T, TElement>, EqualityComparer<TKey>)","u":"groupBy(org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"groupBy(Function1<T, TKey>, Function1<T, TElement>, Function2<TKey, Enumerable<TElement>, TResult>)","u":"groupBy(org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"groupBy(Function1<T, TKey>, Function1<T, TElement>, Function2<TKey, Enumerable<TElement>, TResult>, EqualityComparer<TKey>)","u":"groupBy(org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"groupBy(Function1<T, TKey>, Function2<TKey, Enumerable<T>, TResult>)","u":"groupBy(org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"groupBy(Function1<T, TKey>, Function2<TKey, Enumerable<T>, TResult>, EqualityComparer<TKey>)","u":"groupBy(org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"groupBy(Function1<TSource, TKey>)","u":"groupBy(org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"groupBy(Function1<TSource, TKey>, EqualityComparer<TKey>)","u":"groupBy(org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"groupBy(Function1<TSource, TKey>, Function0<TAccumulate>, Function2<TAccumulate, TSource, TAccumulate>, Function2<TKey, TAccumulate, TResult>)","u":"groupBy(org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function0,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"groupBy(Function1<TSource, TKey>, Function0<TAccumulate>, Function2<TAccumulate, TSource, TAccumulate>, Function2<TKey, TAccumulate, TResult>, EqualityComparer<TKey>)","u":"groupBy(org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function0,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"groupBy(Function1<TSource, TKey>, Function1<TSource, TElement>)","u":"groupBy(org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"groupBy(Function1<TSource, TKey>, Function1<TSource, TElement>, EqualityComparer<TKey>)","u":"groupBy(org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"groupBy(Function1<TSource, TKey>, Function1<TSource, TElement>, Function2<TKey, Enumerable<TElement>, TResult>)","u":"groupBy(org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"groupBy(Function1<TSource, TKey>, Function1<TSource, TElement>, Function2<TKey, Enumerable<TElement>, TResult>, EqualityComparer<TKey>)","u":"groupBy(org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"groupBy(Function1<TSource, TKey>, Function2<TKey, Enumerable<TSource>, TResult>)","u":"groupBy(org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"groupBy(Function1<TSource, TKey>, Function2<TKey, Enumerable<TSource>, TResult>, EqualityComparer<TKey>)","u":"groupBy(org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"groupBy(FunctionExpression<Function1<T, TKey>>)","u":"groupBy(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"groupBy(FunctionExpression<Function1<T, TKey>>)","u":"groupBy(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"groupBy(FunctionExpression<Function1<T, TKey>>, EqualityComparer<TKey>)","u":"groupBy(org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"groupBy(FunctionExpression<Function1<T, TKey>>, EqualityComparer<TKey>)","u":"groupBy(org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"groupBy(FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function1<T, TElement>>)","u":"groupBy(org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"groupBy(FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function1<T, TElement>>)","u":"groupBy(org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"groupBy(FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function1<T, TElement>>, EqualityComparer<TKey>)","u":"groupBy(org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"groupBy(FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function1<T, TElement>>, EqualityComparer<TKey>)","u":"groupBy(org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"groupBy(FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function1<T, TElement>>, FunctionExpression<Function2<TKey, Enumerable<TElement>, TResult>>)","u":"groupBy(org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"groupBy(FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function1<T, TElement>>, FunctionExpression<Function2<TKey, Enumerable<TElement>, TResult>>)","u":"groupBy(org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"groupBy(FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function1<T, TElement>>, FunctionExpression<Function2<TKey, Enumerable<TElement>, TResult>>, EqualityComparer<TKey>)","u":"groupBy(org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"groupBy(FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function1<T, TElement>>, FunctionExpression<Function2<TKey, Enumerable<TElement>, TResult>>, EqualityComparer<TKey>)","u":"groupBy(org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"","c":"","l":"groupBy(FunctionExpression<Function1<TSource, TKey>>)"},{"p":"","c":"","l":"groupBy(FunctionExpression<Function1<TSource, TKey>>)"},{"p":"","c":"","l":"groupBy(FunctionExpression<Function1<TSource, TKey>>, EqualityComparer<TKey>)"},{"p":"","c":"","l":"groupBy(FunctionExpression<Function1<TSource, TKey>>, EqualityComparer<TKey>)"},{"p":"","c":"","l":"groupBy(FunctionExpression<Function1<TSource, TKey>>, FunctionExpression<Function1<TSource, TElement>>)"},{"p":"","c":"","l":"groupBy(FunctionExpression<Function1<TSource, TKey>>, FunctionExpression<Function1<TSource, TElement>>)"},{"p":"","c":"","l":"groupBy(FunctionExpression<Function1<TSource, TKey>>, FunctionExpression<Function1<TSource, TElement>>, EqualityComparer<TKey>)"},{"p":"","c":"","l":"groupBy(FunctionExpression<Function1<TSource, TKey>>, FunctionExpression<Function1<TSource, TElement>>, EqualityComparer<TKey>)"},{"p":"","c":"","l":"groupBy(FunctionExpression<Function1<TSource, TKey>>, FunctionExpression<Function1<TSource, TElement>>, FunctionExpression<Function2<TKey, Enumerable<TElement>, TResult>>)"},{"p":"","c":"","l":"groupBy(FunctionExpression<Function1<TSource, TKey>>, FunctionExpression<Function1<TSource, TElement>>, FunctionExpression<Function2<TKey, Enumerable<TElement>, TResult>>)"},{"p":"","c":"","l":"groupBy(FunctionExpression<Function1<TSource, TKey>>, FunctionExpression<Function1<TSource, TElement>>, FunctionExpression<Function2<TKey, Enumerable<TElement>, TResult>>, EqualityComparer<TKey>)"},{"p":"","c":"","l":"groupBy(FunctionExpression<Function1<TSource, TKey>>, FunctionExpression<Function1<TSource, TElement>>, FunctionExpression<Function2<TKey, Enumerable<TElement>, TResult>>, EqualityComparer<TKey>)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"groupBy(Queryable<T>, FunctionExpression<Function1<T, TKey>>)","u":"groupBy(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"groupBy(Queryable<T>, FunctionExpression<Function1<T, TKey>>)","u":"groupBy(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"groupBy(Queryable<T>, FunctionExpression<Function1<T, TKey>>)","u":"groupBy(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"groupBy(Queryable<T>, FunctionExpression<Function1<T, TKey>>, EqualityComparer)","u":"groupBy(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"groupBy(Queryable<T>, FunctionExpression<Function1<T, TKey>>, EqualityComparer<TKey>)","u":"groupBy(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"groupBy(Queryable<T>, FunctionExpression<Function1<T, TKey>>, EqualityComparer<TKey>)","u":"groupBy(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"groupBy(Queryable<T>, FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function1<T, TElement>>)","u":"groupBy(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"groupBy(Queryable<T>, FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function1<T, TElement>>)","u":"groupBy(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"groupBy(Queryable<T>, FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function1<T, TElement>>)","u":"groupBy(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"groupBy(Queryable<T>, FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function1<T, TElement>>, EqualityComparer)","u":"groupBy(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"groupBy(Queryable<T>, FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function1<T, TElement>>, EqualityComparer<TKey>)","u":"groupBy(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"groupBy(Queryable<T>, FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function1<T, TElement>>, EqualityComparer<TKey>)","u":"groupBy(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"groupBy(Queryable<T>, FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function1<T, TElement>>, FunctionExpression<Function2<TKey, Enumerable<TElement>, TResult>>)","u":"groupBy(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"groupBy(Queryable<T>, FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function1<T, TElement>>, FunctionExpression<Function2<TKey, Enumerable<TElement>, TResult>>)","u":"groupBy(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"groupBy(Queryable<T>, FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function1<T, TElement>>, FunctionExpression<Function2<TKey, Enumerable<TElement>, TResult>>)","u":"groupBy(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"groupBy(Queryable<T>, FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function1<T, TElement>>, FunctionExpression<Function2<TKey, Enumerable<TElement>, TResult>>, EqualityComparer<TKey>)","u":"groupBy(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"groupBy(Queryable<T>, FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function1<T, TElement>>, FunctionExpression<Function2<TKey, Enumerable<TElement>, TResult>>, EqualityComparer<TKey>)","u":"groupBy(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"groupBy(Queryable<T>, FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function1<T, TElement>>, FunctionExpression<Function2<TKey, Enumerable<TElement>, TResult>>, EqualityComparer<TKey>)","u":"groupBy(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"groupByFolding()"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"groupByK(FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function2<TKey, Enumerable<T>, TResult>>)","u":"groupByK(org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"groupByK(FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function2<TKey, Enumerable<T>, TResult>>)","u":"groupByK(org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"groupByK(FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function2<TKey, Enumerable<T>, TResult>>, EqualityComparer<TKey>)","u":"groupByK(org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"groupByK(FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function2<TKey, Enumerable<T>, TResult>>, EqualityComparer<TKey>)","u":"groupByK(org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"","c":"","l":"groupByK(FunctionExpression<Function1<TSource, TKey>>, FunctionExpression<Function2<TKey, Enumerable<TSource>, TResult>>)"},{"p":"","c":"","l":"groupByK(FunctionExpression<Function1<TSource, TKey>>, FunctionExpression<Function2<TKey, Enumerable<TSource>, TResult>>)"},{"p":"","c":"","l":"groupByK(FunctionExpression<Function1<TSource, TKey>>, FunctionExpression<Function2<TKey, Enumerable<TSource>, TResult>>, EqualityComparer<TKey>)"},{"p":"","c":"","l":"groupByK(FunctionExpression<Function1<TSource, TKey>>, FunctionExpression<Function2<TKey, Enumerable<TSource>, TResult>>, EqualityComparer<TKey>)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"groupByK(Queryable<T>, FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function2<TKey, Enumerable<T>, TResult>>)","u":"groupByK(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"groupByK(Queryable<T>, FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function2<TKey, Enumerable<T>, TResult>>)","u":"groupByK(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"groupByK(Queryable<T>, FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function2<TKey, Enumerable<T>, TResult>>)","u":"groupByK(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"groupByK(Queryable<T>, FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function2<TKey, Enumerable<T>, TResult>>, EqualityComparer)","u":"groupByK(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"groupByK(Queryable<T>, FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function2<TKey, Enumerable<T>, TResult>>, EqualityComparer<TKey>)","u":"groupByK(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"groupByK(Queryable<T>, FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function2<TKey, Enumerable<T>, TResult>>, EqualityComparer<TKey>)","u":"groupByK(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"groupByMultiple(Enumerable<TSource>, List<Function1<TSource, TKey>>, Function0<TAccumulate>, Function2<TAccumulate, TSource, TAccumulate>, Function2<TKey, TAccumulate, TResult>)","u":"groupByMultiple(org.apache.calcite.linq4j.Enumerable,java.util.List,org.apache.calcite.linq4j.function.Function0,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.sql.validate","c":"AggregatingSelectScope.Resolved","l":"groupExprList"},{"p":"org.apache.calcite.sql.validate","c":"AggregatingSelectScope.Resolved","l":"groupExprProjection"},{"p":"org.apache.calcite.sql","c":"SqlGroupedWindowFunction","l":"groupFunction"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"groupFunctionMustAppearInGroupByClause(String)","u":"groupFunctionMustAppearInGroupByClause(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"GROUPING"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"GROUPING"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"GROUPING_ID"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"GROUPING_ID"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"GROUPING_SETS"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"GROUPING_SETS"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"groupingArgument(String)","u":"groupingArgument(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"groupingInAggregate(String)","u":"groupingInAggregate(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"groupingInWrongClause(String)","u":"groupingInWrongClause(java.lang.String)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"groupJoin(Enumerable<TInner>, Function1<T, TKey>, Function1<TInner, TKey>, Function2<T, Enumerable<TInner>, TResult>)","u":"groupJoin(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"groupJoin(Enumerable<TInner>, Function1<T, TKey>, Function1<TInner, TKey>, Function2<T, Enumerable<TInner>, TResult>, EqualityComparer<TKey>)","u":"groupJoin(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"groupJoin(Enumerable<TInner>, Function1<TSource, TKey>, Function1<TInner, TKey>, Function2<TSource, Enumerable<TInner>, TResult>)","u":"groupJoin(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"groupJoin(Enumerable<TInner>, Function1<TSource, TKey>, Function1<TInner, TKey>, Function2<TSource, Enumerable<TInner>, TResult>, EqualityComparer<TKey>)","u":"groupJoin(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"groupJoin(Enumerable<TInner>, FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function1<TInner, TKey>>, FunctionExpression<Function2<T, Enumerable<TInner>, TResult>>)","u":"groupJoin(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"groupJoin(Enumerable<TInner>, FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function1<TInner, TKey>>, FunctionExpression<Function2<T, Enumerable<TInner>, TResult>>)","u":"groupJoin(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"groupJoin(Enumerable<TInner>, FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function1<TInner, TKey>>, FunctionExpression<Function2<T, Enumerable<TInner>, TResult>>, EqualityComparer<TKey>)","u":"groupJoin(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"groupJoin(Enumerable<TInner>, FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function1<TInner, TKey>>, FunctionExpression<Function2<T, Enumerable<TInner>, TResult>>, EqualityComparer<TKey>)","u":"groupJoin(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"","c":"","l":"groupJoin(Enumerable<TInner>, FunctionExpression<Function1<TSource, TKey>>, FunctionExpression<Function1<TInner, TKey>>, FunctionExpression<Function2<TSource, Enumerable<TInner>, TResult>>)"},{"p":"","c":"","l":"groupJoin(Enumerable<TInner>, FunctionExpression<Function1<TSource, TKey>>, FunctionExpression<Function1<TInner, TKey>>, FunctionExpression<Function2<TSource, Enumerable<TInner>, TResult>>)"},{"p":"","c":"","l":"groupJoin(Enumerable<TInner>, FunctionExpression<Function1<TSource, TKey>>, FunctionExpression<Function1<TInner, TKey>>, FunctionExpression<Function2<TSource, Enumerable<TInner>, TResult>>, EqualityComparer<TKey>)"},{"p":"","c":"","l":"groupJoin(Enumerable<TInner>, FunctionExpression<Function1<TSource, TKey>>, FunctionExpression<Function1<TInner, TKey>>, FunctionExpression<Function2<TSource, Enumerable<TInner>, TResult>>, EqualityComparer<TKey>)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"groupJoin(Enumerable<TSource>, Enumerable<TInner>, Function1<TSource, TKey>, Function1<TInner, TKey>, Function2<TSource, Enumerable<TInner>, TResult>)","u":"groupJoin(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"groupJoin(Enumerable<TSource>, Enumerable<TInner>, Function1<TSource, TKey>, Function1<TInner, TKey>, Function2<TSource, Enumerable<TInner>, TResult>, EqualityComparer<TKey>)","u":"groupJoin(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"groupJoin(Queryable<T>, Enumerable<TInner>, FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function1<TInner, TKey>>, FunctionExpression<Function2<T, Enumerable<TInner>, TResult>>)","u":"groupJoin(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"groupJoin(Queryable<T>, Enumerable<TInner>, FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function1<TInner, TKey>>, FunctionExpression<Function2<T, Enumerable<TInner>, TResult>>)","u":"groupJoin(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"groupJoin(Queryable<T>, Enumerable<TInner>, FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function1<TInner, TKey>>, FunctionExpression<Function2<T, Enumerable<TInner>, TResult>>, EqualityComparer<TKey>)","u":"groupJoin(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"groupJoin(Queryable<T>, Enumerable<TInner>, FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function1<TInner, TKey>>, FunctionExpression<Function2<T, Enumerable<TInner>, TResult>>, EqualityComparer<TKey>)","u":"groupJoin(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"groupJoin(Queryable<TOuter>, Enumerable<TInner>, FunctionExpression<Function1<TOuter, TKey>>, FunctionExpression<Function1<TInner, TKey>>, FunctionExpression<Function2<TOuter, Enumerable<TInner>, TResult>>)","u":"groupJoin(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"groupJoin(Queryable<TOuter>, Enumerable<TInner>, FunctionExpression<Function1<TOuter, TKey>>, FunctionExpression<Function1<TInner, TKey>>, FunctionExpression<Function2<TOuter, Enumerable<TInner>, TResult>>, EqualityComparer<TKey>)","u":"groupJoin(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"groupKey()"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"groupKey(ImmutableBitSet)","u":"groupKey(org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"groupKey(ImmutableBitSet, boolean, ImmutableList<ImmutableBitSet>)","u":"groupKey(org.apache.calcite.util.ImmutableBitSet,boolean,com.google.common.collect.ImmutableList)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"groupKey(ImmutableBitSet, Iterable<? extends ImmutableBitSet>)","u":"groupKey(org.apache.calcite.util.ImmutableBitSet,java.lang.Iterable)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"groupKey(int...)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"groupKey(Iterable<? extends RexNode>)","u":"groupKey(java.lang.Iterable)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"groupKey(Iterable<? extends RexNode>, boolean, Iterable<? extends Iterable<? extends RexNode>>)","u":"groupKey(java.lang.Iterable,boolean,java.lang.Iterable)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"groupKey(Iterable<? extends RexNode>, Iterable<? extends Iterable<? extends RexNode>>)","u":"groupKey(java.lang.Iterable,java.lang.Iterable)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"groupKey(RexNode...)","u":"groupKey(org.apache.calcite.rex.RexNode...)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"groupKey(String...)","u":"groupKey(java.lang.String...)"},{"p":"org.apache.calcite.tools","c":"RelBuilder.GroupKey","l":"groupKeyCount()"},{"p":"org.apache.calcite.rel.core","c":"Window","l":"groups"},{"p":"org.apache.calcite.rel.mutable","c":"MutableWindow","l":"groups"},{"p":"org.apache.calcite.rel.core","c":"Aggregate","l":"groupSet"},{"p":"org.apache.calcite.rel.mutable","c":"MutableAggregate","l":"groupSet"},{"p":"org.apache.calcite.sql.validate","c":"AggregatingSelectScope.Resolved","l":"groupSet"},{"p":"org.apache.calcite.rel.core","c":"Aggregate","l":"groupSets"},{"p":"org.apache.calcite.rel.mutable","c":"MutableAggregate","l":"groupSets"},{"p":"org.apache.calcite.sql.validate","c":"AggregatingSelectScope.Resolved","l":"groupSets"},{"p":"org.apache.calcite.adapter.enumerable","c":"AggContext","l":"groupSets()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableAggregateBase.AggContextImpl","l":"groupSets()"},{"p":"org.apache.calcite.piglet","c":"Ast.GroupStmt","l":"GroupStmt(SqlParserPos, Ast.Identifier, Ast.Identifier, List<Ast.Node>)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.piglet.Ast.Identifier,org.apache.calcite.piglet.Ast.Identifier,java.util.List)"},{"p":"org.apache.calcite.piglet","c":"Ast.Op","l":"GT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"GT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"GT_NULLABLE"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"gt(BigDecimal, BigDecimal)","u":"gt(java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"gt(boolean, boolean)","u":"gt(boolean,boolean)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"gt(byte, byte)","u":"gt(byte,byte)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"gt(ByteString, ByteString)","u":"gt(org.apache.calcite.avatica.util.ByteString,org.apache.calcite.avatica.util.ByteString)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"gt(char, char)","u":"gt(char,char)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"gt(double, double)","u":"gt(double,double)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"gt(float, float)","u":"gt(float,float)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"gt(int, int)","u":"gt(int,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"gt(List<?>, List<?>)","u":"gt(java.util.List,java.util.List)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"gt(long, long)","u":"gt(long,long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"gt(Object[], Object[])","u":"gt(java.lang.Object[],java.lang.Object[])"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"gt(RexNode, RexNode)","u":"gt(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"gt(short, short)","u":"gt(short,short)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"gt(String, String)","u":"gt(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"gt(String, String, Comparator<String>)","u":"gt(java.lang.String,java.lang.String,java.util.Comparator)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"gtAny(Object, Object)","u":"gtAny(java.lang.Object,java.lang.Object)"},{"p":"org.apache.calcite.piglet","c":"Ast.Op","l":"GTE"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"gtNullable(T, T)","u":"gtNullable(T,T)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUtil","l":"guessSelectivity(RexNode)","u":"guessSelectivity(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUtil","l":"guessSelectivity(RexNode, boolean)","u":"guessSelectivity(org.apache.calcite.rex.RexNode,boolean)"},{"p":"org.apache.calcite.sql","c":"SqlDialect.DatabaseProduct","l":"H2"},{"p":"org.apache.calcite.test","c":"CalciteAssert.DatabaseInstance","l":"H2"},{"p":"org.apache.calcite.sql.dialect","c":"H2SqlDialect","l":"H2SqlDialect(SqlDialect.Context)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect.Context)"},{"p":"org.apache.calcite.util.format.postgresql","c":"ChronoUnitEnum","l":"HALF_DAYS"},{"p":"org.apache.calcite.piglet","c":"Handler","l":"handle(Ast.Node)","u":"handle(org.apache.calcite.piglet.Ast.Node)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexImpTable.NullAs","l":"handle(Expression)","u":"handle(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.rel.rules","c":"CalcRelSplitter","l":"handle(RelNode)","u":"handle(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.sql2rel","c":"CorrelationReferenceFinder","l":"handle(RexFieldAccess)","u":"handle(org.apache.calcite.rex.RexFieldAccess)"},{"p":"org.apache.calcite.rel.metadata","c":"JaninoRelMetadataProvider","l":"handler(Class<MH>)","u":"handler(java.lang.Class)"},{"p":"org.apache.calcite.rel.metadata","c":"MetadataHandlerProvider","l":"handler(Class<MH>)","u":"handler(java.lang.Class)"},{"p":"org.apache.calcite.rel.metadata","c":"ProxyingMetadataHandlerProvider","l":"handler(Class<MH>)","u":"handler(java.lang.Class)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQueryBase","l":"handler(Class<MH>)","u":"handler(java.lang.Class)"},{"p":"org.apache.calcite.piglet","c":"Handler","l":"Handler(PigRelBuilder)","u":"%3Cinit%3E(org.apache.calcite.tools.PigRelBuilder)"},{"p":"org.apache.calcite.rel.metadata","c":"MetadataDef","l":"handlerClass"},{"p":"org.apache.calcite.rel.metadata","c":"MetadataHandler","l":"handlerMethods(Class<? extends MetadataHandler<?>>)","u":"handlerMethods(java.lang.Class)"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoRelMetadataProvider","l":"handlers(Class<? extends MetadataHandler<?>>)","u":"handlers(java.lang.Class)"},{"p":"org.apache.calcite.rel.metadata","c":"CachingRelMetadataProvider","l":"handlers(Class<? extends MetadataHandler<?>>)","u":"handlers(java.lang.Class)"},{"p":"org.apache.calcite.rel.metadata","c":"ChainedRelMetadataProvider","l":"handlers(Class<? extends MetadataHandler<?>>)","u":"handlers(java.lang.Class)"},{"p":"org.apache.calcite.rel.metadata","c":"JaninoRelMetadataProvider","l":"handlers(Class<? extends MetadataHandler<?>>)","u":"handlers(java.lang.Class)"},{"p":"org.apache.calcite.rel.metadata","c":"ReflectiveRelMetadataProvider","l":"handlers(Class<? extends MetadataHandler<?>>)","u":"handlers(java.lang.Class)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataProvider","l":"handlers(Class<? extends MetadataHandler<?>>)","u":"handlers(java.lang.Class)"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoRelMetadataProvider","l":"handlers(MetadataDef<M>)","u":"handlers(org.apache.calcite.rel.metadata.MetadataDef)"},{"p":"org.apache.calcite.rel.metadata","c":"CachingRelMetadataProvider","l":"handlers(MetadataDef<M>)","u":"handlers(org.apache.calcite.rel.metadata.MetadataDef)"},{"p":"org.apache.calcite.rel.metadata","c":"ChainedRelMetadataProvider","l":"handlers(MetadataDef<M>)","u":"handlers(org.apache.calcite.rel.metadata.MetadataDef)"},{"p":"org.apache.calcite.rel.metadata","c":"JaninoRelMetadataProvider","l":"handlers(MetadataDef<M>)","u":"handlers(org.apache.calcite.rel.metadata.MetadataDef)"},{"p":"org.apache.calcite.rel.metadata","c":"ReflectiveRelMetadataProvider","l":"handlers(MetadataDef<M>)","u":"handlers(org.apache.calcite.rel.metadata.MetadataDef)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataProvider","l":"handlers(MetadataDef<M>)","u":"handlers(org.apache.calcite.rel.metadata.MetadataDef)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"handleUnresolvedFunction(SqlCall, SqlOperator, List<RelDataType>, List<String>)","u":"handleUnresolvedFunction(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlOperator,java.util.List,java.util.List)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"handleUnresolvedFunction(SqlCall, SqlOperator, List<RelDataType>, List<String>)","u":"handleUnresolvedFunction(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlOperator,java.util.List,java.util.List)"},{"p":"org.apache.calcite.rel.rules","c":"LoptMultiJoin","l":"hasAllFactors(LoptJoinTree, BitSet)","u":"hasAllFactors(org.apache.calcite.rel.rules.LoptJoinTree,java.util.BitSet)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"hasCharacter(RelDataType)","u":"hasCharacter(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"hasCharactor(RelDataType)","u":"hasCharactor(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"hasCollation()"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator.CorelMap","l":"hasCorrelation()"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.JsonPathContext","l":"hasException()"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.JsonValueContext","l":"hasException()"},{"p":"org.apache.calcite.test","c":"Matchers","l":"hasExpandedTree(String)","u":"hasExpandedTree(java.lang.String)"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonQueryFunction","l":"hasExplicitTypeSpec(List<SqlNode>)","u":"hasExplicitTypeSpec(java.util.List)"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonValueFunction","l":"hasExplicitTypeSpec(List<SqlNode>)","u":"hasExplicitTypeSpec(java.util.List)"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonValueFunction","l":"hasExplicitTypeSpec(SqlNode[])","u":"hasExplicitTypeSpec(org.apache.calcite.sql.SqlNode[])"},{"p":"org.apache.calcite.linq4j.tree","c":"ClassDeclarationFinder","l":"hasField(String)","u":"hasField(java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"DeterministicCodeOptimizer","l":"hasField(String)","u":"hasField(java.lang.String)"},{"p":"org.apache.calcite.test","c":"Matchers","l":"hasFieldNames(String)","u":"hasFieldNames(java.lang.String)"},{"p":"org.apache.calcite.rel.core","c":"Aggregate.AggCallBinding","l":"hasFilter()"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"hasFilter()"},{"p":"org.apache.calcite.sql","c":"SqlOperatorBinding","l":"hasFilter()"},{"p":"org.apache.calcite.rex","c":"RexCall","l":"hash"},{"p":"org.apache.calcite.adapter.redis","c":"RedisDataType","l":"HASH"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"HASH"},{"p":"org.apache.calcite.rel","c":"RelDistribution.Type","l":"HASH_DISTRIBUTED"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"HASH_JOIN"},{"p":"org.apache.calcite.rel","c":"RelDistributions","l":"hash(Collection<? extends Number>)","u":"hash(java.util.Collection)"},{"p":"org.apache.calcite.runtime","c":"Utilities","l":"hash(int, boolean)","u":"hash(int,boolean)"},{"p":"org.apache.calcite.runtime","c":"Utilities","l":"hash(int, byte)","u":"hash(int,byte)"},{"p":"org.apache.calcite.runtime","c":"Utilities","l":"hash(int, char)","u":"hash(int,char)"},{"p":"org.apache.calcite.runtime","c":"Utilities","l":"hash(int, double)","u":"hash(int,double)"},{"p":"org.apache.calcite.runtime","c":"Utilities","l":"hash(int, float)","u":"hash(int,float)"},{"p":"org.apache.calcite.runtime","c":"Utilities","l":"hash(int, int)","u":"hash(int,int)"},{"p":"org.apache.calcite.util","c":"Util","l":"hash(int, int)","u":"hash(int,int)"},{"p":"org.apache.calcite.runtime","c":"Utilities","l":"hash(int, long)","u":"hash(int,long)"},{"p":"org.apache.calcite.runtime","c":"Utilities","l":"hash(int, Object)","u":"hash(int,java.lang.Object)"},{"p":"org.apache.calcite.util","c":"Util","l":"hash(int, Object)","u":"hash(int,java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"Utilities","l":"hash(int, short)","u":"hash(int,short)"},{"p":"org.apache.calcite.runtime","c":"Utilities","l":"hash(Object)","u":"hash(java.lang.Object)"},{"p":"org.apache.calcite.util","c":"Util","l":"hashArray(int, Object[])","u":"hashArray(int,java.lang.Object[])"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery.QuerySpec","l":"hashCode()"},{"p":"org.apache.calcite.interpreter","c":"Row","l":"hashCode()"},{"p":"org.apache.calcite.jdbc","c":"JavaRecordType","l":"hashCode()"},{"p":"org.apache.calcite.linq4j","c":"Ord","l":"hashCode()"},{"p":"org.apache.calcite.linq4j.tree","c":"AbstractNode","l":"hashCode()"},{"p":"org.apache.calcite.linq4j.tree","c":"ArrayLengthRecordField","l":"hashCode()"},{"p":"org.apache.calcite.linq4j.tree","c":"BinaryExpression","l":"hashCode()"},{"p":"org.apache.calcite.linq4j.tree","c":"BlockStatement","l":"hashCode()"},{"p":"org.apache.calcite.linq4j.tree","c":"CatchBlock","l":"hashCode()"},{"p":"org.apache.calcite.linq4j.tree","c":"ClassDeclaration","l":"hashCode()"},{"p":"org.apache.calcite.linq4j.tree","c":"ConditionalExpression","l":"hashCode()"},{"p":"org.apache.calcite.linq4j.tree","c":"ConditionalStatement","l":"hashCode()"},{"p":"org.apache.calcite.linq4j.tree","c":"ConstantExpression","l":"hashCode()"},{"p":"org.apache.calcite.linq4j.tree","c":"ConstantUntypedNull","l":"hashCode()"},{"p":"org.apache.calcite.linq4j.tree","c":"ConstructorDeclaration","l":"hashCode()"},{"p":"org.apache.calcite.linq4j.tree","c":"DeclarationStatement","l":"hashCode()"},{"p":"org.apache.calcite.linq4j.tree","c":"FieldDeclaration","l":"hashCode()"},{"p":"org.apache.calcite.linq4j.tree","c":"ForEachStatement","l":"hashCode()"},{"p":"org.apache.calcite.linq4j.tree","c":"ForStatement","l":"hashCode()"},{"p":"org.apache.calcite.linq4j.tree","c":"FunctionExpression","l":"hashCode()"},{"p":"org.apache.calcite.linq4j.tree","c":"GotoStatement","l":"hashCode()"},{"p":"org.apache.calcite.linq4j.tree","c":"IndexExpression","l":"hashCode()"},{"p":"org.apache.calcite.linq4j.tree","c":"LabelStatement","l":"hashCode()"},{"p":"org.apache.calcite.linq4j.tree","c":"LabelTarget","l":"hashCode()"},{"p":"org.apache.calcite.linq4j.tree","c":"MemberExpression","l":"hashCode()"},{"p":"org.apache.calcite.linq4j.tree","c":"MethodCallExpression","l":"hashCode()"},{"p":"org.apache.calcite.linq4j.tree","c":"MethodDeclaration","l":"hashCode()"},{"p":"org.apache.calcite.linq4j.tree","c":"NewArrayExpression","l":"hashCode()"},{"p":"org.apache.calcite.linq4j.tree","c":"NewExpression","l":"hashCode()"},{"p":"org.apache.calcite.linq4j.tree","c":"ParameterExpression","l":"hashCode()"},{"p":"org.apache.calcite.linq4j.tree","c":"ReflectedPseudoField","l":"hashCode()"},{"p":"org.apache.calcite.linq4j.tree","c":"TernaryExpression","l":"hashCode()"},{"p":"org.apache.calcite.linq4j.tree","c":"ThrowStatement","l":"hashCode()"},{"p":"org.apache.calcite.linq4j.tree","c":"TryStatement","l":"hashCode()"},{"p":"org.apache.calcite.linq4j.tree","c":"TypeBinaryExpression","l":"hashCode()"},{"p":"org.apache.calcite.linq4j.tree","c":"UnaryExpression","l":"hashCode()"},{"p":"org.apache.calcite.linq4j.tree","c":"WhileStatement","l":"hashCode()"},{"p":"org.apache.calcite.materialize","c":"Lattice.Column","l":"hashCode()"},{"p":"org.apache.calcite.materialize","c":"Lattice.Measure","l":"hashCode()"},{"p":"org.apache.calcite.materialize","c":"LatticeTable","l":"hashCode()"},{"p":"org.apache.calcite.materialize","c":"MaterializationKey","l":"hashCode()"},{"p":"org.apache.calcite.materialize","c":"TileKey","l":"hashCode()"},{"p":"org.apache.calcite.plan","c":"RelOptCostImpl","l":"hashCode()"},{"p":"org.apache.calcite.plan","c":"RelOptRule","l":"hashCode()"},{"p":"org.apache.calcite.plan","c":"RelOptRuleOperand","l":"hashCode()"},{"p":"org.apache.calcite.plan","c":"RelTrait","l":"hashCode()"},{"p":"org.apache.calcite.plan","c":"RelTraitSet","l":"hashCode()"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoRelMetadataProvider","l":"hashCode()"},{"p":"org.apache.calcite.prepare","c":"RelOptTableImpl","l":"hashCode()"},{"p":"org.apache.calcite.profile","c":"Profiler.Column","l":"hashCode()"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"hashCode()"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"hashCode()"},{"p":"org.apache.calcite.rel.core","c":"CorrelationId","l":"hashCode()"},{"p":"org.apache.calcite.rel.core","c":"Match.RexMRAggCall","l":"hashCode()"},{"p":"org.apache.calcite.rel.core","c":"Window.Group","l":"hashCode()"},{"p":"org.apache.calcite.rel.core","c":"Window.RexWinAggCall","l":"hashCode()"},{"p":"org.apache.calcite.rel.hint","c":"RelHint","l":"hashCode()"},{"p":"org.apache.calcite.rel.metadata","c":"ChainedRelMetadataProvider","l":"hashCode()"},{"p":"org.apache.calcite.rel.metadata","c":"JaninoRelMetadataProvider","l":"hashCode()"},{"p":"org.apache.calcite.rel.metadata","c":"RelColumnOrigin","l":"hashCode()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableAggregate","l":"hashCode()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableCalc","l":"hashCode()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableCollect","l":"hashCode()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableCorrelate","l":"hashCode()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableExchange","l":"hashCode()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableFilter","l":"hashCode()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableJoin","l":"hashCode()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableMatch","l":"hashCode()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableProject","l":"hashCode()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableSample","l":"hashCode()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableScan","l":"hashCode()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableSetOp","l":"hashCode()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableSort","l":"hashCode()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableTableFunctionScan","l":"hashCode()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableTableModify","l":"hashCode()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableUncollect","l":"hashCode()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableValues","l":"hashCode()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableWindow","l":"hashCode()"},{"p":"org.apache.calcite.rel","c":"RelCollationImpl","l":"hashCode()"},{"p":"org.apache.calcite.rel","c":"RelFieldCollation","l":"hashCode()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFieldImpl","l":"hashCode()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeImpl","l":"hashCode()"},{"p":"org.apache.calcite.rex","c":"RexCall","l":"hashCode()"},{"p":"org.apache.calcite.rex","c":"RexCorrelVariable","l":"hashCode()"},{"p":"org.apache.calcite.rex","c":"RexDynamicParam","l":"hashCode()"},{"p":"org.apache.calcite.rex","c":"RexFieldAccess","l":"hashCode()"},{"p":"org.apache.calcite.rex","c":"RexInputRef","l":"hashCode()"},{"p":"org.apache.calcite.rex","c":"RexLambda","l":"hashCode()"},{"p":"org.apache.calcite.rex","c":"RexLambdaRef","l":"hashCode()"},{"p":"org.apache.calcite.rex","c":"RexLiteral","l":"hashCode()"},{"p":"org.apache.calcite.rex","c":"RexLocalRef","l":"hashCode()"},{"p":"org.apache.calcite.rex","c":"RexNode","l":"hashCode()"},{"p":"org.apache.calcite.rex","c":"RexOver","l":"hashCode()"},{"p":"org.apache.calcite.rex","c":"RexRangeRef","l":"hashCode()"},{"p":"org.apache.calcite.rex","c":"RexSubQuery","l":"hashCode()"},{"p":"org.apache.calcite.rex","c":"RexTableInputRef","l":"hashCode()"},{"p":"org.apache.calcite.rex","c":"RexTableInputRef.RelTableRef","l":"hashCode()"},{"p":"org.apache.calcite.rex","c":"RexWindow","l":"hashCode()"},{"p":"org.apache.calcite.runtime","c":"ConsList","l":"hashCode()"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat1List","l":"hashCode()"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat2List","l":"hashCode()"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat3List","l":"hashCode()"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat4List","l":"hashCode()"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat5List","l":"hashCode()"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat6List","l":"hashCode()"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.JsonValueContext","l":"hashCode()"},{"p":"org.apache.calcite.runtime","c":"MapEntry","l":"hashCode()"},{"p":"org.apache.calcite.runtime.rtti","c":"BasicSqlTypeRtti","l":"hashCode()"},{"p":"org.apache.calcite.runtime.rtti","c":"GenericSqlTypeRtti","l":"hashCode()"},{"p":"org.apache.calcite.runtime.rtti","c":"RowSqlTypeRtti","l":"hashCode()"},{"p":"org.apache.calcite.runtime.variant","c":"VariantNonNull","l":"hashCode()"},{"p":"org.apache.calcite.runtime.variant","c":"VariantNull","l":"hashCode()"},{"p":"org.apache.calcite.runtime.variant","c":"VariantSqlNull","l":"hashCode()"},{"p":"org.apache.calcite.schema.impl","c":"LongSchemaVersion","l":"hashCode()"},{"p":"org.apache.calcite.schema.lookup","c":"Named","l":"hashCode()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserPos","l":"hashCode()"},{"p":"org.apache.calcite.sql.parser","c":"StringAndPos","l":"hashCode()"},{"p":"org.apache.calcite.sql","c":"SqlCollation","l":"hashCode()"},{"p":"org.apache.calcite.sql","c":"SqlIntervalLiteral.IntervalValue","l":"hashCode()"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"hashCode()"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"hashCode()"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"hashCode()"},{"p":"org.apache.calcite.sql","c":"TableCharacteristic","l":"hashCode()"},{"p":"org.apache.calcite.sql.util","c":"IdPair","l":"hashCode()"},{"p":"org.apache.calcite.sql.util","c":"SqlString","l":"hashCode()"},{"p":"org.apache.calcite.sql.validate","c":"SqlMonikerImpl","l":"hashCode()"},{"p":"org.apache.calcite.sql.validate","c":"SqlQualified","l":"hashCode()"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator.CorelMap","l":"hashCode()"},{"p":"org.apache.calcite.test.schemata.foodmart","c":"FoodmartSchema.SalesFact","l":"hashCode()"},{"p":"org.apache.calcite.test.schemata.hr","c":"Department","l":"hashCode()"},{"p":"org.apache.calcite.test.schemata.hr","c":"Dependent","l":"hashCode()"},{"p":"org.apache.calcite.test.schemata.hr","c":"Employee","l":"hashCode()"},{"p":"org.apache.calcite.test.schemata.hr","c":"Event","l":"hashCode()"},{"p":"org.apache.calcite.test.schemata.hr","c":"HierarchySchema.Hierarchy","l":"hashCode()"},{"p":"org.apache.calcite.test.schemata.hr","c":"Location","l":"hashCode()"},{"p":"org.apache.calcite.test.schemata.hr","c":"NullableTest","l":"hashCode()"},{"p":"org.apache.calcite.test.schemata.lingual","c":"LingualEmp","l":"hashCode()"},{"p":"org.apache.calcite.util","c":"BitString","l":"hashCode()"},{"p":"org.apache.calcite.util","c":"DateString","l":"hashCode()"},{"p":"org.apache.calcite.util.graph","c":"DefaultEdge","l":"hashCode()"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"hashCode()"},{"p":"org.apache.calcite.util","c":"ImmutableIntList","l":"hashCode()"},{"p":"org.apache.calcite.util.mapping","c":"IntPair","l":"hashCode()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.FiniteAbstractMapping","l":"hashCode()"},{"p":"org.apache.calcite.util","c":"NameMap","l":"hashCode()"},{"p":"org.apache.calcite.util","c":"NameMultimap","l":"hashCode()"},{"p":"org.apache.calcite.util","c":"NameSet","l":"hashCode()"},{"p":"org.apache.calcite.util","c":"NlsString","l":"hashCode()"},{"p":"org.apache.calcite.util","c":"Pair","l":"hashCode()"},{"p":"org.apache.calcite.util","c":"Permutation","l":"hashCode()"},{"p":"org.apache.calcite.util","c":"Sarg","l":"hashCode()"},{"p":"org.apache.calcite.util","c":"TimestampString","l":"hashCode()"},{"p":"org.apache.calcite.util","c":"TimestampWithTimeZoneString","l":"hashCode()"},{"p":"org.apache.calcite.util","c":"TimeString","l":"hashCode()"},{"p":"org.apache.calcite.util","c":"TimeWithTimeZoneString","l":"hashCode()"},{"p":"org.apache.calcite.runtime","c":"Utilities","l":"hashCode(boolean)"},{"p":"org.apache.calcite.runtime","c":"Utilities","l":"hashCode(double)"},{"p":"org.apache.calcite.util","c":"Util","l":"hashCode(double)"},{"p":"org.apache.calcite.runtime","c":"Utilities","l":"hashCode(float)"},{"p":"org.apache.calcite.runtime","c":"Utilities","l":"hashCode(long)"},{"p":"org.apache.calcite.util","c":"RangeSets","l":"hashCode(RangeSet<C>)","u":"hashCode(com.google.common.collect.RangeSet)"},{"p":"org.apache.calcite.rex","c":"RexNormalize","l":"hashCode(SqlOperator, List<RexNode>)","u":"hashCode(org.apache.calcite.sql.SqlOperator,java.util.List)"},{"p":"org.apache.calcite.linq4j.function","c":"EqualityComparer","l":"hashCode(T)"},{"p":"org.apache.calcite.sql","c":"SqlSelect","l":"hasHints()"},{"p":"org.apache.calcite.test","c":"Matchers","l":"hasHints(String)","u":"hasHints(java.lang.String)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"hashJoin(Enumerable<TInner>, Function1<T, TKey>, Function1<TInner, TKey>, Function2<T, TInner, TResult>)","u":"hashJoin(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"hashJoin(Enumerable<TInner>, Function1<T, TKey>, Function1<TInner, TKey>, Function2<T, TInner, TResult>, EqualityComparer<TKey>)","u":"hashJoin(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"hashJoin(Enumerable<TInner>, Function1<T, TKey>, Function1<TInner, TKey>, Function2<T, TInner, TResult>, EqualityComparer<TKey>, boolean, boolean)","u":"hashJoin(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.EqualityComparer,boolean,boolean)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"hashJoin(Enumerable<TInner>, Function1<T, TKey>, Function1<TInner, TKey>, Function2<T, TInner, TResult>, EqualityComparer<TKey>, boolean, boolean, Predicate2<T, TInner>)","u":"hashJoin(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.EqualityComparer,boolean,boolean,org.apache.calcite.linq4j.function.Predicate2)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"hashJoin(Enumerable<TInner>, Function1<TSource, TKey>, Function1<TInner, TKey>, Function2<TSource, TInner, TResult>)","u":"hashJoin(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"hashJoin(Enumerable<TInner>, Function1<TSource, TKey>, Function1<TInner, TKey>, Function2<TSource, TInner, TResult>, EqualityComparer<TKey>)","u":"hashJoin(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"hashJoin(Enumerable<TInner>, Function1<TSource, TKey>, Function1<TInner, TKey>, Function2<TSource, TInner, TResult>, EqualityComparer<TKey>, boolean, boolean)","u":"hashJoin(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.EqualityComparer,boolean,boolean)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"hashJoin(Enumerable<TInner>, Function1<TSource, TKey>, Function1<TInner, TKey>, Function2<TSource, TInner, TResult>, EqualityComparer<TKey>, boolean, boolean, Predicate2<TSource, TInner>)","u":"hashJoin(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.EqualityComparer,boolean,boolean,org.apache.calcite.linq4j.function.Predicate2)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"hashJoin(Enumerable<TSource>, Enumerable<TInner>, Function1<TSource, TKey>, Function1<TInner, TKey>, Function2<TSource, TInner, TResult>)","u":"hashJoin(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"hashJoin(Enumerable<TSource>, Enumerable<TInner>, Function1<TSource, TKey>, Function1<TInner, TKey>, Function2<TSource, TInner, TResult>, EqualityComparer<TKey>)","u":"hashJoin(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"hashJoin(Enumerable<TSource>, Enumerable<TInner>, Function1<TSource, TKey>, Function1<TInner, TKey>, Function2<TSource, TInner, TResult>, EqualityComparer<TKey>, boolean, boolean)","u":"hashJoin(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.EqualityComparer,boolean,boolean)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"hashJoin(Enumerable<TSource>, Enumerable<TInner>, Function1<TSource, TKey>, Function1<TInner, TKey>, Function2<TSource, TInner, TResult>, EqualityComparer<TKey>, boolean, boolean, Predicate2<TSource, TInner>)","u":"hashJoin(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.EqualityComparer,boolean,boolean,org.apache.calcite.linq4j.function.Predicate2)"},{"p":"org.apache.calcite.sql.dialect","c":"Db2SqlDialect","l":"hasImplicitTableAlias()"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"hasImplicitTableAlias()"},{"p":"org.apache.calcite.rel.rules","c":"JoinProjectTransposeRule","l":"hasLeftChild(RelOptRuleCall)","u":"hasLeftChild(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"MultiJoinProjectTransposeRule","l":"hasLeftChild(RelOptRuleCall)","u":"hasLeftChild(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.util","c":"TestUtil","l":"hasMessage(Throwable, String)","u":"hasMessage(java.lang.Throwable,java.lang.String)"},{"p":"org.apache.calcite.util","c":"Filterator","l":"hasNext()"},{"p":"org.apache.calcite.util.graph","c":"BreadthFirstIterator","l":"hasNext()"},{"p":"org.apache.calcite.util.graph","c":"DepthFirstIterator","l":"hasNext()"},{"p":"org.apache.calcite.util.graph","c":"TopologicalOrderIterator","l":"hasNext()"},{"p":"org.apache.calcite.sql","c":"SqlSelect","l":"hasOrderBy()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableAggregateBase","l":"hasOrderedCall(List<AggImpState>)","u":"hasOrderedCall(java.util.List)"},{"p":"org.apache.calcite.test","c":"Matchers","l":"hasRex(String)","u":"hasRex(java.lang.String)"},{"p":"org.apache.calcite.rel.rules","c":"JoinProjectTransposeRule","l":"hasRightChild(RelOptRuleCall)","u":"hasRightChild(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"MultiJoinProjectTransposeRule","l":"hasRightChild(RelOptRuleCall)","u":"hasRightChild(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.adapter.enumerable.impl","c":"WinAggResetContextImpl","l":"hasRows()"},{"p":"org.apache.calcite.adapter.enumerable.impl","c":"WinAggResultContextImpl","l":"hasRows()"},{"p":"org.apache.calcite.adapter.enumerable","c":"WinAggFrameContext","l":"hasRows()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"hasScale(RelDataType)","u":"hasScale(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql","c":"SqlAbstractDateTimeLiteral","l":"hasTimeZone"},{"p":"org.apache.calcite.test","c":"Matchers","l":"hasTree(String)","u":"hasTree(java.lang.String)"},{"p":"org.apache.calcite.rel.rel2sql","c":"RelToSqlConverter","l":"hasTrickyRollup(Sort, Aggregate)","u":"hasTrickyRollup(org.apache.calcite.rel.core.Sort,org.apache.calcite.rel.core.Aggregate)"},{"p":"org.apache.calcite.linq4j.tree","c":"BlockBuilder","l":"hasVariable(String)","u":"hasVariable(java.lang.String)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserFixture","l":"hasWarning(Consumer<List<? extends Throwable>>)","u":"hasWarning(java.util.function.Consumer)"},{"p":"org.apache.calcite.sql","c":"SqlSelect","l":"hasWhere()"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Clause","l":"HAVING"},{"p":"org.apache.calcite.sql","c":"SqlSelect","l":"HAVING_OPERAND"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"havingFolding()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"havingMustBeBoolean()"},{"p":"org.apache.calcite.util","c":"XmlOutput","l":"header()"},{"p":"org.apache.calcite.util","c":"XmlOutput","l":"header(String)","u":"header(java.lang.String)"},{"p":"org.apache.calcite.tools","c":"Programs","l":"hep(Iterable<? extends RelOptRule>, boolean, RelMetadataProvider)","u":"hep(java.lang.Iterable,boolean,org.apache.calcite.rel.metadata.RelMetadataProvider)"},{"p":"org.apache.calcite.plan.hep","c":"HepPlanner","l":"HepPlanner(HepProgram)","u":"%3Cinit%3E(org.apache.calcite.plan.hep.HepProgram)"},{"p":"org.apache.calcite.plan.hep","c":"HepPlanner","l":"HepPlanner(HepProgram, Context)","u":"%3Cinit%3E(org.apache.calcite.plan.hep.HepProgram,org.apache.calcite.plan.Context)"},{"p":"org.apache.calcite.plan.hep","c":"HepPlanner","l":"HepPlanner(HepProgram, Context, boolean, Function2<RelNode, RelNode, Void>, RelOptCostFactory)","u":"%3Cinit%3E(org.apache.calcite.plan.hep.HepProgram,org.apache.calcite.plan.Context,boolean,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.plan.RelOptCostFactory)"},{"p":"org.apache.calcite.plan.hep","c":"HepProgramBuilder","l":"HepProgramBuilder()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.tools","c":"Programs","l":"heuristicJoinOrder(Iterable<? extends RelOptRule>, boolean, int)","u":"heuristicJoinOrder(java.lang.Iterable,boolean,int)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"HEX"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"HEX"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"hex(String)","u":"hex(java.lang.String)"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"HH12"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"HH24"},{"p":"org.apache.calcite.test.schemata.hr","c":"HierarchySchema","l":"hierarchies"},{"p":"org.apache.calcite.schema","c":"Schema.TableType","l":"HIERARCHY_TABLE"},{"p":"org.apache.calcite.test.schemata.hr","c":"HierarchySchema.Hierarchy","l":"Hierarchy(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"org.apache.calcite.test.schemata.hr","c":"HierarchySchema","l":"HierarchySchema()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.config","c":"NullCollation","l":"HIGH"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"HILBERT"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"hilbert(BigDecimal, BigDecimal)","u":"hilbert(java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"hilbert(Geometry)","u":"hilbert(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"HilbertCurve2D","l":"HilbertCurve2D(int)","u":"%3Cinit%3E(int)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"HINT"},{"p":"org.apache.calcite.rel.hint","c":"HintStrategyTable.HintErrorLogger","l":"HintErrorLogger()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.hint","c":"RelHint","l":"hintName"},{"p":"org.apache.calcite.rel.hint","c":"RelHint.Builder","l":"hintOption(String)","u":"hintOption(java.lang.String)"},{"p":"org.apache.calcite.rel.hint","c":"RelHint.Builder","l":"hintOption(String, String)","u":"hintOption(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.rel.hint","c":"HintStrategy","l":"hintOptionChecker"},{"p":"org.apache.calcite.rel.hint","c":"RelHint.Builder","l":"hintOptions(Iterable<String>)","u":"hintOptions(java.lang.Iterable)"},{"p":"org.apache.calcite.rel.hint","c":"RelHint.Builder","l":"hintOptions(Map<String, String>)","u":"hintOptions(java.util.Map)"},{"p":"org.apache.calcite.rel.hint","c":"HintPredicates","l":"HintPredicates()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.core","c":"Aggregate","l":"hints"},{"p":"org.apache.calcite.rel.core","c":"Calc","l":"hints"},{"p":"org.apache.calcite.rel.core","c":"Correlate","l":"hints"},{"p":"org.apache.calcite.rel.core","c":"Filter","l":"hints"},{"p":"org.apache.calcite.rel.core","c":"Join","l":"hints"},{"p":"org.apache.calcite.rel.core","c":"Project","l":"hints"},{"p":"org.apache.calcite.rel.core","c":"SetOp","l":"hints"},{"p":"org.apache.calcite.rel.core","c":"Snapshot","l":"hints"},{"p":"org.apache.calcite.rel.core","c":"Sort","l":"hints"},{"p":"org.apache.calcite.rel.core","c":"TableFunctionScan","l":"hints"},{"p":"org.apache.calcite.rel.core","c":"TableScan","l":"hints"},{"p":"org.apache.calcite.rel.core","c":"Values","l":"hints"},{"p":"org.apache.calcite.rel.core","c":"Window","l":"hints"},{"p":"org.apache.calcite.rel","c":"RelRoot","l":"hints"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"hints(Iterable<RelHint>)","u":"hints(java.lang.Iterable)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"hints(RelHint...)","u":"hints(org.apache.calcite.rel.hint.RelHint...)"},{"p":"org.apache.calcite.rel.hint","c":"HintStrategyTable.Builder","l":"hintStrategy(String, HintPredicate)","u":"hintStrategy(java.lang.String,org.apache.calcite.rel.hint.HintPredicate)"},{"p":"org.apache.calcite.rel.hint","c":"HintStrategyTable.Builder","l":"hintStrategy(String, HintStrategy)","u":"hintStrategy(java.lang.String,org.apache.calcite.rel.hint.HintStrategy)"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"HISTOGRAM"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"HISTOGRAM_AGG"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"HISTOGRAM_FIRST_VALUE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"HISTOGRAM_LAST_VALUE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"HISTOGRAM_MAX"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"HISTOGRAM_MIN"},{"p":"org.apache.calcite.model","c":"JsonStream","l":"history"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchSearchResult.SearchHits","l":"hits()"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibrary","l":"HIVE"},{"p":"org.apache.calcite.sql","c":"SqlDialect.DatabaseProduct","l":"HIVE"},{"p":"org.apache.calcite.sql.dialect","c":"HiveSqlDialect","l":"HiveSqlDialect(SqlDialect.Context)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect.Context)"},{"p":"org.apache.calcite.tools","c":"Hoist","l":"hoist(String)","u":"hoist(java.lang.String)"},{"p":"org.apache.calcite.util","c":"Holder","l":"Holder(E)","u":"%3Cinit%3E(E)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"HOP"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"HOP"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"HOP_END"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"HOP_END"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"HOP_OLD"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"HOP_START"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"HOP_START"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"HOPPING"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumUtils","l":"hopping(Enumerator<Object[]>, int, long, long, long)","u":"hopping(org.apache.calcite.linq4j.Enumerator,int,long,long,long)"},{"p":"org.apache.calcite.adapter.druid","c":"Granularity.Type","l":"HOUR"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"HOUR"},{"p":"org.apache.calcite.test","c":"SqlOperatorTest","l":"HOUR_VARIANTS"},{"p":"org.apache.calcite.util.format.postgresql","c":"ChronoUnitEnum","l":"HOURS_IN_DAY"},{"p":"org.apache.calcite.util.format.postgresql","c":"ChronoUnitEnum","l":"HOURS_IN_HALF_DAY"},{"p":"org.apache.calcite.test","c":"CalciteAssert.SchemaSpec","l":"HR"},{"p":"org.apache.calcite.test","c":"CalciteAssert","l":"hr()"},{"p":"org.apache.calcite.test.schemata.hr","c":"HrSchema","l":"HrSchema()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.test.schemata.hr","c":"HrSchemaBig","l":"HrSchemaBig()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql","c":"SqlDialect.DatabaseProduct","l":"HSQLDB"},{"p":"org.apache.calcite.test","c":"CalciteAssert.DatabaseInstance","l":"HSQLDB"},{"p":"org.apache.calcite.sql.dialect","c":"HsqldbSqlDialect","l":"HsqldbSqlDialect(SqlDialect.Context)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect.Context)"},{"p":"org.apache.calcite.util","c":"Util","l":"human(double)"},{"p":"org.apache.calcite.util.format.postgresql","c":"ChronoUnitEnum","l":"HUNDREDTHS_OF_MS"},{"p":"org.apache.calcite.util.format.postgresql","c":"ChronoUnitEnum","l":"HUNDREDTHS_OF_SECOND"},{"p":"org.apache.calcite.sql","c":"SqlWriter.SubQueryStyle","l":"HYDE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"HYPER_GRAPH_OPTIMIZE"},{"p":"org.apache.calcite.adapter.redis","c":"RedisDataType","l":"HYPER_LOG_LOG"},{"p":"org.apache.calcite.adapter.druid","c":"DruidType","l":"HYPER_UNIQUE"},{"p":"org.apache.calcite.rel.rules","c":"HyperEdge","l":"HyperEdge(long, long, JoinRelType, RexNode)","u":"%3Cinit%3E(long,long,org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.rules","c":"HyperGraph","l":"HyperGraph(RelOptCluster, RelTraitSet, List<RelNode>, List<HyperEdge>, RelDataType)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,java.util.List,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.rules","c":"HyperGraph","l":"HyperGraph(RelOptCluster, RelTraitSet, List<RelNode>, List<HyperEdge>, RelDataType, ImmutableBitSet, HashMap<Long, BitSet>, HashMap<Long, BitSet>, HashMap<Long, BitSet>, HashMap<Long, BitSet>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,java.util.List,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.util.ImmutableBitSet,java.util.HashMap,java.util.HashMap,java.util.HashMap,java.util.HashMap)"},{"p":"org.apache.calcite.linq4j","c":"Ord","l":"i"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil.MalformedUnicodeEscape","l":"i"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope.Step","l":"i"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"i"},{"p":"org.apache.calcite.plan","c":"RelOptRuleCall","l":"id"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"id"},{"p":"org.apache.calcite.rex","c":"RexCorrelVariable","l":"id"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisorHint","l":"id"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl.IdInfo","l":"id"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema.IntAndString","l":"id"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"ID"},{"p":"org.apache.calcite.sql","c":"SqlHint.HintOptionFormat","l":"ID_LIST"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchSearchResult.SearchHit","l":"id()"},{"p":"org.apache.calcite.sql.validate","c":"SqlIdentifierMoniker","l":"id()"},{"p":"org.apache.calcite.sql.validate","c":"SqlMoniker","l":"id()"},{"p":"org.apache.calcite.sql.validate","c":"SqlMonikerImpl","l":"id()"},{"p":"org.apache.calcite.sql.validate","c":"SqlQualified","l":"identifier"},{"p":"org.apache.calcite.piglet","c":"Ast.Op","l":"IDENTIFIER"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"IDENTIFIER"},{"p":"org.apache.calcite.sql","c":"SqlWriter.FrameTypeEnum","l":"IDENTIFIER"},{"p":"org.apache.calcite.sql.util","c":"SqlBuilder","l":"identifier(List<String>)","u":"identifier(java.util.List)"},{"p":"org.apache.calcite.piglet","c":"Ast.Identifier","l":"Identifier(SqlParserPos, String)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,java.lang.String)"},{"p":"org.apache.calcite.sql.util","c":"SqlBuilder","l":"identifier(String)","u":"identifier(java.lang.String)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"identifier(String, boolean)","u":"identifier(java.lang.String,boolean)"},{"p":"org.apache.calcite.sql","c":"SqlWriter","l":"identifier(String, boolean)","u":"identifier(java.lang.String,boolean)"},{"p":"org.apache.calcite.sql.util","c":"SqlBuilder","l":"identifier(String...)","u":"identifier(java.lang.String...)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"identifierEndQuoteString"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"identifierEscapedQuote"},{"p":"org.apache.calcite.sql","c":"SqlDialect.Context","l":"identifierEscapedQuoteString()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator.Config","l":"identifierExpansion()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser.Config","l":"identifierMaxLength()"},{"p":"org.apache.calcite.sql.dialect","c":"BigQuerySqlDialect","l":"identifierNeedsQuote(String)","u":"identifierNeedsQuote(java.lang.String)"},{"p":"org.apache.calcite.sql.dialect","c":"ExasolSqlDialect","l":"identifierNeedsQuote(String)","u":"identifierNeedsQuote(java.lang.String)"},{"p":"org.apache.calcite.sql.dialect","c":"FireboltSqlDialect","l":"identifierNeedsQuote(String)","u":"identifierNeedsQuote(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"identifierNeedsQuote(String)","u":"identifierNeedsQuote(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"identifierQuoteString"},{"p":"org.apache.calcite.sql","c":"SqlDialect.Context","l":"identifierQuoteString()"},{"p":"org.apache.calcite.materialize","c":"Lattice.BaseColumn","l":"identifiers()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"identifierTooLong(String, int)","u":"identifierTooLong(java.lang.String,int)"},{"p":"org.apache.calcite.linq4j.function","c":"Function1","l":"IDENTITY"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"IDENTITY_COMPARER"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"IDENTITY_SELECTOR"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"IDENTITY_TO_MAP"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeTransforms","l":"IDENTITY_TO_MAP"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"IDENTITY_TO_MAP_NULLABLE"},{"p":"org.apache.calcite.rel.core","c":"TableScan","l":"identity()"},{"p":"org.apache.calcite.util","c":"Permutation","l":"identity()"},{"p":"org.apache.calcite.util","c":"ImmutableIntList","l":"identity(int)"},{"p":"org.apache.calcite.rel.core","c":"TableScan","l":"identity(RelOptTable)","u":"identity(org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.linq4j.function","c":"Functions","l":"identityComparer()"},{"p":"org.apache.calcite.adapter.file","c":"CsvEnumerator","l":"identityList(int)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.IdentityMapping","l":"IdentityMapping(int)","u":"%3Cinit%3E(int)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"identityProjects(RelDataType)","u":"identityProjects(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.linq4j.function","c":"Functions","l":"identitySelector()"},{"p":"org.apache.calcite.util","c":"Smalls.IdentityTableFunction","l":"IdentityTableFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl.IdInfo","l":"IdInfo(SqlValidatorScope, SqlIdentifier)","u":"%3Cinit%3E(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.sql.util","c":"IdPair","l":"IdPair(L, R)","u":"%3Cinit%3E(L,R)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"idPositions"},{"p":"org.apache.calcite.sql.advise","c":"SqlSimpleParser.IdToken","l":"IdToken(SqlSimpleParser.TokenType, String)","u":"%3Cinit%3E(org.apache.calcite.sql.advise.SqlSimpleParser.TokenType,java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"IF"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"IF"},{"p":"org.apache.calcite.sql","c":"SqlDrop","l":"ifExists"},{"p":"org.apache.calcite.sql","c":"SqlCreate","l":"ifNotExists"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"IFNULL"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"ifThen(Expression, Node)","u":"ifThen(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Node)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"ifThenElse(Expression, Node, Node)","u":"ifThenElse(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Node,org.apache.calcite.linq4j.tree.Node)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"ifThenElse(Expression, Node...)","u":"ifThenElse(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Node...)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"ifThenElse(Iterable<? extends Node>)","u":"ifThenElse(java.lang.Iterable)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFamily","l":"IGNORE"},{"p":"org.apache.calcite.util","c":"Litmus","l":"IGNORE"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"IGNORE_ANY"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"IGNORE_NULLS"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"IGNORE_NULLS"},{"p":"org.apache.calcite.linq4j.function","c":"Functions","l":"ignore0()"},{"p":"org.apache.calcite.linq4j.function","c":"Functions","l":"ignore1()"},{"p":"org.apache.calcite.linq4j.function","c":"Functions","l":"ignore2()"},{"p":"org.apache.calcite.schema.lookup","c":"IgnoreCaseLookup","l":"IgnoreCaseLookup()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util","c":"Optionality","l":"IGNORED"},{"p":"org.apache.calcite.rel.core","c":"Window.RexWinAggCall","l":"ignoreNulls"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"ignoreNulls()"},{"p":"org.apache.calcite.rex","c":"RexOver","l":"ignoreNulls()"},{"p":"org.apache.calcite.tools","c":"RelBuilder.AggCall","l":"ignoreNulls(boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"RelColumnMapping","l":"iInputColumn"},{"p":"org.apache.calcite.rel.metadata","c":"RelColumnMapping","l":"iInputRel"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ILIKE"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"ILIKE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ILIKE_ESCAPE"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.LikeFunction","l":"ilike(String, String)","u":"ilike(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.LikeFunction","l":"ilike(String, String, String)","u":"ilike(java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"illegalArgumentForTableFunctionCall(String, String, String)","u":"illegalArgumentForTableFunctionCall(java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"illegalArgumentsInMapFromArraysFunc(int, int)","u":"illegalArgumentsInMapFromArraysFunc(int,int)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"illegalArrayExpression(String)","u":"illegalArrayExpression(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"illegalBinaryString(String)","u":"illegalBinaryString(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"illegalBitGetPositionExceedsLimit(int, int)","u":"illegalBitGetPositionExceedsLimit(int,int)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"illegalColon()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"illegalComma()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"illegalCursorExpression()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"illegalEmptyBehaviorInJsonQueryFunc(String)","u":"illegalEmptyBehaviorInJsonQueryFunc(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"illegalEmptyBehaviorInJsonValueFunc(String)","u":"illegalEmptyBehaviorInJsonValueFunc(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"illegalEmptyObjectInJsonQueryFunc()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"illegalEmptyPadPattern()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"illegalErrorBehaviorInJsonExistsFunc(String)","u":"illegalErrorBehaviorInJsonExistsFunc(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"illegalErrorBehaviorInJsonQueryFunc(String)","u":"illegalErrorBehaviorInJsonQueryFunc(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"illegalErrorBehaviorInJsonValueFunc(String)","u":"illegalErrorBehaviorInJsonValueFunc(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"illegalExpressionForTemporal(String)","u":"illegalExpressionForTemporal(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"illegalIntervalLiteral(String, String)","u":"illegalIntervalLiteral(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"illegalJoinExpression()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"illegalJsonPathMode(String)","u":"illegalJsonPathMode(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"illegalJsonPathModeInPathSpec(String, String)","u":"illegalJsonPathModeInPathSpec(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"illegalJsonPathSpec(String)","u":"illegalJsonPathSpec(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"illegalLiteral(String, String, String)","u":"illegalLiteral(java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"illegalLocaleFormat(String)","u":"illegalLocaleFormat(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"illegalMapEntriesWithNullKey()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"illegalMapKeysWithNullKey()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"illegalMapValuesWithNullKey()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"illegalMinusDate()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"illegalMixingOfTypes()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"illegalNegativeBitGetPosition(int)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"illegalNegativeDecimalValue()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"illegalNegativePadLength()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"illegalNegativeSubstringLength()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"illegalNonQueryExpression()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"illegalOrderBy()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"illegalOverlaps()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"illegalQueryExpression()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"illegalRowExpression()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"illegalWrapperBehaviorInJsonQueryFunc(String)","u":"illegalWrapperBehaviorInJsonQueryFunc(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"illegalXslt(String)","u":"illegalXslt(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"IMMEDIATELY_PRECEDES"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"IMMEDIATELY_PRECEDES"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"IMMEDIATELY_SUCCEEDS"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"IMMEDIATELY_SUCCEEDS"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"IMMUTABLE_INT_LIST_COPY_OF"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"IMMUTABLE_INT_LIST_IDENTITY"},{"p":"org.apache.calcite.runtime","c":"ImmutablePairList","l":"immutable()"},{"p":"org.apache.calcite.runtime","c":"PairList","l":"immutable()"},{"p":"org.apache.calcite.util","c":"Util","l":"immutableCopy(Iterable<? extends Iterable<E>>)","u":"immutableCopy(java.lang.Iterable)"},{"p":"org.apache.calcite.util","c":"NameMap","l":"immutableCopyOf(Map<String, V>)","u":"immutableCopyOf(java.util.Map)"},{"p":"org.apache.calcite.util","c":"NameSet","l":"immutableCopyOf(Set<String>)","u":"immutableCopyOf(java.util.Set)"},{"p":"org.apache.calcite.sql2rel","c":"AuxiliaryConverter.Impl","l":"Impl(SqlFunction)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlFunction)"},{"p":"org.apache.calcite.plan","c":"Convention.Impl","l":"Impl(String, Class<? extends RelNode>)","u":"%3Cinit%3E(java.lang.String,java.lang.Class)"},{"p":"org.apache.calcite.adapter.arrow","c":"ArrowRel","l":"implement(ArrowRel.Implementor)","u":"implement(org.apache.calcite.adapter.arrow.ArrowRel.Implementor)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraFilter","l":"implement(CassandraRel.Implementor)","u":"implement(org.apache.calcite.adapter.cassandra.CassandraRel.Implementor)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraLimit","l":"implement(CassandraRel.Implementor)","u":"implement(org.apache.calcite.adapter.cassandra.CassandraRel.Implementor)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraProject","l":"implement(CassandraRel.Implementor)","u":"implement(org.apache.calcite.adapter.cassandra.CassandraRel.Implementor)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraRel","l":"implement(CassandraRel.Implementor)","u":"implement(org.apache.calcite.adapter.cassandra.CassandraRel.Implementor)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraSort","l":"implement(CassandraRel.Implementor)","u":"implement(org.apache.calcite.adapter.cassandra.CassandraRel.Implementor)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraTableScan","l":"implement(CassandraRel.Implementor)","u":"implement(org.apache.calcite.adapter.cassandra.CassandraRel.Implementor)"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchAggregate","l":"implement(ElasticsearchRel.Implementor)","u":"implement(org.apache.calcite.adapter.elasticsearch.ElasticsearchRel.Implementor)"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchFilter","l":"implement(ElasticsearchRel.Implementor)","u":"implement(org.apache.calcite.adapter.elasticsearch.ElasticsearchRel.Implementor)"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchProject","l":"implement(ElasticsearchRel.Implementor)","u":"implement(org.apache.calcite.adapter.elasticsearch.ElasticsearchRel.Implementor)"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchRel","l":"implement(ElasticsearchRel.Implementor)","u":"implement(org.apache.calcite.adapter.elasticsearch.ElasticsearchRel.Implementor)"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchSort","l":"implement(ElasticsearchRel.Implementor)","u":"implement(org.apache.calcite.adapter.elasticsearch.ElasticsearchRel.Implementor)"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchTableScan","l":"implement(ElasticsearchRel.Implementor)","u":"implement(org.apache.calcite.adapter.elasticsearch.ElasticsearchRel.Implementor)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraToEnumerableConverter","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.csv","c":"CsvTableScan","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchToEnumerableConverter","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableAggregate","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableAsofJoin","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableBatchNestedLoopJoin","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableCalc","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableCollect","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableCorrelate","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableFilter","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableHashJoin","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableInterpreter","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableIntersect","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableLimit","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableLimitSort","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableMatch","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableMergeJoin","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableMergeUnion","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableMinus","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableNestedLoopJoin","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableProject","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRel","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRepeatUnion","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableSort","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableSortedAggregate","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableTableFunctionScan","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableTableModify","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableTableScan","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableTableSpool","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableUncollect","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableUnion","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableValues","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableWindow","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.file","c":"CsvTableScan","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeToEnumerableConverter","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbToEnumerableConverter","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcToEnumerableConverter","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoToEnumerableConverter","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.pig","c":"PigToEnumerableConverter","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.spark","c":"SparkToEnumerableConverter","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.splunk","c":"SplunkTableScan","l":"implement(EnumerableRelImplementor, EnumerableRel.Prefer)","u":"implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeAggregate","l":"implement(GeodeRel.GeodeImplementContext)","u":"implement(org.apache.calcite.adapter.geode.rel.GeodeRel.GeodeImplementContext)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeFilter","l":"implement(GeodeRel.GeodeImplementContext)","u":"implement(org.apache.calcite.adapter.geode.rel.GeodeRel.GeodeImplementContext)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeProject","l":"implement(GeodeRel.GeodeImplementContext)","u":"implement(org.apache.calcite.adapter.geode.rel.GeodeRel.GeodeImplementContext)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeRel","l":"implement(GeodeRel.GeodeImplementContext)","u":"implement(org.apache.calcite.adapter.geode.rel.GeodeRel.GeodeImplementContext)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeSort","l":"implement(GeodeRel.GeodeImplementContext)","u":"implement(org.apache.calcite.adapter.geode.rel.GeodeRel.GeodeImplementContext)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeTableScan","l":"implement(GeodeRel.GeodeImplementContext)","u":"implement(org.apache.calcite.adapter.geode.rel.GeodeRel.GeodeImplementContext)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbFilter","l":"implement(InnodbRel.Implementor)","u":"implement(org.apache.calcite.adapter.innodb.InnodbRel.Implementor)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbProject","l":"implement(InnodbRel.Implementor)","u":"implement(org.apache.calcite.adapter.innodb.InnodbRel.Implementor)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbRel","l":"implement(InnodbRel.Implementor)","u":"implement(org.apache.calcite.adapter.innodb.InnodbRel.Implementor)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbSort","l":"implement(InnodbRel.Implementor)","u":"implement(org.apache.calcite.adapter.innodb.InnodbRel.Implementor)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbTableScan","l":"implement(InnodbRel.Implementor)","u":"implement(org.apache.calcite.adapter.innodb.InnodbRel.Implementor)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery","l":"implement(InterpretableRel.InterpreterImplementor)","u":"implement(org.apache.calcite.interpreter.InterpretableRel.InterpreterImplementor)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableBindable","l":"implement(InterpretableRel.InterpreterImplementor)","u":"implement(org.apache.calcite.interpreter.InterpretableRel.InterpreterImplementor)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableInterpretable","l":"implement(InterpretableRel.InterpreterImplementor)","u":"implement(org.apache.calcite.interpreter.InterpretableRel.InterpreterImplementor)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableAggregate","l":"implement(InterpretableRel.InterpreterImplementor)","u":"implement(org.apache.calcite.interpreter.InterpretableRel.InterpreterImplementor)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableFilter","l":"implement(InterpretableRel.InterpreterImplementor)","u":"implement(org.apache.calcite.interpreter.InterpretableRel.InterpreterImplementor)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableIntersect","l":"implement(InterpretableRel.InterpreterImplementor)","u":"implement(org.apache.calcite.interpreter.InterpretableRel.InterpreterImplementor)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableJoin","l":"implement(InterpretableRel.InterpreterImplementor)","u":"implement(org.apache.calcite.interpreter.InterpretableRel.InterpreterImplementor)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableMatch","l":"implement(InterpretableRel.InterpreterImplementor)","u":"implement(org.apache.calcite.interpreter.InterpretableRel.InterpreterImplementor)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableMinus","l":"implement(InterpretableRel.InterpreterImplementor)","u":"implement(org.apache.calcite.interpreter.InterpretableRel.InterpreterImplementor)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableProject","l":"implement(InterpretableRel.InterpreterImplementor)","u":"implement(org.apache.calcite.interpreter.InterpretableRel.InterpreterImplementor)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableSort","l":"implement(InterpretableRel.InterpreterImplementor)","u":"implement(org.apache.calcite.interpreter.InterpretableRel.InterpreterImplementor)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableTableScan","l":"implement(InterpretableRel.InterpreterImplementor)","u":"implement(org.apache.calcite.interpreter.InterpretableRel.InterpreterImplementor)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableUnion","l":"implement(InterpretableRel.InterpreterImplementor)","u":"implement(org.apache.calcite.interpreter.InterpretableRel.InterpreterImplementor)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableValues","l":"implement(InterpretableRel.InterpreterImplementor)","u":"implement(org.apache.calcite.interpreter.InterpretableRel.InterpreterImplementor)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableWindow","l":"implement(InterpretableRel.InterpreterImplementor)","u":"implement(org.apache.calcite.interpreter.InterpretableRel.InterpreterImplementor)"},{"p":"org.apache.calcite.interpreter","c":"InterpretableRel","l":"implement(InterpretableRel.InterpreterImplementor)","u":"implement(org.apache.calcite.interpreter.InterpretableRel.InterpreterImplementor)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRel","l":"implement(JdbcImplementor)","u":"implement(org.apache.calcite.adapter.jdbc.JdbcImplementor)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcAggregate","l":"implement(JdbcImplementor)","u":"implement(org.apache.calcite.adapter.jdbc.JdbcImplementor)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcCalc","l":"implement(JdbcImplementor)","u":"implement(org.apache.calcite.adapter.jdbc.JdbcImplementor)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcFilter","l":"implement(JdbcImplementor)","u":"implement(org.apache.calcite.adapter.jdbc.JdbcImplementor)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcIntersect","l":"implement(JdbcImplementor)","u":"implement(org.apache.calcite.adapter.jdbc.JdbcImplementor)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcJoin","l":"implement(JdbcImplementor)","u":"implement(org.apache.calcite.adapter.jdbc.JdbcImplementor)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcMinus","l":"implement(JdbcImplementor)","u":"implement(org.apache.calcite.adapter.jdbc.JdbcImplementor)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcProject","l":"implement(JdbcImplementor)","u":"implement(org.apache.calcite.adapter.jdbc.JdbcImplementor)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcSort","l":"implement(JdbcImplementor)","u":"implement(org.apache.calcite.adapter.jdbc.JdbcImplementor)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcTableModify","l":"implement(JdbcImplementor)","u":"implement(org.apache.calcite.adapter.jdbc.JdbcImplementor)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcUnion","l":"implement(JdbcImplementor)","u":"implement(org.apache.calcite.adapter.jdbc.JdbcImplementor)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcValues","l":"implement(JdbcImplementor)","u":"implement(org.apache.calcite.adapter.jdbc.JdbcImplementor)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcTableScan","l":"implement(JdbcImplementor)","u":"implement(org.apache.calcite.adapter.jdbc.JdbcImplementor)"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoAggregate","l":"implement(MongoRel.Implementor)","u":"implement(org.apache.calcite.adapter.mongodb.MongoRel.Implementor)"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoFilter","l":"implement(MongoRel.Implementor)","u":"implement(org.apache.calcite.adapter.mongodb.MongoRel.Implementor)"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoProject","l":"implement(MongoRel.Implementor)","u":"implement(org.apache.calcite.adapter.mongodb.MongoRel.Implementor)"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoRel","l":"implement(MongoRel.Implementor)","u":"implement(org.apache.calcite.adapter.mongodb.MongoRel.Implementor)"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoSort","l":"implement(MongoRel.Implementor)","u":"implement(org.apache.calcite.adapter.mongodb.MongoRel.Implementor)"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoTableScan","l":"implement(MongoRel.Implementor)","u":"implement(org.apache.calcite.adapter.mongodb.MongoRel.Implementor)"},{"p":"org.apache.calcite.adapter.pig","c":"PigAggregate","l":"implement(PigRel.Implementor)","u":"implement(org.apache.calcite.adapter.pig.PigRel.Implementor)"},{"p":"org.apache.calcite.adapter.pig","c":"PigFilter","l":"implement(PigRel.Implementor)","u":"implement(org.apache.calcite.adapter.pig.PigRel.Implementor)"},{"p":"org.apache.calcite.adapter.pig","c":"PigJoin","l":"implement(PigRel.Implementor)","u":"implement(org.apache.calcite.adapter.pig.PigRel.Implementor)"},{"p":"org.apache.calcite.adapter.pig","c":"PigProject","l":"implement(PigRel.Implementor)","u":"implement(org.apache.calcite.adapter.pig.PigRel.Implementor)"},{"p":"org.apache.calcite.adapter.pig","c":"PigRel","l":"implement(PigRel.Implementor)","u":"implement(org.apache.calcite.adapter.pig.PigRel.Implementor)"},{"p":"org.apache.calcite.adapter.pig","c":"PigTableScan","l":"implement(PigRel.Implementor)","u":"implement(org.apache.calcite.adapter.pig.PigRel.Implementor)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcImplementor","l":"implement(RelNode)","u":"implement(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl.CalcitePreparingStmt","l":"implement(RelRoot)","u":"implement(org.apache.calcite.rel.RelRoot)"},{"p":"org.apache.calcite.prepare","c":"Prepare","l":"implement(RelRoot)","u":"implement(org.apache.calcite.rel.RelRoot)"},{"p":"org.apache.calcite.adapter.enumerable","c":"TableFunctionCallImplementor","l":"implement(RexToLixTranslator, Expression, RexCall, PhysType, PhysType)","u":"implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.PhysType)"},{"p":"org.apache.calcite.adapter.enumerable","c":"NotNullImplementor","l":"implement(RexToLixTranslator, RexCall, List<Expression>)","u":"implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"ReflectiveCallNotNullImplementor","l":"implement(RexToLixTranslator, RexCall, List<Expression>)","u":"implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexImpTable.RexCallImplementor","l":"implement(RexToLixTranslator, RexCall, List<RexToLixTranslator.Result>)","u":"implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"MatchImplementor","l":"implement(RexToLixTranslator, RexCall, ParameterExpression, ParameterExpression, ParameterExpression, ParameterExpression)","u":"implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression)"},{"p":"org.apache.calcite.adapter.enumerable","c":"CallImplementor","l":"implement(RexToLixTranslator, RexCall, RexImpTable.NullAs)","u":"implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable.NullAs)"},{"p":"org.apache.calcite.adapter.enumerable","c":"AggImplementor","l":"implementAdd(AggContext, AggAddContext)","u":"implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexImpTable.LagImplementor","l":"implementAdd(AggContext, AggAddContext)","u":"implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)"},{"p":"org.apache.calcite.adapter.enumerable","c":"StrictAggImplementor","l":"implementAdd(AggContext, AggAddContext)","u":"implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)"},{"p":"org.apache.calcite.linq4j.tree","c":"ClassDeclaration","l":"implemented"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableAggregateBase","l":"implementLambdaFactory(BlockBuilder, PhysType, List<AggImpState>, Expression, boolean, ParameterExpression)","u":"implementLambdaFactory(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,java.util.List,org.apache.calcite.linq4j.tree.Expression,boolean,org.apache.calcite.linq4j.tree.ParameterExpression)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexImpTable.UserDefinedAggReflectiveImplementor","l":"implementNotNullAdd(AggContext, AggAddContext)","u":"implementNotNullAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)"},{"p":"org.apache.calcite.adapter.enumerable","c":"StrictAggImplementor","l":"implementNotNullAdd(AggContext, AggAddContext)","u":"implementNotNullAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)"},{"p":"org.apache.calcite.adapter.enumerable","c":"StrictWinAggImplementor","l":"implementNotNullAdd(AggContext, AggAddContext)","u":"implementNotNullAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)"},{"p":"org.apache.calcite.adapter.enumerable","c":"StrictWinAggImplementor","l":"implementNotNullAdd(WinAggContext, WinAggAddContext)","u":"implementNotNullAdd(org.apache.calcite.adapter.enumerable.WinAggContext,org.apache.calcite.adapter.enumerable.WinAggAddContext)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexImpTable.UserDefinedAggReflectiveImplementor","l":"implementNotNullReset(AggContext, AggResetContext)","u":"implementNotNullReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)"},{"p":"org.apache.calcite.adapter.enumerable","c":"StrictAggImplementor","l":"implementNotNullReset(AggContext, AggResetContext)","u":"implementNotNullReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)"},{"p":"org.apache.calcite.adapter.enumerable","c":"StrictWinAggImplementor","l":"implementNotNullReset(AggContext, AggResetContext)","u":"implementNotNullReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)"},{"p":"org.apache.calcite.adapter.enumerable","c":"StrictWinAggImplementor","l":"implementNotNullReset(WinAggContext, WinAggResetContext)","u":"implementNotNullReset(org.apache.calcite.adapter.enumerable.WinAggContext,org.apache.calcite.adapter.enumerable.WinAggResetContext)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexImpTable.UserDefinedAggReflectiveImplementor","l":"implementNotNullResult(AggContext, AggResultContext)","u":"implementNotNullResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)"},{"p":"org.apache.calcite.adapter.enumerable","c":"StrictAggImplementor","l":"implementNotNullResult(AggContext, AggResultContext)","u":"implementNotNullResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)"},{"p":"org.apache.calcite.adapter.enumerable","c":"StrictWinAggImplementor","l":"implementNotNullResult(AggContext, AggResultContext)","u":"implementNotNullResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)"},{"p":"org.apache.calcite.adapter.enumerable","c":"StrictWinAggImplementor","l":"implementNotNullResult(WinAggContext, WinAggResultContext)","u":"implementNotNullResult(org.apache.calcite.adapter.enumerable.WinAggContext,org.apache.calcite.adapter.enumerable.WinAggResultContext)"},{"p":"org.apache.calcite.adapter.enumerable","c":"AggImpState","l":"implementor"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.BaseContext","l":"implementor()"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Context","l":"implementor()"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.SimpleContext","l":"implementor()"},{"p":"org.apache.calcite.adapter.arrow","c":"ArrowRel.Implementor","l":"Implementor()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraRel.Implementor","l":"Implementor()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchRel.Implementor","l":"Implementor()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbRel.Implementor","l":"Implementor()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.pig","c":"PigRel.Implementor","l":"Implementor()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoRel.Implementor","l":"Implementor(RexBuilder)","u":"%3Cinit%3E(org.apache.calcite.rex.RexBuilder)"},{"p":"org.apache.calcite.adapter.spark","c":"SparkRel.Implementor","l":"Implementor(RexBuilder)","u":"%3Cinit%3E(org.apache.calcite.rex.RexBuilder)"},{"p":"org.apache.calcite.adapter.enumerable","c":"AggImplementor","l":"implementReset(AggContext, AggResetContext)","u":"implementReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexImpTable.LagImplementor","l":"implementReset(AggContext, AggResetContext)","u":"implementReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)"},{"p":"org.apache.calcite.adapter.enumerable","c":"StrictAggImplementor","l":"implementReset(AggContext, AggResetContext)","u":"implementReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)"},{"p":"org.apache.calcite.adapter.enumerable","c":"AggImplementor","l":"implementResult(AggContext, AggResultContext)","u":"implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexImpTable.LagImplementor","l":"implementResult(AggContext, AggResultContext)","u":"implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)"},{"p":"org.apache.calcite.adapter.enumerable","c":"StrictAggImplementor","l":"implementResult(AggContext, AggResultContext)","u":"implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRelImplementor","l":"implementRoot(EnumerableRel, EnumerableRel.Prefer)","u":"implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.spark","c":"EnumerableToSparkConverter","l":"implementSpark(SparkRel.Implementor)","u":"implementSpark(org.apache.calcite.adapter.spark.SparkRel.Implementor)"},{"p":"org.apache.calcite.adapter.spark","c":"JdbcToSparkConverter","l":"implementSpark(SparkRel.Implementor)","u":"implementSpark(org.apache.calcite.adapter.spark.SparkRel.Implementor)"},{"p":"org.apache.calcite.adapter.spark","c":"SparkRel","l":"implementSpark(SparkRel.Implementor)","u":"implementSpark(org.apache.calcite.adapter.spark.SparkRel.Implementor)"},{"p":"org.apache.calcite.adapter.spark","c":"SparkRules.SparkCalc","l":"implementSpark(SparkRel.Implementor)","u":"implementSpark(org.apache.calcite.adapter.spark.SparkRel.Implementor)"},{"p":"org.apache.calcite.adapter.spark","c":"SparkRules.SparkValues","l":"implementSpark(SparkRel.Implementor)","u":"implementSpark(org.apache.calcite.adapter.spark.SparkRel.Implementor)"},{"p":"org.apache.calcite.sql","c":"SqlCollation.Coercibility","l":"IMPLICIT"},{"p":"org.apache.calcite.sql","c":"SqlCollation","l":"IMPLICIT"},{"p":"org.apache.calcite.sql.validate.implicit","c":"AbstractTypeCoercion","l":"implicitCast(RelDataType, SqlTypeFamily)","u":"implicitCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeFamily)"},{"p":"org.apache.calcite.plan","c":"RexImplicationChecker","l":"implies(RexNode, RexNode)","u":"implies(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.SubQueryType","l":"IN"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"IN"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"IN"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl.Status","l":"IN_PROGRESS"},{"p":"org.apache.calcite.rex","c":"RexSubQuery","l":"in(RelNode, ImmutableList<RexNode>)","u":"in(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"in(RelNode, Iterable<? extends RexNode>)","u":"in(org.apache.calcite.rel.RelNode,java.lang.Iterable)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"in(RexNode, Function<RelBuilder, RelNode>)","u":"in(org.apache.calcite.rex.RexNode,java.util.function.Function)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"in(RexNode, Iterable<? extends RexNode>)","u":"in(org.apache.calcite.rex.RexNode,java.lang.Iterable)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"in(RexNode, RexNode...)","u":"in(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode...)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"inBooleanFamily(RelDataType)","u":"inBooleanFamily(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rex","c":"RexUtil.RexFinder","l":"inCalc(Calc)","u":"inCalc(org.apache.calcite.rel.core.Calc)"},{"p":"org.apache.calcite.test.schemata.hr","c":"DepartmentPlus","l":"inceptionDate"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"inCharFamily(RelDataType)","u":"inCharFamily(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"inCharFamily(SqlTypeName)","u":"inCharFamily(org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"inCharOrBinaryFamilies(RelDataType)","u":"inCharOrBinaryFamilies(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql","c":"SqlUnpivot","l":"includeNulls"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateTableLike","l":"includingOptions"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"incompatibleCharset(String, String, String)","u":"incompatibleCharset(java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"incompatibleTypes()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"incompatibleTypesInList()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"incompatibleValueType(String)","u":"incompatibleValueType(java.lang.String)"},{"p":"org.apache.calcite.util","c":"ImmutableIntList","l":"incr(int)"},{"p":"org.apache.calcite.sql.validate","c":"SqlMonotonicity","l":"INCREASING"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"Increment"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"increment(Expression)","u":"increment(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"increment(Expression, Method)","u":"increment(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.util","c":"StackWriter","l":"INDENT"},{"p":"org.apache.calcite.util","c":"StackWriter","l":"INDENT_SPACE4"},{"p":"org.apache.calcite.util","c":"StackWriter","l":"INDENT_TAB"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"indentation()"},{"p":"org.apache.calcite.rex","c":"RexSlot","l":"index"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"Index"},{"p":"org.apache.calcite.schema","c":"Schema.TableType","l":"INDEX"},{"p":"org.apache.calcite.adapter.enumerable.impl","c":"WinAggResetContextImpl","l":"index()"},{"p":"org.apache.calcite.adapter.enumerable.impl","c":"WinAggResultContextImpl","l":"index()"},{"p":"org.apache.calcite.adapter.enumerable","c":"WinAggFrameContext","l":"index()"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbFilter","l":"indexCondition"},{"p":"org.apache.calcite.linq4j.tree","c":"IndexExpression","l":"IndexExpression(Expression, List<Expression>)","u":"%3Cinit%3E(org.apache.calcite.linq4j.tree.Expression,java.util.List)"},{"p":"org.apache.calcite.linq4j.tree","c":"IndexExpression","l":"indexExpressions"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"indexOf(int)"},{"p":"org.apache.calcite.util","c":"ImmutableIntList","l":"indexOf(int)"},{"p":"org.apache.calcite.sql.validate","c":"SqlNameMatcher","l":"indexOf(Iterable<String>, String)","u":"indexOf(java.lang.Iterable,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"ConsList","l":"indexOf(Object)","u":"indexOf(java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat1List","l":"indexOf(Object)","u":"indexOf(java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat2List","l":"indexOf(Object)","u":"indexOf(java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat3List","l":"indexOf(Object)","u":"indexOf(java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat4List","l":"indexOf(Object)","u":"indexOf(java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat5List","l":"indexOf(Object)","u":"indexOf(java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat6List","l":"indexOf(Object)","u":"indexOf(java.lang.Object)"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"indexOf(Object)","u":"indexOf(java.lang.Object)"},{"p":"org.apache.calcite.util","c":"ImmutableIntList","l":"indexOf(Object)","u":"indexOf(java.lang.Object)"},{"p":"org.apache.calcite.sql.util","c":"SqlBuilder","l":"indexOf(String)","u":"indexOf(java.lang.String)"},{"p":"org.apache.calcite.sql.util","c":"SqlBuilder","l":"indexOf(String, int)","u":"indexOf(java.lang.String,int)"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"indexOfDeep(List<? extends SqlNode>, SqlNode, Litmus)","u":"indexOfDeep(java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.runtime","c":"SpaceFillingCurve2D.IndexRangeOrdering","l":"IndexRangeOrdering()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"indexToLineCol(String, int)","u":"indexToLineCol(java.lang.String,int)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.Exists","l":"indicator"},{"p":"org.apache.calcite.rel.core","c":"Aggregate","l":"indicator"},{"p":"org.apache.calcite.rel.core","c":"Aggregate.Group","l":"induce(ImmutableBitSet, List<ImmutableBitSet>)","u":"induce(org.apache.calcite.util.ImmutableBitSet,java.util.List)"},{"p":"org.apache.calcite.rel.rules","c":"FilterJoinRule","l":"inferJoinEqualConditions(List<RexNode>, Join)","u":"inferJoinEqualConditions(java.util.List,org.apache.calcite.rel.core.Join)"},{"p":"org.apache.calcite.sql.type","c":"ExplicitOperandTypeInference","l":"inferOperandTypes(SqlCallBinding, RelDataType, RelDataType[])","u":"inferOperandTypes(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType[])"},{"p":"org.apache.calcite.sql.type","c":"SqlOperandTypeInference","l":"inferOperandTypes(SqlCallBinding, RelDataType, RelDataType[])","u":"inferOperandTypes(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType[])"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"inferReturnType(RelDataTypeFactory, List<RelDataType>)","u":"inferReturnType(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List)"},{"p":"org.apache.calcite.sql.fun","c":"SqlAbstractTimeFunction","l":"inferReturnType(SqlOperatorBinding)","u":"inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql.fun","c":"SqlArrayValueConstructor","l":"inferReturnType(SqlOperatorBinding)","u":"inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql.fun","c":"SqlBetweenOperator","l":"inferReturnType(SqlOperatorBinding)","u":"inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql.fun","c":"SqlCaseOperator","l":"inferReturnType(SqlOperatorBinding)","u":"inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql.fun","c":"SqlConvertFunction","l":"inferReturnType(SqlOperatorBinding)","u":"inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql.fun","c":"SqlDotOperator","l":"inferReturnType(SqlOperatorBinding)","u":"inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql.fun","c":"SqlItemOperator","l":"inferReturnType(SqlOperatorBinding)","u":"inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql.fun","c":"SqlLiteralChainOperator","l":"inferReturnType(SqlOperatorBinding)","u":"inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql.fun","c":"SqlMapValueConstructor","l":"inferReturnType(SqlOperatorBinding)","u":"inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql.fun","c":"SqlMultisetValueConstructor","l":"inferReturnType(SqlOperatorBinding)","u":"inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql.fun","c":"SqlOracleConvertFunction","l":"inferReturnType(SqlOperatorBinding)","u":"inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql.fun","c":"SqlRowOperator","l":"inferReturnType(SqlOperatorBinding)","u":"inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql.fun","c":"SqlTranslateFunction","l":"inferReturnType(SqlOperatorBinding)","u":"inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql","c":"SqlJdbcFunctionCall","l":"inferReturnType(SqlOperatorBinding)","u":"inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"inferReturnType(SqlOperatorBinding)","u":"inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql","c":"SqlTypeConstructorFunction","l":"inferReturnType(SqlOperatorBinding)","u":"inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql","c":"SqlUnnestOperator","l":"inferReturnType(SqlOperatorBinding)","u":"inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql","c":"SqlUnresolvedFunction","l":"inferReturnType(SqlOperatorBinding)","u":"inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql.type","c":"CursorReturnTypeInference","l":"inferReturnType(SqlOperatorBinding)","u":"inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql.type","c":"ExplicitReturnTypeInference","l":"inferReturnType(SqlOperatorBinding)","u":"inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql.type","c":"MatchReturnTypeInference","l":"inferReturnType(SqlOperatorBinding)","u":"inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql.type","c":"OrdinalReturnTypeInference","l":"inferReturnType(SqlOperatorBinding)","u":"inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql.type","c":"SqlReturnTypeInference","l":"inferReturnType(SqlOperatorBinding)","u":"inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql.type","c":"SqlReturnTypeInferenceChain","l":"inferReturnType(SqlOperatorBinding)","u":"inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeTransformCascade","l":"inferReturnType(SqlOperatorBinding)","u":"inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql.type","c":"TableFunctionReturnTypeInference","l":"inferReturnType(SqlOperatorBinding)","u":"inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.BadTableFunction","l":"inferReturnType(SqlOperatorBinding)","u":"inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.CompareStringsOrNumericValues","l":"inferReturnType(SqlOperatorBinding)","u":"inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.CompositeFunction","l":"inferReturnType(SqlOperatorBinding)","u":"inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.MapFunction","l":"inferReturnType(SqlOperatorBinding)","u":"inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.MyFunction","l":"inferReturnType(SqlOperatorBinding)","u":"inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.SplitFunction","l":"inferReturnType(SqlOperatorBinding)","u":"inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.StructuredFunction","l":"inferReturnType(SqlOperatorBinding)","u":"inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"inferUnknownTypes(RelDataType, SqlValidatorScope, SqlNode)","u":"inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"inferViewPredicates(Map<Integer, RexNode>, List<RexNode>, RexNode)","u":"inferViewPredicates(java.util.Map,java.util.List,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rex","c":"RexUtil.RexFinder","l":"inFilter(Filter)","u":"inFilter(org.apache.calcite.rel.core.Filter)"},{"p":"org.apache.calcite.test.schemata.orderstream","c":"InfiniteOrdersStreamTableFactory","l":"InfiniteOrdersStreamTableFactory()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.test.schemata.orderstream","c":"InfiniteOrdersTable","l":"InfiniteOrdersTable()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser.Type","l":"INFIX"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"INFIX_CAST"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser.Builder","l":"infix(Object, int, boolean)","u":"infix(java.lang.Object,int,boolean)"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser","l":"infix(Object, int, boolean)","u":"infix(java.lang.Object,int,boolean)"},{"p":"org.apache.calcite.util.trace","c":"CalciteLogger","l":"info(String)","u":"info(java.lang.String)"},{"p":"org.apache.calcite.util.trace","c":"CalciteLogger","l":"info(String, Object, Object)","u":"info(java.lang.String,java.lang.Object,java.lang.Object)"},{"p":"org.apache.calcite.util.trace","c":"CalciteLogger","l":"info(String, Object, Object, Object)","u":"info(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)"},{"p":"org.apache.calcite.util.trace","c":"CalciteLogger","l":"info(String, Object, Object, Object, Object)","u":"info(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)"},{"p":"org.apache.calcite.util.trace","c":"CalciteLogger","l":"info(String, Object...)","u":"info(java.lang.String,java.lang.Object...)"},{"p":"org.apache.calcite.sql","c":"SqlDialect.DatabaseProduct","l":"INFOBRIGHT"},{"p":"org.apache.calcite.sql.dialect","c":"InfobrightSqlDialect","l":"InfobrightSqlDialect(SqlDialect.Context)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect.Context)"},{"p":"org.apache.calcite.sql","c":"SqlDialect.DatabaseProduct","l":"INFORMIX"},{"p":"org.apache.calcite.sql.dialect","c":"InformixSqlDialect","l":"InformixSqlDialect(SqlDialect.Context)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect.Context)"},{"p":"org.apache.calcite.sql","c":"SqlDialect.DatabaseProduct","l":"INGRES"},{"p":"org.apache.calcite.sql.dialect","c":"IngresSqlDialect","l":"IngresSqlDialect(SqlDialect.Context)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect.Context)"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibrary","l":"inheritors()"},{"p":"org.apache.calcite.rel.hint","c":"RelHint","l":"inheritPath"},{"p":"org.apache.calcite.rel.hint","c":"RelHint.Builder","l":"inheritPath(Integer...)","u":"inheritPath(java.lang.Integer...)"},{"p":"org.apache.calcite.rel.hint","c":"RelHint.Builder","l":"inheritPath(Iterable<Integer>)","u":"inheritPath(java.lang.Iterable)"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.BigDecimalSum","l":"init()"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.DoubleSum","l":"init()"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.IntSum","l":"init()"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.LongSum","l":"init()"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.MaxBoolean","l":"init()"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.MinBoolean","l":"init()"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.NumericComparison","l":"init()"},{"p":"org.apache.calcite.runtime","c":"AccumOperation","l":"init()"},{"p":"org.apache.calcite.runtime","c":"CollectOperation","l":"init()"},{"p":"org.apache.calcite.runtime","c":"UnionOperation","l":"init()"},{"p":"org.apache.calcite.sql.util","c":"ReflectiveSqlOperatorTable","l":"init()"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader","l":"init()"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReaderDynamic","l":"init()"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReaderExtended","l":"init()"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReaderSimple","l":"init()"},{"p":"org.apache.calcite.test.catalog","c":"MustFilterMockCatalogReader","l":"init()"},{"p":"org.apache.calcite.util","c":"Smalls.MyStaticSumFunction","l":"init()"},{"p":"org.apache.calcite.util","c":"Smalls.MySum3","l":"init()"},{"p":"org.apache.calcite.util","c":"Smalls.MySumFunction","l":"init()"},{"p":"org.apache.calcite.util","c":"Smalls.MyThreeParamsSumFunctionWithFilter1","l":"init()"},{"p":"org.apache.calcite.util","c":"Smalls.MyThreeParamsSumFunctionWithFilter2","l":"init()"},{"p":"org.apache.calcite.util","c":"Smalls.MyTwoParamsSumFunctionFilter1","l":"init()"},{"p":"org.apache.calcite.util","c":"Smalls.MyTwoParamsSumFunctionFilter2","l":"init()"},{"p":"org.apache.calcite.util","c":"Smalls.SumFunctionBadIAdd","l":"init()"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl.CalcitePreparingStmt","l":"init(Class)","u":"init(java.lang.Class)"},{"p":"org.apache.calcite.prepare","c":"Prepare","l":"init(Class)","u":"init(java.lang.Class)"},{"p":"org.apache.calcite.rel.convert","c":"NoneConverter","l":"init(RelOptPlanner)","u":"init(org.apache.calcite.plan.RelOptPlanner)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"INITCAP"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"INITCAP"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"initcap(String)","u":"initcap(java.lang.String)"},{"p":"org.apache.calcite.rel.rules","c":"HyperGraph","l":"initEdgeBitMap(long)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQueryBase","l":"initialHandler(Class<H>)","u":"initialHandler(java.lang.Class)"},{"p":"org.apache.calcite.linq4j.tree","c":"DeclarationStatement","l":"initializer"},{"p":"org.apache.calcite.linq4j.tree","c":"FieldDeclaration","l":"initializer"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"initializerFactory"},{"p":"org.apache.calcite.schema.impl","c":"AggregateFunctionImpl","l":"initMethod"},{"p":"org.apache.calcite.util.mapping","c":"MappingType","l":"INJECTION"},{"p":"org.apache.calcite.rex","c":"RexUtil.RexFinder","l":"inJoin(Join)","u":"inJoin(org.apache.calcite.rel.core.Join)"},{"p":"org.apache.calcite.sql","c":"SqlPivot","l":"inList"},{"p":"org.apache.calcite.sql","c":"SqlUnpivot","l":"inList"},{"p":"org.apache.calcite.linq4j","c":"JoinType","l":"INNER"},{"p":"org.apache.calcite.rel.core","c":"JoinRelType","l":"INNER"},{"p":"org.apache.calcite.sql","c":"JoinType","l":"INNER"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbMethod","l":"INNODB_QUERYABLE_QUERY"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbRules.InnodbFilterRule","l":"InnodbFilterRule(InnodbRules.InnodbFilterRule.InnodbFilterRuleConfig)","u":"%3Cinit%3E(org.apache.calcite.adapter.innodb.InnodbRules.InnodbFilterRule.InnodbFilterRuleConfig)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbRules.InnodbProjectRule","l":"InnodbProjectRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbTable.InnodbQueryable","l":"InnodbQueryable(QueryProvider, SchemaPlus, InnodbTable, String)","u":"%3Cinit%3E(org.apache.calcite.linq4j.QueryProvider,org.apache.calcite.schema.SchemaPlus,org.apache.calcite.adapter.innodb.InnodbTable,java.lang.String)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbSchema","l":"InnodbSchema(List<String>, String)","u":"%3Cinit%3E(java.util.List,java.lang.String)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbSchemaFactory","l":"InnodbSchemaFactory()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbRules.InnodbSortFilterRule","l":"InnodbSortFilterRule(InnodbRules.InnodbSortFilterRule.InnodbSortFilterRuleConfig)","u":"%3Cinit%3E(org.apache.calcite.adapter.innodb.InnodbRules.InnodbSortFilterRule.InnodbSortFilterRuleConfig)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbRules.InnodbSortTableScanRule","l":"InnodbSortTableScanRule(InnodbRules.InnodbSortTableScanRule.InnodbSortTableScanRuleConfig)","u":"%3Cinit%3E(org.apache.calcite.adapter.innodb.InnodbRules.InnodbSortTableScanRule.InnodbSortTableScanRuleConfig)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbTable","l":"InnodbTable(InnodbSchema, String)","u":"%3Cinit%3E(org.apache.calcite.adapter.innodb.InnodbSchema,java.lang.String)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbTableScan","l":"InnodbTableScan(RelOptCluster, RelTraitSet, RelOptTable, InnodbTable, RelDataType, List<RelHint>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.plan.RelOptTable,org.apache.calcite.adapter.innodb.InnodbTable,org.apache.calcite.rel.type.RelDataType,java.util.List)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbToEnumerableConverter","l":"InnodbToEnumerableConverter(RelOptCluster, RelTraitSet, RelNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbToEnumerableConverterRule","l":"InnodbToEnumerableConverterRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.sql.validate.implicit","c":"TypeCoercion","l":"inOperationCoercion(SqlCallBinding)","u":"inOperationCoercion(org.apache.calcite.sql.SqlCallBinding)"},{"p":"org.apache.calcite.sql.validate.implicit","c":"TypeCoercionImpl","l":"inOperationCoercion(SqlCallBinding)","u":"inOperationCoercion(org.apache.calcite.sql.SqlCallBinding)"},{"p":"org.apache.calcite.schema","c":"Schema.TableType","l":"INOPERATIVE_VIEW"},{"p":"org.apache.calcite.rex","c":"RexUtil.RexFinder","l":"inProgram(RexProgram)","u":"inProgram(org.apache.calcite.rex.RexProgram)"},{"p":"org.apache.calcite.rex","c":"RexUtil.RexFinder","l":"inProject(Project)","u":"inProject(org.apache.calcite.rel.core.Project)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableSort","l":"input"},{"p":"org.apache.calcite.rel","c":"SingleRel","l":"input"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"INPUT_REF"},{"p":"org.apache.calcite.rel","c":"RelWriter","l":"input(String, RelNode)","u":"input(java.lang.String,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"inputArgumentsOfFunctionOutOfRange(String, Number, String)","u":"inputArgumentsOfFunctionOutOfRange(java.lang.String,java.lang.Number,java.lang.String)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.InputFinder","l":"InputFinder()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.InputFinder","l":"InputFinder(Set<RelDataTypeField>)","u":"%3Cinit%3E(java.util.Set)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.InputFinder","l":"InputFinder(Set<RelDataTypeField>, ImmutableBitSet)","u":"%3Cinit%3E(java.util.Set,org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexToLixTranslator.InputGetterImpl","l":"InputGetterImpl(Expression, PhysType)","u":"%3Cinit%3E(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexToLixTranslator.InputGetterImpl","l":"InputGetterImpl(List<Pair<Expression, PhysType>>)","u":"%3Cinit%3E(java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexToLixTranslator.InputGetterImpl","l":"InputGetterImpl(Map<Expression, PhysType>)","u":"%3Cinit%3E(java.util.Map)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.InputReferencedVisitor","l":"inputPosReferenced"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.InputReferencedVisitor","l":"InputReferencedVisitor()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.core","c":"SetOp","l":"inputs"},{"p":"org.apache.calcite.rel.mutable","c":"MutableSetOp","l":"inputs"},{"p":"org.apache.calcite.plan","c":"RelRule.OperandDetailBuilder","l":"inputs(RelRule.OperandTransform...)","u":"inputs(org.apache.calcite.plan.RelRule.OperandTransform...)"},{"p":"org.apache.calcite.rex","c":"RexChecker","l":"inputTypeList"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"inQuery()"},{"p":"org.apache.calcite.sql","c":"SqlWriter","l":"inQuery()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"inSameFamily(RelDataType, RelDataType)","u":"inSameFamily(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"inSameFamilyOrNull(RelDataType, RelDataType)","u":"inSameFamilyOrNull(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.core","c":"TableModify.Operation","l":"INSERT"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.JsonModifyMode","l":"INSERT"},{"p":"org.apache.calcite.sql","c":"SqlAccessEnum","l":"INSERT"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"INSERT"},{"p":"org.apache.calcite.sql.util","c":"SqlBuilder","l":"insert(int, String)","u":"insert(int,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"insertIntoAlwaysGenerated(String)","u":"insertIntoAlwaysGenerated(java.lang.String)"},{"p":"org.apache.calcite.util","c":"Permutation","l":"insertSource(int)"},{"p":"org.apache.calcite.util","c":"Permutation","l":"insertTarget(int)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableConvention","l":"INSTANCE"},{"p":"org.apache.calcite.interpreter","c":"BindableConvention","l":"INSTANCE"},{"p":"org.apache.calcite.interpreter","c":"InterpretableConvention","l":"INSTANCE"},{"p":"org.apache.calcite.rel.metadata","c":"NullSentinel","l":"INSTANCE"},{"p":"org.apache.calcite.statistic","c":"MapSqlStatisticProvider","l":"INSTANCE"},{"p":"org.apache.calcite.adapter.csv","c":"CsvSchemaFactory","l":"INSTANCE"},{"p":"org.apache.calcite.adapter.druid","c":"DruidTableFactory","l":"INSTANCE"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexImpTable","l":"INSTANCE"},{"p":"org.apache.calcite.adapter.file","c":"FileSchemaFactory","l":"INSTANCE"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeToEnumerableConverterRule","l":"INSTANCE"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcQueryProvider","l":"INSTANCE"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcSchema.Factory","l":"INSTANCE"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoToEnumerableConverterRule","l":"INSTANCE"},{"p":"org.apache.calcite.adapter.pig","c":"PigRelFactories.PigAggregateFactory","l":"INSTANCE"},{"p":"org.apache.calcite.adapter.pig","c":"PigRelFactories.PigFilterFactory","l":"INSTANCE"},{"p":"org.apache.calcite.adapter.pig","c":"PigRelFactories.PigJoinFactory","l":"INSTANCE"},{"p":"org.apache.calcite.adapter.pig","c":"PigRelFactories.PigTableScanFactory","l":"INSTANCE"},{"p":"org.apache.calcite.adapter.pig","c":"PigSchemaFactory","l":"INSTANCE"},{"p":"org.apache.calcite.adapter.pig","c":"PigToEnumerableConverterRule","l":"INSTANCE"},{"p":"org.apache.calcite.adapter.redis","c":"RedisTableFactory","l":"INSTANCE"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaColumnFactoryImpl","l":"INSTANCE"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaTableFactoryImpl","l":"INSTANCE"},{"p":"org.apache.calcite.linq4j.tree","c":"ConstantUntypedNull","l":"INSTANCE"},{"p":"org.apache.calcite.linq4j.util","c":"Compatible","l":"INSTANCE"},{"p":"org.apache.calcite.piglet","c":"PigToSqlAggregateRule","l":"INSTANCE"},{"p":"org.apache.calcite.plan","c":"ConventionTraitDef","l":"INSTANCE"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor.MatchFailed","l":"INSTANCE"},{"p":"org.apache.calcite.plan.volcano","c":"AbstractConverter.ExpandConversionRule","l":"INSTANCE"},{"p":"org.apache.calcite.rel.convert","c":"ConverterRule.Config","l":"INSTANCE"},{"p":"org.apache.calcite.rel.hint","c":"HintStrategyTable.HintErrorLogger","l":"INSTANCE"},{"p":"org.apache.calcite.rel.metadata","c":"DefaultRelMetadataProvider","l":"INSTANCE"},{"p":"org.apache.calcite.rel","c":"RelCollationTraitDef","l":"INSTANCE"},{"p":"org.apache.calcite.rel","c":"RelDistributionTraitDef","l":"INSTANCE"},{"p":"org.apache.calcite.rel.rules","c":"SpatialRules","l":"INSTANCE"},{"p":"org.apache.calcite.rel.rules","c":"TableScanRule","l":"INSTANCE"},{"p":"org.apache.calcite.rex","c":"RexUtil.SubQueryFinder","l":"INSTANCE"},{"p":"org.apache.calcite.runtime","c":"Unit","l":"INSTANCE"},{"p":"org.apache.calcite.runtime.variant","c":"VariantNull","l":"INSTANCE"},{"p":"org.apache.calcite.schema.impl","c":"AbstractSchema.Factory","l":"INSTANCE"},{"p":"org.apache.calcite.server","c":"ServerDdlExecutor","l":"INSTANCE"},{"p":"org.apache.calcite.sql.fun","c":"SqlCaseOperator","l":"INSTANCE"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperatorTableFactory","l":"INSTANCE"},{"p":"org.apache.calcite.sql.fun","c":"SqlLiteralAggFunction","l":"INSTANCE"},{"p":"org.apache.calcite.sql.fun","c":"SqlTrimFunction","l":"INSTANCE"},{"p":"org.apache.calcite.sql","c":"SqlDialectFactoryImpl","l":"INSTANCE"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize.SqlMatchRecognizeOperator","l":"INSTANCE"},{"p":"org.apache.calcite.sql","c":"SqlSelectOperator","l":"INSTANCE"},{"p":"org.apache.calcite.sql","c":"SqlSnapshot.SqlSnapshotOperator","l":"INSTANCE"},{"p":"org.apache.calcite.sql","c":"SqlSplittableAggFunction.CountSplitter","l":"INSTANCE"},{"p":"org.apache.calcite.sql","c":"SqlSplittableAggFunction.SelfSplitter","l":"INSTANCE"},{"p":"org.apache.calcite.sql","c":"SqlSplittableAggFunction.Sum0Splitter","l":"INSTANCE"},{"p":"org.apache.calcite.sql","c":"SqlSplittableAggFunction.SumSplitter","l":"INSTANCE"},{"p":"org.apache.calcite.sql.test","c":"SqlTestFactory","l":"INSTANCE"},{"p":"org.apache.calcite.sql2rel","c":"NullInitializerExpressionFactory","l":"INSTANCE"},{"p":"org.apache.calcite.sql2rel","c":"StandardConvertletTable","l":"INSTANCE"},{"p":"org.apache.calcite.util","c":"Compatible","l":"INSTANCE"},{"p":"org.apache.calcite.util","c":"SaffronProperties","l":"INSTANCE"},{"p":"org.apache.calcite.util","c":"Util.OverFinder","l":"INSTANCE"},{"p":"org.apache.calcite.util","c":"Smalls.MyDeterministicPlusFunction","l":"INSTANCE_COUNT"},{"p":"org.apache.calcite.util","c":"Smalls.MyPlusFunction","l":"INSTANCE_COUNT"},{"p":"org.apache.calcite.util","c":"Smalls.MyPlusInitFunction","l":"INSTANCE_COUNT"},{"p":"org.apache.calcite.adapter.cassandra","c":"CqlToSqlTypeConversionRules","l":"instance()"},{"p":"org.apache.calcite.adapter.innodb","c":"ColumnTypeToSqlTypeConversionRules","l":"instance()"},{"p":"org.apache.calcite.adapter.spark","c":"SparkHandlerImpl","l":"instance()"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"instance()"},{"p":"org.apache.calcite.materialize","c":"MaterializationService","l":"instance()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"instance()"},{"p":"org.apache.calcite.sql.fun","c":"OracleSqlOperatorTable","l":"instance()"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"instance()"},{"p":"org.apache.calcite.sql.type","c":"JavaToSqlTypeConversionRules","l":"instance()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeAssignmentRule","l":"instance()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeCoercionRule","l":"instance()"},{"p":"org.apache.calcite.sql.util","c":"SqlBasicVisitor.ArgHandlerImpl","l":"instance()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeMappingRules","l":"instance(boolean)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeCoercionRule","l":"instance(Map<SqlTypeName, ImmutableSet<SqlTypeName>>)","u":"instance(java.util.Map)"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"INSTR"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"INT"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"INT_TYPES"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema.IntAndString","l":"IntAndString(int, String)","u":"%3Cinit%3E(int,java.lang.String)"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema.BadType","l":"integer"},{"p":"org.apache.calcite.runtime.rtti","c":"RuntimeTypeInformation.RuntimeSqlTypeName","l":"INTEGER"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFamily","l":"INTEGER"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"INTEGER"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"INTEGER"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"INTEGER"},{"p":"org.apache.calcite.util","c":"JdbcType","l":"INTEGER"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"INTEGER_CAST"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"INTEGER_CAST_ROUNDING_MODE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"INTEGER_DECIMAL_CAST"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"INTEGER_DECIMAL_CAST_ROUNDING_MODE"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"INTEGER_INTEGER"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"INTEGER_NULLABLE"},{"p":"org.apache.calcite.util","c":"JdbcType","l":"INTEGER_NULLABLE"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"INTEGER_OVERFLOW"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"INTEGER_QUOTIENT_NULLABLE"},{"p":"org.apache.calcite.sql.test","c":"SqlTests","l":"INTEGER_TYPE_CHECKER"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"integerCast(Primitive, Object)","u":"integerCast(org.apache.calcite.linq4j.tree.Primitive,java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"integerCast(Primitive, Object, RoundingMode)","u":"integerCast(org.apache.calcite.linq4j.tree.Primitive,java.lang.Object,java.math.RoundingMode)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"integerDecimalCast(Number, int, int)","u":"integerDecimalCast(java.lang.Number,int,int)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"integerDecimalCast(Number, int, int, RoundingMode)","u":"integerDecimalCast(java.lang.Number,int,int,java.math.RoundingMode)"},{"p":"org.apache.calcite.util","c":"Version","l":"integers"},{"p":"org.apache.calcite.config","c":"CalciteSystemProperty","l":"INTEGRATION_TEST"},{"p":"org.apache.calcite.sql","c":"SqlDialect.DatabaseProduct","l":"INTERBASE"},{"p":"org.apache.calcite.sql.dialect","c":"InterbaseSqlDialect","l":"InterbaseSqlDialect(SqlDialect.Context)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect.Context)"},{"p":"org.apache.calcite.adapter.os","c":"OsQueryType","l":"INTERFACE_ADDRESSES"},{"p":"org.apache.calcite.adapter.os","c":"OsQueryType","l":"INTERFACE_DETAILS"},{"p":"org.apache.calcite.sql","c":"SqlSyntax","l":"INTERNAL"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"INTERNAL_TO_DATE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"INTERNAL_TO_TIME"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"INTERNAL_TO_TIMESTAMP"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"internal(String)","u":"internal(java.lang.String)"},{"p":"org.apache.calcite.interpreter","c":"InterpretableRel.InterpreterImplementor","l":"internalParameters"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"internalToDate(int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"internalToDate(Integer)","u":"internalToDate(java.lang.Integer)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"internalToTime(int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"internalToTime(Integer)","u":"internalToTime(java.lang.Integer)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"internalToTimestamp(long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"internalToTimestamp(Long)","u":"internalToTimestamp(java.lang.Long)"},{"p":"org.apache.calcite.interpreter","c":"InterpretableConverter","l":"InterpretableConverter(RelOptCluster, RelTraitSet, RelNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.interpreter","c":"Nodes.CoreCompiler","l":"interpreter"},{"p":"org.apache.calcite.rel.rules","c":"FilterTableScanRule.Config","l":"INTERPRETER"},{"p":"org.apache.calcite.rel.rules","c":"ProjectTableScanRule.Config","l":"INTERPRETER"},{"p":"org.apache.calcite.util","c":"Glossary","l":"INTERPRETER_PATTERN"},{"p":"org.apache.calcite.interpreter","c":"Interpreter","l":"Interpreter(DataContext, RelNode)","u":"%3Cinit%3E(org.apache.calcite.DataContext,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.interpreter","c":"InterpretableRel.InterpreterImplementor","l":"InterpreterImplementor(Compiler, CalcitePrepare.SparkHandler, DataContext)","u":"%3Cinit%3E(org.apache.calcite.interpreter.Compiler,org.apache.calcite.jdbc.CalcitePrepare.SparkHandler,org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"INTERSECT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"INTERSECT"},{"p":"org.apache.calcite.rel.rules","c":"UnionMergeRule.Config","l":"INTERSECT"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"INTERSECT"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"INTERSECT_ALL"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules","l":"INTERSECT_INSTANCE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"INTERSECT_MERGE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"INTERSECT_TO_DISTINCT"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"intersect(boolean)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"intersect(boolean, int)","u":"intersect(boolean,int)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"intersect(Enumerable<T>)","u":"intersect(org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"intersect(Enumerable<T>)","u":"intersect(org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"intersect(Enumerable<T>)","u":"intersect(org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"intersect(Enumerable<T>, boolean)","u":"intersect(org.apache.calcite.linq4j.Enumerable,boolean)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"intersect(Enumerable<T>, boolean)","u":"intersect(org.apache.calcite.linq4j.Enumerable,boolean)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"intersect(Enumerable<T>, boolean)","u":"intersect(org.apache.calcite.linq4j.Enumerable,boolean)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"intersect(Enumerable<T>, EqualityComparer<T>)","u":"intersect(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"intersect(Enumerable<T>, EqualityComparer<T>)","u":"intersect(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"intersect(Enumerable<T>, EqualityComparer<T>)","u":"intersect(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"intersect(Enumerable<T>, EqualityComparer<T>, boolean)","u":"intersect(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer,boolean)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"intersect(Enumerable<T>, EqualityComparer<T>, boolean)","u":"intersect(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer,boolean)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"intersect(Enumerable<T>, EqualityComparer<T>, boolean)","u":"intersect(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer,boolean)"},{"p":"","c":"","l":"intersect(Enumerable<TSource>)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"intersect(Enumerable<TSource>)","u":"intersect(org.apache.calcite.linq4j.Enumerable)"},{"p":"","c":"","l":"intersect(Enumerable<TSource>)"},{"p":"","c":"","l":"intersect(Enumerable<TSource>, boolean)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"intersect(Enumerable<TSource>, boolean)","u":"intersect(org.apache.calcite.linq4j.Enumerable,boolean)"},{"p":"","c":"","l":"intersect(Enumerable<TSource>, boolean)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"intersect(Enumerable<TSource>, Enumerable<TSource>)","u":"intersect(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"intersect(Enumerable<TSource>, Enumerable<TSource>, boolean)","u":"intersect(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.Enumerable,boolean)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"intersect(Enumerable<TSource>, Enumerable<TSource>, EqualityComparer<TSource>)","u":"intersect(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"intersect(Enumerable<TSource>, Enumerable<TSource>, EqualityComparer<TSource>, boolean)","u":"intersect(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer,boolean)"},{"p":"","c":"","l":"intersect(Enumerable<TSource>, EqualityComparer<TSource>)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"intersect(Enumerable<TSource>, EqualityComparer<TSource>)","u":"intersect(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"","c":"","l":"intersect(Enumerable<TSource>, EqualityComparer<TSource>)"},{"p":"","c":"","l":"intersect(Enumerable<TSource>, EqualityComparer<TSource>, boolean)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"intersect(Enumerable<TSource>, EqualityComparer<TSource>, boolean)","u":"intersect(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer,boolean)"},{"p":"","c":"","l":"intersect(Enumerable<TSource>, EqualityComparer<TSource>, boolean)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet.Builder","l":"intersect(ImmutableBitSet)","u":"intersect(org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"intersect(ImmutableBitSet)","u":"intersect(org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"intersect(Queryable<T>, Enumerable<T>)","u":"intersect(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"intersect(Queryable<T>, Enumerable<T>)","u":"intersect(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"intersect(Queryable<T>, Enumerable<T>)","u":"intersect(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"intersect(Queryable<T>, Enumerable<T>, boolean)","u":"intersect(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable,boolean)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"intersect(Queryable<T>, Enumerable<T>, boolean)","u":"intersect(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable,boolean)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"intersect(Queryable<T>, Enumerable<T>, EqualityComparer<T>)","u":"intersect(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"intersect(Queryable<T>, Enumerable<T>, EqualityComparer<T>)","u":"intersect(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"intersect(Queryable<T>, Enumerable<T>, EqualityComparer<T>)","u":"intersect(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"intersect(Queryable<T>, Enumerable<T>, EqualityComparer<T>, boolean)","u":"intersect(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer,boolean)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"intersect(Queryable<T>, Enumerable<T>, EqualityComparer<T>, boolean)","u":"intersect(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer,boolean)"},{"p":"org.apache.calcite.rel.core","c":"Intersect","l":"Intersect(RelInput)","u":"%3Cinit%3E(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel.core","c":"Intersect","l":"Intersect(RelOptCluster, RelTraitSet, List<RelHint>, List<RelNode>, boolean)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,java.util.List,boolean)"},{"p":"org.apache.calcite.rel.core","c":"Intersect","l":"Intersect(RelOptCluster, RelTraitSet, List<RelNode>, boolean)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,boolean)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"INTERSECTION"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"INTERSECTION"},{"p":"org.apache.calcite.util","c":"Util","l":"intersects(Collection<E>, Collection<E>)","u":"intersects(java.util.Collection,java.util.Collection)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"intersects(ImmutableBitSet)","u":"intersects(org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.rel.rules","c":"IntersectToDistinctRule","l":"IntersectToDistinctRule(Class<? extends Intersect>, RelBuilderFactory)","u":"%3Cinit%3E(java.lang.Class,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"IntersectToDistinctRule","l":"IntersectToDistinctRule(IntersectToDistinctRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.IntersectToDistinctRule.Config)"},{"p":"org.apache.calcite.rel.core","c":"Match","l":"interval"},{"p":"org.apache.calcite.rel.mutable","c":"MutableMatch","l":"interval"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"INTERVAL"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"INTERVAL"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"INTERVAL"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"INTERVAL_DATETIME"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"INTERVAL_DAY"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"INTERVAL_DAY_HOUR"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"INTERVAL_DAY_MINUTE"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"INTERVAL_DAY_SECOND"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFamily","l":"INTERVAL_DAY_TIME"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"INTERVAL_DAY_TIME_TO_STRING"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"INTERVAL_HOUR"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"INTERVAL_HOUR_MINUTE"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"INTERVAL_HOUR_SECOND"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"INTERVAL_INTERVAL"},{"p":"org.apache.calcite.runtime.rtti","c":"RuntimeTypeInformation.RuntimeSqlTypeName","l":"INTERVAL_LONG"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"INTERVAL_MINUTE"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"INTERVAL_MINUTE_SECOND"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"INTERVAL_MONTH"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"INTERVAL_NUMERIC"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"INTERVAL_QUALIFIER"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"INTERVAL_SAME_SAME"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"INTERVAL_SECOND"},{"p":"org.apache.calcite.runtime.rtti","c":"RuntimeTypeInformation.RuntimeSqlTypeName","l":"INTERVAL_SHORT"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"INTERVAL_TYPES"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"INTERVAL_YEAR"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFamily","l":"INTERVAL_YEAR_MONTH"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"INTERVAL_YEAR_MONTH"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"INTERVAL_YEAR_MONTH_TO_STRING"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"interval(Iterable<TimeUnitRange>)","u":"interval(java.lang.Iterable)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"intervalFieldExceedsPrecision(Number, String)","u":"intervalFieldExceedsPrecision(java.lang.Number,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"intervalFractionalSecondPrecisionOutOfRange(int, String)","u":"intervalFractionalSecondPrecisionOutOfRange(int,java.lang.String)"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"INTERVALINTERVAL_INTERVALDATETIME"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"intervalMustBeNonNegative(String)","u":"intervalMustBeNonNegative(java.lang.String)"},{"p":"org.apache.calcite.sql.type","c":"IntervalSqlType","l":"IntervalSqlType(RelDataTypeSystem, SqlIntervalQualifier, boolean)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataTypeSystem,org.apache.calcite.sql.SqlIntervalQualifier,boolean)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"intervalStartPrecisionOutOfRange(int, String)","u":"intervalStartPrecisionOutOfRange(int,java.lang.String)"},{"p":"org.apache.calcite.test","c":"IntervalTest","l":"IntervalTest(IntervalTest.Fixture)","u":"%3Cinit%3E(org.apache.calcite.test.IntervalTest.Fixture)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"intervalToMillis(SqlIntervalLiteral.IntervalValue)","u":"intervalToMillis(org.apache.calcite.sql.SqlIntervalLiteral.IntervalValue)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"intervalToMillis(String, SqlIntervalQualifier)","u":"intervalToMillis(java.lang.String,org.apache.calcite.sql.SqlIntervalQualifier)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"intervalToMonths(SqlIntervalLiteral.IntervalValue)","u":"intervalToMonths(org.apache.calcite.sql.SqlIntervalLiteral.IntervalValue)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"intervalToMonths(String, SqlIntervalQualifier)","u":"intervalToMonths(java.lang.String,org.apache.calcite.sql.SqlIntervalQualifier)"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema.IntHolder","l":"IntHolder(int)","u":"%3Cinit%3E(int)"},{"p":"org.apache.calcite.util","c":"IntList","l":"IntList()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"INTO"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"into(C)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"into(C)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"into(Enumerable<T>, C)","u":"into(org.apache.calcite.linq4j.Enumerable,C)"},{"p":"org.apache.calcite.util.mapping","c":"IntPair","l":"IntPair(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"org.apache.calcite.rel.convert","c":"ConverterRule.Config","l":"inTrait()"},{"p":"org.apache.calcite.rel.convert","c":"ConverterImpl","l":"inTraits"},{"p":"org.apache.calcite.test","c":"Matchers","l":"inTree(String)","u":"inTree(java.lang.String)"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"intRelDataType"},{"p":"org.apache.calcite.util","c":"Smalls.IntString","l":"IntString(int, String)","u":"%3Cinit%3E(int,java.lang.String)"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.IntSum","l":"IntSum()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"intValue(boolean)"},{"p":"org.apache.calcite.rex","c":"RexLiteral","l":"intValue(RexNode)","u":"intValue(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"INVALID_ARGUMENTS_NUMBER"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"INVALID_ARGUMENTS_TYPE_VALIDATION_ERROR"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"INVALID_CHAR_MESSAGE"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"invalidArgCount(String, int)","u":"invalidArgCount(java.lang.String,int)"},{"p":"org.apache.calcite.plan","c":"RelOptCluster","l":"invalidateMetadataQuery()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"invalidBoolean(String)","u":"invalidBoolean(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"invalidCharacterForCast(String)","u":"invalidCharacterForCast(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"invalidCompare(String, String, String, String)","u":"invalidCompare(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.rel","c":"RelValidityChecker","l":"invalidCount()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"invalidInputForExistsNode(String, String)","u":"invalidInputForExistsNode(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"invalidInputForExtractValue(String, String)","u":"invalidInputForExtractValue(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"invalidInputForExtractXml(String, String)","u":"invalidInputForExtractXml(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"invalidInputForJsonDepth(String)","u":"invalidInputForJsonDepth(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"invalidInputForJsonInsert(String, String)","u":"invalidInputForJsonInsert(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"invalidInputForJsonKeys(String)","u":"invalidInputForJsonKeys(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"invalidInputForJsonLength(String)","u":"invalidInputForJsonLength(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"invalidInputForJsonRemove(String, String)","u":"invalidInputForJsonRemove(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"invalidInputForJsonReplace(String, String)","u":"invalidInputForJsonReplace(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"invalidInputForJsonSet(String, String)","u":"invalidInputForJsonSet(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"invalidInputForJsonStorageSize(String)","u":"invalidInputForJsonStorageSize(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"invalidInputForJsonType(String)","u":"invalidInputForJsonType(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"invalidInputForRegexpReplace(String)","u":"invalidInputForRegexpReplace(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"invalidInputForXmlTransform(String)","u":"invalidInputForXmlTransform(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"invalidIntegerInputForRegexpFunctions(String, String, String)","u":"invalidIntegerInputForRegexpFunctions(java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"invalidLiteral(String, String)","u":"invalidLiteral(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"invalidOrderBy(int, String)","u":"invalidOrderBy(int,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"invalidOrderByPos()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"invalidPartitionKeys(int, String)","u":"invalidPartitionKeys(int,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"invalidPrecisionForDecimalType(int, int)","u":"invalidPrecisionForDecimalType(int,int)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"invalidRegexInputForRegexpFunctions(String, String)","u":"invalidRegexInputForRegexpFunctions(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.rel","c":"InvalidRelException","l":"InvalidRelException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.rel","c":"InvalidRelException","l":"InvalidRelException(String, Throwable)","u":"%3Cinit%3E(java.lang.String,java.lang.Throwable)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"invalidReplacePatternForRegexpReplace(String)","u":"invalidReplacePatternForRegexpReplace(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"invalidSampleSize()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"invalidScaleForDecimalType(int, int, int)","u":"invalidScaleForDecimalType(int,int,int)"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.InvalidTableFunction","l":"InvalidTableFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"invalidTimeFrame(String)","u":"invalidTimeFrame(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"invalidTypesForArithmetic(String, String, String)","u":"invalidTypesForArithmetic(java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"invalidTypesForComparison(String, String, String)","u":"invalidTypesForComparison(java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"DeterministicCodeOptimizer","l":"inventFieldName(Expression)","u":"inventFieldName(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.util.mapping","c":"MappingType","l":"INVERSE_FUNCTION"},{"p":"org.apache.calcite.util.mapping","c":"MappingType","l":"INVERSE_INJECTION"},{"p":"org.apache.calcite.util.mapping","c":"MappingType","l":"INVERSE_PARTIAL_FUNCTION"},{"p":"org.apache.calcite.util.mapping","c":"MappingType","l":"INVERSE_PARTIAL_INJECTION"},{"p":"org.apache.calcite.util.mapping","c":"MappingType","l":"INVERSE_SURJECTION"},{"p":"org.apache.calcite.util.mapping","c":"AbstractSourceMapping","l":"inverse()"},{"p":"org.apache.calcite.util.mapping","c":"AbstractTargetMapping","l":"inverse()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.IdentityMapping","l":"inverse()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.OverridingSourceMapping","l":"inverse()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.OverridingTargetMapping","l":"inverse()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.PartialMapping","l":"inverse()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.SourceMapping","l":"inverse()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.TargetMapping","l":"inverse()"},{"p":"org.apache.calcite.util.mapping","c":"MappingType","l":"inverse()"},{"p":"org.apache.calcite.util","c":"Permutation","l":"inverse()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings","l":"invert(Iterable<IntPair>)","u":"invert(java.lang.Iterable)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings","l":"invert(Iterator<IntPair>)","u":"invert(java.util.Iterator)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings","l":"invert(Mapping)","u":"invert(org.apache.calcite.util.mapping.Mapping)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"invert(RexBuilder, RexCall)","u":"invert(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall)"},{"p":"org.apache.calcite.linq4j.tree","c":"InvocationExpression","l":"InvocationExpression(ExpressionType, Class)","u":"%3Cinit%3E(org.apache.calcite.linq4j.tree.ExpressionType,java.lang.Class)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"Invoke"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"invoke(Expression, Expression...)","u":"invoke(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression...)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"invoke(Expression, Iterable<? extends Expression>)","u":"invoke(org.apache.calcite.linq4j.tree.Expression,java.lang.Iterable)"},{"p":"org.apache.calcite.util","c":"BarfingInvocationHandler","l":"invoke(Object, Method, Object[])","u":"invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"},{"p":"org.apache.calcite.util","c":"DelegatingInvocationHandler","l":"invoke(Object, Method, Object[])","u":"invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"},{"p":"org.apache.calcite.util","c":"ReflectUtil.MethodDispatcher","l":"invoke(Object...)","u":"invoke(java.lang.Object...)"},{"p":"org.apache.calcite.util","c":"ReflectiveVisitDispatcher","l":"invokeVisitor(R, E, String)","u":"invokeVisitor(R,E,java.lang.String)"},{"p":"org.apache.calcite.util","c":"ReflectUtil","l":"invokeVisitor(ReflectiveVisitor, Object, Class, String)","u":"invokeVisitor(org.apache.calcite.util.ReflectiveVisitor,java.lang.Object,java.lang.Class,java.lang.String)"},{"p":"org.apache.calcite.rel.metadata","c":"RelColumnMapping","l":"iOutputColumn"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"IS_A_SET"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"IS_A_SET"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"IS_DIFFERENT_FROM"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"IS_DISTINCT_FROM"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"IS_DISTINCT_FROM"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"IS_EMPTY"},{"p":"org.apache.calcite.rel.core","c":"Values","l":"IS_EMPTY"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"IS_EMPTY"},{"p":"org.apache.calcite.rel.core","c":"Values","l":"IS_EMPTY_J"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"IS_FALSE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"IS_FALSE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"IS_INF"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"IS_INF"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"IS_JSON_ARRAY"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"IS_JSON_ARRAY"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"IS_JSON_OBJECT"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"IS_JSON_OBJECT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"IS_JSON_SCALAR"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"IS_JSON_SCALAR"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"IS_JSON_VALUE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"IS_JSON_VALUE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"IS_MEASURE"},{"p":"org.apache.calcite.sql.util","c":"ReflectiveSqlOperatorTable","l":"IS_NAME"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"IS_NAN"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"IS_NAN"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"IS_NOT_A_SET"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"IS_NOT_DISTINCT_FROM"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"IS_NOT_DISTINCT_FROM"},{"p":"org.apache.calcite.rel.core","c":"Values","l":"IS_NOT_EMPTY"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"IS_NOT_EMPTY"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"IS_NOT_FALSE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"IS_NOT_FALSE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"IS_NOT_FALSE"},{"p":"org.apache.calcite.rel.core","c":"Aggregate","l":"IS_NOT_GRAND_TOTAL"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"IS_NOT_JSON_ARRAY"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"IS_NOT_JSON_OBJECT"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"IS_NOT_JSON_SCALAR"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"IS_NOT_JSON_VALUE"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexImpTable.NullAs","l":"IS_NOT_NULL"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"IS_NOT_NULL"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"IS_NOT_NULL"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"IS_NOT_TRUE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"IS_NOT_TRUE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"IS_NOT_UNKNOWN"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexImpTable.NullAs","l":"IS_NULL"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"IS_NULL"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"IS_NULL"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"IS_PHASE_TRANSITION"},{"p":"org.apache.calcite.rel.core","c":"Aggregate","l":"IS_SIMPLE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"IS_TRUE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"IS_TRUE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"IS_TRUE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"IS_UNKNOWN"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"IS_UNKNOWN"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"is(Type)","u":"is(java.lang.reflect.Type)"},{"p":"org.apache.calcite.rex","c":"RexNode","l":"isA(Collection<SqlKind>)","u":"isA(java.util.Collection)"},{"p":"org.apache.calcite.util.mapping","c":"MappingType","l":"isA(MappingType)","u":"isA(org.apache.calcite.util.mapping.MappingType)"},{"p":"org.apache.calcite.sql","c":"SqlNode","l":"isA(Set<SqlKind>)","u":"isA(java.util.Set)"},{"p":"org.apache.calcite.rex","c":"RexNode","l":"isA(SqlKind)","u":"isA(org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Config","l":"isAddJsonTypeOperatorEnabled()"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"isAggregate(Matcher<Boolean>)","u":"isAggregate(org.hamcrest.Matcher)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"isAggregate(SqlNode)","u":"isAggregate(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"isAggregate(SqlNode)","u":"isAggregate(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"isAggregate(SqlSelect)","u":"isAggregate(org.apache.calcite.sql.SqlSelect)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"isAggregate(SqlSelect)","u":"isAggregate(org.apache.calcite.sql.SqlSelect)"},{"p":"org.apache.calcite.sql","c":"SqlAggFunction","l":"isAggregator()"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"isAggregator()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableSetOp","l":"isAll()"},{"p":"org.apache.calcite.sql","c":"SqlSetOperator","l":"isAll()"},{"p":"org.apache.calcite.util","c":"Sarg","l":"isAll()"},{"p":"org.apache.calcite.rel.rules","c":"JoinAssociateRule.Config","l":"isAllowAlwaysTrueCondition()"},{"p":"org.apache.calcite.rel.rules","c":"JoinCommuteRule.Config","l":"isAllowAlwaysTrueCondition()"},{"p":"org.apache.calcite.rel.rules","c":"AggregateJoinTransposeRule.Config","l":"isAllowFunctions()"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"isAllowPartial()"},{"p":"org.apache.calcite.rel.core","c":"Match","l":"isAllRows()"},{"p":"org.apache.calcite.test","c":"Matchers","l":"isAlmost(double)"},{"p":"org.apache.calcite.rex","c":"RexCall","l":"isAlwaysFalse()"},{"p":"org.apache.calcite.rex","c":"RexLiteral","l":"isAlwaysFalse()"},{"p":"org.apache.calcite.rex","c":"RexNode","l":"isAlwaysFalse()"},{"p":"org.apache.calcite.materialize","c":"Lattice","l":"isAlwaysMeasure(Lattice.Column)","u":"isAlwaysMeasure(org.apache.calcite.materialize.Lattice.Column)"},{"p":"org.apache.calcite.rel.core","c":"Window.Group","l":"isAlwaysNonEmpty()"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"isAlwaysNonEmpty()"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"isAlwaysNonEmpty(RexWindowBound, RexWindowBound)","u":"isAlwaysNonEmpty(org.apache.calcite.rex.RexWindowBound,org.apache.calcite.rex.RexWindowBound)"},{"p":"org.apache.calcite.rex","c":"RexCall","l":"isAlwaysTrue()"},{"p":"org.apache.calcite.rex","c":"RexLiteral","l":"isAlwaysTrue()"},{"p":"org.apache.calcite.rex","c":"RexNode","l":"isAlwaysTrue()"},{"p":"org.apache.calcite.sql.pretty","c":"SqlFormatOptions","l":"isAlwaysUseParentheses()"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"isAlwaysUseParentheses()"},{"p":"org.apache.calcite.sql","c":"SqlWriter","l":"isAlwaysUseParentheses()"},{"p":"org.apache.calcite.rel.rel2sql","c":"RelToSqlConverter","l":"isAnon()"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor","l":"isAnon()"},{"p":"org.apache.calcite.sql.validate","c":"SqlAbstractConformance","l":"isApplyAllowed()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformance","l":"isApplyAllowed()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"isApplyAllowed()"},{"p":"org.apache.calcite.sql.validate","c":"SqlDelegatingConformance","l":"isApplyAllowed()"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"isApproximate()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"isApproximateNumeric(RelDataType)","u":"isApproximateNumeric(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.schema","c":"FunctionContext","l":"isArgumentConstant(int)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"isArray(RelDataType)","u":"isArray(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.linq4j.tree","c":"Types","l":"isArray(Type)","u":"isArray(java.lang.reflect.Type)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"isASet(Collection)","u":"isASet(java.util.Collection)"},{"p":"org.apache.calcite.linq4j.tree","c":"Types","l":"isAssignableFrom(Type, Type)","u":"isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.Type)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"isAtomic(RelDataType)","u":"isAtomic(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"isAtomic(RexNode)","u":"isAtomic(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.type","c":"DelegatingTypeSystem","l":"isAutoincrement(SqlTypeName)","u":"isAutoincrement(org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystem","l":"isAutoincrement(SqlTypeName)","u":"isAutoincrement(org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystemImpl","l":"isAutoincrement(SqlTypeName)","u":"isAutoincrement(org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.sql.validate","c":"SqlAbstractConformance","l":"isBangEqualAllowed()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformance","l":"isBangEqualAllowed()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"isBangEqualAllowed()"},{"p":"org.apache.calcite.sql.validate","c":"SqlDelegatingConformance","l":"isBangEqualAllowed()"},{"p":"org.apache.calcite.plan","c":"RelOptListener.RuleAttemptedEvent","l":"isBefore()"},{"p":"org.apache.calcite.schema.impl","c":"LongSchemaVersion","l":"isBefore(SchemaVersion)","u":"isBefore(org.apache.calcite.schema.SchemaVersion)"},{"p":"org.apache.calcite.schema","c":"SchemaVersion","l":"isBefore(SchemaVersion)","u":"isBefore(org.apache.calcite.schema.SchemaVersion)"},{"p":"org.apache.calcite.plan","c":"RelOptSamplingParameters","l":"isBernoulli()"},{"p":"org.apache.calcite.sql","c":"SqlSampleSpec.SqlTableSampleSpec","l":"isBernoulli()"},{"p":"org.apache.calcite.util.mapping","c":"MappingType","l":"isBijection()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"isBinary(RelDataType)","u":"isBinary(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"isBoolean(RelDataType)","u":"isBoolean(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"isBoundedVariableWidth(RelDataType)","u":"isBoundedVariableWidth(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"isBox(Type)","u":"isBox(java.lang.reflect.Type)"},{"p":"org.apache.calcite.rel.core","c":"Project","l":"isBoxed()"},{"p":"org.apache.calcite.jdbc","c":"CalciteRootSchema","l":"isCacheEnabled()"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"isCacheEnabled()"},{"p":"org.apache.calcite.schema","c":"SchemaPlus","l":"isCacheEnabled()"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture.MetadataConfig","l":"isCaching"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture.MetadataConfig","l":"isCaching()"},{"p":"org.apache.calcite.util.format.postgresql","c":"DateCalendarEnum","l":"isCalendarCompatible(DateCalendarEnum)","u":"isCalendarCompatible(org.apache.calcite.util.format.postgresql.DateCalendarEnum)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"isCallTo(RexNode, SqlOperator)","u":"isCallTo(org.apache.calcite.rex.RexNode,org.apache.calcite.sql.SqlOperator)"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"isCallTo(SqlNode, SqlOperator)","u":"isCallTo(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlOperator)"},{"p":"org.apache.calcite.util","c":"CancelFlag","l":"isCancelRequested()"},{"p":"org.apache.calcite.sql.pretty","c":"SqlFormatOptions","l":"isCaseClausesOnNewLines()"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"isCasePredicate(RexCall, int)","u":"isCasePredicate(org.apache.calcite.rex.RexCall,int)"},{"p":"org.apache.calcite.prepare","c":"CalciteCatalogReader","l":"isCaseSensitive()"},{"p":"org.apache.calcite.sql.fun","c":"SqlLikeOperator","l":"isCaseSensitive()"},{"p":"org.apache.calcite.sql.fun","c":"SqlPosixRegexOperator","l":"isCaseSensitive()"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"isCaseSensitive()"},{"p":"org.apache.calcite.sql.validate","c":"SqlNameMatcher","l":"isCaseSensitive()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorCatalogReader","l":"isCaseSensitive()"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader","l":"isCaseSensitive()"},{"p":"org.apache.calcite.rel.type","c":"DelegatingTypeSystem","l":"isCaseSensitive(SqlTypeName)","u":"isCaseSensitive(org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystem","l":"isCaseSensitive(SqlTypeName)","u":"isCaseSensitive(org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystemImpl","l":"isCaseSensitive(SqlTypeName)","u":"isCaseSensitive(org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"isCharacter(RelDataType)","u":"isCharacter(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.test","c":"Matchers","l":"isCharset(String)","u":"isCharset(java.lang.String)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"isCharTypeComparable(List<RelDataType>)","u":"isCharTypeComparable(java.util.List)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"isCharTypeComparable(SqlCallBinding, List<SqlNode>, boolean)","u":"isCharTypeComparable(org.apache.calcite.sql.SqlCallBinding,java.util.List,boolean)"},{"p":"org.apache.calcite.sql.validate","c":"ListScope","l":"isChildNullable(int)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlFormatOptions","l":"isClauseStartsLine()"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"isClauseStartsLine()"},{"p":"org.apache.calcite.sql","c":"SqlWriter","l":"isClauseStartsLine()"},{"p":"org.apache.calcite.rel.rules","c":"CoerceInputsRule.Config","l":"isCoerceNames()"},{"p":"org.apache.calcite.rel","c":"RelRoot","l":"isCollationTrivial()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"isCollection(RelDataType)","u":"isCollection(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"isComparable(RelDataType, RelDataType)","u":"isComparable(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.util.format.postgresql","c":"ChronoUnitEnum","l":"isCompatible(Set<ChronoUnitEnum>)","u":"isCompatible(java.util.Set)"},{"p":"org.apache.calcite.util","c":"Sarg","l":"isComplementedPoints()"},{"p":"org.apache.calcite.adapter.druid","c":"DruidType","l":"isComplex()"},{"p":"org.apache.calcite.adapter.druid","c":"DruidTable","l":"isComplexMetric(String)","u":"isComplexMetric(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlIdentifier","l":"isComponentQuoted(int)"},{"p":"org.apache.calcite.linq4j.tree","c":"DeterministicCodeOptimizer","l":"isConstant(Expression)","u":"isConstant(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"ClassDeclarationFinder","l":"isConstant(Expression)","u":"isConstant(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"ClassDeclarationFinder","l":"isConstant(Iterable<? extends Expression>)","u":"isConstant(java.lang.Iterable)"},{"p":"org.apache.calcite.rex","c":"RexProgram","l":"isConstant(RexNode)","u":"isConstant(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"isConstant(RexNode)","u":"isConstant(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"isConstantNull(Expression)","u":"isConstantNull(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"DeterministicCodeOptimizer","l":"isConstructorDeterministic(NewExpression)","u":"isConstructorDeterministic(org.apache.calcite.linq4j.tree.NewExpression)"},{"p":"org.apache.calcite.rel.rules","c":"FilterProjectTransposeRule.Config","l":"isCopyFilter()"},{"p":"org.apache.calcite.rel.rules","c":"FilterProjectTransposeRule.Config","l":"isCopyProject()"},{"p":"org.apache.calcite.sql","c":"SqlCall","l":"isCountStar()"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Config","l":"isCreateValuesRel()"},{"p":"org.apache.calcite.rex","c":"RexWindowBound","l":"isCurrentRow()"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"isCurrentRow(SqlNode)","u":"isCurrentRow(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlIntervalQualifier","l":"isDate()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"isDate(RelDataType)","u":"isDate(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"isDatetime(RelDataType)","u":"isDatetime(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest","l":"isDdl()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"isDecimal(RelDataType)","u":"isDecimal(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.test","c":"ResultCheckers","l":"isDecimal(String)","u":"isDecimal(java.lang.String)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Config","l":"isDecorrelationEnabled()"},{"p":"org.apache.calcite.sql.validate","c":"SqlMonotonicity","l":"isDecreasing()"},{"p":"org.apache.calcite.plan","c":"RelTrait","l":"isDefault()"},{"p":"org.apache.calcite.plan","c":"RelTraitSet","l":"isDefault()"},{"p":"org.apache.calcite.config","c":"NullCollation","l":"isDefaultOrder(boolean, boolean)","u":"isDefaultOrder(boolean,boolean)"},{"p":"org.apache.calcite.plan","c":"RelTraitSet","l":"isDefaultSansConvention()"},{"p":"org.apache.calcite.util","c":"Util","l":"isDefinitelyDistinctAndNonNull(List<? extends E>)","u":"isDefinitelyDistinctAndNonNull(java.util.List)"},{"p":"org.apache.calcite.rel.core","c":"TableModify","l":"isDelete()"},{"p":"org.apache.calcite.plan.volcano","c":"RelSubset","l":"isDelivered()"},{"p":"org.apache.calcite.rel.metadata","c":"RelColumnOrigin","l":"isDerived()"},{"p":"org.apache.calcite.rel","c":"RelFieldCollation.Direction","l":"isDescending()"},{"p":"org.apache.calcite.sql.fun","c":"SqlRandIntegerFunction","l":"isDeterministic()"},{"p":"org.apache.calcite.sql.fun","c":"SqlSequenceValueOperator","l":"isDeterministic()"},{"p":"org.apache.calcite.sql","c":"SqlBasicFunction","l":"isDeterministic()"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"isDeterministic()"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.MyAvgAggFunction","l":"isDeterministic()"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"isDeterministic(RexNode)","u":"isDeterministic(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"isDistinct()"},{"p":"org.apache.calcite.rex","c":"RexOver","l":"isDistinct()"},{"p":"org.apache.calcite.sql","c":"SqlSelect","l":"isDistinct()"},{"p":"org.apache.calcite.sql","c":"SqlSetOperator","l":"isDistinct()"},{"p":"org.apache.calcite.util","c":"Util","l":"isDistinct(List<E>)","u":"isDistinct(java.util.List)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"isDistinctFrom(RexBuilder, RexNode, RexNode, boolean)","u":"isDistinctFrom(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,boolean)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"isDistinctFrom(RexNode, RexNode)","u":"isDistinctFrom(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.prepare","c":"Prepare.PreparedResultImpl","l":"isDml"},{"p":"org.apache.calcite.prepare","c":"Prepare.PreparedExplain","l":"isDml()"},{"p":"org.apache.calcite.prepare","c":"Prepare.PreparedResult","l":"isDml()"},{"p":"org.apache.calcite.prepare","c":"Prepare.PreparedResultImpl","l":"isDml()"},{"p":"org.apache.calcite.sql.fun","c":"SqlAbstractTimeFunction","l":"isDynamicFunction()"},{"p":"org.apache.calcite.sql.fun","c":"SqlBaseContextVariable","l":"isDynamicFunction()"},{"p":"org.apache.calcite.sql.fun","c":"SqlCurrentDateFunction","l":"isDynamicFunction()"},{"p":"org.apache.calcite.sql.fun","c":"SqlRandIntegerFunction","l":"isDynamicFunction()"},{"p":"org.apache.calcite.sql","c":"SqlBasicFunction","l":"isDynamicFunction()"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"isDynamicFunction()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeField","l":"isDynamicStar()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFieldImpl","l":"isDynamicStar()"},{"p":"org.apache.calcite.rel.type","c":"DynamicRecordType","l":"isDynamicStarColName(String)","u":"isDynamicStarColName(java.lang.String)"},{"p":"org.apache.calcite.rel.type","c":"DynamicRecordType","l":"isDynamicStruct()"},{"p":"org.apache.calcite.rel.type","c":"RelDataType","l":"isDynamicStruct()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeImpl","l":"isDynamicStruct()"},{"p":"org.apache.calcite.rel.type","c":"SingleColumnAliasRelDataType","l":"isDynamicStruct()"},{"p":"org.apache.calcite.plan","c":"RelOptPredicateList","l":"isEffectivelyNotNull(RexNode)","u":"isEffectivelyNotNull(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat6List","l":"isEmpty()"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"isEmpty()"},{"p":"org.apache.calcite.util","c":"CompositeMap","l":"isEmpty()"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet.Builder","l":"isEmpty()"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"isEmpty()"},{"p":"org.apache.calcite.util","c":"ImmutableIntList","l":"isEmpty()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"isEmpty(RelNode)","u":"isEmpty(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan","c":"RelOptPredicateList","l":"isEmpty(RelOptPredicateList)","u":"isEmpty(org.apache.calcite.plan.RelOptPredicateList)"},{"p":"org.apache.calcite.rel.core","c":"Values","l":"isEmpty(Values)","u":"isEmpty(org.apache.calcite.rel.core.Values)"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"isEmptyList(SqlNode)","u":"isEmptyList(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.plan","c":"RelTraitSet","l":"isEnabled(RelTraitDef<T>)","u":"isEnabled(org.apache.calcite.plan.RelTraitDef)"},{"p":"org.apache.calcite.plan.volcano","c":"AbstractConverter","l":"isEnforcer()"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"isEnforcer()"},{"p":"org.apache.calcite.rel.core","c":"Sort","l":"isEnforcer()"},{"p":"org.apache.calcite.rel","c":"RelNode","l":"isEnforcer()"},{"p":"org.apache.calcite.rel.core","c":"JoinInfo","l":"isEqui()"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"isEqui(RelNode, RelNode, RexNode)","u":"isEqui(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.plan","c":"RelOptCost","l":"isEqWithEpsilon(RelOptCost)","u":"isEqWithEpsilon(org.apache.calcite.plan.RelOptCost)"},{"p":"org.apache.calcite.plan","c":"RelOptCostImpl","l":"isEqWithEpsilon(RelOptCost)","u":"isEqWithEpsilon(org.apache.calcite.plan.RelOptCost)"},{"p":"org.apache.calcite.tools","c":"FrameworkConfig","l":"isEvolveLattice()"},{"p":"org.apache.calcite.sql","c":"SqlNumericLiteral","l":"isExact()"},{"p":"org.apache.calcite.sql.test","c":"ResultCheckers","l":"isExactDateTime(LocalDateTime)","u":"isExactDateTime(java.time.LocalDateTime)"},{"p":"org.apache.calcite.sql.test","c":"ResultCheckers","l":"isExactly(double)"},{"p":"org.apache.calcite.sql.test","c":"ResultCheckers","l":"isExactly(String)","u":"isExactly(java.lang.String)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"isExactNumeric(RelDataType)","u":"isExactNumeric(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.test","c":"ResultCheckers","l":"isExactTime(LocalTime)","u":"isExactTime(java.time.LocalTime)"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"isExcludeCurrentRow(SqlLiteral)","u":"isExcludeCurrentRow(org.apache.calcite.sql.SqlLiteral)"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"isExcludeGroup(SqlLiteral)","u":"isExcludeGroup(org.apache.calcite.sql.SqlLiteral)"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"isExcludeNoOthers(SqlLiteral)","u":"isExcludeNoOthers(org.apache.calcite.sql.SqlLiteral)"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"isExcludeTies(SqlLiteral)","u":"isExcludeTies(org.apache.calcite.sql.SqlLiteral)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Config","l":"isExpand()"},{"p":"org.apache.calcite.sql","c":"SqlCall","l":"isExpanded()"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Config","l":"isExplain()"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"IsFalse"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"isFalse(Boolean)","u":"isFalse(java.lang.Boolean)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"isFalse(Expression)","u":"isFalse(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"isFalse(Expression, Method)","u":"isFalse(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"isFixedNumeric()"},{"p":"org.apache.calcite.sql.type","c":"OperandMetadataImpl","l":"isFixedParameters()"},{"p":"org.apache.calcite.sql.type","c":"SqlOperandTypeChecker","l":"isFixedParameters()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"isFlat(RelDataType)","u":"isFlat(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"isFlat(RexNode)","u":"isFlat(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.core","c":"TableModify","l":"isFlattened()"},{"p":"org.apache.calcite.rex","c":"RexWindowBound","l":"isFollowing()"},{"p":"org.apache.calcite.materialize","c":"SqlStatisticProvider","l":"isForeignKey(RelOptTable, List<Integer>, RelOptTable, List<Integer>)","u":"isForeignKey(org.apache.calcite.plan.RelOptTable,java.util.List,org.apache.calcite.plan.RelOptTable,java.util.List)"},{"p":"org.apache.calcite.statistic","c":"CachingSqlStatisticProvider","l":"isForeignKey(RelOptTable, List<Integer>, RelOptTable, List<Integer>)","u":"isForeignKey(org.apache.calcite.plan.RelOptTable,java.util.List,org.apache.calcite.plan.RelOptTable,java.util.List)"},{"p":"org.apache.calcite.statistic","c":"MapSqlStatisticProvider","l":"isForeignKey(RelOptTable, List<Integer>, RelOptTable, List<Integer>)","u":"isForeignKey(org.apache.calcite.plan.RelOptTable,java.util.List,org.apache.calcite.plan.RelOptTable,java.util.List)"},{"p":"org.apache.calcite.statistic","c":"QuerySqlStatisticProvider","l":"isForeignKey(RelOptTable, List<Integer>, RelOptTable, List<Integer>)","u":"isForeignKey(org.apache.calcite.plan.RelOptTable,java.util.List,org.apache.calcite.plan.RelOptTable,java.util.List)"},{"p":"org.apache.calcite.sql.validate","c":"SqlAbstractConformance","l":"isFromRequired()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformance","l":"isFromRequired()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"isFromRequired()"},{"p":"org.apache.calcite.sql.validate","c":"SqlDelegatingConformance","l":"isFromRequired()"},{"p":"org.apache.calcite.rel.rules","c":"MultiJoin","l":"isFullOuterJoin()"},{"p":"org.apache.calcite.sql","c":"SqlFunctionCategory","l":"isFunction()"},{"p":"org.apache.calcite.util.mapping","c":"MappingType","l":"isFunction()"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"isGeneratedAlias(String)","u":"isGeneratedAlias(java.lang.String)"},{"p":"org.apache.calcite.sql2rel","c":"InitializerExpressionFactory","l":"isGeneratedAlways(RelOptTable, int)","u":"isGeneratedAlways(org.apache.calcite.plan.RelOptTable,int)"},{"p":"org.apache.calcite.sql2rel","c":"NullInitializerExpressionFactory","l":"isGeneratedAlways(RelOptTable, int)","u":"isGeneratedAlways(org.apache.calcite.plan.RelOptTable,int)"},{"p":"org.apache.calcite.sql","c":"SqlGroupedWindowFunction","l":"isGroup()"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"isGroup()"},{"p":"org.apache.calcite.sql","c":"SqlGroupedWindowFunction","l":"isGroupAuxiliary()"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"isGroupAuxiliary()"},{"p":"org.apache.calcite.sql.validate","c":"SqlAbstractConformance","l":"isGroupByAlias()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformance","l":"isGroupByAlias()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"isGroupByAlias()"},{"p":"org.apache.calcite.sql.validate","c":"SqlDelegatingConformance","l":"isGroupByAlias()"},{"p":"org.apache.calcite.sql.validate","c":"SqlAbstractConformance","l":"isGroupByOrdinal()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformance","l":"isGroupByOrdinal()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"isGroupByOrdinal()"},{"p":"org.apache.calcite.sql.validate","c":"SqlDelegatingConformance","l":"isGroupByOrdinal()"},{"p":"org.apache.calcite.sql.validate","c":"AggregatingSelectScope.Resolved","l":"isGroupingExpr(SqlNode)","u":"isGroupingExpr(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.rel.convert","c":"ConverterRule","l":"isGuaranteed()"},{"p":"org.apache.calcite.sql.validate","c":"SqlAbstractConformance","l":"isHavingAlias()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformance","l":"isHavingAlias()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"isHavingAlias()"},{"p":"org.apache.calcite.sql.validate","c":"SqlDelegatingConformance","l":"isHavingAlias()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"isHexDigit(char)"},{"p":"org.apache.calcite.rel.core","c":"SetOp","l":"isHomogeneous(boolean)"},{"p":"org.apache.calcite.util.mapping","c":"Mapping","l":"isIdentity()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.AbstractMapping","l":"isIdentity()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.IdentityMapping","l":"isIdentity()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.OverridingSourceMapping","l":"isIdentity()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.OverridingTargetMapping","l":"isIdentity()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.PartialMapping","l":"isIdentity()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.SourceMapping","l":"isIdentity()"},{"p":"org.apache.calcite.util","c":"Permutation","l":"isIdentity()"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"isIdentity(List<? extends RexNode>, RelDataType)","u":"isIdentity(java.util.List,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings","l":"isIdentity(List<Integer>, int)","u":"isIdentity(java.util.List,int)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings","l":"isIdentity(Mappings.TargetMapping)","u":"isIdentity(org.apache.calcite.util.mapping.Mappings.TargetMapping)"},{"p":"org.apache.calcite.rel.rules","c":"JoinProjectTransposeRule.Config","l":"isIncludeOuter()"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"isInf(BigDecimal)","u":"isInf(java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"isInf(double)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"isInf(float)"},{"p":"org.apache.calcite.plan","c":"RelOptCost","l":"isInfinite()"},{"p":"org.apache.calcite.plan","c":"RelOptCostImpl","l":"isInfinite()"},{"p":"org.apache.calcite.util.mapping","c":"MappingType","l":"isInjection()"},{"p":"org.apache.calcite.rel.core","c":"TableModify","l":"isInsert()"},{"p":"org.apache.calcite.sql.validate","c":"SqlAbstractConformance","l":"isInsertSubsetColumnsAllowed()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformance","l":"isInsertSubsetColumnsAllowed()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"isInsertSubsetColumnsAllowed()"},{"p":"org.apache.calcite.sql.validate","c":"SqlDelegatingConformance","l":"isInsertSubsetColumnsAllowed()"},{"p":"org.apache.calcite.sql","c":"SqlNumericLiteral","l":"isInteger()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"isInterval(RelDataType)","u":"isInterval(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"isIntType(RelDataType)","u":"isIntType(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"isJavaPrimitive(RelDataType)","u":"isJavaPrimitive(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactoryImpl","l":"isJavaType(RelDataType)","u":"isJavaType(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql","c":"SqlExplain","l":"isJson()"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"isJsonArray(String)","u":"isJsonArray(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"isJsonObject(String)","u":"isJsonObject(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"isJsonScalar(String)","u":"isJsonScalar(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"isJsonValue(String)","u":"isJsonValue(java.lang.String)"},{"p":"org.apache.calcite.plan","c":"RelOptAbstractTable","l":"isKey(ImmutableBitSet)","u":"isKey(org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.plan","c":"RelOptTable","l":"isKey(ImmutableBitSet)","u":"isKey(org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.prepare","c":"RelOptTableImpl","l":"isKey(ImmutableBitSet)","u":"isKey(org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.schema","c":"Statistic","l":"isKey(ImmutableBitSet)","u":"isKey(org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"isKey(ImmutableBitSet)","u":"isKey(org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.materialize","c":"SqlStatisticProvider","l":"isKey(RelOptTable, List<Integer>)","u":"isKey(org.apache.calcite.plan.RelOptTable,java.util.List)"},{"p":"org.apache.calcite.statistic","c":"CachingSqlStatisticProvider","l":"isKey(RelOptTable, List<Integer>)","u":"isKey(org.apache.calcite.plan.RelOptTable,java.util.List)"},{"p":"org.apache.calcite.statistic","c":"MapSqlStatisticProvider","l":"isKey(RelOptTable, List<Integer>)","u":"isKey(org.apache.calcite.plan.RelOptTable,java.util.List)"},{"p":"org.apache.calcite.statistic","c":"QuerySqlStatisticProvider","l":"isKey(RelOptTable, List<Integer>)","u":"isKey(org.apache.calcite.plan.RelOptTable,java.util.List)"},{"p":"org.apache.calcite.sql","c":"SqlSelect","l":"isKeywordPresent(SqlSelectKeyword)","u":"isKeywordPresent(org.apache.calcite.sql.SqlSelectKeyword)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlFormatOptions","l":"isKeywordsLowercase()"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"isKeywordsLowerCase()"},{"p":"org.apache.calcite.sql","c":"SqlWriter","l":"isKeywordsLowerCase()"},{"p":"org.apache.calcite.linq4j.tree","c":"OptimizeShuttle","l":"isKnownNotNull(Expression)","u":"isKnownNotNull(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.util","c":"Puffin.Line","l":"isLast()"},{"p":"org.apache.calcite.plan","c":"RelOptCost","l":"isLe(RelOptCost)","u":"isLe(org.apache.calcite.plan.RelOptCost)"},{"p":"org.apache.calcite.plan","c":"RelOptCostImpl","l":"isLe(RelOptCost)","u":"isLe(org.apache.calcite.plan.RelOptCost)"},{"p":"org.apache.calcite.rel.rules","c":"LoptMultiJoin","l":"isLeftFactorInRemovableSelfJoin(int)"},{"p":"org.apache.calcite.sql.validate","c":"SqlAbstractConformance","l":"isLiberal()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformance","l":"isLiberal()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"isLiberal()"},{"p":"org.apache.calcite.sql.validate","c":"SqlDelegatingConformance","l":"isLiberal()"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"isLimit(RelNode)","u":"isLimit(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlAbstractConformance","l":"isLimitStartCountAllowed()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformance","l":"isLimitStartCountAllowed()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"isLimitStartCountAllowed()"},{"p":"org.apache.calcite.sql.validate","c":"SqlDelegatingConformance","l":"isLimitStartCountAllowed()"},{"p":"org.apache.calcite.test","c":"Matchers","l":"isLinux(String)","u":"isLinux(java.lang.String)"},{"p":"org.apache.calcite.test","c":"Matchers","l":"isListOf(E...)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"isLiteral(RexNode, boolean)","u":"isLiteral(org.apache.calcite.rex.RexNode,boolean)"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"isLiteral(SqlNode)","u":"isLiteral(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"isLiteral(SqlNode, boolean)","u":"isLiteral(org.apache.calcite.sql.SqlNode,boolean)"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"isLiteralChain(SqlNode)","u":"isLiteralChain(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"isLob(RelDataType)","u":"isLob(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"isLogical(RelNode)","u":"isLogical(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"isLosslessCast(RelDataType, RelDataType)","u":"isLosslessCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"isLosslessCast(RexNode)","u":"isLosslessCast(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.plan","c":"RelOptCost","l":"isLt(RelOptCost)","u":"isLt(org.apache.calcite.plan.RelOptCost)"},{"p":"org.apache.calcite.plan","c":"RelOptCostImpl","l":"isLt(RelOptCost)","u":"isLt(org.apache.calcite.plan.RelOptCost)"},{"p":"org.apache.calcite.util.mapping","c":"MappingType","l":"isMandatorySource()"},{"p":"org.apache.calcite.util.mapping","c":"MappingType","l":"isMandatoryTarget()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"isMap(RelDataType)","u":"isMap(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.core","c":"Project","l":"isMapping()"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema.FunctionEntry","l":"isMaterialization()"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema.FunctionEntryImpl","l":"isMaterialization()"},{"p":"org.apache.calcite.rel.type","c":"RelDataType","l":"isMeasure()"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Measure","l":"isMeasure(int)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"isMeasure(RelDataType)","u":"isMeasure(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"isMeasure(RelNode, int)","u":"isMeasure(org.apache.calcite.rel.RelNode,int)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Measure.Handler","l":"isMeasure(RelNode, RelMetadataQuery, int)","u":"isMeasure(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery,int)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMeasure","l":"isMeasure(RelNode, RelMetadataQuery, int)","u":"isMeasure(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery,int)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"isMeasure(SqlNode)","u":"isMeasure(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope","l":"isMeasureRef(SqlNode)","u":"isMeasureRef(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.rel.core","c":"TableModify","l":"isMerge()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableMergeJoin","l":"isMergeJoinSupported(JoinRelType)","u":"isMergeJoinSupported(org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"isMergeJoinSupported(JoinType)","u":"isMergeJoinSupported(org.apache.calcite.linq4j.JoinType)"},{"p":"org.apache.calcite.linq4j.tree","c":"DeterministicCodeOptimizer","l":"isMethodDeterministic(Method)","u":"isMethodDeterministic(java.lang.reflect.Method)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidTable","l":"isMetric(String)","u":"isMetric(java.lang.String)"},{"p":"org.apache.calcite.sql.fun","c":"SqlMinMaxAggFunction","l":"isMin()"},{"p":"org.apache.calcite.sql.validate","c":"SqlAbstractConformance","l":"isMinusAllowed()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformance","l":"isMinusAllowed()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"isMinusAllowed()"},{"p":"org.apache.calcite.sql.validate","c":"SqlDelegatingConformance","l":"isMinusAllowed()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"isMultiset(RelDataType)","u":"isMultiset(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rex","c":"RexMultisetUtil","l":"isMultisetCast(RexCall)","u":"isMultisetCast(org.apache.calcite.rex.RexCall)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcBaseSchema","l":"isMutable()"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcSchema","l":"isMutable()"},{"p":"org.apache.calcite.schema.impl","c":"AbstractSchema","l":"isMutable()"},{"p":"org.apache.calcite.schema.impl","c":"DelegatingSchema","l":"isMutable()"},{"p":"org.apache.calcite.schema","c":"Schema","l":"isMutable()"},{"p":"org.apache.calcite.schema","c":"SchemaPlus","l":"isMutable()"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"isName(String, boolean)","u":"isName(java.lang.String,boolean)"},{"p":"org.apache.calcite.rel","c":"RelRoot","l":"isNameTrivial()"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"isNaN(BigDecimal)","u":"isNaN(java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"isNaN(double)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"isNaN(float)"},{"p":"org.apache.calcite.sql","c":"SqlJoin","l":"isNatural()"},{"p":"org.apache.calcite.sql","c":"SqlJoin","l":"isNaturalNode()"},{"p":"org.apache.calcite.sql.fun","c":"SqlBetweenOperator","l":"isNegated()"},{"p":"org.apache.calcite.sql.fun","c":"SqlLikeOperator","l":"isNegated()"},{"p":"org.apache.calcite.sql.fun","c":"SqlPosixRegexOperator","l":"isNegated()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"isNestedAggregateWindow(SqlNode)","u":"isNestedAggregateWindow(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.util","c":"Sarg","l":"isNone()"},{"p":"org.apache.calcite.rex","c":"RexProgram","l":"isNormalized(Litmus, RexBuilder)","u":"isNormalized(org.apache.calcite.util.Litmus,org.apache.calcite.rex.RexBuilder)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"isNotDistinctFrom(RexNode, RexNode)","u":"isNotDistinctFrom(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.core","c":"Values","l":"isNotEmpty(Values)","u":"isNotEmpty(org.apache.calcite.rel.core.Values)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"isNotFalse(Boolean)","u":"isNotFalse(java.lang.Boolean)"},{"p":"org.apache.calcite.rel.core","c":"Aggregate","l":"isNotGrandTotal(Aggregate)","u":"isNotGrandTotal(org.apache.calcite.rel.core.Aggregate)"},{"p":"org.apache.calcite.sql.fun","c":"SqlInOperator","l":"isNotIn()"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"isNotNull(RexNode)","u":"isNotNull(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"isNotTrue(Boolean)","u":"isNotTrue(java.lang.Boolean)"},{"p":"org.apache.calcite.plan","c":"Strong","l":"isNotTrue(RexNode)","u":"isNotTrue(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.plan","c":"Strong","l":"isNotTrue(RexNode, ImmutableBitSet)","u":"isNotTrue(org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.sql.dialect","c":"MysqlSqlDialect","l":"ISNULL_FUNCTION"},{"p":"org.apache.calcite.rex","c":"RexLiteral","l":"isNull()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"isNull(RelDataType)","u":"isNull(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.plan","c":"Strong","l":"isNull(RexFieldAccess)","u":"isNull(org.apache.calcite.rex.RexFieldAccess)"},{"p":"org.apache.calcite.plan","c":"Strong","l":"isNull(RexInputRef)","u":"isNull(org.apache.calcite.rex.RexInputRef)"},{"p":"org.apache.calcite.plan","c":"Strong","l":"isNull(RexNode)","u":"isNull(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rex","c":"RexProgram","l":"isNull(RexNode)","u":"isNull(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"isNull(RexNode)","u":"isNull(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"isNull(RexNode)","u":"isNull(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"isNull(RexNode)","u":"isNull(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.plan","c":"Strong","l":"isNull(RexNode, ImmutableBitSet)","u":"isNull(org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"isNull(SqlNode)","u":"isNull(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"isNullabilityCast(RelDataTypeFactory, RexNode)","u":"isNullabilityCast(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.sql.type","c":"AbstractSqlType","l":"isNullable"},{"p":"org.apache.calcite.rel.type","c":"RelDataType","l":"isNullable()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactoryImpl.JavaType","l":"isNullable()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeImpl","l":"isNullable()"},{"p":"org.apache.calcite.rel.type","c":"RelRecordType","l":"isNullable()"},{"p":"org.apache.calcite.rel.type","c":"SingleColumnAliasRelDataType","l":"isNullable()"},{"p":"org.apache.calcite.sql.type","c":"AbstractSqlType","l":"isNullable()"},{"p":"org.apache.calcite.sql.validate","c":"AggregatingSelectScope.Resolved","l":"isNullable(int)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexToLixTranslator","l":"isNullable(RexNode)","u":"isNullable(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.rules","c":"LoptMultiJoin","l":"isNullGenerating(int)"},{"p":"org.apache.calcite.rex","c":"RexLiteral","l":"isNullLiteral(RexNode)","u":"isNullLiteral(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"isNullLiteral(RexNode, boolean)","u":"isNullLiteral(org.apache.calcite.rex.RexNode,boolean)"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"isNullLiteral(SqlNode, boolean)","u":"isNullLiteral(org.apache.calcite.sql.SqlNode,boolean)"},{"p":"org.apache.calcite.util","c":"Util","l":"isNullOrEmpty(String)","u":"isNullOrEmpty(java.lang.String)"},{"p":"org.apache.calcite.sql.test","c":"ResultCheckers","l":"isNullValue()"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"isNumeric()"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"CompiledPattern","l":"isNumeric()"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"NumberCompiledPattern","l":"isNumeric()"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"TimeZoneHoursCompiledPattern","l":"isNumeric()"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"TimeZoneMinutesCompiledPattern","l":"isNumeric()"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"TimeZoneOffsetCompiledPattern","l":"isNumeric()"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"YearWithCommasCompiledPattern","l":"isNumeric()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"isNumeric(RelDataType)","u":"isNumeric(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.util.format.postgresql","c":"DateCalendarEnum","l":"ISO_8601"},{"p":"org.apache.calcite.util","c":"DateTimeStringUtils","l":"ISO_DATETIME_FORMAT"},{"p":"org.apache.calcite.util","c":"DateTimeStringUtils","l":"ISO_DATETIME_FRACTIONAL_SECOND_FORMAT"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"isOctalDigit(char)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"isOffset(RelNode)","u":"isOffset(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlAbstractConformance","l":"isOffsetLimitAllowed()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformance","l":"isOffsetLimitAllowed()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"isOffsetLimitAllowed()"},{"p":"org.apache.calcite.sql.validate","c":"SqlDelegatingConformance","l":"isOffsetLimitAllowed()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"isOfSameTypeName(Collection<SqlTypeName>, RelDataType)","u":"isOfSameTypeName(java.util.Collection,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"isOfSameTypeName(SqlTypeName, RelDataType)","u":"isOfSameTypeName(org.apache.calcite.sql.type.SqlTypeName,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.babel.postgres","c":"TransactionMode","l":"ISOLATION_LEVEL_READ_COMMITTED"},{"p":"org.apache.calcite.sql.babel.postgres","c":"TransactionMode","l":"ISOLATION_LEVEL_READ_UNCOMMITTED"},{"p":"org.apache.calcite.sql.babel.postgres","c":"TransactionMode","l":"ISOLATION_LEVEL_REPEATABLE_READ"},{"p":"org.apache.calcite.sql.babel.postgres","c":"TransactionMode","l":"ISOLATION_LEVEL_SERIALIZABLE"},{"p":"org.apache.calcite.sql","c":"SqlSpecialOperator.TokenSequence","l":"isOp(int)"},{"p":"org.apache.calcite.util","c":"RangeSets","l":"isOpenInterval(RangeSet<C>)","u":"isOpenInterval(com.google.common.collect.RangeSet)"},{"p":"org.apache.calcite.rex","c":"RexCallBinding","l":"isOperandLiteral(int, boolean)","u":"isOperandLiteral(int,boolean)"},{"p":"org.apache.calcite.sql","c":"SqlCallBinding","l":"isOperandLiteral(int, boolean)","u":"isOperandLiteral(int,boolean)"},{"p":"org.apache.calcite.sql","c":"SqlOperatorBinding","l":"isOperandLiteral(int, boolean)","u":"isOperandLiteral(int,boolean)"},{"p":"org.apache.calcite.rex","c":"RexCallBinding","l":"isOperandNull(int, boolean)","u":"isOperandNull(int,boolean)"},{"p":"org.apache.calcite.sql","c":"ExplicitOperatorBinding","l":"isOperandNull(int, boolean)","u":"isOperandNull(int,boolean)"},{"p":"org.apache.calcite.sql","c":"SqlCallBinding","l":"isOperandNull(int, boolean)","u":"isOperandNull(int,boolean)"},{"p":"org.apache.calcite.sql","c":"SqlOperatorBinding","l":"isOperandNull(int, boolean)","u":"isOperandNull(int,boolean)"},{"p":"org.apache.calcite.sql","c":"SqlOperatorBinding","l":"isOperandTimeFrame(int)"},{"p":"org.apache.calcite.schema","c":"FunctionParameter","l":"isOptional()"},{"p":"org.apache.calcite.sql","c":"SqlWindowTableFunction.AbstractOperandMetadata","l":"isOptional(int)"},{"p":"org.apache.calcite.sql.type","c":"CompositeOperandTypeChecker","l":"isOptional(int)"},{"p":"org.apache.calcite.sql.type","c":"FamilyOperandTypeChecker","l":"isOptional(int)"},{"p":"org.apache.calcite.sql.type","c":"SqlOperandTypeChecker","l":"isOptional(int)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"isOrder(RelNode)","u":"isOrder(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"isOrdered(SqlNode)","u":"isOrdered(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.rel.core","c":"JoinRelType","l":"isOuterJoin()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"isOverAggregateWindow(SqlNode)","u":"isOverAggregateWindow(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.rel.rules","c":"LongBitmap","l":"isOverlap(long, long)","u":"isOverlap(long,long)"},{"p":"org.apache.calcite.util","c":"ReflectUtil","l":"isParameterOptional(Method, int)","u":"isParameterOptional(java.lang.reflect.Method,int)"},{"p":"org.apache.calcite.util.mapping","c":"MappingType","l":"isPartialFunction()"},{"p":"org.apache.calcite.sql.fun","c":"SqlBasicAggFunction","l":"isPercentile()"},{"p":"org.apache.calcite.sql","c":"SqlAggFunction","l":"isPercentile()"},{"p":"org.apache.calcite.sql.validate","c":"SqlAbstractConformance","l":"isPercentRemainderAllowed()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformance","l":"isPercentRemainderAllowed()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"isPercentRemainderAllowed()"},{"p":"org.apache.calcite.sql.validate","c":"SqlDelegatingConformance","l":"isPercentRemainderAllowed()"},{"p":"org.apache.calcite.rex","c":"RexProgram","l":"isPermutation()"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Parallelism","l":"isPhaseTransition()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdParallelism","l":"isPhaseTransition(Exchange, RelMetadataQuery)","u":"isPhaseTransition(org.apache.calcite.rel.core.Exchange,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"isPhaseTransition(RelNode)","u":"isPhaseTransition(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Parallelism.Handler","l":"isPhaseTransition(RelNode, RelMetadataQuery)","u":"isPhaseTransition(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdParallelism","l":"isPhaseTransition(RelNode, RelMetadataQuery)","u":"isPhaseTransition(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdParallelism","l":"isPhaseTransition(TableScan, RelMetadataQuery)","u":"isPhaseTransition(org.apache.calcite.rel.core.TableScan,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdParallelism","l":"isPhaseTransition(Values, RelMetadataQuery)","u":"isPhaseTransition(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.plan","c":"RelOptListener.RelEquivalenceEvent","l":"isPhysical()"},{"p":"org.apache.calcite.util","c":"RangeSets","l":"isPoint(Range<C>)","u":"isPoint(com.google.common.collect.Range)"},{"p":"org.apache.calcite.util","c":"Sarg","l":"isPoints()"},{"p":"org.apache.calcite.rex","c":"RexWindowBound","l":"isPreceding()"},{"p":"org.apache.calcite.util.format.postgresql","c":"PatternModifier","l":"isPrefix()"},{"p":"org.apache.calcite.util","c":"ReflectUtil","l":"isPublic(Member)","u":"isPublic(java.lang.reflect.Member)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"isPureLimit(RelNode)","u":"isPureLimit(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"isPureOrder(RelNode)","u":"isPureOrder(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.sql.fun","c":"SqlAbstractGroupFunction","l":"isQuantifierAllowed()"},{"p":"org.apache.calcite.sql","c":"SqlAggFunction","l":"isQuantifierAllowed()"},{"p":"org.apache.calcite.sql","c":"SqlFunction","l":"isQuantifierAllowed()"},{"p":"org.apache.calcite.sql.pretty","c":"SqlFormatOptions","l":"isQuoteAllIdentifiers()"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"isQuoteAllIdentifiers()"},{"p":"org.apache.calcite.sql","c":"SqlWriter","l":"isQuoteAllIdentifiers()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserPos","l":"isQuoted()"},{"p":"org.apache.calcite.test","c":"Matchers","l":"isRangeSet(String)","u":"isRangeSet(java.lang.String)"},{"p":"org.apache.calcite.linq4j.util","c":"Compatible","l":"isRecord(Class<T>)","u":"isRecord(java.lang.Class)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"isReferenceOrAccess(RexNode, boolean)","u":"isReferenceOrAccess(org.apache.calcite.rex.RexNode,boolean)"},{"p":"org.apache.calcite.rel","c":"RelRoot","l":"isRefTrivial()"},{"p":"org.apache.calcite.plan.hep","c":"HepPlanner","l":"isRegistered(RelNode)","u":"isRegistered(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan","c":"RelOptPlanner","l":"isRegistered(RelNode)","u":"isRegistered(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"isRegistered(RelNode)","u":"isRegistered(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.test","c":"MockRelOptPlanner","l":"isRegistered(RelNode)","u":"isRegistered(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUtil","l":"isRelDefinitelyEmpty(RelMetadataQuery, RelNode)","u":"isRelDefinitelyEmpty(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUtil","l":"isRelDefinitelyNotEmpty(RelMetadataQuery, RelNode)","u":"isRelDefinitelyNotEmpty(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.rules","c":"LoptMultiJoin","l":"isRemovableOuterJoinFactor(int)"},{"p":"org.apache.calcite.rel.rules","c":"LoptJoinTree","l":"isRemovableSelfJoin()"},{"p":"org.apache.calcite.rel.rules","c":"LoptOptimizeJoinRule","l":"isRemovableSelfJoin(Join)","u":"isRemovableSelfJoin(org.apache.calcite.rel.core.Join)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Config","l":"isRemoveSortInSubQuery()"},{"p":"org.apache.calcite.plan","c":"RelOptSamplingParameters","l":"isRepeatable()"},{"p":"org.apache.calcite.sql","c":"SqlSampleSpec.SqlTableSampleSpec","l":"isRepeatable()"},{"p":"org.apache.calcite.plan.volcano","c":"RelSubset","l":"isRequired()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest","l":"isReserved(String)","u":"isReserved(java.lang.String)"},{"p":"org.apache.calcite.rel.rules","c":"JoinPushThroughJoinRule.Config","l":"isRight()"},{"p":"org.apache.calcite.rel.rules","c":"LoptMultiJoin","l":"isRightFactorInRemovableSelfJoin(int)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidTable","l":"isRolledUp(String)","u":"isRolledUp(java.lang.String)"},{"p":"org.apache.calcite.adapter.kafka","c":"KafkaStreamTable","l":"isRolledUp(String)","u":"isRolledUp(java.lang.String)"},{"p":"org.apache.calcite.schema.impl","c":"AbstractTable","l":"isRolledUp(String)","u":"isRolledUp(java.lang.String)"},{"p":"org.apache.calcite.schema","c":"Table","l":"isRolledUp(String)","u":"isRolledUp(java.lang.String)"},{"p":"org.apache.calcite.sql.fun","c":"SqlSpatialTypeFunctions.ExplodeTable","l":"isRolledUp(String)","u":"isRolledUp(java.lang.String)"},{"p":"org.apache.calcite.sql.fun","c":"SqlSpatialTypeFunctions.GridTable","l":"isRolledUp(String)","u":"isRolledUp(java.lang.String)"},{"p":"org.apache.calcite.test.schemata.orderstream","c":"BaseOrderStreamTable","l":"isRolledUp(String)","u":"isRolledUp(java.lang.String)"},{"p":"org.apache.calcite.test.schemata.orderstream","c":"OrdersTable","l":"isRolledUp(String)","u":"isRolledUp(java.lang.String)"},{"p":"org.apache.calcite.test.schemata.orderstream","c":"ProductsTable","l":"isRolledUp(String)","u":"isRolledUp(java.lang.String)"},{"p":"org.apache.calcite.test.schemata.orderstream","c":"ProductsTemporalTable","l":"isRolledUp(String)","u":"isRolledUp(java.lang.String)"},{"p":"org.apache.calcite.rel.core","c":"Aggregate.Group","l":"isRollup(ImmutableBitSet, List<ImmutableBitSet>)","u":"isRollup(org.apache.calcite.util.ImmutableBitSet,java.util.List)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"isRoot()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"isRow(RelDataType)","u":"isRow(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.core","c":"Window.Group","l":"isRows"},{"p":"org.apache.calcite.rex","c":"RexWindow","l":"isRows()"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"isRows()"},{"p":"org.apache.calcite.plan","c":"RelOptRuleCall","l":"isRuleExcluded()"},{"p":"org.apache.calcite.rel.hint","c":"HintStrategyTable","l":"isRuleExcluded(Hintable, RelOptRule)","u":"isRuleExcluded(org.apache.calcite.rel.hint.Hintable,org.apache.calcite.plan.RelOptRule)"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"isRuleExcluded(RelOptRule)","u":"isRuleExcluded(org.apache.calcite.plan.RelOptRule)"},{"p":"org.apache.calcite.linq4j.tree","c":"BlockBuilder","l":"isSafeForReuse(DeclarationStatement)","u":"isSafeForReuse(org.apache.calcite.linq4j.tree.DeclarationStatement)"},{"p":"org.apache.calcite.runtime.rtti","c":"RuntimeTypeInformation","l":"isScalar()"},{"p":"org.apache.calcite.runtime.rtti","c":"RuntimeTypeInformation.RuntimeSqlTypeName","l":"isScalar()"},{"p":"org.apache.calcite.rel.type","c":"DelegatingTypeSystem","l":"isSchemaCaseSensitive()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystem","l":"isSchemaCaseSensitive()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystemImpl","l":"isSchemaCaseSensitive()"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"isSelectListExtraIndentFlag()"},{"p":"org.apache.calcite.sql.pretty","c":"SqlFormatOptions","l":"isSelectListItemsOnSeparateLines()"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"isSelectListItemsOnSeparateLines()"},{"p":"org.apache.calcite.sql","c":"SqlWriter","l":"isSelectListItemsOnSeparateLines()"},{"p":"org.apache.calcite.rel.core","c":"Join","l":"isSemiJoin()"},{"p":"org.apache.calcite.rel.core","c":"Join","l":"isSemiJoinDone()"},{"p":"org.apache.calcite.rel.logical","c":"LogicalJoin","l":"isSemiJoinDone()"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfigImpl","l":"isSet(CalciteConnectionProperty)","u":"isSet(org.apache.calcite.config.CalciteConnectionProperty)"},{"p":"org.apache.calcite.sql.test","c":"ResultCheckers","l":"isSet(String...)","u":"isSet(java.lang.String...)"},{"p":"org.apache.calcite.rel.rules","c":"HyperEdge","l":"isSimple()"},{"p":"org.apache.calcite.sql","c":"SqlIdentifier","l":"isSimple()"},{"p":"org.apache.calcite.rel.core","c":"Aggregate","l":"isSimple(Aggregate)","u":"isSimple(org.apache.calcite.rel.core.Aggregate)"},{"p":"org.apache.calcite.linq4j.tree","c":"BlockBuilder","l":"isSimpleExpression(Expression)","u":"isSimpleExpression(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.sql.test","c":"ResultCheckers","l":"isSingle(boolean)"},{"p":"org.apache.calcite.sql.test","c":"ResultCheckers","l":"isSingle(double, String)","u":"isSingle(double,java.lang.String)"},{"p":"org.apache.calcite.sql.test","c":"ResultCheckers","l":"isSingle(int)"},{"p":"org.apache.calcite.sql.test","c":"ResultCheckers","l":"isSingle(String)","u":"isSingle(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlIntervalQualifier","l":"isSingleDatetimeField()"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraFilter","l":"isSinglePartition()"},{"p":"org.apache.calcite.util.mapping","c":"MappingType","l":"isSingleSource()"},{"p":"org.apache.calcite.util.mapping","c":"MappingType","l":"isSingleTarget()"},{"p":"org.apache.calcite.util","c":"Util","l":"isSingleValue(SqlCall)","u":"isSingleValue(org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.rel.core","c":"Values","l":"isSingleValue(Values)","u":"isSingleValue(org.apache.calcite.rel.core.Values)"},{"p":"org.apache.calcite.rel.rules","c":"FilterJoinRule.Config","l":"isSmart()"},{"p":"org.apache.calcite.sql.validate","c":"SqlAbstractConformance","l":"isSortByAlias()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformance","l":"isSortByAlias()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"isSortByAlias()"},{"p":"org.apache.calcite.sql.validate","c":"SqlDelegatingConformance","l":"isSortByAlias()"},{"p":"org.apache.calcite.sql.validate","c":"SqlAbstractConformance","l":"isSortByAliasObscures()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformance","l":"isSortByAliasObscures()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"isSortByAliasObscures()"},{"p":"org.apache.calcite.sql.validate","c":"SqlDelegatingConformance","l":"isSortByAliasObscures()"},{"p":"org.apache.calcite.sql.validate","c":"SqlAbstractConformance","l":"isSortByOrdinal()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformance","l":"isSortByOrdinal()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"isSortByOrdinal()"},{"p":"org.apache.calcite.sql.validate","c":"SqlDelegatingConformance","l":"isSortByOrdinal()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"isSpecial()"},{"p":"org.apache.calcite.sql","c":"SqlFunctionCategory","l":"isSpecific()"},{"p":"org.apache.calcite.piglet","c":"Ast.Identifier","l":"isStar()"},{"p":"org.apache.calcite.piglet","c":"Ast.SpecialIdentifier","l":"isStar()"},{"p":"org.apache.calcite.sql","c":"SqlIdentifier","l":"isStar()"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor","l":"isStar(List<RexNode>, RelDataType, RelDataType)","u":"isStar(java.util.List,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor","l":"isStar(RexProgram)","u":"isStar(org.apache.calcite.rex.RexProgram)"},{"p":"org.apache.calcite.schema.impl","c":"AggregateFunctionImpl","l":"isStatic"},{"p":"org.apache.calcite.util","c":"ReflectUtil","l":"isStatic(Member)","u":"isStatic(java.lang.reflect.Member)"},{"p":"org.apache.calcite.adapter.csv","c":"CsvStreamScannableTable","l":"isStream()"},{"p":"org.apache.calcite.adapter.csv","c":"CsvTable","l":"isStream()"},{"p":"org.apache.calcite.adapter.file","c":"CsvTable","l":"isStream()"},{"p":"org.apache.calcite.rel.core","c":"Match","l":"isStrictEnd()"},{"p":"org.apache.calcite.rel.core","c":"Match","l":"isStrictStart()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"isString(RelDataType)","u":"isString(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.plan","c":"Strong","l":"isStrong(RexNode)","u":"isStrong(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.type","c":"DynamicRecordTypeImpl","l":"isStruct()"},{"p":"org.apache.calcite.rel.type","c":"RelCrossType","l":"isStruct()"},{"p":"org.apache.calcite.rel.type","c":"RelDataType","l":"isStruct()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeImpl","l":"isStruct()"},{"p":"org.apache.calcite.rel.type","c":"SingleColumnAliasRelDataType","l":"isStruct()"},{"p":"org.apache.calcite.rel.rules","c":"LongBitmap","l":"isSubSet(long, long)","u":"isSubSet(long,long)"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"isSubstituteRule(VolcanoRuleCall)","u":"isSubstituteRule(org.apache.calcite.plan.volcano.VolcanoRuleCall)"},{"p":"org.apache.calcite.sql.validate","c":"SqlAbstractConformance","l":"isSupportedDualTable()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformance","l":"isSupportedDualTable()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"isSupportedDualTable()"},{"p":"org.apache.calcite.sql.validate","c":"SqlDelegatingConformance","l":"isSupportedDualTable()"},{"p":"org.apache.calcite.util.mapping","c":"MappingType","l":"isSurjection()"},{"p":"org.apache.calcite.rel.rules","c":"JoinCommuteRule.Config","l":"isSwapOuter()"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"isSymbolLiteral(RexNode)","u":"isSymbolLiteral(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"isSymmetrical()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"isSystemField(RelDataTypeField)","u":"isSystemField(org.apache.calcite.rel.type.RelDataTypeField)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"isSystemField(RelDataTypeField)","u":"isSystemField(org.apache.calcite.rel.type.RelDataTypeField)"},{"p":"org.apache.calcite.plan","c":"TableAccessMap","l":"isTableAccessed(List<String>)","u":"isTableAccessed(java.util.List)"},{"p":"org.apache.calcite.plan","c":"TableAccessMap","l":"isTableAccessedForRead(List<String>)","u":"isTableAccessedForRead(java.util.List)"},{"p":"org.apache.calcite.plan","c":"TableAccessMap","l":"isTableAccessedForWrite(List<String>)","u":"isTableAccessedForWrite(java.util.List)"},{"p":"org.apache.calcite.sql","c":"SqlFunctionCategory","l":"isTableFunction()"},{"p":"org.apache.calcite.prepare","c":"RelOptTableImpl","l":"isTemporal()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorTable","l":"isTemporal()"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"isTemporal()"},{"p":"org.apache.calcite.sql","c":"SqlIntervalQualifier","l":"isTime()"},{"p":"org.apache.calcite.sql","c":"SqlIntervalQualifier","l":"isTimestamp()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"isTimestamp(RelDataType)","u":"isTimestamp(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.plan","c":"RelMultipleTrait","l":"isTop()"},{"p":"org.apache.calcite.rel","c":"RelCollationImpl","l":"isTop()"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"isTransformationRule(VolcanoRuleCall)","u":"isTransformationRule(org.apache.calcite.plan.volcano.VolcanoRuleCall)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Config","l":"isTrimUnusedFields()"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"isTrimUnusedFields()"},{"p":"org.apache.calcite.rex","c":"RexProgram","l":"isTrivial()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableRels","l":"isTrivial(MutableProject)","u":"isTrivial(org.apache.calcite.rel.mutable.MutableProject)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectRemoveRule","l":"isTrivial(Project)","u":"isTrivial(org.apache.calcite.rel.core.Project)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"IsTrue"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"isTrue(Boolean)","u":"isTrue(java.lang.Boolean)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"isTrue(Expression)","u":"isTrue(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"isTrue(Expression, Method)","u":"isTrue(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.sql","c":"SqlCallBinding","l":"isTypeCoercionEnabled()"},{"p":"org.apache.calcite.rex","c":"RexWindowBound","l":"isUnbounded()"},{"p":"org.apache.calcite.rex","c":"RexWindowBound","l":"isUnboundedFollowing()"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"isUnboundedFollowing(SqlNode)","u":"isUnboundedFollowing(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.rex","c":"RexWindowBound","l":"isUnboundedPreceding()"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"isUnboundedPreceding(SqlNode)","u":"isUnboundedPreceding(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"isUnicode(RelDataType)","u":"isUnicode(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest.Tester","l":"isUnparserTest()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest.UnparsingTesterImpl","l":"isUnparserTest()"},{"p":"org.apache.calcite.rel.core","c":"TableModify","l":"isUpdate()"},{"p":"org.apache.calcite.sql","c":"SqlInsert","l":"isUpsert()"},{"p":"org.apache.calcite.sql","c":"SqlFunctionCategory","l":"isUserDefined()"},{"p":"org.apache.calcite.sql","c":"SqlFunctionCategory","l":"isUserDefinedNotSpecificFunction()"},{"p":"org.apache.calcite.rel.rules","c":"AggregateExpandDistinctAggregatesRule.Config","l":"isUsingGroupingSets()"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor.AbstractUnifyRule","l":"isValid()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.PartialMapping","l":"isValid()"},{"p":"org.apache.calcite.util","c":"PartiallyOrderedSet","l":"isValid(boolean)"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"isValid(Litmus)","u":"isValid(org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"isValid(Litmus, RelNode.Context)","u":"isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode.Context)"},{"p":"org.apache.calcite.rel.core","c":"Aggregate","l":"isValid(Litmus, RelNode.Context)","u":"isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode.Context)"},{"p":"org.apache.calcite.rel.core","c":"Calc","l":"isValid(Litmus, RelNode.Context)","u":"isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode.Context)"},{"p":"org.apache.calcite.rel.core","c":"Correlate","l":"isValid(Litmus, RelNode.Context)","u":"isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode.Context)"},{"p":"org.apache.calcite.rel.core","c":"Filter","l":"isValid(Litmus, RelNode.Context)","u":"isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode.Context)"},{"p":"org.apache.calcite.rel.core","c":"Join","l":"isValid(Litmus, RelNode.Context)","u":"isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode.Context)"},{"p":"org.apache.calcite.rel.core","c":"Project","l":"isValid(Litmus, RelNode.Context)","u":"isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode.Context)"},{"p":"org.apache.calcite.rel.core","c":"Snapshot","l":"isValid(Litmus, RelNode.Context)","u":"isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode.Context)"},{"p":"org.apache.calcite.rel.core","c":"Window","l":"isValid(Litmus, RelNode.Context)","u":"isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode.Context)"},{"p":"org.apache.calcite.rel","c":"RelNode","l":"isValid(Litmus, RelNode.Context)","u":"isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode.Context)"},{"p":"org.apache.calcite.rex","c":"RexProgram","l":"isValid(Litmus, RelNode.Context)","u":"isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode.Context)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery","l":"isValid(Litmus, RelNode.Context)","u":"isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode.Context)"},{"p":"org.apache.calcite.rel","c":"RelCollationImpl","l":"isValid(RelDataType, List<RelCollation>, boolean)","u":"isValid(org.apache.calcite.rel.type.RelDataType,java.util.List,boolean)"},{"p":"org.apache.calcite.rel","c":"RelCollations","l":"isValid(RelDataType, List<RelCollation>, boolean)","u":"isValid(org.apache.calcite.rel.type.RelDataType,java.util.List,boolean)"},{"p":"org.apache.calcite.rex","c":"RexChecker","l":"isValid(RexNode)","u":"isValid(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisor","l":"isValid(String)","u":"isValid(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlJdbcFunctionCall.SimpleMakeCall","l":"isValidArgCount(SqlCallBinding)","u":"isValidArgCount(org.apache.calcite.sql.SqlCallBinding)"},{"p":"org.apache.calcite.sql","c":"SqlOperandCountRange","l":"isValidCount(int)"},{"p":"org.apache.calcite.util","c":"NumberUtil","l":"isValidDecimal(BigDecimal)","u":"isValidDecimal(java.math.BigDecimal)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"isValidDecimalValue(BigDecimal, RelDataType)","u":"isValidDecimalValue(java.math.BigDecimal,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.util","c":"Util","l":"isValidJavaIdentifier(String)","u":"isValidJavaIdentifier(java.lang.String)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewAggregateRule","l":"isValidPlan(Project, RelNode, RelMetadataQuery)","u":"isValidPlan(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewJoinRule","l":"isValidPlan(Project, RelNode, RelMetadataQuery)","u":"isValidPlan(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule","l":"isValidPlan(Project, RelNode, RelMetadataQuery)","u":"isValidPlan(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule","l":"isValidRelNodePlan(RelNode, RelMetadataQuery)","u":"isValidRelNodePlan(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.adapter.druid","c":"TimeExtractionFunction","l":"isValidTimeExtract(RexNode)","u":"isValidTimeExtract(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.adapter.druid","c":"TimeExtractionFunction","l":"isValidTimeFloor(RexNode)","u":"isValidTimeFloor(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlAbstractConformance","l":"isValueAllowed()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformance","l":"isValueAllowed()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"isValueAllowed()"},{"p":"org.apache.calcite.sql.validate","c":"SqlDelegatingConformance","l":"isValueAllowed()"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.ExplainVisibility.Handler","l":"isVisibleInExplain(RelNode, RelMetadataQuery, SqlExplainLevel)","u":"isVisibleInExplain(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.sql.SqlExplainLevel)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdExplainVisibility","l":"isVisibleInExplain(RelNode, RelMetadataQuery, SqlExplainLevel)","u":"isVisibleInExplain(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.sql.SqlExplainLevel)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"isVisibleInExplain(RelNode, SqlExplainLevel)","u":"isVisibleInExplain(org.apache.calcite.rel.RelNode,org.apache.calcite.sql.SqlExplainLevel)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.ExplainVisibility","l":"isVisibleInExplain(SqlExplainLevel)","u":"isVisibleInExplain(org.apache.calcite.sql.SqlExplainLevel)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdExplainVisibility","l":"isVisibleInExplain(TableScan, RelMetadataQuery, SqlExplainLevel)","u":"isVisibleInExplain(org.apache.calcite.rel.core.TableScan,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.sql.SqlExplainLevel)"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor","l":"isWeaker(MutableRel, MutableRel)","u":"isWeaker(org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.mutable.MutableRel)"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor.Operand","l":"isWeaker(SubstitutionVisitor, MutableRel)","u":"isWeaker(org.apache.calcite.plan.SubstitutionVisitor,org.apache.calcite.rel.mutable.MutableRel)"},{"p":"org.apache.calcite.sql","c":"SqlIntervalQualifier","l":"isWeek()"},{"p":"org.apache.calcite.sql.pretty","c":"SqlFormatOptions","l":"isWhereListItemsOnSeparateLines()"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"isWhereListItemsOnSeparateLines()"},{"p":"org.apache.calcite.rel.rules","c":"ProjectFilterTransposeRule.Config","l":"isWholeFilter()"},{"p":"org.apache.calcite.rel.rules","c":"ProjectFilterTransposeRule.Config","l":"isWholeProject()"},{"p":"org.apache.calcite.sql.pretty","c":"SqlFormatOptions","l":"isWindowDeclarationStartsLine()"},{"p":"org.apache.calcite.sql.pretty","c":"SqlFormatOptions","l":"isWindowListItemsOnSeparateLines()"},{"p":"org.apache.calcite.sql.test","c":"ResultCheckers","l":"isWithin(double, double)","u":"isWithin(double,double)"},{"p":"org.apache.calcite.sql.validate","c":"JoinScope","l":"isWithin(SqlValidatorScope)","u":"isWithin(org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope","l":"isWithin(SqlValidatorScope)","u":"isWithin(org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.test","c":"Matchers.IsWithin","l":"IsWithin(T, double)","u":"%3Cinit%3E(T,double)"},{"p":"org.apache.calcite.sql.validate","c":"MatchRecognizeNamespace","l":"isWrapperFor(Class<?>)","u":"isWrapperFor(java.lang.Class)"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingNamespace","l":"isWrapperFor(Class<?>)","u":"isWrapperFor(java.lang.Class)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorNamespace","l":"isWrapperFor(Class<?>)","u":"isWrapperFor(java.lang.Class)"},{"p":"org.apache.calcite.sql","c":"SqlExplain","l":"isXml()"},{"p":"org.apache.calcite.sql","c":"SqlIntervalQualifier","l":"isYearMonth()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"isYearMonth()"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ITEM"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"ITEM"},{"p":"org.apache.calcite.runtime.variant","c":"VariantNonNull","l":"item(Object)","u":"item(java.lang.Object)"},{"p":"org.apache.calcite.runtime.variant","c":"VariantNull","l":"item(Object)","u":"item(java.lang.Object)"},{"p":"org.apache.calcite.runtime.variant","c":"VariantSqlNull","l":"item(Object)","u":"item(java.lang.Object)"},{"p":"org.apache.calcite.runtime.variant","c":"VariantValue","l":"item(Object)","u":"item(java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"item(Object, Object)","u":"item(java.lang.Object,java.lang.Object)"},{"p":"org.apache.calcite.rel.externalize","c":"RelJsonWriter","l":"item(String, Object)","u":"item(java.lang.String,java.lang.Object)"},{"p":"org.apache.calcite.rel.externalize","c":"RelWriterImpl","l":"item(String, Object)","u":"item(java.lang.String,java.lang.Object)"},{"p":"org.apache.calcite.rel","c":"RelWriter","l":"item(String, Object)","u":"item(java.lang.String,java.lang.Object)"},{"p":"org.apache.calcite.rel","c":"RelWriter","l":"itemIf(String, Object, boolean)","u":"itemIf(java.lang.String,java.lang.Object,boolean)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"itemOptional(Object, Object)","u":"itemOptional(java.lang.Object,java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"ForEachStatement","l":"iterable"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ITERABLE_FOR_EACH"},{"p":"org.apache.calcite.util","c":"NameSet","l":"iterable()"},{"p":"org.apache.calcite.linq4j","c":"Linq4j","l":"iterableEnumerator(Iterable<? extends T>)","u":"iterableEnumerator(java.lang.Iterable)"},{"p":"org.apache.calcite.rel.core","c":"RepeatUnion","l":"iterationLimit"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ITERATOR_HAS_NEXT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ITERATOR_NEXT"},{"p":"org.apache.calcite.util","c":"Glossary","l":"ITERATOR_PATTERN"},{"p":"org.apache.calcite.adapter.enumerable","c":"LazyAggregateLambdaFactory.LazySource","l":"iterator()"},{"p":"org.apache.calcite.adapter.file","c":"FileReader","l":"iterator()"},{"p":"org.apache.calcite.linq4j","c":"AbstractEnumerable","l":"iterator()"},{"p":"org.apache.calcite.linq4j","c":"BaseQueryable","l":"iterator()"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults.ReplayableQueryable","l":"iterator()"},{"p":"org.apache.calcite.rel.rules","c":"LongBitmap.ReverseIterator","l":"iterator()"},{"p":"org.apache.calcite.rel.rules","c":"LongBitmap.SubsetIterator","l":"iterator()"},{"p":"org.apache.calcite.runtime","c":"FlatLists.AbstractFlatList","l":"iterator()"},{"p":"org.apache.calcite.runtime","c":"ConsList","l":"iterator()"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat1List","l":"iterator()"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat2List","l":"iterator()"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat3List","l":"iterator()"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat4List","l":"iterator()"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat5List","l":"iterator()"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat6List","l":"iterator()"},{"p":"org.apache.calcite.schema.impl","c":"AbstractTableQueryable","l":"iterator()"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"iterator()"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"iterator()"},{"p":"org.apache.calcite.util","c":"ImmutableIntList","l":"iterator()"},{"p":"org.apache.calcite.util","c":"ImmutableNullableSet","l":"iterator()"},{"p":"org.apache.calcite.util","c":"IntegerIntervalSet","l":"iterator()"},{"p":"org.apache.calcite.util.mapping","c":"AbstractSourceMapping","l":"iterator()"},{"p":"org.apache.calcite.util.mapping","c":"AbstractTargetMapping","l":"iterator()"},{"p":"org.apache.calcite.util.mapping","c":"Mapping","l":"iterator()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.FiniteAbstractMapping","l":"iterator()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.IdentityMapping","l":"iterator()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.OverridingSourceMapping","l":"iterator()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.OverridingTargetMapping","l":"iterator()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.PartialMapping","l":"iterator()"},{"p":"org.apache.calcite.util","c":"PartiallyOrderedSet","l":"iterator()"},{"p":"org.apache.calcite.util","c":"Permutation","l":"iterator()"},{"p":"org.apache.calcite.util","c":"Smalls.SimpleTable","l":"iterator()"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"IW"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"IYY"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"IYYYY"},{"p":"org.apache.calcite.util.javac","c":"JaninoCompiler","l":"JaninoCompiler()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util.javac","c":"JaninoCompiler.JaninoCompilerArgs","l":"JaninoCompilerArgs()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.interpreter","c":"JaninoRexCompiler","l":"JaninoRexCompiler(RexBuilder)","u":"%3Cinit%3E(org.apache.calcite.rex.RexBuilder)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlDdlNodes.FileType","l":"JAR"},{"p":"org.apache.calcite.config","c":"Lex","l":"JAVA"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture.VmName","l":"JAVA"},{"p":"org.apache.calcite.sql.test","c":"SqlTester.VmName","l":"JAVA"},{"p":"org.apache.calcite.adapter.os","c":"OsQueryType","l":"JAVA_INFO"},{"p":"org.apache.calcite.runtime","c":"Hook","l":"JAVA_PLAN"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexToLixTranslator","l":"JAVA_TO_SQL_METHOD_MAP"},{"p":"org.apache.calcite.jdbc","c":"JavaCollation","l":"JavaCollation(SqlCollation.Coercibility, Locale, Charset, int)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlCollation.Coercibility,java.util.Locale,java.nio.charset.Charset,int)"},{"p":"org.apache.calcite.util.javac","c":"JavaCompilerArgs","l":"JavaCompilerArgs()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.jdbc","c":"JavaRecordType","l":"JavaRecordType(List<RelDataTypeField>, Class)","u":"%3Cinit%3E(java.util.List,java.lang.Class)"},{"p":"org.apache.calcite.adapter.enumerable","c":"JavaRelImplementor","l":"JavaRelImplementor(RexBuilder)","u":"%3Cinit%3E(org.apache.calcite.rex.RexBuilder)"},{"p":"org.apache.calcite.sql.type","c":"JavaToSqlTypeConversionRules","l":"JavaToSqlTypeConversionRules()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactoryImpl.JavaType","l":"JavaType(Class)","u":"%3Cinit%3E(java.lang.Class)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactoryImpl.JavaType","l":"JavaType(Class, boolean)","u":"%3Cinit%3E(java.lang.Class,boolean)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactoryImpl.JavaType","l":"JavaType(Class, boolean, Charset, SqlCollation)","u":"%3Cinit%3E(java.lang.Class,boolean,java.nio.charset.Charset,org.apache.calcite.sql.SqlCollation)"},{"p":"org.apache.calcite.adapter.geode.util","c":"JavaTypeFactoryExtImpl","l":"JavaTypeFactoryExtImpl()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.jdbc","c":"JavaTypeFactoryImpl","l":"JavaTypeFactoryImpl()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.jdbc","c":"JavaTypeFactoryImpl","l":"JavaTypeFactoryImpl(RelDataTypeSystem)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataTypeSystem)"},{"p":"org.apache.calcite.model","c":"JsonSchema.Type","l":"JDBC"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"JDBC_ARRAY_TO_LIST"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules","l":"JDBC_BUILDER"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"JDBC_FN"},{"p":"org.apache.calcite.test","c":"CalciteAssert.Config","l":"JDBC_FOODMART"},{"p":"org.apache.calcite.test","c":"CalciteAssert.SchemaSpec","l":"JDBC_FOODMART"},{"p":"org.apache.calcite.test","c":"CalciteAssert.Config","l":"JDBC_FOODMART_WITH_LATTICE"},{"p":"org.apache.calcite.test","c":"CalciteAssert.SchemaSpec","l":"JDBC_FOODMART_WITH_LATTICE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"JDBC_SCHEMA_DATA_SOURCE"},{"p":"org.apache.calcite.test","c":"CalciteAssert.Config","l":"JDBC_SCOTT"},{"p":"org.apache.calcite.test","c":"CalciteAssert.SchemaSpec","l":"JDBC_SCOTT"},{"p":"org.apache.calcite.test","c":"CalciteAssert.SchemaSpec","l":"JDBC_STEELWHEELS"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"jdbc(ResultSet, int, Primitive.Sink)","u":"jdbc(java.sql.ResultSet,int,org.apache.calcite.linq4j.tree.Primitive.Sink)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcAggregate","l":"JdbcAggregate(RelOptCluster, RelTraitSet, RelNode, boolean, ImmutableBitSet, List<ImmutableBitSet>, List<AggregateCall>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcAggregate","l":"JdbcAggregate(RelOptCluster, RelTraitSet, RelNode, ImmutableBitSet, List<ImmutableBitSet>, List<AggregateCall>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcAggregateRule","l":"JdbcAggregateRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcBaseSchema","l":"JdbcBaseSchema()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcCalc","l":"JdbcCalc(RelOptCluster, RelTraitSet, RelNode, RexProgram)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcCalc","l":"JdbcCalc(RelOptCluster, RelTraitSet, RelNode, RexProgram, int)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram,int)"},{"p":"org.apache.calcite.model","c":"JsonJdbcSchema","l":"jdbcCatalog"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcTable","l":"jdbcCatalogName"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcCatalogSchema","l":"JdbcCatalogSchema(DataSource, SqlDialect, JdbcConvention, String)","u":"%3Cinit%3E(javax.sql.DataSource,org.apache.calcite.sql.SqlDialect,org.apache.calcite.adapter.jdbc.JdbcConvention,java.lang.String)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcConvention","l":"JdbcConvention(SqlDialect, Expression, String)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect,org.apache.calcite.linq4j.tree.Expression,java.lang.String)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcCorrelationDataContext","l":"JdbcCorrelationDataContext(DataContext, Object[])","u":"%3Cinit%3E(org.apache.calcite.DataContext,java.lang.Object[])"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcCorrelationDataContextBuilderImpl","l":"JdbcCorrelationDataContextBuilderImpl(EnumerableRelImplementor, BlockBuilder, Expression)","u":"%3Cinit%3E(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.model","c":"JsonJdbcSchema","l":"jdbcDriver"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcFilter","l":"JdbcFilter(RelOptCluster, RelTraitSet, RelNode, RexNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcFilterRule","l":"JdbcFilterRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"jdbcGet(ResultSet, int)","u":"jdbcGet(java.sql.ResultSet,int)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcImplementor","l":"JdbcImplementor(SqlDialect, JavaTypeFactory)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect,org.apache.calcite.adapter.java.JavaTypeFactory)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcIntersect","l":"JdbcIntersect(RelOptCluster, RelTraitSet, List<RelNode>, boolean)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,boolean)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcIntersectRule","l":"JdbcIntersectRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcJoin","l":"JdbcJoin(RelOptCluster, RelTraitSet, RelNode, RelNode, RexNode, JoinRelType, Set<String>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType,java.util.Set)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcJoin","l":"JdbcJoin(RelOptCluster, RelTraitSet, RelNode, RelNode, RexNode, Set<CorrelationId>, JoinRelType)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,java.util.Set,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcJoinRule","l":"JdbcJoinRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcMinus","l":"JdbcMinus(RelOptCluster, RelTraitSet, List<RelNode>, boolean)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,boolean)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcMinusRule","l":"JdbcMinusRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.schema","c":"Schema.TableType","l":"jdbcName"},{"p":"org.apache.calcite.model","c":"JsonJdbcSchema","l":"jdbcPassword"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcProject","l":"JdbcProject(RelOptCluster, RelTraitSet, RelNode, List<? extends RexNode>, RelDataType)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcProject","l":"JdbcProject(RelOptCluster, RelTraitSet, RelNode, List<RexNode>, RelDataType, int)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType,int)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcProjectRule","l":"JdbcProjectRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcTable","l":"jdbcSchema"},{"p":"org.apache.calcite.model","c":"JsonJdbcSchema","l":"jdbcSchema"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcSchema","l":"JdbcSchema(DataSource, SqlDialect, JdbcConvention, String, String)","u":"%3Cinit%3E(javax.sql.DataSource,org.apache.calcite.sql.SqlDialect,org.apache.calcite.adapter.jdbc.JdbcConvention,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcTable","l":"jdbcSchemaName"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcSort","l":"JdbcSort(RelOptCluster, RelTraitSet, RelNode, RelCollation, RexNode, RexNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcSortRule","l":"JdbcSortRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcTableScan","l":"jdbcTable"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcTableModificationRule","l":"JdbcTableModificationRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcTableModify","l":"JdbcTableModify(RelOptCluster, RelTraitSet, RelOptTable, Prepare.CatalogReader, RelNode, TableModify.Operation, List<String>, List<RexNode>, boolean)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.plan.RelOptTable,org.apache.calcite.prepare.Prepare.CatalogReader,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.TableModify.Operation,java.util.List,java.util.List,boolean)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcTable","l":"jdbcTableName"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcTableScan","l":"JdbcTableScan(RelOptCluster, List<RelHint>, RelOptTable, JdbcTable, JdbcConvention)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,java.util.List,org.apache.calcite.plan.RelOptTable,org.apache.calcite.adapter.jdbc.JdbcTable,org.apache.calcite.adapter.jdbc.JdbcConvention)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcTable","l":"jdbcTableType"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcToEnumerableConverter","l":"JdbcToEnumerableConverter(RelOptCluster, RelTraitSet, RelNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcToEnumerableConverterRule","l":"JdbcToEnumerableConverterRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.adapter.spark","c":"JdbcToSparkConverter","l":"JdbcToSparkConverter(RelOptCluster, RelTraitSet, RelNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.spark","c":"JdbcToSparkConverterRule","l":"JdbcToSparkConverterRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.adapter.spark","c":"JdbcToSparkConverterRule","l":"JdbcToSparkConverterRule(JdbcConvention, RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.adapter.jdbc.JdbcConvention,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcUnion","l":"JdbcUnion(RelOptCluster, RelTraitSet, List<RelNode>, boolean)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,boolean)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcUnionRule","l":"JdbcUnionRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.model","c":"JsonJdbcSchema","l":"jdbcUrl"},{"p":"org.apache.calcite.model","c":"JsonJdbcSchema","l":"jdbcUser"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcValuesRule","l":"JdbcValuesRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.sql","c":"SqlDialect.DatabaseProduct","l":"JETHRO"},{"p":"org.apache.calcite.sql.dialect","c":"JethroDataSqlDialect","l":"JethroDataSqlDialect(SqlDialect.Context)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect.Context)"},{"p":"org.apache.calcite.sql","c":"SqlDialect.Context","l":"jethroInfo()"},{"p":"org.apache.calcite.sql.dialect","c":"JethroDataSqlDialect.JethroInfo","l":"JethroInfo(Multimap<String, JethroDataSqlDialect.JethroSupportedFunction>)","u":"%3Cinit%3E(com.google.common.collect.Multimap)"},{"p":"org.apache.calcite.schema","c":"Schema.TableType","l":"JOIN"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"JOIN"},{"p":"org.apache.calcite.sql","c":"SqlWriter.FrameTypeEnum","l":"JOIN"},{"p":"org.apache.calcite.rel.hint","c":"HintPredicates","l":"JOIN"},{"p":"org.apache.calcite.rel.rules","c":"AggregateExpandDistinctAggregatesRule.Config","l":"JOIN"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRules","l":"JOIN"},{"p":"org.apache.calcite.rel.rules","c":"SubQueryRemoveRule.Config","l":"JOIN"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"JOIN_ADD_REDUNDANT_SEMI_JOIN"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"JOIN_ASSOCIATE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"JOIN_COMMUTE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"JOIN_COMMUTE_OUTER"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"JOIN_CONDITION_PUSH"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"JOIN_DERIVE_IS_NOT_NULL_FILTER_RULE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"JOIN_EXTRACT_FILTER"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules","l":"JOIN_LEFT_INSTANCE"},{"p":"org.apache.calcite.rel.rules","c":"SingleValuesOptimizationRules","l":"JOIN_LEFT_INSTANCE"},{"p":"org.apache.calcite.rel.rules","c":"SingleValuesOptimizationRules","l":"JOIN_LEFT_PROJECT_INSTANCE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"JOIN_LEFT_UNION_TRANSPOSE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"JOIN_ON_UNIQUE_TO_SEMI_JOIN"},{"p":"org.apache.calcite.rex","c":"RexUtil.SubQueryFinder","l":"JOIN_PREDICATE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"JOIN_PROJECT_BOTH_TRANSPOSE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"JOIN_PROJECT_BOTH_TRANSPOSE_INCLUDE_OUTER"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"JOIN_PROJECT_LEFT_TRANSPOSE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"JOIN_PROJECT_LEFT_TRANSPOSE_INCLUDE_OUTER"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"JOIN_PROJECT_RIGHT_TRANSPOSE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"JOIN_PROJECT_RIGHT_TRANSPOSE_INCLUDE_OUTER"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"JOIN_PUSH_EXPRESSIONS"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"JOIN_PUSH_TRANSITIVE_PREDICATES"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"JOIN_REDUCE_EXPRESSIONS"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules","l":"JOIN_RIGHT_INSTANCE"},{"p":"org.apache.calcite.rel.rules","c":"SingleValuesOptimizationRules","l":"JOIN_RIGHT_INSTANCE"},{"p":"org.apache.calcite.rel.rules","c":"SingleValuesOptimizationRules","l":"JOIN_RIGHT_PROJECT_INSTANCE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"JOIN_RIGHT_UNION_TRANSPOSE"},{"p":"org.apache.calcite.config","c":"CalciteSystemProperty","l":"JOIN_SELECTOR_COMPACT_CODE_THRESHOLD"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"JOIN_SUB_QUERY_TO_CORRELATE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"JOIN_TO_CORRELATE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"JOIN_TO_HYPER_GRAPH"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"JOIN_TO_MULTI_JOIN"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"JOIN_TO_SEMI_JOIN"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"join(Enumerable<TInner>, FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function1<TInner, TKey>>, FunctionExpression<Function2<T, TInner, TResult>>)","u":"join(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"join(Enumerable<TInner>, FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function1<TInner, TKey>>, FunctionExpression<Function2<T, TInner, TResult>>)","u":"join(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"join(Enumerable<TInner>, FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function1<TInner, TKey>>, FunctionExpression<Function2<T, TInner, TResult>>, EqualityComparer<TKey>)","u":"join(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"join(Enumerable<TInner>, FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function1<TInner, TKey>>, FunctionExpression<Function2<T, TInner, TResult>>, EqualityComparer<TKey>)","u":"join(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"","c":"","l":"join(Enumerable<TInner>, FunctionExpression<Function1<TSource, TKey>>, FunctionExpression<Function1<TInner, TKey>>, FunctionExpression<Function2<TSource, TInner, TResult>>)"},{"p":"","c":"","l":"join(Enumerable<TInner>, FunctionExpression<Function1<TSource, TKey>>, FunctionExpression<Function1<TInner, TKey>>, FunctionExpression<Function2<TSource, TInner, TResult>>)"},{"p":"","c":"","l":"join(Enumerable<TInner>, FunctionExpression<Function1<TSource, TKey>>, FunctionExpression<Function1<TInner, TKey>>, FunctionExpression<Function2<TSource, TInner, TResult>>, EqualityComparer<TKey>)"},{"p":"","c":"","l":"join(Enumerable<TInner>, FunctionExpression<Function1<TSource, TKey>>, FunctionExpression<Function1<TInner, TKey>>, FunctionExpression<Function2<TSource, TInner, TResult>>, EqualityComparer<TKey>)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"join(JoinRelType, Iterable<? extends RexNode>)","u":"join(org.apache.calcite.rel.core.JoinRelType,java.lang.Iterable)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"join(JoinRelType, RexNode)","u":"join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"join(JoinRelType, RexNode, RexNode...)","u":"join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode...)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"join(JoinRelType, RexNode, Set<CorrelationId>)","u":"join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"join(JoinRelType, String...)","u":"join(org.apache.calcite.rel.core.JoinRelType,java.lang.String...)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"join(Queryable<T>, Enumerable<TInner>, FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function1<TInner, TKey>>, FunctionExpression<Function2<T, TInner, TResult>>)","u":"join(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"join(Queryable<T>, Enumerable<TInner>, FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function1<TInner, TKey>>, FunctionExpression<Function2<T, TInner, TResult>>)","u":"join(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"join(Queryable<T>, Enumerable<TInner>, FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function1<TInner, TKey>>, FunctionExpression<Function2<T, TInner, TResult>>, EqualityComparer<TKey>)","u":"join(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"join(Queryable<T>, Enumerable<TInner>, FunctionExpression<Function1<T, TKey>>, FunctionExpression<Function1<TInner, TKey>>, FunctionExpression<Function2<T, TInner, TResult>>, EqualityComparer<TKey>)","u":"join(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"join(Queryable<TOuter>, Enumerable<TInner>, FunctionExpression<Function1<TOuter, TKey>>, FunctionExpression<Function1<TInner, TKey>>, FunctionExpression<Function2<TOuter, TInner, TResult>>)","u":"join(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"join(Queryable<TOuter>, Enumerable<TInner>, FunctionExpression<Function1<TOuter, TKey>>, FunctionExpression<Function1<TInner, TKey>>, FunctionExpression<Function2<TOuter, TInner, TResult>>, EqualityComparer<TKey>)","u":"join(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.rel.core","c":"Join","l":"Join(RelOptCluster, RelTraitSet, List<RelHint>, RelNode, RelNode, RexNode, Set<CorrelationId>, JoinRelType)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,java.util.Set,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.rel.core","c":"Join","l":"Join(RelOptCluster, RelTraitSet, RelNode, RelNode, RexNode, JoinRelType, Set<String>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType,java.util.Set)"},{"p":"org.apache.calcite.rel.core","c":"Join","l":"Join(RelOptCluster, RelTraitSet, RelNode, RelNode, RexNode, Set<CorrelationId>, JoinRelType)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,java.util.Set,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.rel.rules","c":"JoinAddRedundantSemiJoinRule","l":"JoinAddRedundantSemiJoinRule(Class<? extends Join>, RelBuilderFactory)","u":"%3Cinit%3E(java.lang.Class,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"JoinAddRedundantSemiJoinRule","l":"JoinAddRedundantSemiJoinRule(JoinAddRedundantSemiJoinRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.JoinAddRedundantSemiJoinRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"JoinAssociateRule","l":"JoinAssociateRule(JoinAssociateRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.JoinAssociateRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"JoinAssociateRule","l":"JoinAssociateRule(RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"JoinCommuteRule","l":"JoinCommuteRule(Class<? extends Join>, RelBuilderFactory, boolean)","u":"%3Cinit%3E(java.lang.Class,org.apache.calcite.tools.RelBuilderFactory,boolean)"},{"p":"org.apache.calcite.rel.rules","c":"JoinCommuteRule","l":"JoinCommuteRule(Class<? extends Join>, RelFactories.ProjectFactory)","u":"%3Cinit%3E(java.lang.Class,org.apache.calcite.rel.core.RelFactories.ProjectFactory)"},{"p":"org.apache.calcite.rel.rules","c":"JoinCommuteRule","l":"JoinCommuteRule(Class<? extends Join>, RelFactories.ProjectFactory, boolean)","u":"%3Cinit%3E(java.lang.Class,org.apache.calcite.rel.core.RelFactories.ProjectFactory,boolean)"},{"p":"org.apache.calcite.rel.rules","c":"JoinCommuteRule","l":"JoinCommuteRule(JoinCommuteRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.JoinCommuteRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"FilterJoinRule.JoinConditionPushRule","l":"JoinConditionPushRule(FilterJoinRule.JoinConditionPushRule.JoinConditionPushRuleConfig)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.FilterJoinRule.JoinConditionPushRule.JoinConditionPushRuleConfig)"},{"p":"org.apache.calcite.rel.rules","c":"FilterJoinRule.JoinConditionPushRule","l":"JoinConditionPushRule(RelBuilderFactory, FilterJoinRule.Predicate)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory,org.apache.calcite.rel.rules.FilterJoinRule.Predicate)"},{"p":"org.apache.calcite.rel.rules","c":"FilterJoinRule.JoinConditionPushRule","l":"JoinConditionPushRule(RelFactories.FilterFactory, RelFactories.ProjectFactory, FilterJoinRule.Predicate)","u":"%3Cinit%3E(org.apache.calcite.rel.core.RelFactories.FilterFactory,org.apache.calcite.rel.core.RelFactories.ProjectFactory,org.apache.calcite.rel.rules.FilterJoinRule.Predicate)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor","l":"joinContext(SqlImplementor.Context, SqlImplementor.Context)","u":"joinContext(org.apache.calcite.rel.rel2sql.SqlImplementor.Context,org.apache.calcite.rel.rel2sql.SqlImplementor.Context)"},{"p":"org.apache.calcite.rel.rules","c":"JoinDeriveIsNotNullFilterRule","l":"JoinDeriveIsNotNullFilterRule(JoinDeriveIsNotNullFilterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.JoinDeriveIsNotNullFilterRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"JoinExtractFilterRule","l":"JoinExtractFilterRule(Class<? extends Join>, RelBuilderFactory)","u":"%3Cinit%3E(java.lang.Class,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.Struct","l":"joinFactory"},{"p":"org.apache.calcite.rel.rules","c":"MultiJoin","l":"joinFieldRefCountsMap"},{"p":"org.apache.calcite.rel.core","c":"Join","l":"joinInfo"},{"p":"org.apache.calcite.rel.core","c":"JoinInfo","l":"JoinInfo(ImmutableIntList, ImmutableIntList, ImmutableList<RexNode>)","u":"%3Cinit%3E(org.apache.calcite.util.ImmutableIntList,org.apache.calcite.util.ImmutableIntList,com.google.common.collect.ImmutableList)"},{"p":"org.apache.calcite.interpreter","c":"JoinNode","l":"JoinNode(Compiler, Join)","u":"%3Cinit%3E(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.Join)"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinRule.JoinOnUniqueToSemiJoinRule","l":"JoinOnUniqueToSemiJoinRule(SemiJoinRule.JoinOnUniqueToSemiJoinRule.JoinOnUniqueToSemiJoinRuleConfig)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.SemiJoinRule.JoinOnUniqueToSemiJoinRule.JoinOnUniqueToSemiJoinRuleConfig)"},{"p":"org.apache.calcite.rel.rules","c":"JoinProjectTransposeRule","l":"JoinProjectTransposeRule(JoinProjectTransposeRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.JoinProjectTransposeRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"JoinProjectTransposeRule","l":"JoinProjectTransposeRule(RelOptRuleOperand, String)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptRuleOperand,java.lang.String)"},{"p":"org.apache.calcite.rel.rules","c":"JoinProjectTransposeRule","l":"JoinProjectTransposeRule(RelOptRuleOperand, String, boolean, RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptRuleOperand,java.lang.String,boolean,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"JoinProjectTransposeRule","l":"JoinProjectTransposeRule(RelOptRuleOperand, String, boolean, RelFactories.ProjectFactory)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptRuleOperand,java.lang.String,boolean,org.apache.calcite.rel.core.RelFactories.ProjectFactory)"},{"p":"org.apache.calcite.rel.rules","c":"JoinProjectTransposeRule","l":"JoinProjectTransposeRule(RelOptRuleOperand, String, RelFactories.ProjectFactory)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptRuleOperand,java.lang.String,org.apache.calcite.rel.core.RelFactories.ProjectFactory)"},{"p":"org.apache.calcite.rel.rules","c":"JoinPushExpressionsRule","l":"JoinPushExpressionsRule(Class<? extends Join>, RelBuilderFactory)","u":"%3Cinit%3E(java.lang.Class,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"JoinPushExpressionsRule","l":"JoinPushExpressionsRule(Class<? extends Join>, RelFactories.ProjectFactory)","u":"%3Cinit%3E(java.lang.Class,org.apache.calcite.rel.core.RelFactories.ProjectFactory)"},{"p":"org.apache.calcite.rel.rules","c":"JoinPushExpressionsRule","l":"JoinPushExpressionsRule(JoinPushExpressionsRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.JoinPushExpressionsRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"JoinPushThroughJoinRule","l":"JoinPushThroughJoinRule(JoinPushThroughJoinRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.JoinPushThroughJoinRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"JoinPushThroughJoinRule","l":"JoinPushThroughJoinRule(String, boolean, Class<? extends Join>, RelBuilderFactory)","u":"%3Cinit%3E(java.lang.String,boolean,java.lang.Class,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"JoinPushThroughJoinRule","l":"JoinPushThroughJoinRule(String, boolean, Class<? extends Join>, RelFactories.ProjectFactory)","u":"%3Cinit%3E(java.lang.String,boolean,java.lang.Class,org.apache.calcite.rel.core.RelFactories.ProjectFactory)"},{"p":"org.apache.calcite.rel.rules","c":"JoinPushTransitivePredicatesRule","l":"JoinPushTransitivePredicatesRule(Class<? extends Join>, RelBuilderFactory)","u":"%3Cinit%3E(java.lang.Class,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"JoinPushTransitivePredicatesRule","l":"JoinPushTransitivePredicatesRule(Class<? extends Join>, RelFactories.FilterFactory)","u":"%3Cinit%3E(java.lang.Class,org.apache.calcite.rel.core.RelFactories.FilterFactory)"},{"p":"org.apache.calcite.rel.rules","c":"JoinPushTransitivePredicatesRule","l":"JoinPushTransitivePredicatesRule(JoinPushTransitivePredicatesRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.JoinPushTransitivePredicatesRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.JoinReduceExpressionsRule","l":"JoinReduceExpressionsRule(Class<? extends Join>, boolean, RelBuilderFactory)","u":"%3Cinit%3E(java.lang.Class,boolean,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.JoinReduceExpressionsRule","l":"JoinReduceExpressionsRule(Class<? extends Join>, RelBuilderFactory)","u":"%3Cinit%3E(java.lang.Class,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.JoinReduceExpressionsRule","l":"JoinReduceExpressionsRule(ReduceExpressionsRule.JoinReduceExpressionsRule.JoinReduceExpressionsRuleConfig)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.ReduceExpressionsRule.JoinReduceExpressionsRule.JoinReduceExpressionsRuleConfig)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"joinRequiresCondition()"},{"p":"org.apache.calcite.rel.rules","c":"JoinToCorrelateRule","l":"JoinToCorrelateRule(JoinToCorrelateRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.JoinToCorrelateRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"JoinToCorrelateRule","l":"JoinToCorrelateRule(RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"JoinToCorrelateRule","l":"JoinToCorrelateRule(RelFactories.FilterFactory)","u":"%3Cinit%3E(org.apache.calcite.rel.core.RelFactories.FilterFactory)"},{"p":"org.apache.calcite.rel.rules","c":"JoinToHyperGraphRule","l":"JoinToHyperGraphRule(JoinToHyperGraphRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.JoinToHyperGraphRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"JoinToMultiJoinRule","l":"JoinToMultiJoinRule(Class<? extends Join>)","u":"%3Cinit%3E(java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"JoinToMultiJoinRule","l":"JoinToMultiJoinRule(Class<? extends Join>, RelBuilderFactory)","u":"%3Cinit%3E(java.lang.Class,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"JoinToMultiJoinRule","l":"JoinToMultiJoinRule(JoinToMultiJoinRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.JoinToMultiJoinRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinRule.JoinToSemiJoinRule","l":"JoinToSemiJoinRule(Class<Join>, Class<Aggregate>, RelBuilderFactory, String)","u":"%3Cinit%3E(java.lang.Class,java.lang.Class,org.apache.calcite.tools.RelBuilderFactory,java.lang.String)"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinRule.JoinToSemiJoinRule","l":"JoinToSemiJoinRule(SemiJoinRule.JoinToSemiJoinRule.JoinToSemiJoinRuleConfig)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.SemiJoinRule.JoinToSemiJoinRule.JoinToSemiJoinRuleConfig)"},{"p":"org.apache.calcite.rel.core","c":"Correlate","l":"joinType"},{"p":"org.apache.calcite.rel.core","c":"Join","l":"joinType"},{"p":"org.apache.calcite.rel.mutable","c":"MutableCorrelate","l":"joinType"},{"p":"org.apache.calcite.rel.mutable","c":"MutableJoin","l":"joinType"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor","l":"joinType(JoinRelType)","u":"joinType(org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.rel.rules","c":"JoinUnionTransposeRule","l":"JoinUnionTransposeRule(JoinUnionTransposeRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.JoinUnionTransposeRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"JoinUnionTransposeRule","l":"JoinUnionTransposeRule(RelOptRuleOperand, RelBuilderFactory, String)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.tools.RelBuilderFactory,java.lang.String)"},{"p":"org.apache.calcite.adapter.redis","c":"RedisDataFormat","l":"JSON"},{"p":"org.apache.calcite.sql","c":"SqlExplainFormat","l":"JSON"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"JSON_API_COMMON_SYNTAX"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"JSON_API_COMMON_SYNTAX_WITH_CACHE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"JSON_ARRAY"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"JSON_ARRAY"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"JSON_ARRAYAGG"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"JSON_ARRAYAGG"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"JSON_ARRAYAGG_ADD"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"JSON_DEPTH"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"JSON_DEPTH"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"JSON_DEPTH"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"JSON_EXISTS"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"JSON_EXISTS2"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"JSON_EXISTS3"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"JSON_INSERT"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"JSON_INSERT"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"JSON_INSERT"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.JsonScope","l":"JSON_KEYS"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"JSON_KEYS"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"JSON_KEYS"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"JSON_KEYS"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.JsonScope","l":"JSON_KEYS_AND_VALUES"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"JSON_LENGTH"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"JSON_LENGTH"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"JSON_LENGTH"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"JSON_OBJECT"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"JSON_OBJECT"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"JSON_OBJECTAGG"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"JSON_OBJECTAGG"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"JSON_OBJECTAGG_ADD"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"JSON_PRETTY"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"JSON_PRETTY"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"JSON_PRETTY"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"JSON_QUERY"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"JSON_QUERY"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"JSON_REMOVE"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"JSON_REMOVE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"JSON_REMOVE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"JSON_REPLACE"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"JSON_REPLACE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"JSON_REPLACE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"JSON_SET"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"JSON_SET"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"JSON_SET"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"JSON_STORAGE_SIZE"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"JSON_STORAGE_SIZE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"JSON_STORAGE_SIZE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"JSON_TYPE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"JSON_TYPE"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"JSON_TYPE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"JSON_TYPE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"JSON_TYPE_OPERATOR"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"JSON_VALUE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"JSON_VALUE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"JSON_VALUE_EXPRESSION"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"JSON_VALUE_EXPRESSION"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"JSON_VALUE_EXPRESSION"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.JsonScope","l":"JSON_VALUES"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"jsonApiCommonSyntax(JsonFunctions.JsonValueContext)","u":"jsonApiCommonSyntax(org.apache.calcite.runtime.JsonFunctions.JsonValueContext)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"jsonApiCommonSyntax(JsonFunctions.JsonValueContext, String)","u":"jsonApiCommonSyntax(org.apache.calcite.runtime.JsonFunctions.JsonValueContext,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"jsonApiCommonSyntax(String)","u":"jsonApiCommonSyntax(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"jsonApiCommonSyntax(String, String)","u":"jsonApiCommonSyntax(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.StatefulFunction","l":"jsonApiCommonSyntaxWithCache(String, String)","u":"jsonApiCommonSyntaxWithCache(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"jsonArray(SqlJsonConstructorNullClause, Object...)","u":"jsonArray(org.apache.calcite.sql.SqlJsonConstructorNullClause,java.lang.Object...)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"jsonArrayAggAdd(List, Object, SqlJsonConstructorNullClause)","u":"jsonArrayAggAdd(java.util.List,java.lang.Object,org.apache.calcite.sql.SqlJsonConstructorNullClause)"},{"p":"org.apache.calcite.rel.externalize","c":"RelJsonWriter","l":"jsonBuilder"},{"p":"org.apache.calcite.util","c":"JsonBuilder","l":"JsonBuilder()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.model","c":"JsonColumn","l":"JsonColumn(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.model","c":"JsonCustomSchema","l":"JsonCustomSchema(String, List<Object>, Boolean, Boolean, String, Map<String, Object>)","u":"%3Cinit%3E(java.lang.String,java.util.List,java.lang.Boolean,java.lang.Boolean,java.lang.String,java.util.Map)"},{"p":"org.apache.calcite.model","c":"JsonCustomTable","l":"JsonCustomTable(String, JsonStream, String, Map<String, Object>)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.model.JsonStream,java.lang.String,java.util.Map)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"jsonDepth(JsonFunctions.JsonValueContext)","u":"jsonDepth(org.apache.calcite.runtime.JsonFunctions.JsonValueContext)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"jsonDepth(String)","u":"jsonDepth(java.lang.String)"},{"p":"org.apache.calcite.adapter.file","c":"JsonEnumerator","l":"JsonEnumerator(List<? extends Object>)","u":"%3Cinit%3E(java.util.List)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.StatefulFunction","l":"jsonExists(JsonFunctions.JsonPathContext)","u":"jsonExists(org.apache.calcite.runtime.JsonFunctions.JsonPathContext)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.StatefulFunction","l":"jsonExists(JsonFunctions.JsonPathContext, SqlJsonExistsErrorBehavior)","u":"jsonExists(org.apache.calcite.runtime.JsonFunctions.JsonPathContext,org.apache.calcite.sql.SqlJsonExistsErrorBehavior)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.StatefulFunction","l":"jsonExists(JsonFunctions.JsonValueContext, String)","u":"jsonExists(org.apache.calcite.runtime.JsonFunctions.JsonValueContext,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.StatefulFunction","l":"jsonExists(JsonFunctions.JsonValueContext, String, SqlJsonExistsErrorBehavior)","u":"jsonExists(org.apache.calcite.runtime.JsonFunctions.JsonValueContext,java.lang.String,org.apache.calcite.sql.SqlJsonExistsErrorBehavior)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.StatefulFunction","l":"jsonExists(String, String)","u":"jsonExists(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.StatefulFunction","l":"jsonExists(String, String, SqlJsonExistsErrorBehavior)","u":"jsonExists(java.lang.String,java.lang.String,org.apache.calcite.sql.SqlJsonExistsErrorBehavior)"},{"p":"org.apache.calcite.model","c":"JsonFunction","l":"JsonFunction(String, String, String, List<String>)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,java.util.List)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"jsonInsert(JsonFunctions.JsonValueContext, Object...)","u":"jsonInsert(org.apache.calcite.runtime.JsonFunctions.JsonValueContext,java.lang.Object...)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"jsonInsert(String, Object...)","u":"jsonInsert(java.lang.String,java.lang.Object...)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"JSONIZE"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"jsonize(Object)","u":"jsonize(java.lang.Object)"},{"p":"org.apache.calcite.model","c":"JsonJdbcSchema","l":"JsonJdbcSchema(String, List<Object>, Boolean, Boolean, String, String, String, String, String, String, String)","u":"%3Cinit%3E(java.lang.String,java.util.List,java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"jsonKeys(JsonFunctions.JsonPathContext)","u":"jsonKeys(org.apache.calcite.runtime.JsonFunctions.JsonPathContext)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"jsonKeys(JsonFunctions.JsonValueContext)","u":"jsonKeys(org.apache.calcite.runtime.JsonFunctions.JsonValueContext)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"jsonKeys(JsonFunctions.JsonValueContext, String)","u":"jsonKeys(org.apache.calcite.runtime.JsonFunctions.JsonValueContext,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"jsonKeys(String)","u":"jsonKeys(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"jsonKeys(String, String)","u":"jsonKeys(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.model","c":"JsonLattice","l":"JsonLattice(String, Object, Boolean, Boolean, Long, Double, String, List<JsonMeasure>)","u":"%3Cinit%3E(java.lang.String,java.lang.Object,java.lang.Boolean,java.lang.Boolean,java.lang.Long,java.lang.Double,java.lang.String,java.util.List)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"jsonLength(JsonFunctions.JsonPathContext)","u":"jsonLength(org.apache.calcite.runtime.JsonFunctions.JsonPathContext)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"jsonLength(JsonFunctions.JsonValueContext)","u":"jsonLength(org.apache.calcite.runtime.JsonFunctions.JsonValueContext)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"jsonLength(JsonFunctions.JsonValueContext, String)","u":"jsonLength(org.apache.calcite.runtime.JsonFunctions.JsonValueContext,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"jsonLength(String)","u":"jsonLength(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"jsonLength(String, String)","u":"jsonLength(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.model","c":"JsonMapSchema","l":"JsonMapSchema(String, List<Object>, Boolean, Boolean)","u":"%3Cinit%3E(java.lang.String,java.util.List,java.lang.Boolean,java.lang.Boolean)"},{"p":"org.apache.calcite.model","c":"JsonMaterialization","l":"JsonMaterialization(String, String, Object, List<String>)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.Object,java.util.List)"},{"p":"org.apache.calcite.model","c":"JsonMeasure","l":"JsonMeasure(String, Object)","u":"%3Cinit%3E(java.lang.String,java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"jsonObject(SqlJsonConstructorNullClause, Object...)","u":"jsonObject(org.apache.calcite.sql.SqlJsonConstructorNullClause,java.lang.Object...)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"jsonObjectAggAdd(Map, String, Object, SqlJsonConstructorNullClause)","u":"jsonObjectAggAdd(java.util.Map,java.lang.String,java.lang.Object,org.apache.calcite.sql.SqlJsonConstructorNullClause)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"jsonPretty(JsonFunctions.JsonValueContext)","u":"jsonPretty(org.apache.calcite.runtime.JsonFunctions.JsonValueContext)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"jsonPretty(String)","u":"jsonPretty(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.StatefulFunction","l":"jsonQuery(JsonFunctions.JsonPathContext, SqlJsonQueryWrapperBehavior, SqlJsonQueryEmptyOrErrorBehavior, SqlJsonQueryEmptyOrErrorBehavior, boolean)","u":"jsonQuery(org.apache.calcite.runtime.JsonFunctions.JsonPathContext,org.apache.calcite.sql.SqlJsonQueryWrapperBehavior,org.apache.calcite.sql.SqlJsonQueryEmptyOrErrorBehavior,org.apache.calcite.sql.SqlJsonQueryEmptyOrErrorBehavior,boolean)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.StatefulFunction","l":"jsonQuery(JsonFunctions.JsonValueContext, String, SqlJsonQueryWrapperBehavior, SqlJsonQueryEmptyOrErrorBehavior, SqlJsonQueryEmptyOrErrorBehavior, boolean)","u":"jsonQuery(org.apache.calcite.runtime.JsonFunctions.JsonValueContext,java.lang.String,org.apache.calcite.sql.SqlJsonQueryWrapperBehavior,org.apache.calcite.sql.SqlJsonQueryEmptyOrErrorBehavior,org.apache.calcite.sql.SqlJsonQueryEmptyOrErrorBehavior,boolean)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.StatefulFunction","l":"jsonQuery(String, String, SqlJsonQueryWrapperBehavior, SqlJsonQueryEmptyOrErrorBehavior, SqlJsonQueryEmptyOrErrorBehavior, boolean)","u":"jsonQuery(java.lang.String,java.lang.String,org.apache.calcite.sql.SqlJsonQueryWrapperBehavior,org.apache.calcite.sql.SqlJsonQueryEmptyOrErrorBehavior,org.apache.calcite.sql.SqlJsonQueryEmptyOrErrorBehavior,boolean)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"jsonRemove(JsonFunctions.JsonValueContext, String...)","u":"jsonRemove(org.apache.calcite.runtime.JsonFunctions.JsonValueContext,java.lang.String...)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"jsonRemove(String, String...)","u":"jsonRemove(java.lang.String,java.lang.String...)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"jsonReplace(JsonFunctions.JsonValueContext, Object...)","u":"jsonReplace(org.apache.calcite.runtime.JsonFunctions.JsonValueContext,java.lang.Object...)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"jsonReplace(String, Object...)","u":"jsonReplace(java.lang.String,java.lang.Object...)"},{"p":"org.apache.calcite.model","c":"JsonRoot","l":"JsonRoot(String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.adapter.file","c":"JsonScannableTable","l":"JsonScannableTable(Source)","u":"%3Cinit%3E(org.apache.calcite.util.Source)"},{"p":"org.apache.calcite.model","c":"JsonSchema","l":"JsonSchema(String, List<Object>, Boolean, Boolean)","u":"%3Cinit%3E(java.lang.String,java.util.List,java.lang.Boolean,java.lang.Boolean)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"jsonSet(JsonFunctions.JsonValueContext, Object...)","u":"jsonSet(org.apache.calcite.runtime.JsonFunctions.JsonValueContext,java.lang.Object...)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"jsonSet(String, Object...)","u":"jsonSet(java.lang.String,java.lang.Object...)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"jsonStorageSize(JsonFunctions.JsonValueContext)","u":"jsonStorageSize(org.apache.calcite.runtime.JsonFunctions.JsonValueContext)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"jsonStorageSize(String)","u":"jsonStorageSize(java.lang.String)"},{"p":"org.apache.calcite.model","c":"JsonStream","l":"JsonStream(Boolean, Boolean)","u":"%3Cinit%3E(java.lang.Boolean,java.lang.Boolean)"},{"p":"org.apache.calcite.adapter.file","c":"JsonTable","l":"JsonTable(Source)","u":"%3Cinit%3E(org.apache.calcite.util.Source)"},{"p":"org.apache.calcite.model","c":"JsonTable","l":"JsonTable(String, JsonStream)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.model.JsonStream)"},{"p":"org.apache.calcite.model","c":"JsonTile","l":"JsonTile(List<JsonMeasure>)","u":"%3Cinit%3E(java.util.List)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"jsonType(JsonFunctions.JsonValueContext)","u":"jsonType(org.apache.calcite.runtime.JsonFunctions.JsonValueContext)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"jsonType(String)","u":"jsonType(java.lang.String)"},{"p":"org.apache.calcite.model","c":"JsonType","l":"JsonType(String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.model","c":"JsonTypeAttribute","l":"JsonTypeAttribute(String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.StatefulFunction","l":"jsonValue(JsonFunctions.JsonPathContext, SqlJsonValueEmptyOrErrorBehavior, Object, SqlJsonValueEmptyOrErrorBehavior, Object)","u":"jsonValue(org.apache.calcite.runtime.JsonFunctions.JsonPathContext,org.apache.calcite.sql.SqlJsonValueEmptyOrErrorBehavior,java.lang.Object,org.apache.calcite.sql.SqlJsonValueEmptyOrErrorBehavior,java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.StatefulFunction","l":"jsonValue(JsonFunctions.JsonValueContext, String, SqlJsonValueEmptyOrErrorBehavior, Object, SqlJsonValueEmptyOrErrorBehavior, Object)","u":"jsonValue(org.apache.calcite.runtime.JsonFunctions.JsonValueContext,java.lang.String,org.apache.calcite.sql.SqlJsonValueEmptyOrErrorBehavior,java.lang.Object,org.apache.calcite.sql.SqlJsonValueEmptyOrErrorBehavior,java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.StatefulFunction","l":"jsonValue(String, String, SqlJsonValueEmptyOrErrorBehavior, Object, SqlJsonValueEmptyOrErrorBehavior, Object)","u":"jsonValue(java.lang.String,java.lang.String,org.apache.calcite.sql.SqlJsonValueEmptyOrErrorBehavior,java.lang.Object,org.apache.calcite.sql.SqlJsonValueEmptyOrErrorBehavior,java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions","l":"jsonValueExpression(String)","u":"jsonValueExpression(java.lang.String)"},{"p":"org.apache.calcite.model","c":"JsonView","l":"JsonView(String, JsonStream, Object, List<String>, Boolean)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.model.JsonStream,java.lang.Object,java.util.List,java.lang.Boolean)"},{"p":"org.apache.calcite.util.format.postgresql","c":"DateCalendarEnum","l":"JULIAN"},{"p":"org.apache.calcite.adapter.kafka","c":"KafkaRowConverterImpl","l":"KafkaRowConverterImpl()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.kafka","c":"KafkaTableFactory","l":"KafkaTableFactory()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.kafka","c":"KafkaTableOptions","l":"KafkaTableOptions()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings","l":"keepsOrdering(Mappings.TargetMapping)","u":"keepsOrdering(org.apache.calcite.util.mapping.Mappings.TargetMapping)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"keepSourceTypeAndTargetNullability(RelDataType, RelDataType, RelDataTypeFactory)","u":"keepSourceTypeAndTargetNullability(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.adapter.enumerable","c":"AggResultContext","l":"key()"},{"p":"org.apache.calcite.adapter.enumerable.impl","c":"AggResultContextImpl","l":"key()"},{"p":"org.apache.calcite.adapter.java","c":"Map","l":"key()"},{"p":"org.apache.calcite.adapter.enumerable","c":"AggResultContext","l":"keyField(int)"},{"p":"org.apache.calcite.adapter.enumerable.impl","c":"AggResultContextImpl","l":"keyField(int)"},{"p":"org.apache.calcite.adapter.java","c":"Map","l":"keyIsNullable()"},{"p":"org.apache.calcite.linq4j.tree","c":"Types.MapType","l":"keyIsNullable()"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"keyList"},{"p":"org.apache.calcite.adapter.enumerable","c":"AggContext","l":"keyOrdinals()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableAggregateBase.AggContextImpl","l":"keyOrdinals()"},{"p":"org.apache.calcite.adapter.enumerable","c":"AggContext","l":"keyRelTypes()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableAggregateBase.AggContextImpl","l":"keyRelTypes()"},{"p":"org.apache.calcite.rel.core","c":"Window.Group","l":"keys"},{"p":"org.apache.calcite.rel.core","c":"JoinInfo","l":"keys()"},{"p":"org.apache.calcite.rel","c":"RelCollations","l":"keysContainCollationsOrderless(List<Integer>, List<RelCollation>)","u":"keysContainCollationsOrderless(java.util.List,java.util.List)"},{"p":"org.apache.calcite.util","c":"CompositeMap","l":"keySet()"},{"p":"org.apache.calcite.adapter.enumerable","c":"AggContext","l":"keyTypes()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableAggregateBase.AggContextImpl","l":"keyTypes()"},{"p":"org.apache.calcite.sql.validate","c":"SqlMonikerType","l":"KEYWORD"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"keyword(String)","u":"keyword(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlWriter","l":"keyword(String)","u":"keyword(java.lang.String)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest","l":"keywords(String)","u":"keywords(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"keywordsLowerCase()"},{"p":"org.apache.calcite.linq4j.tree","c":"GotoStatement","l":"kind"},{"p":"org.apache.calcite.rel.core","c":"SetOp","l":"kind"},{"p":"org.apache.calcite.rel","c":"RelRoot","l":"kind"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"kind"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"kind"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.ParseResult","l":"kind()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory.Builder","l":"kind(StructKind)","u":"kind(org.apache.calcite.rel.type.StructKind)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory.FieldInfoBuilder","l":"kind(StructKind)","u":"kind(org.apache.calcite.rel.type.StructKind)"},{"p":"org.apache.calcite.sql","c":"SqlHint.HintOptionFormat","l":"KV_LIST"},{"p":"org.apache.calcite.rel.hint","c":"RelHint","l":"kvOptions"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"Label"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"label()"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"label(LabelTarget)","u":"label(org.apache.calcite.linq4j.tree.LabelTarget)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"label(LabelTarget, Expression)","u":"label(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"label(String)","u":"label(java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"label(Type)","u":"label(java.lang.reflect.Type)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"label(Type, String)","u":"label(java.lang.reflect.Type,java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"LabelStatement","l":"LabelStatement(Expression, ExpressionType)","u":"%3Cinit%3E(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.ExpressionType)"},{"p":"org.apache.calcite.linq4j.tree","c":"GotoStatement","l":"labelTarget"},{"p":"org.apache.calcite.linq4j.tree","c":"LabelTarget","l":"LabelTarget(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"LAG"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"LAG"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexImpTable.LagImplementor","l":"LagImplementor()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"Lambda"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"LAMBDA"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"LAMBDA_REF"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"lambda(BlockStatement, Iterable<? extends ParameterExpression>)","u":"lambda(org.apache.calcite.linq4j.tree.BlockStatement,java.lang.Iterable)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"lambda(BlockStatement, ParameterExpression...)","u":"lambda(org.apache.calcite.linq4j.tree.BlockStatement,org.apache.calcite.linq4j.tree.ParameterExpression...)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"lambda(Class<F>, BlockStatement, Iterable<? extends ParameterExpression>)","u":"lambda(java.lang.Class,org.apache.calcite.linq4j.tree.BlockStatement,java.lang.Iterable)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"lambda(Class<F>, BlockStatement, ParameterExpression...)","u":"lambda(java.lang.Class,org.apache.calcite.linq4j.tree.BlockStatement,org.apache.calcite.linq4j.tree.ParameterExpression...)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"lambda(Class<F>, Expression, Iterable<? extends ParameterExpression>)","u":"lambda(java.lang.Class,org.apache.calcite.linq4j.tree.Expression,java.lang.Iterable)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"lambda(Class<F>, Expression, ParameterExpression...)","u":"lambda(java.lang.Class,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.ParameterExpression...)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"lambda(Expression, Iterable<? extends ParameterExpression>)","u":"lambda(org.apache.calcite.linq4j.tree.Expression,java.lang.Iterable)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"lambda(Expression, ParameterExpression...)","u":"lambda(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.ParameterExpression...)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"lambda(F)"},{"p":"org.apache.calcite.linq4j.tree","c":"LambdaExpression","l":"LambdaExpression(ExpressionType, Class)","u":"%3Cinit%3E(org.apache.calcite.linq4j.tree.ExpressionType,java.lang.Class)"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"LARGEST_INT_OR_FIRST_NON_NULL"},{"p":"org.apache.calcite.config","c":"NullCollation","l":"LAST"},{"p":"org.apache.calcite.rel","c":"RelFieldCollation.NullDirection","l":"LAST"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"LAST"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"LAST"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"LAST_DAY"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"LAST_DAY"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"LAST_VALUE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"LAST_VALUE"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"last()"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"last()"},{"p":"org.apache.calcite.config","c":"NullCollation","l":"last(boolean)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"last(Enumerable<TSource>)","u":"last(org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"last(Enumerable<TSource>, Predicate1<TSource>)","u":"last(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"last(FunctionExpression<Predicate1<T>>)","u":"last(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"last(FunctionExpression<Predicate1<T>>)","u":"last(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"last(FunctionExpression<Predicate1<TSource>>)"},{"p":"","c":"","l":"last(FunctionExpression<Predicate1<TSource>>)"},{"p":"org.apache.calcite.util","c":"Util","l":"last(List<E>)","u":"last(java.util.List)"},{"p":"org.apache.calcite.util","c":"Util","l":"last(List<E>, int)","u":"last(java.util.List,int)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"last(Predicate1<T>)","u":"last(org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"last(Predicate1<TSource>)","u":"last(org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"last(Queryable<T>)","u":"last(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"last(Queryable<T>)","u":"last(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"last(Queryable<T>)","u":"last(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"last(Queryable<T>, FunctionExpression<Predicate1<T>>)","u":"last(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"last(Queryable<T>, FunctionExpression<Predicate1<T>>)","u":"last(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"last(Queryable<T>, FunctionExpression<Predicate1<T>>)","u":"last(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.util","c":"ImmutableIntList","l":"lastIndexOf(int)"},{"p":"org.apache.calcite.runtime","c":"ConsList","l":"lastIndexOf(Object)","u":"lastIndexOf(java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat1List","l":"lastIndexOf(Object)","u":"lastIndexOf(java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat2List","l":"lastIndexOf(Object)","u":"lastIndexOf(java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat3List","l":"lastIndexOf(Object)","u":"lastIndexOf(java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat4List","l":"lastIndexOf(Object)","u":"lastIndexOf(java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat5List","l":"lastIndexOf(Object)","u":"lastIndexOf(java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat6List","l":"lastIndexOf(Object)","u":"lastIndexOf(java.lang.Object)"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"lastIndexOf(Object)","u":"lastIndexOf(java.lang.Object)"},{"p":"org.apache.calcite.util","c":"ImmutableIntList","l":"lastIndexOf(Object)","u":"lastIndexOf(java.lang.Object)"},{"p":"org.apache.calcite.sql.type","c":"SameOperandTypeExceptLastOperandChecker","l":"lastOperandTypeName"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"lastOrDefault()"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"lastOrDefault()"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"lastOrDefault(Enumerable<TSource>)","u":"lastOrDefault(org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"lastOrDefault(Enumerable<TSource>, Predicate1<TSource>)","u":"lastOrDefault(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"lastOrDefault(FunctionExpression<Predicate1<T>>)","u":"lastOrDefault(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"lastOrDefault(FunctionExpression<Predicate1<T>>)","u":"lastOrDefault(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"lastOrDefault(FunctionExpression<Predicate1<TSource>>)"},{"p":"","c":"","l":"lastOrDefault(FunctionExpression<Predicate1<TSource>>)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"lastOrDefault(Predicate1<T>)","u":"lastOrDefault(org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"lastOrDefault(Predicate1<TSource>)","u":"lastOrDefault(org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"lastOrDefault(Queryable<T>)","u":"lastOrDefault(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"lastOrDefault(Queryable<T>)","u":"lastOrDefault(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"lastOrDefault(Queryable<T>)","u":"lastOrDefault(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"lastOrDefault(Queryable<T>, FunctionExpression<Predicate1<T>>)","u":"lastOrDefault(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"lastOrDefault(Queryable<T>, FunctionExpression<Predicate1<T>>)","u":"lastOrDefault(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"lastOrDefault(Queryable<T>, FunctionExpression<Predicate1<T>>)","u":"lastOrDefault(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.adapter.enumerable","c":"MatchUtils","l":"lastWithSymbol(String, List<E>, List<String>, int)","u":"lastWithSymbol(java.lang.String,java.util.List,java.util.List,int)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"LATERAL"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"LATERAL"},{"p":"org.apache.calcite.test.schemata.bookstore","c":"BookstoreSchema.Coordinate","l":"latitude"},{"p":"org.apache.calcite.materialize","c":"Lattice.SqlWriter","l":"lattice"},{"p":"org.apache.calcite.materialize","c":"TileKey","l":"lattice"},{"p":"org.apache.calcite.plan","c":"RelOptLattice","l":"lattice"},{"p":"org.apache.calcite.schema.impl","c":"StarTable","l":"lattice"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema.LatticeEntry","l":"LatticeEntry(CalciteSchema, String)","u":"%3Cinit%3E(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema.LatticeEntryImpl","l":"LatticeEntryImpl(CalciteSchema, String, Lattice)","u":"%3Cinit%3E(org.apache.calcite.jdbc.CalciteSchema,java.lang.String,org.apache.calcite.materialize.Lattice)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"latticeMap"},{"p":"org.apache.calcite.model","c":"JsonSchema","l":"lattices"},{"p":"org.apache.calcite.materialize","c":"LatticeSuggester","l":"LatticeSuggester(FrameworkConfig)","u":"%3Cinit%3E(org.apache.calcite.tools.FrameworkConfig)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.PathMode","l":"LAX"},{"p":"org.apache.calcite.rel","c":"RelFieldCollation.Direction","l":"lax()"},{"p":"org.apache.calcite.rel.core","c":"Spool.Type","l":"LAZY"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"LAZY_AGGREGATE_LAMBDA_FACTORY"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"LAZY_COLLECTION_SPOOL"},{"p":"org.apache.calcite.adapter.enumerable","c":"LazyAggregateLambdaFactory","l":"LazyAggregateLambdaFactory(Function0<TOrigAccumulate>, List<LazyAggregateLambdaFactory.LazyAccumulator<TOrigAccumulate, TSource>>)","u":"%3Cinit%3E(org.apache.calcite.linq4j.function.Function0,java.util.List)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"lazyCollectionSpool(Collection<TSource>, Enumerable<TSource>)","u":"lazyCollectionSpool(java.util.Collection,org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.util","c":"LazyReference","l":"LazyReference()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.enumerable","c":"LazyAggregateLambdaFactory.LazySource","l":"LazySource()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"le(BigDecimal, BigDecimal)","u":"le(java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"le(boolean, boolean)","u":"le(boolean,boolean)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"le(ByteString, ByteString)","u":"le(org.apache.calcite.avatica.util.ByteString,org.apache.calcite.avatica.util.ByteString)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"le(List<?>, List<?>)","u":"le(java.util.List,java.util.List)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"le(Object[], Object[])","u":"le(java.lang.Object[],java.lang.Object[])"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"le(RexNode, RexNode)","u":"le(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"le(String, String)","u":"le(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"le(String, String, Comparator<String>)","u":"le(java.lang.String,java.lang.String,java.util.Comparator)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"LEAD"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"LEAD"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexImpTable.LeadImplementor","l":"LeadImplementor()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.fun","c":"SqlTrimFunction.Flag","l":"LEADING"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"leadingComma()"},{"p":"org.apache.calcite.plan","c":"RelOptRuleOperandChildPolicy","l":"LEAF"},{"p":"org.apache.calcite.rel.rules","c":"LoptJoinTree.Leaf","l":"Leaf(int, LoptJoinTree)","u":"%3Cinit%3E(int,org.apache.calcite.rel.rules.LoptJoinTree)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidDateTimeUtils","l":"leafToRanges(RexCall, boolean)","u":"leafToRanges(org.apache.calcite.rex.RexCall,boolean)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"leAny(Object, Object)","u":"leAny(java.lang.Object,java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"ClassDeclarationFinder","l":"learnFinalStaticDeclarations(List<MemberDeclaration>)","u":"learnFinalStaticDeclarations(java.util.List)"},{"p":"org.apache.calcite.linq4j.tree","c":"DeterministicCodeOptimizer","l":"learnFinalStaticDeclarations(List<MemberDeclaration>)","u":"learnFinalStaticDeclarations(java.util.List)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"LEAST"},{"p":"org.apache.calcite.sql.fun","c":"OracleSqlOperatorTable","l":"LEAST"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"LEAST"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeTransforms","l":"LEAST_NULLABLE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"LEAST_PG"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"LEAST_PG"},{"p":"org.apache.calcite.sql.type","c":"SqlOperandTypeChecker.Consistency","l":"LEAST_RESTRICTIVE"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"LEAST_RESTRICTIVE"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"least(T, T)","u":"least(T,T)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory","l":"leastRestrictive(List<RelDataType>)","u":"leastRestrictive(java.util.List)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory","l":"leastRestrictive(List<RelDataType>, SqlTypeMappingRule)","u":"leastRestrictive(java.util.List,org.apache.calcite.sql.type.SqlTypeMappingRule)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactoryImpl","l":"leastRestrictive(List<RelDataType>, SqlTypeMappingRule)","u":"leastRestrictive(java.util.List,org.apache.calcite.sql.type.SqlTypeMappingRule)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFactoryImpl","l":"leastRestrictive(List<RelDataType>, SqlTypeMappingRule)","u":"leastRestrictive(java.util.List,org.apache.calcite.sql.type.SqlTypeMappingRule)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactoryImpl","l":"leastRestrictiveArrayMultisetType(List<RelDataType>, SqlTypeName)","u":"leastRestrictiveArrayMultisetType(java.util.List,org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"leastRestrictiveForComparison(RelDataTypeFactory, RelDataType, RelDataType)","u":"leastRestrictiveForComparison(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactoryImpl","l":"leastRestrictiveIntervalDatetimeType(RelDataType, RelDataType)","u":"leastRestrictiveIntervalDatetimeType(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactoryImpl","l":"leastRestrictiveMapType(List<RelDataType>, SqlTypeName)","u":"leastRestrictiveMapType(java.util.List,org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactoryImpl","l":"leastRestrictiveStructuredType(List<RelDataType>)","u":"leastRestrictiveStructuredType(java.util.List)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"leaves"},{"p":"org.apache.calcite.rel","c":"BiRel","l":"left"},{"p":"org.apache.calcite.rel.mutable","c":"MutableJoin","l":"left"},{"p":"org.apache.calcite.util","c":"Pair","l":"left"},{"p":"org.apache.calcite.linq4j","c":"JoinType","l":"LEFT"},{"p":"org.apache.calcite.rel.core","c":"JoinRelType","l":"LEFT"},{"p":"org.apache.calcite.sql","c":"JoinType","l":"LEFT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"LEFT"},{"p":"org.apache.calcite.rel.rules","c":"JoinProjectTransposeRule.Config","l":"LEFT"},{"p":"org.apache.calcite.rel.rules","c":"JoinPushThroughJoinRule.Config","l":"LEFT"},{"p":"org.apache.calcite.rel.rules","c":"JoinPushThroughJoinRule","l":"LEFT"},{"p":"org.apache.calcite.rel.rules","c":"JoinUnionTransposeRule.Config","l":"LEFT"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"LEFT"},{"p":"org.apache.calcite.util.mapping","c":"IntPair","l":"LEFT"},{"p":"org.apache.calcite.sql","c":"JoinType","l":"LEFT_ANTI_JOIN"},{"p":"org.apache.calcite.linq4j","c":"JoinType","l":"LEFT_ASOF"},{"p":"org.apache.calcite.rel.core","c":"JoinRelType","l":"LEFT_ASOF"},{"p":"org.apache.calcite.sql","c":"JoinType","l":"LEFT_ASOF"},{"p":"org.apache.calcite.plan","c":"DeriveMode","l":"LEFT_FIRST"},{"p":"org.apache.calcite.rel.rules","c":"JoinProjectTransposeRule.Config","l":"LEFT_OUTER"},{"p":"org.apache.calcite.rel.rules","c":"MultiJoinProjectTransposeRule.Config","l":"LEFT_PROJECT"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumUtils","l":"LEFT_RIGHT"},{"p":"org.apache.calcite.sql","c":"JoinType","l":"LEFT_SEMI_JOIN"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"left(ByteString, int)","u":"left(org.apache.calcite.avatica.util.ByteString,int)"},{"p":"org.apache.calcite.runtime","c":"PairList","l":"left(int)"},{"p":"org.apache.calcite.util","c":"Pair","l":"left(Iterable<? extends Map.Entry<? extends L, ? extends R>>)","u":"left(java.lang.Iterable)"},{"p":"org.apache.calcite.util","c":"Pair","l":"left(List<? extends Map.Entry<? extends K, ? extends V>>)","u":"left(java.util.List)"},{"p":"org.apache.calcite.util.mapping","c":"IntPair","l":"left(List<IntPair>)","u":"left(java.util.List)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"left(String, int)","u":"left(java.lang.String,int)"},{"p":"org.apache.calcite.plan","c":"RelOptPredicateList","l":"leftInferredPredicates"},{"p":"org.apache.calcite.rel.core","c":"EquiJoin","l":"leftKeys"},{"p":"org.apache.calcite.rel.core","c":"JoinInfo","l":"leftKeys"},{"p":"org.apache.calcite.runtime","c":"PairList","l":"leftList()"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"leftPrec(int, boolean)","u":"leftPrec(int,boolean)"},{"p":"org.apache.calcite.rel.core","c":"JoinInfo","l":"leftSet()"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"LeftShift"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"leftShift(Expression, Expression)","u":"leftShift(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"leftShift(Expression, Expression, Method)","u":"leftShift(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"LeftShiftAssign"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"leftShiftAssign(Expression, Expression)","u":"leftShiftAssign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"leftShiftAssign(Expression, Expression, Method)","u":"leftShiftAssign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"leftShiftAssign(Expression, Expression, Method, LambdaExpression)","u":"leftShiftAssign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.LambdaExpression)"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"LEN"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"LENGTH"},{"p":"org.apache.calcite.sql.util","c":"SqlBuilder","l":"length()"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"length()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"LENIENT"},{"p":"org.apache.calcite.config","c":"CalciteConnectionProperty","l":"LENIENT_OPERATOR_LOOKUP"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeCoercionRule","l":"lenientInstance()"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfig","l":"lenientOperatorLookup()"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfigImpl","l":"lenientOperatorLookup()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator.Config","l":"lenientOperatorLookup()"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"LESS_THAN"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"LESS_THAN"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"LESS_THAN_OR_EQUAL"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"LESS_THAN_OR_EQUAL"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"LESSER"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"lesser(boolean, boolean)","u":"lesser(boolean,boolean)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"lesser(byte, byte)","u":"lesser(byte,byte)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"lesser(char, char)","u":"lesser(char,char)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"lesser(double, double)","u":"lesser(double,double)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"lesser(float, float)","u":"lesser(float,float)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"lesser(int, int)","u":"lesser(int,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"lesser(List<T>, List<T>)","u":"lesser(java.util.List,java.util.List)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"lesser(long, long)","u":"lesser(long,long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"lesser(short, short)","u":"lesser(short,short)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"lesser(T, T)","u":"lesser(T,T)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"LessThan"},{"p":"org.apache.calcite.util","c":"PartiallyOrderedSet.Ordering","l":"lessThan(E, E)","u":"lessThan(E,E)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"lessThan(Expression, Expression)","u":"lessThan(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"lessThan(Expression, Expression, boolean, Method)","u":"lessThan(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,boolean,java.lang.reflect.Method)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"lessThan(RexNode, RexNode)","u":"lessThan(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.util","c":"RangeSets.Consumer","l":"lessThan(V)"},{"p":"org.apache.calcite.util","c":"RangeSets.Handler","l":"lessThan(V)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"LessThanOrEqual"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"lessThanOrEqual(Expression, Expression)","u":"lessThanOrEqual(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"lessThanOrEqual(Expression, Expression, boolean, Method)","u":"lessThanOrEqual(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,boolean,java.lang.reflect.Method)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"lessThanOrEqual(RexNode, RexNode)","u":"lessThanOrEqual(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"let(Function<RelBuilder, R>)","u":"let(java.util.function.Function)"},{"p":"org.apache.calcite.tools","c":"RelBuilder.OverCall","l":"let(Function<RelBuilder.OverCall, R>)","u":"let(java.util.function.Function)"},{"p":"org.apache.calcite.util","c":"TryThreadLocal","l":"letIn(T, Runnable)","u":"letIn(T,java.lang.Runnable)"},{"p":"org.apache.calcite.util","c":"TryThreadLocal","l":"letIn(T, Supplier<R>)","u":"letIn(T,java.util.function.Supplier)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"LEVENSHTEIN"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"LEVENSHTEIN"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"levenshtein(String, String)","u":"levenshtein(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.config","c":"CalciteConnectionProperty","l":"LEX"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfig","l":"lex()"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfigImpl","l":"lex()"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"lg"},{"p":"org.apache.calcite.test.schemata.tpch","c":"TpchSchema","l":"li(int)"},{"p":"org.apache.calcite.sql.validate","c":"SqlNameMatchers","l":"liberal()"},{"p":"org.apache.calcite.sql.fun","c":"LibraryOperator","l":"libraries()"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateForeignSchema","l":"library"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"LIKE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"LIKE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"LIKE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"LIKE_ESCAPE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"like(boolean, boolean)","u":"like(boolean,boolean)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.LikeFunction","l":"like(String, String)","u":"like(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.LikeFunction","l":"like(String, String, String)","u":"like(java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.LikeFunction","l":"LikeFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.schema.lookup","c":"LikePattern","l":"LikePattern(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.schema.lookup","c":"LikePattern","l":"likeToRegex(String)","u":"likeToRegex(java.lang.String)"},{"p":"org.apache.calcite.piglet","c":"Ast.Op","l":"LIMIT"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraRules","l":"LIMIT"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"LIMIT_MERGE"},{"p":"org.apache.calcite.rel.rules","c":"SortMergeRule.Config","l":"LIMIT_MERGE"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertQuery","l":"limit(int)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"limit(int, int)","u":"limit(int,int)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdCollation","l":"limit(RelMetadataQuery, RelNode)","u":"limit(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdDistribution","l":"limit(RelMetadataQuery, RelNode)","u":"limit(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"limitStartCountOrAllNotAllowed(String)","u":"limitStartCountOrAllNotAllowed(java.lang.String)"},{"p":"org.apache.calcite.piglet","c":"Ast.LimitStmt","l":"LimitStmt(SqlParserPos, Ast.Identifier, Ast.Identifier, Ast.Literal)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.piglet.Ast.Identifier,org.apache.calcite.piglet.Ast.Identifier,org.apache.calcite.piglet.Ast.Literal)"},{"p":"org.apache.calcite.util","c":"Util","l":"LINE_SEPARATOR"},{"p":"org.apache.calcite.util","c":"Puffin.Line","l":"line()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUtil","l":"linear(int, int, int, double, double)","u":"linear(int,int,int,double,double)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"lineColToIndex(String, int, int)","u":"lineColToIndex(java.lang.String,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"lineFolding()"},{"p":"org.apache.calcite.test.schemata.tpch","c":"TpchSchema","l":"lineitem"},{"p":"org.apache.calcite.test.schemata.tpch","c":"TpchSchema.LineItem","l":"LineItem(int)","u":"%3Cinit%3E(int)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"lineLength()"},{"p":"org.apache.calcite.adapter.os","c":"PsTableFunction.LineParser","l":"LineParser()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util","c":"Util","l":"lines(Iterable<String>)","u":"lines(java.lang.Iterable)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeUtils.SpatialType","l":"LINESTRING"},{"p":"org.apache.calcite.runtime","c":"SocketFactoryImpl","l":"LINGER"},{"p":"org.apache.calcite.test","c":"CalciteAssert.Config","l":"LINGUAL"},{"p":"org.apache.calcite.test","c":"CalciteAssert.SchemaSpec","l":"LINGUAL"},{"p":"org.apache.calcite.test.schemata.lingual","c":"LingualEmp","l":"LingualEmp(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"org.apache.calcite.test.schemata.lingual","c":"LingualSchema","l":"LingualSchema()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.materialize","c":"LatticeChildNode","l":"link"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema.EveryType","l":"list"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema","l":"list"},{"p":"org.apache.calcite.adapter.enumerable","c":"JavaRowFormat","l":"LIST"},{"p":"org.apache.calcite.adapter.redis","c":"RedisDataType","l":"LIST"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.FlatProductInputType","l":"LIST"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"LIST_CONTAINS"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"LIST_GET"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"LIST_N"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"LIST_TO_ARRAY"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"list()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserFixture","l":"list()"},{"p":"org.apache.calcite.util","c":"JsonBuilder","l":"list()"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"list(Iterable<T>)","u":"list(java.lang.Iterable)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"list(SqlWriter.FrameTypeEnum, Consumer<SqlWriter>)","u":"list(org.apache.calcite.sql.SqlWriter.FrameTypeEnum,java.util.function.Consumer)"},{"p":"org.apache.calcite.sql","c":"SqlWriter","l":"list(SqlWriter.FrameTypeEnum, Consumer<SqlWriter>)","u":"list(org.apache.calcite.sql.SqlWriter.FrameTypeEnum,java.util.function.Consumer)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"list(SqlWriter.FrameTypeEnum, SqlBinaryOperator, SqlNodeList)","u":"list(org.apache.calcite.sql.SqlWriter.FrameTypeEnum,org.apache.calcite.sql.SqlBinaryOperator,org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.sql","c":"SqlWriter","l":"list(SqlWriter.FrameTypeEnum, SqlBinaryOperator, SqlNodeList)","u":"list(org.apache.calcite.sql.SqlWriter.FrameTypeEnum,org.apache.calcite.sql.SqlBinaryOperator,org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"list(T...)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"LIST2"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"LIST3"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"LIST4"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"LIST5"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"LIST6"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"LISTAGG"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"LISTAGG"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"listBind(Member, ElementInit...)","u":"listBind(java.lang.reflect.Member,org.apache.calcite.linq4j.tree.ElementInit...)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"listBind(Member, Iterable<? extends ElementInit>)","u":"listBind(java.lang.reflect.Member,java.lang.Iterable)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"listBind(Method, ElementInit...)","u":"listBind(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.ElementInit...)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"listBind(Method, Iterable<? extends ElementInit>)","u":"listBind(java.lang.reflect.Method,java.lang.Iterable)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"ListInit"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"listInit(NewExpression, ElementInit...)","u":"listInit(org.apache.calcite.linq4j.tree.NewExpression,org.apache.calcite.linq4j.tree.ElementInit...)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"listInit(NewExpression, Expression...)","u":"listInit(org.apache.calcite.linq4j.tree.NewExpression,org.apache.calcite.linq4j.tree.Expression...)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"listInit(NewExpression, Iterable<? extends ElementInit>)","u":"listInit(org.apache.calcite.linq4j.tree.NewExpression,java.lang.Iterable)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"listInit(NewExpression, Method, Expression...)","u":"listInit(org.apache.calcite.linq4j.tree.NewExpression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression...)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"listInit(NewExpression, Method, Iterable<? extends Expression>)","u":"listInit(org.apache.calcite.linq4j.tree.NewExpression,java.lang.reflect.Method,java.lang.Iterable)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"listInitE(NewExpression, Iterable<? extends Expression>)","u":"listInitE(org.apache.calcite.linq4j.tree.NewExpression,java.lang.Iterable)"},{"p":"org.apache.calcite.linq4j.tree","c":"ListInitExpression","l":"ListInitExpression(ExpressionType, Class)","u":"%3Cinit%3E(org.apache.calcite.linq4j.tree.ExpressionType,java.lang.Class)"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat6List","l":"listIterator()"},{"p":"org.apache.calcite.runtime","c":"ConsList","l":"listIterator()"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"listIterator()"},{"p":"org.apache.calcite.util","c":"ImmutableIntList","l":"listIterator()"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat6List","l":"listIterator(int)"},{"p":"org.apache.calcite.runtime","c":"ConsList","l":"listIterator(int)"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"listIterator(int)"},{"p":"org.apache.calcite.util","c":"ChunkList","l":"listIterator(int)"},{"p":"org.apache.calcite.util","c":"ImmutableIntList","l":"listIterator(int)"},{"p":"org.apache.calcite.tools","c":"Programs","l":"listOf(List<RuleSet>)","u":"listOf(java.util.List)"},{"p":"org.apache.calcite.tools","c":"Programs","l":"listOf(RuleSet...)","u":"listOf(org.apache.calcite.tools.RuleSet...)"},{"p":"org.apache.calcite.rel.hint","c":"RelHint","l":"listOptions"},{"p":"org.apache.calcite.sql.validate","c":"ListScope","l":"ListScope(SqlValidatorScope)","u":"%3Cinit%3E(org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql.util","c":"ListSqlOperatorTable","l":"ListSqlOperatorTable()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.util","c":"ListSqlOperatorTable","l":"ListSqlOperatorTable(List<SqlOperator>)","u":"%3Cinit%3E(java.util.List)"},{"p":"org.apache.calcite.util","c":"Util","l":"listToString(List<String>)","u":"listToString(java.util.List)"},{"p":"org.apache.calcite.schema.impl","c":"ListTransientTable","l":"ListTransientTable(String, RelDataType)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.piglet","c":"Ast.Op","l":"LITERAL"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"LITERAL"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"LITERAL"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"LITERAL_AGG"},{"p":"org.apache.calcite.sql.fun","c":"SqlInternalOperators","l":"LITERAL_AGG"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"LITERAL_CHAIN"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"LITERAL_CHAIN"},{"p":"org.apache.calcite.sql","c":"SqlHint.HintOptionFormat","l":"LITERAL_LIST"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"LITERAL_OUT_OF_RANGE_MESSAGE"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"literal(int)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"literal(Object)","u":"literal(java.lang.Object)"},{"p":"org.apache.calcite.piglet","c":"PigRelBuilder","l":"literal(Object, RelDataType)","u":"literal(java.lang.Object,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.piglet","c":"Ast.Literal","l":"Literal(SqlParserPos, Object)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,java.lang.Object)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"literal(String)","u":"literal(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlWriter","l":"literal(String)","u":"literal(java.lang.String)"},{"p":"org.apache.calcite.sql.util","c":"SqlBuilder","l":"literal(String)","u":"literal(java.lang.String)"},{"p":"org.apache.calcite.sql.util","c":"SqlBuilder","l":"literal(Timestamp)","u":"literal(java.sql.Timestamp)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"literalAgg(Object)","u":"literalAgg(java.lang.Object)"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"LiteralCompiledItem","l":"LiteralCompiledItem(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.util.format","c":"FormatModels","l":"literalElement(String)","u":"literalElement(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"literalEndQuoteString"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"literalEscapedQuote"},{"p":"org.apache.calcite.sql","c":"SqlDialect.Context","l":"literalEscapedQuoteString()"},{"p":"org.apache.calcite.sql.type","c":"LiteralOperandTypeChecker","l":"LiteralOperandTypeChecker(boolean)","u":"%3Cinit%3E(boolean)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"literalQuoteString"},{"p":"org.apache.calcite.sql","c":"SqlDialect.Context","l":"literalQuoteString()"},{"p":"org.apache.calcite.adapter.druid","c":"DruidDateTimeUtils","l":"literalValue(RexNode)","u":"literalValue(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rex","c":"RexChecker","l":"litmus"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"LN"},{"p":"org.apache.calcite.piglet","c":"Ast.Op","l":"LOAD"},{"p":"org.apache.calcite.tools","c":"PigRelBuilder","l":"load(String, RexNode, RelDataType)","u":"load(java.lang.String,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.schema.lookup","c":"LoadingCacheLookup","l":"LoadingCacheLookup(Lookup<T>)","u":"%3Cinit%3E(org.apache.calcite.schema.lookup.Lookup)"},{"p":"org.apache.calcite.schema.lookup","c":"LoadingCacheLookup","l":"LoadingCacheLookup(Lookup<T>, Duration)","u":"%3Cinit%3E(org.apache.calcite.schema.lookup.Lookup,java.time.Duration)"},{"p":"org.apache.calcite.piglet","c":"Ast.LoadStmt","l":"LoadStmt(SqlParserPos, Ast.Identifier, Ast.Literal)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.piglet.Ast.Identifier,org.apache.calcite.piglet.Ast.Literal)"},{"p":"org.apache.calcite.sql.babel.postgres","c":"SqlSetOptions.Values","l":"LOCAL"},{"p":"org.apache.calcite.sql","c":"SqlDialect.CalendarPolicy","l":"LOCAL"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"LOCAL_REF"},{"p":"org.apache.calcite.schema","c":"Schema.TableType","l":"LOCAL_TEMPORARY"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"LOCAL_TIME"},{"p":"org.apache.calcite","c":"DataContext.Variable","l":"LOCAL_TIMESTAMP"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"LOCAL_TIMESTAMP"},{"p":"org.apache.calcite.test","c":"SqlOperatorTest","l":"LOCAL_TZ"},{"p":"org.apache.calcite.sql","c":"SqlCollation","l":"locale"},{"p":"org.apache.calcite.config","c":"CalciteConnectionProperty","l":"LOCALE"},{"p":"org.apache.calcite","c":"DataContext.Variable","l":"LOCALE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"LOCALE"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfig","l":"locale()"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfigImpl","l":"locale()"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"locale(DataContext)","u":"locale(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"LOCALTIME"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"localTime(DataContext)","u":"localTime(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"LOCALTIMESTAMP"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"localTimestamp(DataContext)","u":"localTimestamp(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.rel.rules","c":"PushProjector","l":"locateAllRefs()"},{"p":"org.apache.calcite.test.schemata.hr","c":"Department","l":"location"},{"p":"org.apache.calcite.test.schemata.hr","c":"Location","l":"Location(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"org.apache.calcite.test.schemata.hr","c":"HrSchema","l":"locations"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeSchemaFactory","l":"LOCATOR_HOST"},{"p":"org.apache.calcite.adapter.geode.simple","c":"GeodeSimpleSchemaFactory","l":"LOCATOR_HOST"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeSchemaFactory","l":"LOCATOR_PORT"},{"p":"org.apache.calcite.adapter.geode.simple","c":"GeodeSimpleSchemaFactory","l":"LOCATOR_PORT"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"LOG"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"LOG"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"LOG"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"LOG_MYSQL"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"LOG_POSTGRES"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"log(BigDecimal, BigDecimal, Boolean)","u":"log(java.math.BigDecimal,java.math.BigDecimal,java.lang.Boolean)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"log(BigDecimal, double, Boolean)","u":"log(java.math.BigDecimal,double,java.lang.Boolean)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"log(double, BigDecimal, boolean)","u":"log(double,java.math.BigDecimal,boolean)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"log(double, double, boolean)","u":"log(double,double,boolean)"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"LOG10"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"LOG1P"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"LOG1P"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"log1p(BigDecimal)","u":"log1p(java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"log1p(double)"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"LOG2"},{"p":"org.apache.calcite.test","c":"DiffTestCase","l":"logFile"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraSchema","l":"LOGGER"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraSchemaFactory","l":"LOGGER"},{"p":"org.apache.calcite.adapter.druid","c":"DruidDateTimeUtils","l":"LOGGER"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules","l":"LOGGER"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRules","l":"LOGGER"},{"p":"org.apache.calcite.adapter.geode.util","c":"GeodeUtils","l":"LOGGER"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules","l":"LOGGER"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoRules","l":"LOGGER"},{"p":"org.apache.calcite.plan","c":"RelOptPlanner","l":"LOGGER"},{"p":"org.apache.calcite.plan","c":"RelOptRuleCall","l":"LOGGER"},{"p":"org.apache.calcite.prepare","c":"Prepare","l":"LOGGER"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisor","l":"LOGGER"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"LOGGER"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"LOGGER"},{"p":"org.apache.calcite.util","c":"Benchmark","l":"LOGGER"},{"p":"org.apache.calcite.sql","c":"SqlExplain.Depth","l":"LOGICAL"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"LOGICAL_AND"},{"p":"org.apache.calcite.rel.core","c":"RelFactories","l":"LOGICAL_BUILDER"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"LOGICAL_OR"},{"p":"org.apache.calcite.rel.logical","c":"LogicalAggregate","l":"LogicalAggregate(RelInput)","u":"%3Cinit%3E(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalAggregate","l":"LogicalAggregate(RelOptCluster, RelNode, boolean, ImmutableBitSet, List<ImmutableBitSet>, List<AggregateCall>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalAggregate","l":"LogicalAggregate(RelOptCluster, RelTraitSet, List<RelHint>, RelNode, ImmutableBitSet, List<ImmutableBitSet>, List<AggregateCall>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalAggregate","l":"LogicalAggregate(RelOptCluster, RelTraitSet, RelNode, boolean, ImmutableBitSet, List<ImmutableBitSet>, List<AggregateCall>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalAggregate","l":"LogicalAggregate(RelOptCluster, RelTraitSet, RelNode, ImmutableBitSet, List<ImmutableBitSet>, List<AggregateCall>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalAsofJoin","l":"LogicalAsofJoin(RelInput)","u":"%3Cinit%3E(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalAsofJoin","l":"LogicalAsofJoin(RelOptCluster, RelTraitSet, List<RelHint>, RelNode, RelNode, RexNode, RexNode, JoinRelType, ImmutableList<RelDataTypeField>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType,com.google.common.collect.ImmutableList)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalCalc","l":"LogicalCalc(RelInput)","u":"%3Cinit%3E(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalCalc","l":"LogicalCalc(RelOptCluster, RelTraitSet, List<RelHint>, RelNode, RexProgram)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalCalc","l":"LogicalCalc(RelOptCluster, RelTraitSet, RelNode, RexProgram)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalCalc","l":"LogicalCalc(RelOptCluster, RelTraitSet, RelNode, RexProgram, List<RelCollation>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram,java.util.List)"},{"p":"org.apache.calcite.rel.stream","c":"LogicalChi","l":"LogicalChi(RelOptCluster, RelTraitSet, RelNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalCorrelate","l":"LogicalCorrelate(RelInput)","u":"%3Cinit%3E(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalCorrelate","l":"LogicalCorrelate(RelOptCluster, RelTraitSet, List<RelHint>, RelNode, RelNode, CorrelationId, ImmutableBitSet, JoinRelType)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.CorrelationId,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalCorrelate","l":"LogicalCorrelate(RelOptCluster, RelTraitSet, RelNode, RelNode, CorrelationId, ImmutableBitSet, JoinRelType)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.CorrelationId,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.rel.stream","c":"LogicalDelta","l":"LogicalDelta(RelInput)","u":"%3Cinit%3E(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel.stream","c":"LogicalDelta","l":"LogicalDelta(RelOptCluster, RelTraitSet, RelNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalExchange","l":"LogicalExchange(RelInput)","u":"%3Cinit%3E(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalFilter","l":"LogicalFilter(RelInput)","u":"%3Cinit%3E(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalFilter","l":"LogicalFilter(RelOptCluster, RelNode, RexNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalFilter","l":"LogicalFilter(RelOptCluster, RelTraitSet, List<RelHint>, RelNode, RexNode, ImmutableSet<CorrelationId>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,com.google.common.collect.ImmutableSet)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalFilter","l":"LogicalFilter(RelOptCluster, RelTraitSet, RelNode, RexNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalFilter","l":"LogicalFilter(RelOptCluster, RelTraitSet, RelNode, RexNode, ImmutableSet<CorrelationId>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,com.google.common.collect.ImmutableSet)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalIntersect","l":"LogicalIntersect(RelInput)","u":"%3Cinit%3E(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalIntersect","l":"LogicalIntersect(RelOptCluster, List<RelNode>, boolean)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,java.util.List,boolean)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalIntersect","l":"LogicalIntersect(RelOptCluster, RelTraitSet, List<RelHint>, List<RelNode>, boolean)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,java.util.List,boolean)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalIntersect","l":"LogicalIntersect(RelOptCluster, RelTraitSet, List<RelNode>, boolean)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,boolean)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalJoin","l":"LogicalJoin(RelInput)","u":"%3Cinit%3E(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalJoin","l":"LogicalJoin(RelOptCluster, RelNode, RelNode, RexNode, JoinRelType, Set<String>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType,java.util.Set)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalJoin","l":"LogicalJoin(RelOptCluster, RelNode, RelNode, RexNode, JoinRelType, Set<String>, boolean, ImmutableList<RelDataTypeField>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType,java.util.Set,boolean,com.google.common.collect.ImmutableList)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalJoin","l":"LogicalJoin(RelOptCluster, RelTraitSet, List<RelHint>, RelNode, RelNode, RexNode, Set<CorrelationId>, JoinRelType, boolean, ImmutableList<RelDataTypeField>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,java.util.Set,org.apache.calcite.rel.core.JoinRelType,boolean,com.google.common.collect.ImmutableList)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalJoin","l":"LogicalJoin(RelOptCluster, RelTraitSet, RelNode, RelNode, RexNode, JoinRelType, Set<String>, boolean, ImmutableList<RelDataTypeField>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType,java.util.Set,boolean,com.google.common.collect.ImmutableList)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalJoin","l":"LogicalJoin(RelOptCluster, RelTraitSet, RelNode, RelNode, RexNode, Set<CorrelationId>, JoinRelType, boolean, ImmutableList<RelDataTypeField>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,java.util.Set,org.apache.calcite.rel.core.JoinRelType,boolean,com.google.common.collect.ImmutableList)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalMatch","l":"LogicalMatch(RelOptCluster, RelTraitSet, RelNode, RelDataType, RexNode, boolean, boolean, Map<String, RexNode>, Map<String, RexNode>, RexNode, Map<String, ? extends SortedSet<String>>, boolean, ImmutableBitSet, RelCollation, RexNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean,boolean,java.util.Map,java.util.Map,org.apache.calcite.rex.RexNode,java.util.Map,boolean,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalMinus","l":"LogicalMinus(RelInput)","u":"%3Cinit%3E(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalMinus","l":"LogicalMinus(RelOptCluster, List<RelNode>, boolean)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,java.util.List,boolean)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalMinus","l":"LogicalMinus(RelOptCluster, RelTraitSet, List<RelHint>, List<RelNode>, boolean)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,java.util.List,boolean)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalMinus","l":"LogicalMinus(RelOptCluster, RelTraitSet, List<RelNode>, boolean)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,boolean)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalProject","l":"LogicalProject(RelInput)","u":"%3Cinit%3E(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalProject","l":"LogicalProject(RelOptCluster, RelNode, List<RexNode>, List<? extends String>, int)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.RelNode,java.util.List,java.util.List,int)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalProject","l":"LogicalProject(RelOptCluster, RelTraitSet, List<RelHint>, RelNode, List<? extends RexNode>, RelDataType)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalProject","l":"LogicalProject(RelOptCluster, RelTraitSet, List<RelHint>, RelNode, List<? extends RexNode>, RelDataType, Set<CorrelationId>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType,java.util.Set)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalProject","l":"LogicalProject(RelOptCluster, RelTraitSet, RelNode, List<? extends RexNode>, RelDataType)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalProject","l":"LogicalProject(RelOptCluster, RelTraitSet, RelNode, List<? extends RexNode>, RelDataType, int)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType,int)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalSnapshot","l":"LogicalSnapshot(RelInput)","u":"%3Cinit%3E(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalSnapshot","l":"LogicalSnapshot(RelOptCluster, RelTraitSet, List<RelHint>, RelNode, RexNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalSnapshot","l":"LogicalSnapshot(RelOptCluster, RelTraitSet, RelNode, RexNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalSort","l":"LogicalSort(RelInput)","u":"%3Cinit%3E(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalSortExchange","l":"LogicalSortExchange(RelInput)","u":"%3Cinit%3E(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalTableFunctionScan","l":"LogicalTableFunctionScan(RelInput)","u":"%3Cinit%3E(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalTableFunctionScan","l":"LogicalTableFunctionScan(RelOptCluster, List<RelNode>, RexNode, Type, RelDataType, Set<RelColumnMapping>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,java.util.List,org.apache.calcite.rex.RexNode,java.lang.reflect.Type,org.apache.calcite.rel.type.RelDataType,java.util.Set)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalTableFunctionScan","l":"LogicalTableFunctionScan(RelOptCluster, RelTraitSet, List<RelHint>, List<RelNode>, RexNode, Type, RelDataType, Set<RelColumnMapping>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.lang.reflect.Type,org.apache.calcite.rel.type.RelDataType,java.util.Set)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalTableFunctionScan","l":"LogicalTableFunctionScan(RelOptCluster, RelTraitSet, List<RelNode>, RexNode, Type, RelDataType, Set<RelColumnMapping>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,org.apache.calcite.rex.RexNode,java.lang.reflect.Type,org.apache.calcite.rel.type.RelDataType,java.util.Set)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalTableModify","l":"LogicalTableModify(RelInput)","u":"%3Cinit%3E(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalTableModify","l":"LogicalTableModify(RelOptCluster, RelOptTable, Prepare.CatalogReader, RelNode, TableModify.Operation, List<String>, boolean)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelOptTable,org.apache.calcite.prepare.Prepare.CatalogReader,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.TableModify.Operation,java.util.List,boolean)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalTableModify","l":"LogicalTableModify(RelOptCluster, RelTraitSet, RelOptTable, Prepare.CatalogReader, RelNode, TableModify.Operation, List<String>, List<RexNode>, boolean)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.plan.RelOptTable,org.apache.calcite.prepare.Prepare.CatalogReader,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.TableModify.Operation,java.util.List,java.util.List,boolean)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalTableScan","l":"LogicalTableScan(RelInput)","u":"%3Cinit%3E(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalTableScan","l":"LogicalTableScan(RelOptCluster, RelOptTable)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalTableScan","l":"LogicalTableScan(RelOptCluster, RelTraitSet, List<RelHint>, RelOptTable)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalTableScan","l":"LogicalTableScan(RelOptCluster, RelTraitSet, RelOptTable)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalTableSpool","l":"LogicalTableSpool(RelOptCluster, RelTraitSet, RelNode, Spool.Type, Spool.Type, RelOptTable)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Spool.Type,org.apache.calcite.rel.core.Spool.Type,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalUnion","l":"LogicalUnion(RelInput)","u":"%3Cinit%3E(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalUnion","l":"LogicalUnion(RelOptCluster, List<RelNode>, boolean)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,java.util.List,boolean)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalUnion","l":"LogicalUnion(RelOptCluster, RelTraitSet, List<RelHint>, List<RelNode>, boolean)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,java.util.List,boolean)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalUnion","l":"LogicalUnion(RelOptCluster, RelTraitSet, List<RelNode>, boolean)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,boolean)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalValues","l":"LogicalValues(RelInput)","u":"%3Cinit%3E(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalValues","l":"LogicalValues(RelOptCluster, RelDataType, ImmutableList<ImmutableList<RexLiteral>>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.type.RelDataType,com.google.common.collect.ImmutableList)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalValues","l":"LogicalValues(RelOptCluster, RelTraitSet, List<RelHint>, RelDataType, ImmutableList<ImmutableList<RexLiteral>>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,org.apache.calcite.rel.type.RelDataType,com.google.common.collect.ImmutableList)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalValues","l":"LogicalValues(RelOptCluster, RelTraitSet, RelDataType, ImmutableList<ImmutableList<RexLiteral>>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.type.RelDataType,com.google.common.collect.ImmutableList)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalWindow","l":"LogicalWindow(RelOptCluster, RelTraitSet, List<RelHint>, RelNode, List<RexLiteral>, RelDataType, List<Window.Group>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType,java.util.List)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalWindow","l":"LogicalWindow(RelOptCluster, RelTraitSet, RelNode, List<RexLiteral>, RelDataType, List<Window.Group>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType,java.util.List)"},{"p":"org.apache.calcite.chinook","c":"EnvironmentFairy","l":"login(EnvironmentFairy.User)","u":"login(org.apache.calcite.chinook.EnvironmentFairy.User)"},{"p":"org.apache.calcite.test","c":"DiffTestCase","l":"logOutputStream"},{"p":"org.apache.calcite.adapter.druid","c":"DruidType","l":"LONG"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"LONG"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"LONG_INTERVAL_DECIMAL_CAST"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"LONG_INTERVAL_DECIMAL_CAST_ROUNDING_MODE"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"LONG_OVERFLOW"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"LONG_VALUE"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"longCount()"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"longCount()"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"longCount(Enumerable<TSource>)","u":"longCount(org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"longCount(Enumerable<TSource>, Predicate1<TSource>)","u":"longCount(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"longCount(FunctionExpression<Predicate1<T>>)","u":"longCount(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"longCount(FunctionExpression<Predicate1<T>>)","u":"longCount(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"longCount(FunctionExpression<Predicate1<TSource>>)"},{"p":"","c":"","l":"longCount(FunctionExpression<Predicate1<TSource>>)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"longCount(Predicate1<T>)","u":"longCount(org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"longCount(Predicate1<TSource>)","u":"longCount(org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"longCount(Queryable<T>)","u":"longCount(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"longCount(Queryable<T>)","u":"longCount(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"longCount(Queryable<T>)","u":"longCount(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"longCount(Queryable<T>, FunctionExpression<Predicate1<T>>)","u":"longCount(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"longCount(Queryable<T>, FunctionExpression<Predicate1<T>>)","u":"longCount(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"longCount(Queryable<T>, FunctionExpression<Predicate1<T>>)","u":"longCount(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"longIntervalToDecimalCast(Integer, int, int, BigDecimal)","u":"longIntervalToDecimalCast(java.lang.Integer,int,int,java.math.BigDecimal)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"longIntervalToDecimalCast(Integer, int, int, BigDecimal, RoundingMode)","u":"longIntervalToDecimalCast(java.lang.Integer,int,int,java.math.BigDecimal,java.math.RoundingMode)"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"longLiteral(long)"},{"p":"org.apache.calcite.sql.type","c":"ExtraSqlTypes","l":"LONGNVARCHAR"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"longRelDataType"},{"p":"org.apache.calcite.schema.impl","c":"LongSchemaVersion","l":"LongSchemaVersion(long)","u":"%3Cinit%3E(long)"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.LongSum","l":"LongSum()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.test.schemata.bookstore","c":"BookstoreSchema.Coordinate","l":"longtitude"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"longValue(boolean)"},{"p":"org.apache.calcite.sql.type","c":"JavaToSqlTypeConversionRules","l":"lookup(Class)","u":"lookup(java.lang.Class)"},{"p":"org.apache.calcite.test","c":"DiffRepository","l":"lookup(Class<?>)","u":"lookup(java.lang.Class)"},{"p":"org.apache.calcite.test","c":"DiffRepository","l":"lookup(Class<?>, DiffRepository, DiffRepository.Filter, int)","u":"lookup(java.lang.Class,org.apache.calcite.test.DiffRepository,org.apache.calcite.test.DiffRepository.Filter,int)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CqlToSqlTypeConversionRules","l":"lookup(DataType)","u":"lookup(com.datastax.oss.driver.api.core.type.DataType)"},{"p":"org.apache.calcite.adapter.spark","c":"SparkMethod","l":"lookup(Method)","u":"lookup(java.lang.reflect.Method)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"lookup(SqlValidatorScope, List<String>)","u":"lookup(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List)"},{"p":"org.apache.calcite.adapter.innodb","c":"ColumnTypeToSqlTypeConversionRules","l":"lookup(String)","u":"lookup(java.lang.String)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"lookup(String)","u":"lookup(java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"MatchRecognizeNamespace","l":"lookupChild(String)","u":"lookupChild(java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingNamespace","l":"lookupChild(String)","u":"lookupChild(java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorNamespace","l":"lookupChild(String)","u":"lookupChild(java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"Types","l":"lookupConstructor(Type, Class<?>...)","u":"lookupConstructor(java.lang.reflect.Type,java.lang.Class...)"},{"p":"org.apache.calcite.plan","c":"RelOptQuery","l":"lookupCorrel(String)","u":"lookupCorrel(java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"lookupField(boolean, RelDataType, String)","u":"lookupField(boolean,org.apache.calcite.rel.type.RelDataType,java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"Types","l":"lookupField(Type, String)","u":"lookupField(java.lang.reflect.Type,java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"AggregatingSelectScope.Resolved","l":"lookupGroupingExpr(SqlNode)","u":"lookupGroupingExpr(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"lookupHints(SqlNode, SqlParserPos)","u":"lookupHints(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorWithHints","l":"lookupHints(SqlNode, SqlParserPos)","u":"lookupHints(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Blackboard","l":"lookupMeasure(SqlIdentifier)","u":"lookupMeasure(org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.sql.validate","c":"MeasureScope","l":"lookupMeasure(String)","u":"lookupMeasure(java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"Types","l":"lookupMethod(Class<?>, String, Class<?>...)","u":"lookupMethod(java.lang.Class,java.lang.String,java.lang.Class...)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"lookupNameCompletionHints(SqlValidatorScope, List<String>, SqlParserPos, Collection<SqlMoniker>)","u":"lookupNameCompletionHints(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)"},{"p":"org.apache.calcite.prepare","c":"CalciteCatalogReader","l":"lookupOperatorOverloads(SqlIdentifier, SqlFunctionCategory, SqlSyntax, List<SqlOperator>, SqlNameMatcher)","u":"lookupOperatorOverloads(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.SqlSyntax,java.util.List,org.apache.calcite.sql.validate.SqlNameMatcher)"},{"p":"org.apache.calcite.sql","c":"SqlOperatorTable","l":"lookupOperatorOverloads(SqlIdentifier, SqlFunctionCategory, SqlSyntax, List<SqlOperator>, SqlNameMatcher)","u":"lookupOperatorOverloads(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.SqlSyntax,java.util.List,org.apache.calcite.sql.validate.SqlNameMatcher)"},{"p":"org.apache.calcite.sql","c":"SqlSpatialTypeOperatorTable","l":"lookupOperatorOverloads(SqlIdentifier, SqlFunctionCategory, SqlSyntax, List<SqlOperator>, SqlNameMatcher)","u":"lookupOperatorOverloads(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.SqlSyntax,java.util.List,org.apache.calcite.sql.validate.SqlNameMatcher)"},{"p":"org.apache.calcite.sql.util","c":"ChainedSqlOperatorTable","l":"lookupOperatorOverloads(SqlIdentifier, SqlFunctionCategory, SqlSyntax, List<SqlOperator>, SqlNameMatcher)","u":"lookupOperatorOverloads(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.SqlSyntax,java.util.List,org.apache.calcite.sql.validate.SqlNameMatcher)"},{"p":"org.apache.calcite.sql.util","c":"ListSqlOperatorTable","l":"lookupOperatorOverloads(SqlIdentifier, SqlFunctionCategory, SqlSyntax, List<SqlOperator>, SqlNameMatcher)","u":"lookupOperatorOverloads(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.SqlSyntax,java.util.List,org.apache.calcite.sql.validate.SqlNameMatcher)"},{"p":"org.apache.calcite.sql.util","c":"ReflectiveSqlOperatorTable","l":"lookupOperatorOverloads(SqlIdentifier, SqlFunctionCategory, SqlSyntax, List<SqlOperator>, SqlNameMatcher)","u":"lookupOperatorOverloads(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.SqlSyntax,java.util.List,org.apache.calcite.sql.validate.SqlNameMatcher)"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"lookUpOperators(String, boolean, Consumer<SqlOperator>)","u":"lookUpOperators(java.lang.String,boolean,java.util.function.Consumer)"},{"p":"org.apache.calcite.sql.util","c":"ReflectiveSqlOperatorTable","l":"lookUpOperators(String, boolean, Consumer<SqlOperator>)","u":"lookUpOperators(java.lang.String,boolean,java.util.function.Consumer)"},{"p":"org.apache.calcite.util","c":"Compatible","l":"lookupPrivate(Class<T>)","u":"lookupPrivate(java.lang.Class)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"lookupQualifiedName(SqlNode, SqlParserPos)","u":"lookupQualifiedName(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorWithHints","l":"lookupQualifiedName(SqlNode, SqlParserPos)","u":"lookupQualifiedName(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"lookupRoutine(SqlOperatorTable, RelDataTypeFactory, SqlIdentifier, List<RelDataType>, List<String>, SqlFunctionCategory, SqlSyntax, SqlKind, SqlNameMatcher, boolean)","u":"lookupRoutine(org.apache.calcite.sql.SqlOperatorTable,org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.sql.SqlIdentifier,java.util.List,java.util.List,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.SqlSyntax,org.apache.calcite.sql.SqlKind,org.apache.calcite.sql.validate.SqlNameMatcher,boolean)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"lookupSqlFunctionByID(SqlOperatorTable, SqlIdentifier, SqlFunctionCategory)","u":"lookupSqlFunctionByID(org.apache.calcite.sql.SqlOperatorTable,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlFunctionCategory)"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"lookupSubjectRoutines(SqlOperatorTable, RelDataTypeFactory, SqlIdentifier, List<RelDataType>, List<String>, SqlSyntax, SqlKind, SqlFunctionCategory, SqlNameMatcher, boolean)","u":"lookupSubjectRoutines(org.apache.calcite.sql.SqlOperatorTable,org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.sql.SqlIdentifier,java.util.List,java.util.List,org.apache.calcite.sql.SqlSyntax,org.apache.calcite.sql.SqlKind,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.validate.SqlNameMatcher,boolean)"},{"p":"org.apache.calcite.util","c":"ReflectUtil","l":"lookupVisitMethod(Class<?>, Class<?>, String)","u":"lookupVisitMethod(java.lang.Class,java.lang.Class,java.lang.String)"},{"p":"org.apache.calcite.util","c":"ReflectUtil","l":"lookupVisitMethod(Class<?>, Class<?>, String, List<Class>)","u":"lookupVisitMethod(java.lang.Class,java.lang.Class,java.lang.String,java.util.List)"},{"p":"org.apache.calcite.util","c":"ReflectiveVisitDispatcher","l":"lookupVisitMethod(Class<? extends R>, Class<? extends E>, String)","u":"lookupVisitMethod(java.lang.Class,java.lang.Class,java.lang.String)"},{"p":"org.apache.calcite.util","c":"ReflectiveVisitDispatcher","l":"lookupVisitMethod(Class<? extends R>, Class<? extends E>, String, List<Class>)","u":"lookupVisitMethod(java.lang.Class,java.lang.Class,java.lang.String,java.util.List)"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingScope","l":"lookupWindow(String)","u":"lookupWindow(java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"ParameterScope","l":"lookupWindow(String)","u":"lookupWindow(java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"JoinScope","l":"lookupWindow(String)","u":"lookupWindow(java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"SelectScope","l":"lookupWindow(String)","u":"lookupWindow(java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope","l":"lookupWindow(String)","u":"lookupWindow(java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"Loop"},{"p":"org.apache.calcite.rel.rules","c":"LoptJoinTree","l":"LoptJoinTree(RelNode, int)","u":"%3Cinit%3E(org.apache.calcite.rel.RelNode,int)"},{"p":"org.apache.calcite.rel.rules","c":"LoptJoinTree","l":"LoptJoinTree(RelNode, LoptJoinTree.BinaryTree, boolean)","u":"%3Cinit%3E(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rules.LoptJoinTree.BinaryTree,boolean)"},{"p":"org.apache.calcite.rel.rules","c":"LoptJoinTree","l":"LoptJoinTree(RelNode, LoptJoinTree.BinaryTree, LoptJoinTree.BinaryTree)","u":"%3Cinit%3E(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rules.LoptJoinTree.BinaryTree,org.apache.calcite.rel.rules.LoptJoinTree.BinaryTree)"},{"p":"org.apache.calcite.rel.rules","c":"LoptJoinTree","l":"LoptJoinTree(RelNode, LoptJoinTree.BinaryTree, LoptJoinTree.BinaryTree, boolean)","u":"%3Cinit%3E(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rules.LoptJoinTree.BinaryTree,org.apache.calcite.rel.rules.LoptJoinTree.BinaryTree,boolean)"},{"p":"org.apache.calcite.rel.rules","c":"LoptMultiJoin","l":"LoptMultiJoin(MultiJoin)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.MultiJoin)"},{"p":"org.apache.calcite.rel.rules","c":"LoptOptimizeJoinRule","l":"LoptOptimizeJoinRule(LoptOptimizeJoinRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.LoptOptimizeJoinRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"LoptOptimizeJoinRule","l":"LoptOptimizeJoinRule(RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"LoptOptimizeJoinRule","l":"LoptOptimizeJoinRule(RelFactories.JoinFactory, RelFactories.ProjectFactory, RelFactories.FilterFactory)","u":"%3Cinit%3E(org.apache.calcite.rel.core.RelFactories.JoinFactory,org.apache.calcite.rel.core.RelFactories.ProjectFactory,org.apache.calcite.rel.core.RelFactories.FilterFactory)"},{"p":"org.apache.calcite.rel.rules","c":"LoptSemiJoinOptimizer","l":"LoptSemiJoinOptimizer(RelMetadataQuery, LoptMultiJoin, RexBuilder)","u":"%3Cinit%3E(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rex.RexBuilder)"},{"p":"org.apache.calcite.config","c":"NullCollation","l":"LOW"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"LOWER"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"LOWER"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"LOWER_BOUND_COST"},{"p":"org.apache.calcite.sql.fun","c":"SqlBetweenOperator","l":"LOWER_OPERAND"},{"p":"org.apache.calcite.runtime","c":"SpaceFillingCurve2D.AbstractRange","l":"lower()"},{"p":"org.apache.calcite.runtime","c":"SpaceFillingCurve2D.IndexRange","l":"lower()"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"lower(String)","u":"lower(java.lang.String)"},{"p":"org.apache.calcite.rel.core","c":"Window.Group","l":"lowerBound"},{"p":"org.apache.calcite.runtime","c":"BinarySearch","l":"lowerBound(T[], K, Function1<T, K>, Comparator<K>)","u":"lowerBound(T[],K,org.apache.calcite.linq4j.function.Function1,java.util.Comparator)"},{"p":"org.apache.calcite.runtime","c":"BinarySearch","l":"lowerBound(T[], K, int, int, Function1<T, K>, Comparator<K>)","u":"lowerBound(T[],K,int,int,org.apache.calcite.linq4j.function.Function1,java.util.Comparator)"},{"p":"org.apache.calcite.runtime","c":"BinarySearch","l":"lowerBound(T[], T, Comparator<T>)","u":"lowerBound(T[],T,java.util.Comparator)"},{"p":"org.apache.calcite.runtime","c":"BinarySearch","l":"lowerBound(T[], T, int, int, Comparator<T>)","u":"lowerBound(T[],T,int,int,java.util.Comparator)"},{"p":"org.apache.calcite.adapter.druid","c":"Granularity.Type","l":"lowerName"},{"p":"org.apache.calcite.rel.core","c":"JoinRelType","l":"lowerName"},{"p":"org.apache.calcite.sql","c":"JoinType","l":"lowerName"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"lowerName"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"LPAD"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"LPAD"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"lpad(ByteString, int)","u":"lpad(org.apache.calcite.avatica.util.ByteString,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"lpad(ByteString, int, ByteString)","u":"lpad(org.apache.calcite.avatica.util.ByteString,int,org.apache.calcite.avatica.util.ByteString)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"lpad(String, int)","u":"lpad(java.lang.String,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"lpad(String, int, String)","u":"lpad(java.lang.String,int,java.lang.String)"},{"p":"org.apache.calcite.piglet","c":"Ast.Op","l":"LT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"LT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"LT_NULLABLE"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"lt(BigDecimal, BigDecimal)","u":"lt(java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"lt(boolean, boolean)","u":"lt(boolean,boolean)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"lt(byte, byte)","u":"lt(byte,byte)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"lt(ByteString, ByteString)","u":"lt(org.apache.calcite.avatica.util.ByteString,org.apache.calcite.avatica.util.ByteString)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"lt(char, char)","u":"lt(char,char)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"lt(double, double)","u":"lt(double,double)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"lt(float, float)","u":"lt(float,float)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"lt(int, int)","u":"lt(int,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"lt(List<?>, List<?>)","u":"lt(java.util.List,java.util.List)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"lt(long, long)","u":"lt(long,long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"lt(Object[], Object[])","u":"lt(java.lang.Object[],java.lang.Object[])"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"lt(RexNode, RexNode)","u":"lt(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"lt(short, short)","u":"lt(short,short)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"lt(String, String)","u":"lt(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"lt(String, String, Comparator<String>)","u":"lt(java.lang.String,java.lang.String,java.util.Comparator)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"ltAny(Object, Object)","u":"ltAny(java.lang.Object,java.lang.Object)"},{"p":"org.apache.calcite.piglet","c":"Ast.Op","l":"LTE"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"ltNullable(T, T)","u":"ltNullable(T,T)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"LTRIM"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"LTRIM"},{"p":"org.apache.calcite.sql.fun","c":"OracleSqlOperatorTable","l":"LTRIM"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"LTRIM"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"ltrim(String)","u":"ltrim(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlDialect.DatabaseProduct","l":"LUCIDDB"},{"p":"org.apache.calcite.sql.dialect","c":"LucidDbSqlDialect","l":"LucidDbSqlDialect(SqlDialect.Context)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect.Context)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"M2V"},{"p":"org.apache.calcite.sql.fun","c":"SqlInternalOperators","l":"M2V"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"M2V_FINDER"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"M2X"},{"p":"org.apache.calcite.sql.fun","c":"SqlInternalOperators","l":"M2X"},{"p":"org.apache.calcite.adapter.os","c":"SqlShell","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"org.apache.calcite.adapter.spark","c":"SparkRules","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"org.apache.calcite.adapter.splunk.search","c":"SplunkConnectionImpl","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"org.apache.calcite.adapter.splunk.util","c":"StringUtils","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"org.apache.calcite","c":"Demo","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"org.apache.calcite.jdbc","c":"CalciteFactory","l":"major"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeAbstractCast(RelDataType, RexNode)","u":"makeAbstractCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeAbstractCast(RelDataType, RexNode, boolean)","u":"makeAbstractCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeAbstractCast(RelDataType, RexNode, boolean, RexLiteral)","u":"makeAbstractCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean,org.apache.calcite.rex.RexLiteral)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeAbstractCast(SqlParserPos, RelDataType, RexNode, boolean)","u":"makeAbstractCast(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeAbstractCast(SqlParserPos, RelDataType, RexNode, boolean, RexLiteral)","u":"makeAbstractCast(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean,org.apache.calcite.rex.RexLiteral)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceDecimalsRule.RexExpander","l":"makeApproxLiteral(BigDecimal)","u":"makeApproxLiteral(java.math.BigDecimal)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeApproxLiteral(BigDecimal)","u":"makeApproxLiteral(java.math.BigDecimal)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeApproxLiteral(BigDecimal, RelDataType)","u":"makeApproxLiteral(java.math.BigDecimal,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeApproxLiteral(Double, RelDataType)","u":"makeApproxLiteral(java.lang.Double,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceDecimalsRule.RexExpander","l":"makeApproxScaleFactor(int)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeBetween(RexNode, RexNode, RexNode)","u":"makeBetween(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeBigintLiteral(BigDecimal)","u":"makeBigintLiteral(java.math.BigDecimal)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"makeBinary(ExpressionType, Expression, Expression)","u":"makeBinary(org.apache.calcite.linq4j.tree.ExpressionType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"makeBinary(ExpressionType, Expression, Expression, boolean, Method)","u":"makeBinary(org.apache.calcite.linq4j.tree.ExpressionType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,boolean,java.lang.reflect.Method)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"makeBinary(ExpressionType, Expression, Expression, boolean, Method, LambdaExpression)","u":"makeBinary(org.apache.calcite.linq4j.tree.ExpressionType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,boolean,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.LambdaExpression)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeBinaryLiteral(ByteString)","u":"makeBinaryLiteral(org.apache.calcite.avatica.util.ByteString)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeCall(RelDataType, SqlOperator, List<RexNode>)","u":"makeCall(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlOperator,java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeCall(SqlOperator, List<? extends RexNode>)","u":"makeCall(org.apache.calcite.sql.SqlOperator,java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeCall(SqlOperator, RexNode...)","u":"makeCall(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rex.RexNode...)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeCall(SqlParserPos, RelDataType, SqlOperator, List<RexNode>)","u":"makeCall(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlOperator,java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeCall(SqlParserPos, SqlOperator, List<? extends RexNode>)","u":"makeCall(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlOperator,java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeCall(SqlParserPos, SqlOperator, RexNode...)","u":"makeCall(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlOperator,org.apache.calcite.rex.RexNode...)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceDecimalsRule.RexExpander","l":"makeCase(RexNode, RexNode, RexNode)","u":"makeCase(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceDecimalsRule.RexExpander","l":"makeCase(RexNode, RexNode, RexNode, RexNode, RexNode)","u":"makeCase(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeCast(RelDataType, RexNode)","u":"makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeCast(RelDataType, RexNode, boolean)","u":"makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeCast(RelDataType, RexNode, boolean, boolean)","u":"makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean,boolean)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeCast(RelDataType, RexNode, boolean, boolean, RexLiteral)","u":"makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean,boolean,org.apache.calcite.rex.RexLiteral)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeCast(SqlParserPos, RelDataType, RexNode)","u":"makeCast(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeCast(SqlParserPos, RelDataType, RexNode, boolean, boolean)","u":"makeCast(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean,boolean)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeCast(SqlParserPos, RelDataType, RexNode, boolean, boolean, RexLiteral)","u":"makeCast(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean,boolean,org.apache.calcite.rex.RexLiteral)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"makeCatchBlock(Type, ParameterExpression, Expression, Expression)","u":"makeCatchBlock(java.lang.reflect.Type,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeCharLiteral(NlsString)","u":"makeCharLiteral(org.apache.calcite.util.NlsString)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeCorrel(RelDataType, CorrelationId)","u":"makeCorrel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.CorrelationId)"},{"p":"org.apache.calcite.plan","c":"RelOptCostFactory","l":"makeCost(double, double, double)","u":"makeCost(double,double,double)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeDateLiteral(Calendar)","u":"makeDateLiteral(java.util.Calendar)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeDateLiteral(DateString)","u":"makeDateLiteral(org.apache.calcite.util.DateString)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceDecimalsRule.RexExpander","l":"makeDivide(SqlParserPos, RexNode, RexNode)","u":"makeDivide(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"makeDynamic(Type, CallSiteBinder, Expression...)","u":"makeDynamic(java.lang.reflect.Type,org.apache.calcite.linq4j.tree.CallSiteBinder,org.apache.calcite.linq4j.tree.Expression...)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"makeDynamic(Type, CallSiteBinder, Iterable<? extends Expression>)","u":"makeDynamic(java.lang.reflect.Type,org.apache.calcite.linq4j.tree.CallSiteBinder,java.lang.Iterable)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeDynamicParam(RelDataType, int)","u":"makeDynamicParam(org.apache.calcite.rel.type.RelDataType,int)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeExactLiteral(BigDecimal)","u":"makeExactLiteral(java.math.BigDecimal)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeExactLiteral(BigDecimal, RelDataType)","u":"makeExactLiteral(java.math.BigDecimal,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceDecimalsRule.RexExpander","l":"makeExactLiteral(long)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeFieldAccess(RexNode, int)","u":"makeFieldAccess(org.apache.calcite.rex.RexNode,int)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeFieldAccess(RexNode, String, boolean)","u":"makeFieldAccess(org.apache.calcite.rex.RexNode,java.lang.String,boolean)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeFlag(Enum)","u":"makeFlag(java.lang.Enum)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"makeGoto(GotoExpressionKind, LabelTarget, Expression)","u":"makeGoto(org.apache.calcite.linq4j.tree.GotoExpressionKind,org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"makeGoto(GotoExpressionKind, LabelTarget, Expression, Type)","u":"makeGoto(org.apache.calcite.linq4j.tree.GotoExpressionKind,org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)"},{"p":"org.apache.calcite.plan","c":"RelOptCostFactory","l":"makeHugeCost()"},{"p":"org.apache.calcite.util.graph","c":"Graphs","l":"makeImmutable(DirectedGraph<V, E>)","u":"makeImmutable(org.apache.calcite.util.graph.DirectedGraph)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeIn(RexNode, List<? extends RexNode>)","u":"makeIn(org.apache.calcite.rex.RexNode,java.util.List)"},{"p":"org.apache.calcite.plan","c":"RelOptCostFactory","l":"makeInfiniteCost()"},{"p":"org.apache.calcite.rex","c":"RexProgramBuilder","l":"makeInputRef(int)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeInputRef(RelDataType, int)","u":"makeInputRef(org.apache.calcite.rel.type.RelDataType,int)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeInputRef(RelNode, int)","u":"makeInputRef(org.apache.calcite.rel.RelNode,int)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeIntervalLiteral(BigDecimal, SqlIntervalQualifier)","u":"makeIntervalLiteral(java.math.BigDecimal,org.apache.calcite.sql.SqlIntervalQualifier)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeIntervalLiteral(SqlIntervalQualifier)","u":"makeIntervalLiteral(org.apache.calcite.sql.SqlIntervalQualifier)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceDecimalsRule.RexExpander","l":"makeIsNegative(RexNode)","u":"makeIsNegative(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceDecimalsRule.RexExpander","l":"makeIsPositive(RexNode)","u":"makeIsPositive(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"makeKey(RexNode)","u":"makeKey(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeLambdaCall(RexNode, List<RexLambdaRef>)","u":"makeLambdaCall(org.apache.calcite.rex.RexNode,java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeLiteral(boolean)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeLiteral(Comparable, RelDataType, SqlTypeName)","u":"makeLiteral(java.lang.Comparable,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeLiteral(Object, RelDataType)","u":"makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeLiteral(Object, RelDataType, boolean)","u":"makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeLiteral(Object, RelDataType, boolean, boolean)","u":"makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean,boolean)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeLiteral(String)","u":"makeLiteral(java.lang.String)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeLocalRef(RelDataType, int)","u":"makeLocalRef(org.apache.calcite.rel.type.RelDataType,int)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"makeMemberAccess(Expression, PseudoField)","u":"makeMemberAccess(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.PseudoField)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceDecimalsRule.RexExpander","l":"makeMinus(SqlParserPos, RexNode, RexNode)","u":"makeMinus(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceDecimalsRule.RexExpander","l":"makeMultiply(SqlParserPos, RexNode, RexNode)","u":"makeMultiply(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeNewInvocation(RelDataType, List<RexNode>)","u":"makeNewInvocation(org.apache.calcite.rel.type.RelDataType,java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeNotNull(RexNode)","u":"makeNotNull(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.sql.validate","c":"MatchRecognizeNamespace","l":"makeNullable()"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingNamespace","l":"makeNullable()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorNamespace","l":"makeNullable()"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysType","l":"makeNullable(boolean)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysTypeImpl","l":"makeNullable(boolean)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeNullable(RexNode)","u":"makeNullable(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeNullable(RexNode, boolean)","u":"makeNullable(org.apache.calcite.rex.RexNode,boolean)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"makeNullableIfOperandsAre(RelDataTypeFactory, List<RelDataType>, RelDataType)","u":"makeNullableIfOperandsAre(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"makeNullableIfOperandsAre(SqlValidator, SqlValidatorScope, SqlCall, RelDataType)","u":"makeNullableIfOperandsAre(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"makeNullaryCall(SqlIdentifier)","u":"makeNullaryCall(org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"makeNullaryCall(SqlIdentifier)","u":"makeNullaryCall(org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeNullLiteral(RelDataType)","u":"makeNullLiteral(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeNullLiteral(SqlTypeName)","u":"makeNullLiteral(org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeNullLiteral(SqlTypeName, int)","u":"makeNullLiteral(org.apache.calcite.sql.type.SqlTypeName,int)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeOver(RelDataType, SqlAggFunction, List<RexNode>, List<RexNode>, ImmutableList<RexFieldCollation>, RexWindowBound, RexWindowBound, boolean, boolean, boolean, boolean)","u":"makeOver(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlAggFunction,java.util.List,java.util.List,com.google.common.collect.ImmutableList,org.apache.calcite.rex.RexWindowBound,org.apache.calcite.rex.RexWindowBound,boolean,boolean,boolean,boolean)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeOver(RelDataType, SqlAggFunction, List<RexNode>, List<RexNode>, ImmutableList<RexFieldCollation>, RexWindowBound, RexWindowBound, boolean, boolean, boolean, boolean, boolean)","u":"makeOver(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlAggFunction,java.util.List,java.util.List,com.google.common.collect.ImmutableList,org.apache.calcite.rex.RexWindowBound,org.apache.calcite.rex.RexWindowBound,boolean,boolean,boolean,boolean,boolean)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeOver(RelDataType, SqlAggFunction, List<RexNode>, List<RexNode>, ImmutableList<RexFieldCollation>, RexWindowBound, RexWindowBound, RexWindowExclusion, boolean, boolean, boolean, boolean, boolean)","u":"makeOver(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlAggFunction,java.util.List,java.util.List,com.google.common.collect.ImmutableList,org.apache.calcite.rex.RexWindowBound,org.apache.calcite.rex.RexWindowBound,org.apache.calcite.rex.RexWindowExclusion,boolean,boolean,boolean,boolean,boolean)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makePatternFieldRef(String, RelDataType, int)","u":"makePatternFieldRef(java.lang.String,org.apache.calcite.rel.type.RelDataType,int)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceDecimalsRule.RexExpander","l":"makePlus(SqlParserPos, RexNode, RexNode)","u":"makePlus(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.rules","c":"LoptSemiJoinOptimizer","l":"makePossibleSemiJoins(LoptMultiJoin)","u":"makePossibleSemiJoins(org.apache.calcite.rel.rules.LoptMultiJoin)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makePreciseStringLiteral(ByteString, String, SqlCollation)","u":"makePreciseStringLiteral(org.apache.calcite.avatica.util.ByteString,java.lang.String,org.apache.calcite.sql.SqlCollation)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makePreciseStringLiteral(String)","u":"makePreciseStringLiteral(java.lang.String)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeRangeReference(RelDataType, int, boolean)","u":"makeRangeReference(org.apache.calcite.rel.type.RelDataType,int,boolean)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeRangeReference(RelNode)","u":"makeRangeReference(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeReinterpretCast(RelDataType, RexNode, RexNode)","u":"makeReinterpretCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeReinterpretCast(SqlParserPos, RelDataType, RexNode, RexNode)","u":"makeReinterpretCast(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.rules","c":"CalcRelSplitter.RelType","l":"makeRel(RelOptCluster, RelTraitSet, RelBuilder, RelNode, RexProgram)","u":"makeRel(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceDecimalsRule.RexExpander","l":"makeRoundFactor(int)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceDecimalsRule.RexExpander","l":"makeScaleFactor(int)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeSearchArgumentLiteral(Sarg, RelDataType)","u":"makeSearchArgumentLiteral(org.apache.calcite.util.Sarg,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUtil","l":"makeSemiJoinSelectivityRexNode(RelMetadataQuery, Join)","u":"makeSemiJoinSelectivityRexNode(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.core.Join)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"makeTernary(ExpressionType, Expression, Expression, Expression)","u":"makeTernary(org.apache.calcite.linq4j.tree.ExpressionType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeTimeLiteral(Calendar, int)","u":"makeTimeLiteral(java.util.Calendar,int)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeTimeLiteral(TimeString, int)","u":"makeTimeLiteral(org.apache.calcite.util.TimeString,int)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeTimestampLiteral(Calendar, int)","u":"makeTimestampLiteral(java.util.Calendar,int)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeTimestampLiteral(TimestampString, int)","u":"makeTimestampLiteral(org.apache.calcite.util.TimestampString,int)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeTimestampTzLiteral(TimestampWithTimeZoneString, int)","u":"makeTimestampTzLiteral(org.apache.calcite.util.TimestampWithTimeZoneString,int)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeTimestampWithLocalTimeZoneLiteral(TimestampString, int)","u":"makeTimestampWithLocalTimeZoneLiteral(org.apache.calcite.util.TimestampString,int)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeTimeTzLiteral(TimeWithTimeZoneString, int)","u":"makeTimeTzLiteral(org.apache.calcite.util.TimeWithTimeZoneString,int)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeTimeWithLocalTimeZoneLiteral(TimeString, int)","u":"makeTimeWithLocalTimeZoneLiteral(org.apache.calcite.util.TimeString,int)"},{"p":"org.apache.calcite.plan","c":"RelOptCostFactory","l":"makeTinyCost()"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"makeTry(Type, Expression, Expression, Expression, CatchBlock...)","u":"makeTry(java.lang.reflect.Type,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.CatchBlock...)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"makeTry(Type, Expression, Expression, Expression, Iterable<? extends CatchBlock>)","u":"makeTry(java.lang.reflect.Type,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.Iterable)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"makeUnary(ExpressionType, Expression)","u":"makeUnary(org.apache.calcite.linq4j.tree.ExpressionType,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"makeUnary(ExpressionType, Expression, Type, Method)","u":"makeUnary(org.apache.calcite.linq4j.tree.ExpressionType,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type,java.lang.reflect.Method)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeUuidLiteral(UUID)","u":"makeUuidLiteral(java.util.UUID)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeWindow(List<RexNode>, ImmutableList<RexFieldCollation>, RexWindowBound, RexWindowBound, boolean)","u":"makeWindow(java.util.List,com.google.common.collect.ImmutableList,org.apache.calcite.rex.RexWindowBound,org.apache.calcite.rex.RexWindowBound,boolean)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeWindow(List<RexNode>, ImmutableList<RexFieldCollation>, RexWindowBound, RexWindowBound, boolean, RexWindowExclusion)","u":"makeWindow(java.util.List,com.google.common.collect.ImmutableList,org.apache.calcite.rex.RexWindowBound,org.apache.calcite.rex.RexWindowBound,boolean,org.apache.calcite.rex.RexWindowExclusion)"},{"p":"org.apache.calcite.plan","c":"RelOptCostFactory","l":"makeZeroCost()"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"makeZeroLiteral(RelDataType)","u":"makeZeroLiteral(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.test.schemata.hr","c":"HierarchySchema.Hierarchy","l":"managerid"},{"p":"org.apache.calcite.util","c":"Optionality","l":"MANDATORY"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRelImplementor","l":"map"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQueryBase","l":"map"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator","l":"map"},{"p":"org.apache.calcite.model","c":"JsonSchema.Type","l":"MAP"},{"p":"org.apache.calcite.runtime.rtti","c":"RuntimeTypeInformation.RuntimeSqlTypeName","l":"MAP"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.FlatProductInputType","l":"MAP"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFamily","l":"MAP"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"MAP"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MAP"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraMethod","l":"MAP"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbMethod","l":"MAP"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoMethod","l":"MAP"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibrary","l":"MAP"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"MAP"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"MAP"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MAP_CLEAR"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"MAP_CONCAT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MAP_CONCAT"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"MAP_CONCAT"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"MAP_CONTAINS_KEY"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MAP_CONTAINS_KEY"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"MAP_CONTAINS_KEY"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"MAP_ENTRIES"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MAP_ENTRIES"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"MAP_ENTRIES"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"MAP_FROM_ARRAYS"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MAP_FROM_ARRAYS"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"MAP_FROM_ARRAYS"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"MAP_FROM_ENTRIES"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MAP_FROM_ENTRIES"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"MAP_FROM_ENTRIES"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"MAP_FROM_ENTRIES"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"MAP_FUNCTION"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MAP_GET"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MAP_GET_OR_DEFAULT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MAP_ITEM"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"MAP_KEY"},{"p":"org.apache.calcite.sql","c":"SqlUnnestOperator","l":"MAP_KEY_COLUMN_NAME"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"MAP_KEYS"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MAP_KEYS"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"MAP_KEYS"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MAP_PUT"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"MAP_QUERY"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"MAP_QUERY_CONSTRUCTOR"},{"p":"org.apache.calcite.piglet","c":"Ast.Op","l":"MAP_TYPE"},{"p":"org.apache.calcite.sql","c":"SqlUnnestOperator","l":"MAP_VALUE_COLUMN_NAME"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"MAP_VALUE_CONSTRUCTOR"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"MAP_VALUE_CONSTRUCTOR"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"MAP_VALUES"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MAP_VALUES"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"MAP_VALUES"},{"p":"org.apache.calcite.util","c":"EquivalenceSet","l":"map()"},{"p":"org.apache.calcite.util","c":"JsonBuilder","l":"map()"},{"p":"org.apache.calcite.util","c":"NameMap","l":"map()"},{"p":"org.apache.calcite.util","c":"NameMultimap","l":"map()"},{"p":"org.apache.calcite.schema.lookup","c":"Lookup","l":"map(BiFunction<T, String, S>)","u":"map(java.util.function.BiFunction)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"map(Object...)","u":"map(java.lang.Object...)"},{"p":"org.apache.calcite.util","c":"RangeSets","l":"map(Range<C>, RangeSets.Handler<C, R>)","u":"map(com.google.common.collect.Range,org.apache.calcite.util.RangeSets.Handler)"},{"p":"org.apache.calcite.util","c":"RangeSets","l":"map(RangeSet<C>, RangeSets.Handler<C, Range<C2>>)","u":"map(com.google.common.collect.RangeSet,org.apache.calcite.util.RangeSets.Handler)"},{"p":"org.apache.calcite.rex","c":"RexSubQuery","l":"map(RelNode)","u":"map(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"mapConcat(Map...)","u":"mapConcat(java.util.Map...)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"mapContainsKey(Map, Object)","u":"mapContainsKey(java.util.Map,java.lang.Object)"},{"p":"org.apache.calcite.plan","c":"RelOptQuery","l":"mapCorrel(String, RelNode)","u":"mapCorrel(java.lang.String,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"mapDescToRule"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"mapEntries(Map<Object, Object>)","u":"mapEntries(java.util.Map)"},{"p":"org.apache.calcite.runtime","c":"MapEntry","l":"MapEntry(T, U)","u":"%3Cinit%3E(T,U)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"mapFromArrays(List, List)","u":"mapFromArrays(java.util.List,java.util.List)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"mapFromEntries(List)","u":"mapFromEntries(java.util.List)"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.MapFunction","l":"MapFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"mapItem(Map, Object)","u":"mapItem(java.util.Map,java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"mapItemOptional(Map, Object)","u":"mapItemOptional(java.util.Map,java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"mapKeys(Map)","u":"mapKeys(java.util.Map)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"mapNameToIndex(List<RelDataTypeField>)","u":"mapNameToIndex(java.util.List)"},{"p":"org.apache.calcite.util","c":"Util","l":"mapOf(K, V, Object...)","u":"mapOf(K,V,java.lang.Object...)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"mapQuery(Function<RelBuilder, RelNode>)","u":"mapQuery(java.util.function.Function)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"mapRequiresEvenArgCount()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"mapRequiresTwoOrMoreArgs()"},{"p":"org.apache.calcite.sql.type","c":"MapSqlType","l":"MapSqlType(RelDataType, RelDataType, boolean)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,boolean)"},{"p":"org.apache.calcite.prepare","c":"Prepare","l":"mapTableModOp(boolean, SqlKind)","u":"mapTableModOp(boolean,org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.piglet","c":"Ast.MapType","l":"MapType(SqlParserPos)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.linq4j.tree","c":"Types.MapType","l":"MapType(Type, boolean, Type, boolean)","u":"%3Cinit%3E(java.lang.reflect.Type,boolean,java.lang.reflect.Type,boolean)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"mapValues(Map)","u":"mapValues(java.util.Map)"},{"p":"org.apache.calcite.rel.metadata","c":"NullSentinel","l":"mask(Comparable)","u":"mask(java.lang.Comparable)"},{"p":"org.apache.calcite.rel.metadata","c":"NullSentinel","l":"mask(Object)","u":"mask(java.lang.Object)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MATCH"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"MATCH"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules","l":"MATCH_FACTORY"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"MATCH_NUMBER"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"MATCH_NUMBER"},{"p":"org.apache.calcite.sql","c":"SqlFunctionCategory","l":"MATCH_RECOGNIZE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"MATCH_RECOGNIZE"},{"p":"org.apache.calcite.plan.hep","c":"HepProgram","l":"MATCH_UNTIL_FIXPOINT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MATCH_UTILS_LAST_WITH_SYMBOL"},{"p":"org.apache.calcite.runtime","c":"Matcher","l":"match(E...)"},{"p":"org.apache.calcite.runtime","c":"Enumerables","l":"match(Enumerable<E>, Function1<E, TKey>, Matcher<E>, Enumerables.Emitter<E, TResult>, int, int)","u":"match(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.runtime.Matcher,org.apache.calcite.runtime.Enumerables.Emitter,int,int)"},{"p":"org.apache.calcite.runtime","c":"Matcher","l":"match(Iterable<E>)","u":"match(java.lang.Iterable)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdCollation","l":"match(RelMetadataQuery, RelNode, RelDataType, RexNode, boolean, boolean, Map<String, RexNode>, Map<String, RexNode>, RexNode, Map<String, ? extends SortedSet<String>>, boolean, ImmutableBitSet, RelCollation, RexNode)","u":"match(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean,boolean,java.util.Map,java.util.Map,org.apache.calcite.rex.RexNode,java.util.Map,boolean,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.core","c":"Match","l":"Match(RelOptCluster, RelTraitSet, RelNode, RelDataType, RexNode, boolean, boolean, Map<String, RexNode>, Map<String, RexNode>, RexNode, Map<String, ? extends SortedSet<String>>, boolean, ImmutableBitSet, RelCollation, RexNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean,boolean,java.util.Map,java.util.Map,org.apache.calcite.rex.RexNode,java.util.Map,boolean,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"match(RexNode, boolean, boolean, Map<String, RexNode>, Iterable<? extends RexNode>, RexNode, Map<String, ? extends SortedSet<String>>, boolean, Iterable<? extends RexNode>, Iterable<? extends RexNode>, RexNode)","u":"match(org.apache.calcite.rex.RexNode,boolean,boolean,java.util.Map,java.lang.Iterable,org.apache.calcite.rex.RexNode,java.util.Map,boolean,java.lang.Iterable,java.lang.Iterable,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rex","c":"RexPattern","l":"match(RexNode, RexAction)","u":"match(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexAction)"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor.UnifyRule","l":"match(SubstitutionVisitor, MutableRel, MutableRel)","u":"match(org.apache.calcite.plan.SubstitutionVisitor,org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.mutable.MutableRel)"},{"p":"org.apache.calcite.rel.core","c":"AsofJoin","l":"matchCondition"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"matchConditionRequiresAsof()"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MATCHER_BUILDER"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MATCHER_BUILDER_ADD"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MATCHER_BUILDER_BUILD"},{"p":"org.apache.calcite.schema.lookup","c":"LikePattern","l":"matcher()"},{"p":"org.apache.calcite.schema.lookup","c":"LikePattern","l":"matcher(String)","u":"matcher(java.lang.String)"},{"p":"org.apache.calcite.util","c":"Puffin.Line","l":"matcher(String)","u":"matcher(java.lang.String)"},{"p":"org.apache.calcite.util","c":"Util","l":"matches(boolean, String, String)","u":"matches(boolean,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.test","c":"Unsafe","l":"matches(Matcher<T>, Object)","u":"matches(org.hamcrest.Matcher,java.lang.Object)"},{"p":"org.apache.calcite.test","c":"Matchers.IsWithin","l":"matches(Object)","u":"matches(java.lang.Object)"},{"p":"org.apache.calcite.plan","c":"RelOptRule.ConverterRelOptRuleOperand","l":"matches(RelNode)","u":"matches(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan","c":"RelOptRuleOperand","l":"matches(RelNode)","u":"matches(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraRules.CassandraFilterRule","l":"matches(RelOptRuleCall)","u":"matches(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraRules.CassandraProjectRule","l":"matches(RelOptRuleCall)","u":"matches(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraRules.CassandraSortRule","l":"matches(RelOptRuleCall)","u":"matches(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules.DruidProjectRule","l":"matches(RelOptRuleCall)","u":"matches(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableBatchNestedLoopJoinRule","l":"matches(RelOptRuleCall)","u":"matches(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableMergeUnionRule","l":"matches(RelOptRuleCall)","u":"matches(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeRules.GeodeFilterRule","l":"matches(RelOptRuleCall)","u":"matches(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbRules.InnodbProjectRule","l":"matches(RelOptRuleCall)","u":"matches(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbRules.InnodbSortFilterRule","l":"matches(RelOptRuleCall)","u":"matches(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbRules.InnodbSortTableScanRule","l":"matches(RelOptRuleCall)","u":"matches(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcJoinRule","l":"matches(RelOptRuleCall)","u":"matches(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules.JdbcProjectRule","l":"matches(RelOptRuleCall)","u":"matches(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableProjectRule","l":"matches(RelOptRuleCall)","u":"matches(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.plan","c":"RelOptRule","l":"matches(RelOptRuleCall)","u":"matches(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateCaseToFilterRule","l":"matches(RelOptRuleCall)","u":"matches(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateProjectConstantToDummyJoinRule","l":"matches(RelOptRuleCall)","u":"matches(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateReduceFunctionsRule","l":"matches(RelOptRuleCall)","u":"matches(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"FilterFlattenCorrelatedConditionRule","l":"matches(RelOptRuleCall)","u":"matches(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"JoinCommuteRule","l":"matches(RelOptRuleCall)","u":"matches(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"JoinToCorrelateRule","l":"matches(RelOptRuleCall)","u":"matches(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"JoinToMultiJoinRule","l":"matches(RelOptRuleCall)","u":"matches(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule","l":"matches(RelOptRuleCall)","u":"matches(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectMergeRule","l":"matches(RelOptRuleCall)","u":"matches(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinRule.JoinOnUniqueToSemiJoinRule","l":"matches(RelOptRuleCall)","u":"matches(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"SortJoinTransposeRule","l":"matches(RelOptRuleCall)","u":"matches(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"SortUnionTransposeRule","l":"matches(RelOptRuleCall)","u":"matches(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"UnionEliminatorRule","l":"matches(RelOptRuleCall)","u":"matches(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"UnionMergeRule","l":"matches(RelOptRuleCall)","u":"matches(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.plan","c":"RelTraitSet","l":"matches(RelTraitSet)","u":"matches(org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.util","c":"Puffin.Line","l":"matches(String)","u":"matches(java.lang.String)"},{"p":"org.apache.calcite.prepare","c":"CalciteCatalogReader","l":"matches(String, String)","u":"matches(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"SqlNameMatcher","l":"matches(String, String)","u":"matches(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorCatalogReader","l":"matches(String, String)","u":"matches(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor.Operand","l":"matches(SubstitutionVisitor, MutableRel)","u":"matches(org.apache.calcite.plan.SubstitutionVisitor,org.apache.calcite.rel.mutable.MutableRel)"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.Struct","l":"matchFactory"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor.MatchFailed","l":"MatchFailed()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"matchFolding()"},{"p":"org.apache.calcite.rel.rules","c":"ExchangeRemoveConstantKeysRule.Config","l":"matchHandler()"},{"p":"org.apache.calcite.rel.rules","c":"SortMergeRule.Config","l":"matchHandler()"},{"p":"org.apache.calcite.rel.rules","c":"SubQueryRemoveRule.Config","l":"matchHandler()"},{"p":"org.apache.calcite.rel.rules","c":"ValuesReduceRule.Config","l":"matchHandler()"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.Config","l":"matchNullability()"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"matchNullability(RelDataType, RexNode)","u":"matchNullability(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.rules","c":"SortUnionTransposeRule.Config","l":"matchNullFetch()"},{"p":"org.apache.calcite.runtime","c":"Matcher","l":"matchOne(MemoryFactory.Memory<E>, Matcher.PartitionState<E>, Consumer<Matcher.PartialMatch<E>>)","u":"matchOne(org.apache.calcite.linq4j.MemoryFactory.Memory,org.apache.calcite.runtime.Matcher.PartitionState,java.util.function.Consumer)"},{"p":"org.apache.calcite.runtime","c":"Matcher","l":"matchOneWithSymbols(MemoryFactory.Memory<E>, Matcher.PartitionState<E>)","u":"matchOneWithSymbols(org.apache.calcite.linq4j.MemoryFactory.Memory,org.apache.calcite.runtime.Matcher.PartitionState)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.MatchRecognizeContext","l":"MatchRecognizeContext(SqlDialect, Map<String, RelDataType>)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect,java.util.Map)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor","l":"matchRecognizeContext(SqlImplementor.Context)","u":"matchRecognizeContext(org.apache.calcite.rel.rel2sql.SqlImplementor.Context)"},{"p":"org.apache.calcite.sql.validate","c":"MatchRecognizeNamespace","l":"MatchRecognizeNamespace(SqlValidatorImpl, SqlMatchRecognize, SqlNode)","u":"%3Cinit%3E(org.apache.calcite.sql.validate.SqlValidatorImpl,org.apache.calcite.sql.SqlMatchRecognize,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"MatchRecognizeScope","l":"MatchRecognizeScope(SqlValidatorScope, SqlMatchRecognize)","u":"%3Cinit%3E(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlMatchRecognize)"},{"p":"org.apache.calcite.sql.type","c":"MatchReturnTypeInference","l":"MatchReturnTypeInference(int, Iterable<SqlTypeName>)","u":"%3Cinit%3E(int,java.lang.Iterable)"},{"p":"org.apache.calcite.sql.type","c":"MatchReturnTypeInference","l":"MatchReturnTypeInference(int, SqlTypeName...)","u":"%3Cinit%3E(int,org.apache.calcite.sql.type.SqlTypeName...)"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"matchRoutinesByParameterCount(SqlOperatorTable, SqlIdentifier, List<RelDataType>, SqlFunctionCategory, SqlNameMatcher)","u":"matchRoutinesByParameterCount(org.apache.calcite.sql.SqlOperatorTable,org.apache.calcite.sql.SqlIdentifier,java.util.List,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.validate.SqlNameMatcher)"},{"p":"org.apache.calcite.rel.rules","c":"MatchRule","l":"MatchRule(MatchRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.MatchRule.Config)"},{"p":"org.apache.calcite.schema.impl","c":"MaterializedViewTable","l":"MATERIALIZATION_CONNECTION"},{"p":"org.apache.calcite.plan","c":"RelOptRules","l":"MATERIALIZATION_RULES"},{"p":"org.apache.calcite.prepare","c":"Prepare.Materialization","l":"Materialization(CalciteSchema.TableEntry, String, List<String>)","u":"%3Cinit%3E(org.apache.calcite.jdbc.CalciteSchema.TableEntry,java.lang.String,java.util.List)"},{"p":"org.apache.calcite.materialize","c":"MaterializationKey","l":"MaterializationKey()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.model","c":"JsonSchema","l":"materializations"},{"p":"org.apache.calcite.config","c":"CalciteConnectionProperty","l":"MATERIALIZATIONS_ENABLED"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfig","l":"materializationsEnabled()"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfigImpl","l":"materializationsEnabled()"},{"p":"org.apache.calcite.prepare","c":"Prepare.Materialization","l":"materialize(RelNode, RelOptTable)","u":"materialize(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.schema","c":"Schema.TableType","l":"MATERIALIZED_QUERY_TABLE"},{"p":"org.apache.calcite.schema","c":"Schema.TableType","l":"MATERIALIZED_VIEW"},{"p":"org.apache.calcite.rel.rules","c":"MaterializedViewFilterScanRule","l":"MaterializedViewFilterScanRule(MaterializedViewFilterScanRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.MaterializedViewFilterScanRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"MaterializedViewFilterScanRule","l":"MaterializedViewFilterScanRule(RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewOnlyAggregateRule","l":"MaterializedViewOnlyAggregateRule(RelBuilderFactory, boolean, HepProgram)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory,boolean,org.apache.calcite.plan.hep.HepProgram)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewOnlyAggregateRule","l":"MaterializedViewOnlyAggregateRule(RelOptRuleOperand, RelBuilderFactory, String, boolean, HepProgram, RelOptRule, RelOptRule, RelOptRule, RelOptRule)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.tools.RelBuilderFactory,java.lang.String,boolean,org.apache.calcite.plan.hep.HepProgram,org.apache.calcite.plan.RelOptRule,org.apache.calcite.plan.RelOptRule,org.apache.calcite.plan.RelOptRule,org.apache.calcite.plan.RelOptRule)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewOnlyFilterRule","l":"MaterializedViewOnlyFilterRule(RelBuilderFactory, boolean, HepProgram, boolean)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory,boolean,org.apache.calcite.plan.hep.HepProgram,boolean)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewOnlyJoinRule","l":"MaterializedViewOnlyJoinRule(RelBuilderFactory, boolean, HepProgram, boolean)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory,boolean,org.apache.calcite.plan.hep.HepProgram,boolean)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewProjectAggregateRule","l":"MaterializedViewProjectAggregateRule(RelBuilderFactory, boolean, HepProgram)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory,boolean,org.apache.calcite.plan.hep.HepProgram)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewProjectAggregateRule","l":"MaterializedViewProjectAggregateRule(RelBuilderFactory, boolean, HepProgram, RelOptRule, RelOptRule, RelOptRule, RelOptRule)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory,boolean,org.apache.calcite.plan.hep.HepProgram,org.apache.calcite.plan.RelOptRule,org.apache.calcite.plan.RelOptRule,org.apache.calcite.plan.RelOptRule,org.apache.calcite.plan.RelOptRule)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewProjectFilterRule","l":"MaterializedViewProjectFilterRule(RelBuilderFactory, boolean, HepProgram, boolean)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory,boolean,org.apache.calcite.plan.hep.HepProgram,boolean)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewProjectJoinRule","l":"MaterializedViewProjectJoinRule(RelBuilderFactory, boolean, HepProgram, boolean)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory,boolean,org.apache.calcite.plan.hep.HepProgram,boolean)"},{"p":"org.apache.calcite.plan","c":"MaterializedViewSubstitutionVisitor","l":"MaterializedViewSubstitutionVisitor(RelNode, RelNode)","u":"%3Cinit%3E(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan","c":"MaterializedViewSubstitutionVisitor","l":"MaterializedViewSubstitutionVisitor(RelNode, RelNode, RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.schema.impl","c":"MaterializedViewTable","l":"MaterializedViewTable(Type, RelProtoDataType, String, List<String>, List<String>, MaterializationKey)","u":"%3Cinit%3E(java.lang.reflect.Type,org.apache.calcite.rel.type.RelProtoDataType,java.lang.String,java.util.List,java.util.List,org.apache.calcite.materialize.MaterializationKey)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MATH_MAX"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MATH_MIN"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"max"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"MAX"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"MAX"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"MAX_BY"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"MAX_DATETIME_PRECISION"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"MAX_INTERVAL_FRACTIONAL_SECOND_PRECISION"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"MAX_INTERVAL_START_PRECISION"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MAX_ROW_COUNT"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"max()"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"max()"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.MaxBigDecimal","l":"max(BigDecimal, BigDecimal)","u":"max(java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"max(BigDecimalFunction1<T>)","u":"max(org.apache.calcite.linq4j.function.BigDecimalFunction1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"max(BigDecimalFunction1<TSource>)","u":"max(org.apache.calcite.linq4j.function.BigDecimalFunction1)"},{"p":"org.apache.calcite.util","c":"NumberUtil","l":"max(Double, Double)","u":"max(java.lang.Double,java.lang.Double)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"max(DoubleFunction1<T>)","u":"max(org.apache.calcite.linq4j.function.DoubleFunction1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"max(DoubleFunction1<TSource>)","u":"max(org.apache.calcite.linq4j.function.DoubleFunction1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"max(Enumerable<TSource>)","u":"max(org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"max(Enumerable<TSource>, BigDecimalFunction1<TSource>)","u":"max(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.BigDecimalFunction1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"max(Enumerable<TSource>, DoubleFunction1<TSource>)","u":"max(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.DoubleFunction1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"max(Enumerable<TSource>, FloatFunction1<TSource>)","u":"max(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.FloatFunction1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"max(Enumerable<TSource>, Function1<TSource, TResult>)","u":"max(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"max(Enumerable<TSource>, IntegerFunction1<TSource>)","u":"max(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.IntegerFunction1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"max(Enumerable<TSource>, LongFunction1<TSource>)","u":"max(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.LongFunction1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"max(Enumerable<TSource>, NullableBigDecimalFunction1<TSource>)","u":"max(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.NullableBigDecimalFunction1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"max(Enumerable<TSource>, NullableDoubleFunction1<TSource>)","u":"max(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.NullableDoubleFunction1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"max(Enumerable<TSource>, NullableFloatFunction1<TSource>)","u":"max(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.NullableFloatFunction1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"max(Enumerable<TSource>, NullableIntegerFunction1<TSource>)","u":"max(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.NullableIntegerFunction1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"max(Enumerable<TSource>, NullableLongFunction1<TSource>)","u":"max(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.NullableLongFunction1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"max(FloatFunction1<T>)","u":"max(org.apache.calcite.linq4j.function.FloatFunction1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"max(FloatFunction1<TSource>)","u":"max(org.apache.calcite.linq4j.function.FloatFunction1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"max(Function1<T, TResult>)","u":"max(org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"max(Function1<TSource, TResult>)","u":"max(org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"max(FunctionExpression<Function1<T, TResult>>)","u":"max(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"max(FunctionExpression<Function1<T, TResult>>)","u":"max(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"max(FunctionExpression<Function1<TSource, TResult>>)"},{"p":"","c":"","l":"max(FunctionExpression<Function1<TSource, TResult>>)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"max(IntegerFunction1<T>)","u":"max(org.apache.calcite.linq4j.function.IntegerFunction1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"max(IntegerFunction1<TSource>)","u":"max(org.apache.calcite.linq4j.function.IntegerFunction1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"max(LongFunction1<T>)","u":"max(org.apache.calcite.linq4j.function.LongFunction1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"max(LongFunction1<TSource>)","u":"max(org.apache.calcite.linq4j.function.LongFunction1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"max(NullableBigDecimalFunction1<T>)","u":"max(org.apache.calcite.linq4j.function.NullableBigDecimalFunction1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"max(NullableBigDecimalFunction1<TSource>)","u":"max(org.apache.calcite.linq4j.function.NullableBigDecimalFunction1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"max(NullableDoubleFunction1<T>)","u":"max(org.apache.calcite.linq4j.function.NullableDoubleFunction1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"max(NullableDoubleFunction1<TSource>)","u":"max(org.apache.calcite.linq4j.function.NullableDoubleFunction1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"max(NullableFloatFunction1<T>)","u":"max(org.apache.calcite.linq4j.function.NullableFloatFunction1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"max(NullableFloatFunction1<TSource>)","u":"max(org.apache.calcite.linq4j.function.NullableFloatFunction1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"max(NullableIntegerFunction1<T>)","u":"max(org.apache.calcite.linq4j.function.NullableIntegerFunction1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"max(NullableIntegerFunction1<TSource>)","u":"max(org.apache.calcite.linq4j.function.NullableIntegerFunction1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"max(NullableLongFunction1<T>)","u":"max(org.apache.calcite.linq4j.function.NullableLongFunction1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"max(NullableLongFunction1<TSource>)","u":"max(org.apache.calcite.linq4j.function.NullableLongFunction1)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"max(Queryable<T>)","u":"max(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"max(Queryable<T>)","u":"max(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"max(Queryable<T>)","u":"max(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"max(Queryable<T>, FunctionExpression<Function1<T, TResult>>)","u":"max(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"max(Queryable<T>, FunctionExpression<Function1<T, TResult>>)","u":"max(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"max(Queryable<T>, FunctionExpression<Function1<T, TResult>>)","u":"max(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"max(RexNode)","u":"max(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"max(String, RexNode)","u":"max(java.lang.String,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.MaxBigDecimal","l":"MaxBigDecimal()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.MaxBoolean","l":"MaxBoolean()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Result","l":"maxClause()"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.MaxDouble","l":"MaxDouble()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.MaxFloat","l":"MaxFloat()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.java","c":"Array","l":"maximumCardinality()"},{"p":"org.apache.calcite.linq4j.tree","c":"Types.ArrayType","l":"maximumCardinality()"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.MaxInt","l":"MaxInt()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.MaxLong","l":"MaxLong()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"maxNegative"},{"p":"org.apache.calcite.rel.externalize","c":"RelDotWriter.WriteOption","l":"maxNodeLabelLength()"},{"p":"org.apache.calcite.rel.externalize","c":"RelDotWriter.WriteOption","l":"maxNodeLabelPerLine()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"maxPrecision(int, int)","u":"maxPrecision(int,int)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"maxRowCount"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"maxValue(RelDataType)","u":"maxValue(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor","l":"mayBeSatisfiable(RexNode)","u":"mayBeSatisfiable(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.schema","c":"Wrapper","l":"maybeUnwrap(Class<C>)","u":"maybeUnwrap(java.lang.Class)"},{"p":"org.apache.calcite.sql.validate","c":"SqlMonotonicity","l":"mayRepeat()"},{"p":"org.apache.calcite.util","c":"Smalls","l":"MAZE_METHOD"},{"p":"org.apache.calcite.util","c":"Smalls","l":"MAZE2_METHOD"},{"p":"org.apache.calcite.util","c":"Smalls","l":"MAZE3_METHOD"},{"p":"org.apache.calcite.util","c":"Smalls.MazeTable","l":"MazeTable(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MD5"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"MD5"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"md5(ByteString)","u":"md5(org.apache.calcite.avatica.util.ByteString)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"md5(String)","u":"md5(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"MDX_PRECEDENCE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"MEASURE"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"MEASURE"},{"p":"org.apache.calcite.sql.fun","c":"SqlInternalOperators","l":"MEASURE"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"MEASURE"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"MEASURE_BOOLEAN"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MEASURE_EXPAND"},{"p":"org.apache.calcite.tools","c":"Programs","l":"measure(RelMetadataProvider)","u":"measure(org.apache.calcite.rel.metadata.RelMetadataProvider)"},{"p":"org.apache.calcite.materialize","c":"Lattice.Measure","l":"Measure(SqlAggFunction, boolean, String, Iterable<Lattice.Column>)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlAggFunction,boolean,java.lang.String,java.lang.Iterable)"},{"p":"org.apache.calcite.sql.validate","c":"AggregatingSelectScope.Resolved","l":"measureExprList"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"measureIllegal()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"measureInAggregateQuery()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"measureIsCyclic(String, String)","u":"measureIsCyclic(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlUnpivot","l":"measureList"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"measureMustBeInAggregateQuery()"},{"p":"org.apache.calcite.materialize","c":"Lattice.Tile","l":"measures"},{"p":"org.apache.calcite.materialize","c":"TileKey","l":"measures"},{"p":"org.apache.calcite.model","c":"JsonTile","l":"measures"},{"p":"org.apache.calcite.rel.core","c":"Match","l":"measures"},{"p":"org.apache.calcite.rel.mutable","c":"MutableMatch","l":"measures"},{"p":"org.apache.calcite.util","c":"Glossary","l":"MEDIATOR_PATTERN"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MEMBER_OF"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"MEMBER_OF"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"MemberAccess"},{"p":"org.apache.calcite.linq4j.tree","c":"MemberAssignment","l":"MemberAssignment()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"memberBind(Member, Iterable<? extends MemberBinding>)","u":"memberBind(java.lang.reflect.Member,java.lang.Iterable)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"memberBind(Member, MemberBinding...)","u":"memberBind(java.lang.reflect.Member,org.apache.calcite.linq4j.tree.MemberBinding...)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"memberBind(Method, Iterable<? extends MemberBinding>)","u":"memberBind(java.lang.reflect.Method,java.lang.Iterable)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"memberBind(Method, MemberBinding...)","u":"memberBind(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.MemberBinding...)"},{"p":"org.apache.calcite.linq4j.tree","c":"MemberBinding","l":"MemberBinding()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.linq4j.tree","c":"MemberDeclaration","l":"MemberDeclaration()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.linq4j.tree","c":"ClassDeclaration","l":"memberDeclarations"},{"p":"org.apache.calcite.linq4j.tree","c":"NewExpression","l":"memberDeclarations"},{"p":"org.apache.calcite.linq4j.tree","c":"MemberExpression","l":"MemberExpression(Expression, Field)","u":"%3Cinit%3E(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Field)"},{"p":"org.apache.calcite.linq4j.tree","c":"MemberExpression","l":"MemberExpression(Expression, PseudoField)","u":"%3Cinit%3E(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.PseudoField)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"MemberInit"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"memberInit(NewExpression, Iterable<? extends MemberBinding>)","u":"memberInit(org.apache.calcite.linq4j.tree.NewExpression,java.lang.Iterable)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"memberInit(NewExpression, MemberBinding...)","u":"memberInit(org.apache.calcite.linq4j.tree.NewExpression,org.apache.calcite.linq4j.tree.MemberBinding...)"},{"p":"org.apache.calcite.linq4j.tree","c":"MemberInitExpression","l":"MemberInitExpression()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.linq4j.tree","c":"MemberListBinding","l":"MemberListBinding()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.linq4j.tree","c":"MemberMemberBinding","l":"MemberMemberBinding()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"memberOf(Object, Collection)","u":"memberOf(java.lang.Object,java.util.Collection)"},{"p":"org.apache.calcite.util","c":"Glossary","l":"MEMENTO_PATTERN"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MEMORY"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MEMORY_GET0"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MEMORY_GET1"},{"p":"org.apache.calcite.adapter.os","c":"OsQueryType","l":"MEMORY_INFO"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Memory","l":"memory()"},{"p":"org.apache.calcite.linq4j","c":"MemoryFactory.Memory","l":"Memory(int, int, ModularInteger, Object[])","u":"%3Cinit%3E(int,int,org.apache.calcite.linq4j.ModularInteger,java.lang.Object[])"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"memory(RelNode)","u":"memory(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Memory.Handler","l":"memory(RelNode, RelMetadataQuery)","u":"memory(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMemory","l":"memory(RelNode, RelMetadataQuery)","u":"memory(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.linq4j","c":"MemoryFactory","l":"MemoryFactory(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"org.apache.calcite.rel.core","c":"TableModify.Operation","l":"MERGE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"MERGE"},{"p":"org.apache.calcite.tools","c":"PigRelBuilder.GroupOption","l":"MERGE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MERGE_JOIN"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MERGE_UNION"},{"p":"org.apache.calcite.sql","c":"SqlSplittableAggFunction.AbstractSumSplitter","l":"merge(AggregateCall, AggregateCall)","u":"merge(org.apache.calcite.rel.core.AggregateCall,org.apache.calcite.rel.core.AggregateCall)"},{"p":"org.apache.calcite.sql","c":"SqlSplittableAggFunction.CountSplitter","l":"merge(AggregateCall, AggregateCall)","u":"merge(org.apache.calcite.rel.core.AggregateCall,org.apache.calcite.rel.core.AggregateCall)"},{"p":"org.apache.calcite.sql","c":"SqlSplittableAggFunction","l":"merge(AggregateCall, AggregateCall)","u":"merge(org.apache.calcite.rel.core.AggregateCall,org.apache.calcite.rel.core.AggregateCall)"},{"p":"org.apache.calcite.sql","c":"SqlSplittableAggFunction.SelfSplitter","l":"merge(AggregateCall, AggregateCall)","u":"merge(org.apache.calcite.rel.core.AggregateCall,org.apache.calcite.rel.core.AggregateCall)"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.BigDecimalSum","l":"merge(BigDecimal, BigDecimal)","u":"merge(java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.MaxBoolean","l":"merge(Boolean, Boolean)","u":"merge(java.lang.Boolean,java.lang.Boolean)"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.MinBoolean","l":"merge(Boolean, Boolean)","u":"merge(java.lang.Boolean,java.lang.Boolean)"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.DoubleSum","l":"merge(double, double)","u":"merge(double,double)"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.IntSum","l":"merge(int, int)","u":"merge(int,int)"},{"p":"org.apache.calcite.util","c":"Smalls.MyTwoParamsSumFunctionFilter1","l":"merge(int, int)","u":"merge(int,int)"},{"p":"org.apache.calcite.util","c":"Smalls.MySum3","l":"merge(Integer, Integer)","u":"merge(java.lang.Integer,java.lang.Integer)"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.LongSum","l":"merge(long, long)","u":"merge(long,long)"},{"p":"org.apache.calcite.util","c":"Smalls.MyStaticSumFunction","l":"merge(long, long)","u":"merge(long,long)"},{"p":"org.apache.calcite.util","c":"Smalls.MySumFunction","l":"merge(long, long)","u":"merge(long,long)"},{"p":"org.apache.calcite.util","c":"Smalls.MyThreeParamsSumFunctionWithFilter1","l":"merge(long, long)","u":"merge(long,long)"},{"p":"org.apache.calcite.util","c":"Smalls.MyThreeParamsSumFunctionWithFilter2","l":"merge(long, long)","u":"merge(long,long)"},{"p":"org.apache.calcite.util","c":"Smalls.MyTwoParamsSumFunctionFilter2","l":"merge(long, long)","u":"merge(long,long)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings","l":"merge(Mappings.TargetMapping, Mappings.TargetMapping)","u":"merge(org.apache.calcite.util.mapping.Mappings.TargetMapping,org.apache.calcite.util.mapping.Mappings.TargetMapping)"},{"p":"org.apache.calcite.plan","c":"RelTraitSet","l":"merge(RelTraitSet)","u":"merge(org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.NumericComparison","l":"merge(T, T)","u":"merge(T,T)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"mergeJoin(Enumerable<TSource>, Enumerable<TInner>, Function1<TSource, TKey>, Function1<TInner, TKey>, Function2<TSource, TInner, TResult>, boolean, boolean)","u":"mergeJoin(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2,boolean,boolean)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"mergeJoin(Enumerable<TSource>, Enumerable<TInner>, Function1<TSource, TKey>, Function1<TInner, TKey>, Function2<TSource, TInner, TResult>, JoinType, Comparator<TKey>)","u":"mergeJoin(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.JoinType,java.util.Comparator)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"mergeJoin(Enumerable<TSource>, Enumerable<TInner>, Function1<TSource, TKey>, Function1<TInner, TKey>, Predicate2<TSource, TInner>, Function2<TSource, TInner, TResult>, JoinType, Comparator<TKey>, EqualityComparer<TKey>)","u":"mergeJoin(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Predicate2,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.JoinType,java.util.Comparator,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdCollation","l":"mergeJoin(RelMetadataQuery, RelNode, RelNode, ImmutableIntList, ImmutableIntList)","u":"mergeJoin(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.util.ImmutableIntList)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdCollation","l":"mergeJoin(RelMetadataQuery, RelNode, RelNode, ImmutableIntList, ImmutableIntList, JoinRelType)","u":"mergeJoin(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.schema.impl","c":"AggregateFunctionImpl","l":"mergeMethod"},{"p":"org.apache.calcite.rex","c":"RexProgramBuilder","l":"mergePrograms(RexProgram, RexProgram, RexBuilder)","u":"mergePrograms(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexBuilder)"},{"p":"org.apache.calcite.rex","c":"RexProgramBuilder","l":"mergePrograms(RexProgram, RexProgram, RexBuilder, boolean)","u":"mergePrograms(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexBuilder,boolean)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"mergeUnion(List<Enumerable<TSource>>, Function1<TSource, TKey>, Comparator<TKey>, boolean, EqualityComparer<TSource>)","u":"mergeUnion(java.util.List,org.apache.calcite.linq4j.function.Function1,java.util.Comparator,boolean,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.config","c":"CalciteConnectionProperty","l":"META_COLUMN_FACTORY"},{"p":"org.apache.calcite.config","c":"CalciteConnectionProperty","l":"META_TABLE_FACTORY"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfig","l":"metaColumnFactory(Class<T>, T)","u":"metaColumnFactory(java.lang.Class,T)"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfigImpl","l":"metaColumnFactory(Class<T>, T)","u":"metaColumnFactory(java.lang.Class,T)"},{"p":"org.apache.calcite.config","c":"CalciteSystemProperty","l":"METADATA_HANDLER_CACHE_MAXIMUM_SIZE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"METADATA_REL"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"metadata(Class<M>, RelMetadataQuery)","u":"metadata(java.lang.Class,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel","c":"RelNode","l":"metadata(Class<M>, RelMetadataQuery)","u":"metadata(java.lang.Class,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertThat","l":"metaData(Function<Connection, ResultSet>)","u":"metaData(java.util.function.Function)"},{"p":"org.apache.calcite.rel.metadata","c":"MetadataDef","l":"metadataClass"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture","l":"metadataConfig"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture.MetadataConfig","l":"MetadataConfig(String, Function<RelMetadataProvider, MetadataHandlerProvider>, Supplier<RelMetadataProvider>, boolean)","u":"%3Cinit%3E(java.lang.String,java.util.function.Function,java.util.function.Supplier,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"MetadataFactoryImpl","l":"MetadataFactoryImpl(RelMetadataProvider)","u":"%3Cinit%3E(org.apache.calcite.rel.metadata.RelMetadataProvider)"},{"p":"org.apache.calcite.util","c":"SaffronProperties","l":"metadataHandlerCacheMaximumSize()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQueryBase","l":"metadataProvider"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfig","l":"metaTableFactory(Class<T>, T)","u":"metaTableFactory(java.lang.Class,T)"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfigImpl","l":"metaTableFactory(Class<T>, T)","u":"metaTableFactory(java.lang.Class,T)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraMethod","l":"method"},{"p":"org.apache.calcite.adapter.enumerable","c":"ReflectiveCallNotNullImplementor","l":"method"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbMethod","l":"method"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoMethod","l":"method"},{"p":"org.apache.calcite.adapter.spark","c":"SparkMethod","l":"method"},{"p":"org.apache.calcite.linq4j.tree","c":"MethodCallExpression","l":"method"},{"p":"org.apache.calcite.schema.impl","c":"ReflectiveFunctionBase","l":"method"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"method"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"methodDecl(int, Type, String, Iterable<? extends ParameterExpression>, BlockStatement)","u":"methodDecl(int,java.lang.reflect.Type,java.lang.String,java.lang.Iterable,org.apache.calcite.linq4j.tree.BlockStatement)"},{"p":"org.apache.calcite.linq4j.tree","c":"MethodDeclaration","l":"MethodDeclaration(int, String, Type, List<ParameterExpression>, BlockStatement)","u":"%3Cinit%3E(int,java.lang.String,java.lang.reflect.Type,java.util.List,org.apache.calcite.linq4j.tree.BlockStatement)"},{"p":"org.apache.calcite.model","c":"JsonFunction","l":"methodName"},{"p":"org.apache.calcite.rel.metadata","c":"MetadataDef","l":"methods"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"MI"},{"p":"org.apache.calcite.util.format.postgresql","c":"ChronoUnitEnum","l":"MICROS"},{"p":"org.apache.calcite.test","c":"SqlOperatorTest","l":"MICROSECOND_VARIANTS"},{"p":"org.apache.calcite.util","c":"ReflectUtil","l":"mightBeAssignableFrom(Class<?>, Class<?>)","u":"mightBeAssignableFrom(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.util.format.postgresql","c":"ChronoUnitEnum","l":"MILLIS"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"min"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"MIN"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"MIN"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"MIN_BY"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"MIN_INTERVAL_FRACTIONAL_SECOND_PRECISION"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"MIN_INTERVAL_START_PRECISION"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MIN_ROW_COUNT"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"min()"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"min()"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.MinBigDecimal","l":"min(BigDecimal, BigDecimal)","u":"min(java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"min(BigDecimalFunction1<T>)","u":"min(org.apache.calcite.linq4j.function.BigDecimalFunction1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"min(BigDecimalFunction1<TSource>)","u":"min(org.apache.calcite.linq4j.function.BigDecimalFunction1)"},{"p":"org.apache.calcite.util","c":"NumberUtil","l":"min(Double, Double)","u":"min(java.lang.Double,java.lang.Double)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"min(DoubleFunction1<T>)","u":"min(org.apache.calcite.linq4j.function.DoubleFunction1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"min(DoubleFunction1<TSource>)","u":"min(org.apache.calcite.linq4j.function.DoubleFunction1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"min(Enumerable<TSource>)","u":"min(org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"min(Enumerable<TSource>, BigDecimalFunction1<TSource>)","u":"min(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.BigDecimalFunction1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"min(Enumerable<TSource>, DoubleFunction1<TSource>)","u":"min(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.DoubleFunction1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"min(Enumerable<TSource>, FloatFunction1<TSource>)","u":"min(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.FloatFunction1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"min(Enumerable<TSource>, Function1<TSource, TResult>)","u":"min(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"min(Enumerable<TSource>, IntegerFunction1<TSource>)","u":"min(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.IntegerFunction1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"min(Enumerable<TSource>, LongFunction1<TSource>)","u":"min(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.LongFunction1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"min(Enumerable<TSource>, NullableBigDecimalFunction1<TSource>)","u":"min(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.NullableBigDecimalFunction1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"min(Enumerable<TSource>, NullableDoubleFunction1<TSource>)","u":"min(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.NullableDoubleFunction1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"min(Enumerable<TSource>, NullableFloatFunction1<TSource>)","u":"min(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.NullableFloatFunction1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"min(Enumerable<TSource>, NullableIntegerFunction1<TSource>)","u":"min(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.NullableIntegerFunction1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"min(Enumerable<TSource>, NullableLongFunction1<TSource>)","u":"min(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.NullableLongFunction1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"min(FloatFunction1<T>)","u":"min(org.apache.calcite.linq4j.function.FloatFunction1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"min(FloatFunction1<TSource>)","u":"min(org.apache.calcite.linq4j.function.FloatFunction1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"min(Function1<T, TResult>)","u":"min(org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"min(Function1<TSource, TResult>)","u":"min(org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"min(FunctionExpression<Function1<T, TResult>>)","u":"min(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"min(FunctionExpression<Function1<T, TResult>>)","u":"min(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"min(FunctionExpression<Function1<TSource, TResult>>)"},{"p":"","c":"","l":"min(FunctionExpression<Function1<TSource, TResult>>)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"min(IntegerFunction1<T>)","u":"min(org.apache.calcite.linq4j.function.IntegerFunction1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"min(IntegerFunction1<TSource>)","u":"min(org.apache.calcite.linq4j.function.IntegerFunction1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"min(LongFunction1<T>)","u":"min(org.apache.calcite.linq4j.function.LongFunction1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"min(LongFunction1<TSource>)","u":"min(org.apache.calcite.linq4j.function.LongFunction1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"min(NullableBigDecimalFunction1<T>)","u":"min(org.apache.calcite.linq4j.function.NullableBigDecimalFunction1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"min(NullableBigDecimalFunction1<TSource>)","u":"min(org.apache.calcite.linq4j.function.NullableBigDecimalFunction1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"min(NullableDoubleFunction1<T>)","u":"min(org.apache.calcite.linq4j.function.NullableDoubleFunction1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"min(NullableDoubleFunction1<TSource>)","u":"min(org.apache.calcite.linq4j.function.NullableDoubleFunction1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"min(NullableFloatFunction1<T>)","u":"min(org.apache.calcite.linq4j.function.NullableFloatFunction1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"min(NullableFloatFunction1<TSource>)","u":"min(org.apache.calcite.linq4j.function.NullableFloatFunction1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"min(NullableIntegerFunction1<T>)","u":"min(org.apache.calcite.linq4j.function.NullableIntegerFunction1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"min(NullableIntegerFunction1<TSource>)","u":"min(org.apache.calcite.linq4j.function.NullableIntegerFunction1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"min(NullableLongFunction1<T>)","u":"min(org.apache.calcite.linq4j.function.NullableLongFunction1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"min(NullableLongFunction1<TSource>)","u":"min(org.apache.calcite.linq4j.function.NullableLongFunction1)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"min(Queryable<T>)","u":"min(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"min(Queryable<T>)","u":"min(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"min(Queryable<T>)","u":"min(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"min(Queryable<T>, FunctionExpression<Function1<T, TResult>>)","u":"min(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"min(Queryable<T>, FunctionExpression<Function1<T, TResult>>)","u":"min(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"min(Queryable<T>, FunctionExpression<Function1<T, TResult>>)","u":"min(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"min(RexNode)","u":"min(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"min(String, RexNode)","u":"min(java.lang.String,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.MinBigDecimal","l":"MinBigDecimal()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.MinBoolean","l":"MinBoolean()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.MinDouble","l":"MinDouble()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.MinFloat","l":"MinFloat()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.MinInt","l":"MinInt()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.MinLong","l":"MinLong()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.fun","c":"SqlMinMaxAggFunction","l":"MINMAX_COMPARABLE"},{"p":"org.apache.calcite.sql.fun","c":"SqlMinMaxAggFunction","l":"MINMAX_COMPARATOR"},{"p":"org.apache.calcite.sql.fun","c":"SqlMinMaxAggFunction","l":"MINMAX_INVALID"},{"p":"org.apache.calcite.sql.fun","c":"SqlMinMaxAggFunction","l":"MINMAX_PRIMITIVE"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"minMaxBadType(String, String)","u":"minMaxBadType(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.jdbc","c":"CalciteFactory","l":"minor"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"minPositive"},{"p":"org.apache.calcite.piglet","c":"Ast.Op","l":"MINUS"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"MINUS"},{"p":"org.apache.calcite.rel.rules","c":"UnionMergeRule.Config","l":"MINUS"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"MINUS"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"MINUS_DATE"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"MINUS_DATE_OPERATOR"},{"p":"org.apache.calcite.sql.fun","c":"SqlInternalOperators","l":"MINUS_DATE2"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules","l":"MINUS_INSTANCE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"MINUS_MERGE"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"MINUS_OPERATOR"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"MINUS_PREFIX"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"MINUS_TO_DISTINCT"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"minus(BigDecimal, BigDecimal)","u":"minus(java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"minus(boolean)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"minus(boolean, int)","u":"minus(boolean,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"minus(int, int)","u":"minus(int,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"minus(int, Integer)","u":"minus(int,java.lang.Integer)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"minus(Integer, int)","u":"minus(java.lang.Integer,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"minus(Integer, Integer)","u":"minus(java.lang.Integer,java.lang.Integer)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"minus(Integer, Long)","u":"minus(java.lang.Integer,java.lang.Long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"minus(Long, Integer)","u":"minus(java.lang.Long,java.lang.Integer)"},{"p":"org.apache.calcite.util","c":"RangeSets","l":"minus(RangeSet<C>, Range<C>)","u":"minus(com.google.common.collect.RangeSet,com.google.common.collect.Range)"},{"p":"org.apache.calcite.rel.core","c":"Minus","l":"Minus(RelInput)","u":"%3Cinit%3E(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel.core","c":"Minus","l":"Minus(RelOptCluster, RelTraitSet, List<RelHint>, List<RelNode>, boolean)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,java.util.List,boolean)"},{"p":"org.apache.calcite.rel.core","c":"Minus","l":"Minus(RelOptCluster, RelTraitSet, List<RelNode>, boolean)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,boolean)"},{"p":"org.apache.calcite.plan","c":"RelOptCost","l":"minus(RelOptCost)","u":"minus(org.apache.calcite.plan.RelOptCost)"},{"p":"org.apache.calcite.plan","c":"RelOptCostImpl","l":"minus(RelOptCost)","u":"minus(org.apache.calcite.plan.RelOptCost)"},{"p":"org.apache.calcite.util","c":"Util","l":"minus(Set<T>, Set<T>)","u":"minus(java.util.Set,java.util.Set)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"minusAny(Object, Object)","u":"minusAny(java.lang.Object,java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"minusNotAllowed()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUtil","l":"minusPreds(RexBuilder, RexNode, RexNode)","u":"minusPreds(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.rules","c":"MinusToDistinctRule","l":"MinusToDistinctRule(Class<? extends Minus>, RelBuilderFactory)","u":"%3Cinit%3E(java.lang.Class,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"MinusToDistinctRule","l":"MinusToDistinctRule(MinusToDistinctRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.MinusToDistinctRule.Config)"},{"p":"org.apache.calcite.adapter.druid","c":"Granularity.Type","l":"MINUTE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"MINUTE"},{"p":"org.apache.calcite.test","c":"SqlOperatorTest","l":"MINUTE_VARIANTS"},{"p":"org.apache.calcite.util.format.postgresql","c":"ChronoUnitEnum","l":"MINUTES_IN_HOUR"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"MM"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader","l":"MockCatalogReader(RelDataTypeFactory, boolean)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReaderDynamic","l":"MockCatalogReaderDynamic(RelDataTypeFactory, boolean)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReaderExtended","l":"MockCatalogReaderExtended(RelDataTypeFactory, boolean)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReaderSimple","l":"MockCatalogReaderSimple(RelDataTypeFactory, boolean)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)"},{"p":"org.apache.calcite.test","c":"MockDdlExecutor","l":"MockDdlExecutor()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.test","c":"MockRelOptPlanner","l":"MockRelOptPlanner(Context)","u":"%3Cinit%3E(org.apache.calcite.plan.Context)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockSchema","l":"MockSchema(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"MockTable(MockCatalogReader, boolean, boolean, double, List<Map.Entry<String, RelDataType>>, List<ImmutableBitSet>, RelDataType, List<RelCollation>, List<String>, Set<String>, StructKind, MockCatalogReader.ColumnResolver, InitializerExpressionFactory)","u":"%3Cinit%3E(org.apache.calcite.test.catalog.MockCatalogReader,boolean,boolean,double,java.util.List,java.util.List,org.apache.calcite.rel.type.RelDataType,java.util.List,java.util.List,java.util.Set,org.apache.calcite.rel.type.StructKind,org.apache.calcite.test.catalog.MockCatalogReader.ColumnResolver,org.apache.calcite.sql2rel.InitializerExpressionFactory)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"MockTable(MockCatalogReader, String, String, String, boolean, boolean, double, MockCatalogReader.ColumnResolver, InitializerExpressionFactory)","u":"%3Cinit%3E(org.apache.calcite.test.catalog.MockCatalogReader,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,double,org.apache.calcite.test.catalog.MockCatalogReader.ColumnResolver,org.apache.calcite.sql2rel.InitializerExpressionFactory)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"MockTable(MockCatalogReader, String, String, String, boolean, boolean, double, MockCatalogReader.ColumnResolver, InitializerExpressionFactory, Double)","u":"%3Cinit%3E(org.apache.calcite.test.catalog.MockCatalogReader,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,double,org.apache.calcite.test.catalog.MockCatalogReader.ColumnResolver,org.apache.calcite.sql2rel.InitializerExpressionFactory,java.lang.Double)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"Mod"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"MOD"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MOD"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"MOD"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"mod(BigDecimal, BigDecimal)","u":"mod(java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"mod(BigDecimal, int)","u":"mod(java.math.BigDecimal,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"mod(byte, byte)","u":"mod(byte,byte)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"mod(int, BigDecimal)","u":"mod(int,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"mod(int, int)","u":"mod(int,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"mod(long, long)","u":"mod(long,long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"mod(short, short)","u":"mod(short,short)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.JsonPathContext","l":"mode"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"MODE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"MODE"},{"p":"org.apache.calcite.config","c":"CalciteConnectionProperty","l":"MODEL"},{"p":"org.apache.calcite.model","c":"ModelHandler.ExtraOperand","l":"MODEL_URI"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfig","l":"model()"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfigImpl","l":"model()"},{"p":"org.apache.calcite.test","c":"CalciteAssert","l":"model(String)","u":"model(java.lang.String)"},{"p":"org.apache.calcite.model","c":"ModelHandler","l":"ModelHandler(CalciteConnection, String)","u":"%3Cinit%3E(org.apache.calcite.jdbc.CalciteConnection,java.lang.String)"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.AnalyzeViewResult","l":"modifiable"},{"p":"org.apache.calcite.model","c":"JsonView","l":"modifiable"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MODIFIABLE_TABLE_GET_MODIFIABLE_COLLECTION"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"modifiableViewMustBeBasedOnSingleTable()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"modifiableViewMustHaveOnlyEqualityPredicates()"},{"p":"org.apache.calcite.schema.impl","c":"ViewTableMacro","l":"modifiableViewTable(CalcitePrepare.AnalyzeViewResult, String, List<String>, List<String>, CalciteSchema)","u":"modifiableViewTable(org.apache.calcite.jdbc.CalcitePrepare.AnalyzeViewResult,java.lang.String,java.util.List,java.util.List,org.apache.calcite.jdbc.CalciteSchema)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockModifiableViewRelOptTable.MockViewTableMacro","l":"modifiableViewTable(CalcitePrepare.AnalyzeViewResult, String, List<String>, List<String>, CalciteSchema)","u":"modifiableViewTable(org.apache.calcite.jdbc.CalcitePrepare.AnalyzeViewResult,java.lang.String,java.util.List,java.util.List,org.apache.calcite.jdbc.CalciteSchema)"},{"p":"org.apache.calcite.schema.impl","c":"ModifiableViewTable","l":"ModifiableViewTable(Type, RelProtoDataType, String, List<String>, List<String>, Table, Path, RexNode, ImmutableIntList)","u":"%3Cinit%3E(java.lang.reflect.Type,org.apache.calcite.rel.type.RelProtoDataType,java.lang.String,java.util.List,java.util.List,org.apache.calcite.schema.Table,org.apache.calcite.schema.Path,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableIntList)"},{"p":"org.apache.calcite.linq4j.tree","c":"ClassDeclaration","l":"modifier"},{"p":"org.apache.calcite.linq4j.tree","c":"ConstructorDeclaration","l":"modifier"},{"p":"org.apache.calcite.linq4j.tree","c":"FieldDeclaration","l":"modifier"},{"p":"org.apache.calcite.linq4j.tree","c":"MethodDeclaration","l":"modifier"},{"p":"org.apache.calcite.linq4j.tree","c":"ParameterExpression","l":"modifier"},{"p":"org.apache.calcite.linq4j.tree","c":"DeclarationStatement","l":"modifiers"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"CompiledPattern","l":"modifiers"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"Modulo"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"modulo(Expression, Expression)","u":"modulo(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"modulo(Expression, Expression, Method)","u":"modulo(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"ModuloAssign"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"moduloAssign(Expression, Expression)","u":"moduloAssign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"moduloAssign(Expression, Expression, Method)","u":"moduloAssign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"moduloAssign(Expression, Expression, Method, LambdaExpression)","u":"moduloAssign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.LambdaExpression)"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"mon"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"Mon"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"MON"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoMethod","l":"MONGO_QUERYABLE_AGGREGATE"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoMethod","l":"MONGO_QUERYABLE_FIND"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoAggregate","l":"MongoAggregate(RelOptCluster, RelTraitSet, RelNode, boolean, ImmutableBitSet, List<ImmutableBitSet>, List<AggregateCall>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoAggregate","l":"MongoAggregate(RelOptCluster, RelTraitSet, RelNode, ImmutableBitSet, List<ImmutableBitSet>, List<AggregateCall>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoFilter","l":"MongoFilter(RelOptCluster, RelTraitSet, RelNode, RexNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoProject","l":"MongoProject(RelOptCluster, RelTraitSet, RelNode, List<? extends RexNode>, RelDataType)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoProject","l":"MongoProject(RelOptCluster, RelTraitSet, RelNode, List<RexNode>, RelDataType, int)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType,int)"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoSchemaFactory","l":"MongoSchemaFactory()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoSort","l":"MongoSort(RelOptCluster, RelTraitSet, RelNode, RelCollation, RexNode, RexNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoTableScan","l":"MongoTableScan(RelOptCluster, RelTraitSet, RelOptTable, MongoTable, RelDataType)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.plan.RelOptTable,org.apache.calcite.adapter.mongodb.MongoTable,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoToEnumerableConverter","l":"MongoToEnumerableConverter(RelOptCluster, RelTraitSet, RelNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoToEnumerableConverterRule","l":"MongoToEnumerableConverterRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.sql.validate","c":"SqlMonotonicity","l":"MONOTONIC"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"monotonicColumnSet"},{"p":"org.apache.calcite.rel","c":"RelFieldCollation.Direction","l":"monotonicity()"},{"p":"org.apache.calcite.util","c":"MonotonicSupplier","l":"MonotonicSupplier()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"month"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"Month"},{"p":"org.apache.calcite.adapter.druid","c":"Granularity.Type","l":"MONTH"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"MONTH"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"MONTH"},{"p":"org.apache.calcite.test","c":"SqlOperatorTest","l":"MONTH_VARIANTS"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"MonthCompiledPattern","l":"MonthCompiledPattern(Set<PatternModifier>, CapitalizationEnum, TextStyle)","u":"%3Cinit%3E(java.util.Set,org.apache.calcite.util.format.postgresql.CapitalizationEnum,java.time.format.TextStyle)"},{"p":"org.apache.calcite.rel.type","c":"TimeFrame","l":"monthEpoch()"},{"p":"org.apache.calcite.util.format.postgresql.format","c":"MonthFormatPattern","l":"MonthFormatPattern(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"MONTHNAME"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MONTHNAME_WITH_DATE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MONTHNAME_WITH_TIMESTAMP"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"monthNameWithDate(int, Locale)","u":"monthNameWithDate(int,java.util.Locale)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"monthNameWithTimestamp(long, Locale)","u":"monthNameWithTimestamp(long,java.util.Locale)"},{"p":"org.apache.calcite.util.format.postgresql","c":"ChronoUnitEnum","l":"MONTHS_IN_YEAR"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"moreThanOneMappedColumn(String, String)","u":"moreThanOneMappedColumn(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"moreThanOneValueInList(String)","u":"moreThanOneValueInList(java.lang.String)"},{"p":"org.apache.calcite.adapter.os","c":"OsQueryType","l":"MOUNTS"},{"p":"org.apache.calcite.adapter.file","c":"CsvEnumerator","l":"moveNext()"},{"p":"org.apache.calcite.adapter.file","c":"JsonEnumerator","l":"moveNext()"},{"p":"org.apache.calcite.adapter.geode.simple","c":"GeodeSimpleEnumerator","l":"moveNext()"},{"p":"org.apache.calcite.adapter.kafka","c":"KafkaMessageEnumerator","l":"moveNext()"},{"p":"org.apache.calcite.adapter.os","c":"OsQuery","l":"moveNext()"},{"p":"org.apache.calcite.adapter.splunk.search","c":"SplunkConnectionImpl.SplunkResultEnumerator","l":"moveNext()"},{"p":"org.apache.calcite.linq4j","c":"CartesianProductEnumerator","l":"moveNext()"},{"p":"org.apache.calcite.linq4j","c":"DelegatingEnumerator","l":"moveNext()"},{"p":"org.apache.calcite.linq4j","c":"Enumerator","l":"moveNext()"},{"p":"org.apache.calcite.linq4j","c":"MemoryEnumerator","l":"moveNext()"},{"p":"org.apache.calcite.linq4j","c":"TransformedEnumerator","l":"moveNext()"},{"p":"org.apache.calcite.util","c":"Util","l":"moveToHead(List<? extends E>, Predicate<? super E>)","u":"moveToHead(java.util.List,java.util.function.Predicate)"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"MS"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibrary","l":"MSSQL"},{"p":"org.apache.calcite.sql","c":"SqlDialect.DatabaseProduct","l":"MSSQL"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"MSSQL_CONVERT"},{"p":"org.apache.calcite.sql.dialect","c":"MssqlSqlDialect","l":"MSSQL_TYPE_SYSTEM"},{"p":"org.apache.calcite.sql.dialect","c":"MssqlSqlDialect","l":"MssqlSqlDialect(SqlDialect.Context)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect.Context)"},{"p":"org.apache.calcite.util.mapping","c":"MappingType","l":"MULTI_FUNCTION"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"MULTI_JOIN_BOTH_PROJECT"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"MULTI_JOIN_LEFT_PROJECT"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"MULTI_JOIN_OPTIMIZE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"MULTI_JOIN_OPTIMIZE_BUSHY"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"MULTI_JOIN_RIGHT_PROJECT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MULTI_STRING_CONCAT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MULTI_STRING_CONCAT_WITH_NULL"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MULTI_STRING_CONCAT_WITH_SEPARATOR"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MULTI_TYPE_OBJECT_CONCAT_WITH_SEPARATOR"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MULTI_TYPE_STRING_ARRAY_CONCAT_WITH_SEPARATOR"},{"p":"org.apache.calcite.plan","c":"MulticastRelOptListener","l":"MulticastRelOptListener()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.rules","c":"MultiJoin","l":"MultiJoin(RelOptCluster, List<RelNode>, RexNode, RelDataType, boolean, List<? extends RexNode>, List<JoinRelType>, List<? extends ImmutableBitSet>, ImmutableMap<Integer, ImmutableIntList>, RexNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,java.util.List,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,boolean,java.util.List,java.util.List,java.util.List,com.google.common.collect.ImmutableMap,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.rules","c":"MultiJoinOptimizeBushyRule","l":"MultiJoinOptimizeBushyRule(MultiJoinOptimizeBushyRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.MultiJoinOptimizeBushyRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"MultiJoinOptimizeBushyRule","l":"MultiJoinOptimizeBushyRule(RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"MultiJoinOptimizeBushyRule","l":"MultiJoinOptimizeBushyRule(RelFactories.JoinFactory, RelFactories.ProjectFactory)","u":"%3Cinit%3E(org.apache.calcite.rel.core.RelFactories.JoinFactory,org.apache.calcite.rel.core.RelFactories.ProjectFactory)"},{"p":"org.apache.calcite.rel.rules","c":"MultiJoinProjectTransposeRule","l":"MultiJoinProjectTransposeRule(MultiJoinProjectTransposeRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.MultiJoinProjectTransposeRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"MultiJoinProjectTransposeRule","l":"MultiJoinProjectTransposeRule(RelOptRuleOperand, RelBuilderFactory, String)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.tools.RelBuilderFactory,java.lang.String)"},{"p":"org.apache.calcite.rel.rules","c":"MultiJoinProjectTransposeRule","l":"MultiJoinProjectTransposeRule(RelOptRuleOperand, String)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptRuleOperand,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeUtils.SpatialType","l":"MULTILINESTRING"},{"p":"org.apache.calcite.plan","c":"RelTraitDef","l":"multiple()"},{"p":"org.apache.calcite.rel","c":"RelCollationTraitDef","l":"multiple()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"multipleCapturingGroupsForRegexpFunctions(String, String)","u":"multipleCapturingGroupsForRegexpFunctions(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"multipleRowSemanticsTables(String)","u":"multipleRowSemanticsTables(java.lang.String)"},{"p":"org.apache.calcite.util","c":"Smalls","l":"MULTIPLICATION_TABLE_METHOD"},{"p":"org.apache.calcite.util","c":"Smalls","l":"multiplicationTable(int, int, Integer)","u":"multiplicationTable(int,int,java.lang.Integer)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"Multiply"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"MULTIPLY"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"MULTIPLY_OPERATOR"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"multiply(BigDecimal, BigDecimal)","u":"multiply(java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.util","c":"NumberUtil","l":"multiply(Double, Double)","u":"multiply(java.lang.Double,java.lang.Double)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"multiply(Expression, Expression)","u":"multiply(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"multiply(Expression, Expression, Method)","u":"multiply(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"multiply(int, int)","u":"multiply(int,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"multiply(int, Integer)","u":"multiply(int,java.lang.Integer)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"multiply(Integer, int)","u":"multiply(java.lang.Integer,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"multiply(Integer, Integer)","u":"multiply(java.lang.Integer,java.lang.Integer)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"multiply(Integer, Long)","u":"multiply(java.lang.Integer,java.lang.Long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"multiply(Long, Integer)","u":"multiply(java.lang.Long,java.lang.Integer)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings","l":"multiply(Mapping, Mapping)","u":"multiply(org.apache.calcite.util.mapping.Mapping,org.apache.calcite.util.mapping.Mapping)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"multiplyAny(Object, Object)","u":"multiplyAny(java.lang.Object,java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"MultiplyAssign"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"multiplyAssign(Expression, Expression)","u":"multiplyAssign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"multiplyAssign(Expression, Expression, Method)","u":"multiplyAssign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"multiplyAssign(Expression, Expression, Method, LambdaExpression)","u":"multiplyAssign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.LambdaExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"MultiplyAssignChecked"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"multiplyAssignChecked(Expression, Expression)","u":"multiplyAssignChecked(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"multiplyAssignChecked(Expression, Expression, Method)","u":"multiplyAssignChecked(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"multiplyAssignChecked(Expression, Expression, Method, LambdaExpression)","u":"multiplyAssignChecked(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.LambdaExpression)"},{"p":"org.apache.calcite.plan","c":"RelOptCost","l":"multiplyBy(double)"},{"p":"org.apache.calcite.plan","c":"RelOptCostImpl","l":"multiplyBy(double)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"MultiplyChecked"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"multiplyChecked(Expression, Expression)","u":"multiplyChecked(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"multiplyChecked(Expression, Expression, Method)","u":"multiplyChecked(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexImpTable","l":"multiplyDivide(Expression, BigDecimal, BigDecimal)","u":"multiplyDivide(org.apache.calcite.linq4j.tree.Expression,java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"multiplyDivide(RexNode, BigDecimal, BigDecimal)","u":"multiplyDivide(org.apache.calcite.rex.RexNode,java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"multiplyDivide(SqlParserPos, RexNode, BigDecimal, BigDecimal)","u":"multiplyDivide(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.rex.RexNode,java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeUtils.SpatialType","l":"MULTIPOINT"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeUtils.SpatialType","l":"MULTIPOLYGON"},{"p":"org.apache.calcite.runtime.rtti","c":"RuntimeTypeInformation.RuntimeSqlTypeName","l":"MULTISET"},{"p":"org.apache.calcite.sql.babel","c":"TableCollectionType","l":"MULTISET"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFamily","l":"MULTISET"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"MULTISET"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"MULTISET"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"MULTISET"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"MULTISET_ELEMENT_FORCE_NULLABLE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"MULTISET_EXCEPT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MULTISET_EXCEPT_ALL"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MULTISET_EXCEPT_DISTINCT"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"MULTISET_EXCEPT_DISTINCT"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"MULTISET_INTERSECT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MULTISET_INTERSECT_ALL"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MULTISET_INTERSECT_DISTINCT"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"MULTISET_INTERSECT_DISTINCT"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"MULTISET_MULTISET"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"MULTISET_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"MULTISET_PROJECT_ONLY"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"MULTISET_PROJECT0"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"MULTISET_QUERY"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"MULTISET_QUERY_CONSTRUCTOR"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"MULTISET_RECORD"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"MULTISET_UNION"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MULTISET_UNION_ALL"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"MULTISET_UNION_DISTINCT"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"MULTISET_UNION_DISTINCT"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"MULTISET_VALUE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"MULTISET_VALUE_CONSTRUCTOR"},{"p":"org.apache.calcite.rex","c":"RexSubQuery","l":"multiset(RelNode)","u":"multiset(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"multisetExceptAll(Collection<E>, Collection<E>)","u":"multisetExceptAll(java.util.Collection,java.util.Collection)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"multisetExceptDistinct(Collection<E>, Collection<E>)","u":"multisetExceptDistinct(java.util.Collection,java.util.Collection)"},{"p":"org.apache.calcite.piglet","c":"PigRelBuilder","l":"multiSetFlatten()"},{"p":"org.apache.calcite.piglet","c":"PigRelBuilder","l":"multiSetFlatten(List<Integer>, List<String>)","u":"multiSetFlatten(java.util.List,java.util.List)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"multisetIntersectAll(Collection<E>, Collection<E>)","u":"multisetIntersectAll(java.util.Collection,java.util.Collection)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"multisetIntersectDistinct(Collection<E>, Collection<E>)","u":"multisetIntersectDistinct(java.util.Collection,java.util.Collection)"},{"p":"org.apache.calcite.sql.type","c":"MultisetOperandTypeChecker","l":"MultisetOperandTypeChecker()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"multisetQuery(Function<RelBuilder, RelNode>)","u":"multisetQuery(java.util.function.Function)"},{"p":"org.apache.calcite.sql.type","c":"MultisetSqlType","l":"MultisetSqlType(RelDataType, boolean)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataType,boolean)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"multisetUnionAll(Collection, Collection)","u":"multisetUnionAll(java.util.Collection,java.util.Collection)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"multisetUnionDistinct(Collection, Collection)","u":"multisetUnionDistinct(java.util.Collection,java.util.Collection)"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"MULTIVALENT_STRING_SUM_PRECISION"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"MULTIVALENT_STRING_SUM_PRECISION_NOT_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"MULTIVALENT_STRING_SUM_PRECISION_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"MULTIVALENT_STRING_SUM_PRECISION_NULLABLE_ALL"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"MULTIVALENT_STRING_WITH_SEP_SUM_PRECISION"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"MULTIVALENT_STRING_WITH_SEP_SUM_PRECISION_ARG0_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"MULTIVALENT_STRING_WITH_SEP_SUM_PRECISION_NOT_NULLABLE"},{"p":"org.apache.calcite.sql.validate","c":"SemanticTable","l":"mustFilter(int)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MustFilterMockTable","l":"mustFilter(int)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"mustFilterFieldsMissing(String)","u":"mustFilterFieldsMissing(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"mustNotNullInElse()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableRel","l":"MutableRel(RelOptCluster, RelDataType, MutableRelType)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.mutable.MutableRelType)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableRels","l":"MutableRels()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableRelVisitor","l":"MutableRelVisitor()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableSetOp","l":"MutableSetOp(RelOptCluster, RelDataType, MutableRelType, List<MutableRel>, boolean)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.mutable.MutableRelType,java.util.List,boolean)"},{"p":"org.apache.calcite.rex","c":"RexShuttle","l":"mutate(List<T>)","u":"mutate(java.util.List)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.SchemaSpec","l":"MY_DB"},{"p":"org.apache.calcite.util","c":"Smalls","l":"MY_PLUS_EVAL_METHOD"},{"p":"org.apache.calcite.util","c":"Smalls","l":"MY_PLUS_INIT_EVAL_METHOD"},{"p":"org.apache.calcite.util","c":"Smalls.MyAbcdeFunction","l":"MyAbcdeFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.MyAggFunc","l":"MyAggFunc()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.MyAvgAggFunction","l":"MyAvgAggFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util","c":"Smalls.MyDeterministicPlusFunction","l":"MyDeterministicPlusFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util","c":"Smalls.MyExceptionFunction","l":"MyExceptionFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.MyFunction","l":"MyFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util","c":"Smalls.MyIncrement","l":"MyIncrement()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util","c":"Smalls.MyLeftFunction","l":"MyLeftFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util","c":"Smalls.MyNiladicParenthesesFunction","l":"MyNiladicParenthesesFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util","c":"Smalls.MyPlusFunction","l":"MyPlusFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util","c":"Smalls.MyPlusInitFunction","l":"MyPlusInitFunction(FunctionContext)","u":"%3Cinit%3E(org.apache.calcite.schema.FunctionContext)"},{"p":"org.apache.calcite.config","c":"Lex","l":"MYSQL"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibrary","l":"MYSQL"},{"p":"org.apache.calcite.sql","c":"SqlDialect.DatabaseProduct","l":"MYSQL"},{"p":"org.apache.calcite.test","c":"CalciteAssert.DatabaseInstance","l":"MYSQL"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"MYSQL_5"},{"p":"org.apache.calcite.config","c":"Lex","l":"MYSQL_ANSI"},{"p":"org.apache.calcite.sql.dialect","c":"MysqlSqlDialect","l":"MYSQL_TYPE_SYSTEM"},{"p":"org.apache.calcite.sql.dialect","c":"MysqlSqlDialect","l":"MysqlSqlDialect(SqlDialect.Context)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect.Context)"},{"p":"org.apache.calcite.util","c":"Smalls.MyStaticSumFunction","l":"MyStaticSumFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util","c":"Smalls.MySum3","l":"MySum3()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util","c":"Smalls.MySumFunction","l":"MySumFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util","c":"Smalls.MyTableFunction","l":"MyTableFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util","c":"Smalls.MyThreeParamsSumFunctionWithFilter1","l":"MyThreeParamsSumFunctionWithFilter1()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util","c":"Smalls.MyThreeParamsSumFunctionWithFilter2","l":"MyThreeParamsSumFunctionWithFilter2()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util","c":"Smalls.MyToStringFunction","l":"MyToStringFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util","c":"Smalls.MyTwoParamsSumFunctionFilter1","l":"MyTwoParamsSumFunctionFilter1(FunctionContext)","u":"%3Cinit%3E(org.apache.calcite.schema.FunctionContext)"},{"p":"org.apache.calcite.util","c":"Smalls.MyTwoParamsSumFunctionFilter2","l":"MyTwoParamsSumFunctionFilter2()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util","c":"Smalls.IntString","l":"n"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator.Config","l":"nakedMeasuresInAggregateQuery()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator.Config","l":"nakedMeasuresInNonAggregateQuery()"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema.Entry","l":"name"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"name"},{"p":"org.apache.calcite.linq4j.tree","c":"ClassDeclaration","l":"name"},{"p":"org.apache.calcite.linq4j.tree","c":"LabelTarget","l":"name"},{"p":"org.apache.calcite.linq4j.tree","c":"MethodDeclaration","l":"name"},{"p":"org.apache.calcite.linq4j.tree","c":"ParameterExpression","l":"name"},{"p":"org.apache.calcite.materialize","c":"Lattice.Measure","l":"name"},{"p":"org.apache.calcite.model","c":"JsonColumn","l":"name"},{"p":"org.apache.calcite.model","c":"JsonFunction","l":"name"},{"p":"org.apache.calcite.model","c":"JsonLattice","l":"name"},{"p":"org.apache.calcite.model","c":"JsonSchema","l":"name"},{"p":"org.apache.calcite.model","c":"JsonTable","l":"name"},{"p":"org.apache.calcite.model","c":"JsonType","l":"name"},{"p":"org.apache.calcite.model","c":"JsonTypeAttribute","l":"name"},{"p":"org.apache.calcite.plan","c":"RelOptAbstractTable","l":"name"},{"p":"org.apache.calcite.profile","c":"Profiler.Column","l":"name"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"name"},{"p":"org.apache.calcite.rex","c":"RexVariable","l":"name"},{"p":"org.apache.calcite.sql.ddl","c":"SqlAttributeDefinition","l":"name"},{"p":"org.apache.calcite.sql.ddl","c":"SqlColumnDeclaration","l":"name"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateForeignSchema","l":"name"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateMaterializedView","l":"name"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateSchema","l":"name"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateTable","l":"name"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateTableLike","l":"name"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateType","l":"name"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateView","l":"name"},{"p":"org.apache.calcite.sql.ddl","c":"SqlDropObject","l":"name"},{"p":"org.apache.calcite.sql.ddl","c":"SqlDropSchema","l":"name"},{"p":"org.apache.calcite.sql.ddl","c":"SqlTruncateTable","l":"name"},{"p":"org.apache.calcite.sql","c":"SqlWithItem","l":"name"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope.Step","l":"name"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture.MetadataConfig","l":"name"},{"p":"org.apache.calcite.test.schemata.bookstore","c":"BookstoreSchema.Author","l":"name"},{"p":"org.apache.calcite.test.schemata.hr","c":"Department","l":"name"},{"p":"org.apache.calcite.test.schemata.hr","c":"Dependent","l":"name"},{"p":"org.apache.calcite.test.schemata.hr","c":"Employee","l":"name"},{"p":"org.apache.calcite.runtime.rtti","c":"RuntimeTypeInformation.RuntimeSqlTypeName","l":"NAME"},{"p":"org.apache.calcite.linq4j.function","c":"Parameter","l":"name()"},{"p":"org.apache.calcite.rel.type","c":"TimeFrame","l":"name()"},{"p":"org.apache.calcite.schema.lookup","c":"Named","l":"name()"},{"p":"org.apache.calcite.sql","c":"SqlLiteral.SqlSymbol","l":"name()"},{"p":"org.apache.calcite.sql","c":"SqlSetOption","l":"name()"},{"p":"org.apache.calcite.schema.lookup","c":"Named","l":"Named(String, T)","u":"%3Cinit%3E(java.lang.String,T)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory.Builder","l":"nameExists(String)","u":"nameExists(java.lang.String)"},{"p":"org.apache.calcite.util","c":"NameMap","l":"NameMap()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.innodb","c":"IndexCondition","l":"nameMatch(String)","u":"nameMatch(java.lang.String)"},{"p":"org.apache.calcite.prepare","c":"CalciteCatalogReader","l":"nameMatcher"},{"p":"org.apache.calcite.prepare","c":"CalciteCatalogReader","l":"nameMatcher()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorCatalogReader","l":"nameMatcher()"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader","l":"nameMatcher()"},{"p":"org.apache.calcite.util","c":"NameMultimap","l":"NameMultimap()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisorHint","l":"names"},{"p":"org.apache.calcite.sql","c":"SqlIdentifier","l":"names"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockDynamicTable","l":"names"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"names"},{"p":"org.apache.calcite.schema","c":"Path","l":"names()"},{"p":"org.apache.calcite.rel.core","c":"CorrelationId","l":"names(Set<CorrelationId>)","u":"names(java.util.Set)"},{"p":"org.apache.calcite.util","c":"NameSet","l":"NameSet()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingNamespace","l":"namespace"},{"p":"org.apache.calcite.sql.validate","c":"SqlQualified","l":"namespace"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope.Resolve","l":"namespace"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"namespaces"},{"p":"org.apache.calcite.test","c":"SqlOperatorTest","l":"NANOSECOND_VARIANTS"},{"p":"org.apache.calcite.adapter.druid","c":"DruidExpressions","l":"nAryOperatorCall(String, List<String>)","u":"nAryOperatorCall(java.lang.String,java.util.List)"},{"p":"org.apache.calcite.adapter.druid","c":"NaryOperatorConverter","l":"NaryOperatorConverter(SqlOperator, String)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlOperator,java.lang.String)"},{"p":"org.apache.calcite.test.schemata.tpch","c":"TpchSchema.Customer","l":"nation_name"},{"p":"org.apache.calcite.util","c":"ConversionUtil","l":"NATIVE_UTF16_CHARSET_NAME"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"naturalDisallowsOnOrUsing()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"naturalOrUsingColumnNotCompatible(String, String, String)","u":"naturalOrUsingColumnNotCompatible(java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.sql.type","c":"ExtraSqlTypes","l":"NCHAR"},{"p":"org.apache.calcite.sql.type","c":"ExtraSqlTypes","l":"NCLOB"},{"p":"org.apache.calcite.piglet","c":"Ast.Op","l":"NE"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"ne(BigDecimal, BigDecimal)","u":"ne(java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"ne(Object, Object)","u":"ne(java.lang.Object,java.lang.Object)"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"ne(RexNode, RexNode)","u":"ne(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"ne(String, String, Comparator<String>)","u":"ne(java.lang.String,java.lang.String,java.util.Comparator)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"neAny(Object, Object)","u":"neAny(java.lang.Object,java.lang.Object)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexImpTable.LagImplementor","l":"needCacheWhenFrameIntact()"},{"p":"org.apache.calcite.adapter.enumerable","c":"StrictWinAggImplementor","l":"needCacheWhenFrameIntact()"},{"p":"org.apache.calcite.adapter.enumerable","c":"WinAggImplementor","l":"needCacheWhenFrameIntact()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"needQueryOp(String)","u":"needQueryOp(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"needSameTypeParameter()"},{"p":"org.apache.calcite.sql","c":"SqlWriter.FrameType","l":"needsIndent()"},{"p":"org.apache.calcite.sql","c":"SqlWriter.FrameTypeEnum","l":"needsIndent()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"needsNullIndicator(RelDataType)","u":"needsNullIndicator(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate.implicit","c":"AbstractTypeCoercion","l":"needToCast(SqlValidatorScope, SqlNode, RelDataType)","u":"needToCast(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate.implicit","c":"AbstractTypeCoercion","l":"needToCast(SqlValidatorScope, SqlNode, RelDataType, SqlTypeMappingRule)","u":"needToCast(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeMappingRule)"},{"p":"org.apache.calcite.util","c":"Util","l":"needToImplement(Object)","u":"needToImplement(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"Types","l":"needTypeCast(Type, Type)","u":"needTypeCast(java.lang.reflect.Type,java.lang.reflect.Type)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"Negate"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.Logic","l":"negate()"},{"p":"org.apache.calcite.rex","c":"RexUnknownAs","l":"negate()"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"negate()"},{"p":"org.apache.calcite.util","c":"Sarg","l":"negate()"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"negate(Expression)","u":"negate(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"negate(Expression, Method)","u":"negate(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"negate(RexBuilder, RexCall)","u":"negate(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall)"},{"p":"org.apache.calcite.piglet","c":"Ast.NumericLiteral","l":"negate(SqlParserPos)","u":"negate(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.Logic","l":"negate2()"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"NegateChecked"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"negateChecked(Expression)","u":"negateChecked(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"negateChecked(Expression, Method)","u":"negateChecked(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"NEGATED_POSIX_REGEX_CASE_INSENSITIVE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"NEGATED_POSIX_REGEX_CASE_SENSITIVE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"negateNullSafe()"},{"p":"org.apache.calcite.test","c":"CustomTypeSystems","l":"NEGATIVE_SCALE"},{"p":"org.apache.calcite.test","c":"CustomTypeSystems","l":"NEGATIVE_SCALE_ROUNDING_MODE_HALF_UP"},{"p":"org.apache.calcite.sql","c":"SqlDialect.DatabaseProduct","l":"NEOVIEW"},{"p":"org.apache.calcite.sql.dialect","c":"NeoviewSqlDialect","l":"NeoviewSqlDialect(SqlDialect.Context)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect.Context)"},{"p":"org.apache.calcite.rel.externalize","c":"RelJsonWriter","l":"nest()"},{"p":"org.apache.calcite.rel","c":"RelWriter","l":"nest()"},{"p":"org.apache.calcite.adapter.enumerable","c":"NestedBlockBuilder","l":"nestBlock()"},{"p":"org.apache.calcite.adapter.enumerable","c":"NestedBlockBuilderImpl","l":"nestBlock()"},{"p":"org.apache.calcite.adapter.enumerable","c":"NestedBlockBuilder","l":"nestBlock(BlockBuilder)","u":"nestBlock(org.apache.calcite.linq4j.tree.BlockBuilder)"},{"p":"org.apache.calcite.adapter.enumerable","c":"NestedBlockBuilderImpl","l":"nestBlock(BlockBuilder)","u":"nestBlock(org.apache.calcite.linq4j.tree.BlockBuilder)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"NESTED_LOOP_JOIN"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"nestedAggIllegal()"},{"p":"org.apache.calcite.adapter.enumerable","c":"NestedBlockBuilderImpl","l":"NestedBlockBuilderImpl(BlockBuilder)","u":"%3Cinit%3E(org.apache.calcite.linq4j.tree.BlockBuilder)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"nestedLoopJoin(Enumerable<TSource>, Enumerable<TInner>, Predicate2<TSource, TInner>, Function2<? super TSource, ? super TInner, TResult>, JoinType)","u":"nestedLoopJoin(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Predicate2,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.JoinType)"},{"p":"org.apache.calcite.sql","c":"SqlDialect.DatabaseProduct","l":"NETEZZA"},{"p":"org.apache.calcite.sql.dialect","c":"NetezzaSqlDialect","l":"NetezzaSqlDialect(SqlDialect.Context)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect.Context)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"New"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"NEW"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"new_(Constructor)","u":"new_(java.lang.reflect.Constructor)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"new_(Constructor, Expression...)","u":"new_(java.lang.reflect.Constructor,org.apache.calcite.linq4j.tree.Expression...)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"new_(Constructor, Iterable<? extends Expression>)","u":"new_(java.lang.reflect.Constructor,java.lang.Iterable)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"new_(Constructor, Iterable<? extends Expression>, Iterable<? extends MemberDeclaration>)","u":"new_(java.lang.reflect.Constructor,java.lang.Iterable,java.lang.Iterable)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"new_(Constructor, Iterable<? extends Expression>, MemberDeclaration...)","u":"new_(java.lang.reflect.Constructor,java.lang.Iterable,org.apache.calcite.linq4j.tree.MemberDeclaration...)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"new_(Type)","u":"new_(java.lang.reflect.Type)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"new_(Type, Expression...)","u":"new_(java.lang.reflect.Type,org.apache.calcite.linq4j.tree.Expression...)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"new_(Type, Iterable<? extends Expression>)","u":"new_(java.lang.reflect.Type,java.lang.Iterable)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"new_(Type, Iterable<? extends Expression>, Iterable<? extends MemberDeclaration>)","u":"new_(java.lang.reflect.Type,java.lang.Iterable,java.lang.Iterable)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"new_(Type, Iterable<? extends Expression>, MemberDeclaration...)","u":"new_(java.lang.reflect.Type,java.lang.Iterable,org.apache.calcite.linq4j.tree.MemberDeclaration...)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"NEW_SPECIFICATION"},{"p":"org.apache.calcite.rel.rules","c":"AggregateReduceFunctionsRule","l":"newAggregateRel(RelBuilder, Aggregate, List<AggregateCall>)","u":"newAggregateRel(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"NewArrayBounds"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"newArrayBounds(Type, int, Expression)","u":"newArrayBounds(java.lang.reflect.Type,int,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"NewArrayExpression","l":"NewArrayExpression(Type, int, Expression, List<Expression>)","u":"%3Cinit%3E(java.lang.reflect.Type,int,org.apache.calcite.linq4j.tree.Expression,java.util.List)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"NewArrayInit"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"newArrayInit(Type, Expression...)","u":"newArrayInit(java.lang.reflect.Type,org.apache.calcite.linq4j.tree.Expression...)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"newArrayInit(Type, int, Expression...)","u":"newArrayInit(java.lang.reflect.Type,int,org.apache.calcite.linq4j.tree.Expression...)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"newArrayInit(Type, int, Iterable<? extends Expression>)","u":"newArrayInit(java.lang.reflect.Type,int,java.lang.Iterable)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"newArrayInit(Type, Iterable<? extends Expression>)","u":"newArrayInit(java.lang.reflect.Type,java.lang.Iterable)"},{"p":"org.apache.calcite.sql2rel","c":"InitializerExpressionFactory","l":"newAttributeInitializer(RelDataType, SqlFunction, int, List<RexNode>, InitializerContext)","u":"newAttributeInitializer(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlFunction,int,java.util.List,org.apache.calcite.sql2rel.InitializerContext)"},{"p":"org.apache.calcite.sql2rel","c":"NullInitializerExpressionFactory","l":"newAttributeInitializer(RelDataType, SqlFunction, int, List<RexNode>, InitializerContext)","u":"newAttributeInitializer(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlFunction,int,java.util.List,org.apache.calcite.sql2rel.InitializerContext)"},{"p":"org.apache.calcite.test.catalog","c":"CountingFactory","l":"newAttributeInitializer(RelDataType, SqlFunction, int, List<RexNode>, InitializerContext)","u":"newAttributeInitializer(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlFunction,int,java.util.List,org.apache.calcite.sql2rel.InitializerContext)"},{"p":"org.apache.calcite.rel.rules","c":"LongBitmap","l":"newBitmap(int)"},{"p":"org.apache.calcite.rel.rules","c":"LongBitmap","l":"newBitmapBetween(int, int)","u":"newBitmapBetween(int,int)"},{"p":"org.apache.calcite.rel.rules","c":"LongBitmap","l":"newBitmapFromList(List<Integer>)","u":"newBitmapFromList(java.util.List)"},{"p":"org.apache.calcite.interpreter","c":"Row","l":"newBuilder(int)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateReduceFunctionsRule","l":"newCalcRel(RelBuilder, RelDataType, List<RexNode>)","u":"newCalcRel(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.type.RelDataType,java.util.List)"},{"p":"org.apache.calcite.sql2rel","c":"InitializerExpressionFactory","l":"newColumnDefaultValue(RelOptTable, int, InitializerContext)","u":"newColumnDefaultValue(org.apache.calcite.plan.RelOptTable,int,org.apache.calcite.sql2rel.InitializerContext)"},{"p":"org.apache.calcite.sql2rel","c":"NullInitializerExpressionFactory","l":"newColumnDefaultValue(RelOptTable, int, InitializerContext)","u":"newColumnDefaultValue(org.apache.calcite.plan.RelOptTable,int,org.apache.calcite.sql2rel.InitializerContext)"},{"p":"org.apache.calcite.test.catalog","c":"CountingFactory","l":"newColumnDefaultValue(RelOptTable, int, InitializerContext)","u":"newColumnDefaultValue(org.apache.calcite.plan.RelOptTable,int,org.apache.calcite.sql2rel.InitializerContext)"},{"p":"org.apache.calcite.test.catalog","c":"VirtualColumnsExpressionFactory","l":"newColumnDefaultValue(RelOptTable, int, InitializerContext)","u":"newColumnDefaultValue(org.apache.calcite.plan.RelOptTable,int,org.apache.calcite.sql2rel.InitializerContext)"},{"p":"org.apache.calcite.tools","c":"Frameworks","l":"newConfigBuilder()"},{"p":"org.apache.calcite.tools","c":"Frameworks","l":"newConfigBuilder(FrameworkConfig)","u":"newConfigBuilder(org.apache.calcite.tools.FrameworkConfig)"},{"p":"org.apache.calcite.jdbc","c":"CalciteFactory","l":"newConnection(UnregisteredDriver, AvaticaFactory, String, Properties)","u":"newConnection(org.apache.calcite.avatica.UnregisteredDriver,org.apache.calcite.avatica.AvaticaFactory,java.lang.String,java.util.Properties)"},{"p":"org.apache.calcite.jdbc","c":"CalciteFactory","l":"newConnection(UnregisteredDriver, AvaticaFactory, String, Properties, CalciteSchema, JavaTypeFactory)","u":"newConnection(org.apache.calcite.avatica.UnregisteredDriver,org.apache.calcite.avatica.AvaticaFactory,java.lang.String,java.util.Properties,org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.adapter.java.JavaTypeFactory)"},{"p":"org.apache.calcite.jdbc","c":"CalciteJdbc41Factory","l":"newConnection(UnregisteredDriver, AvaticaFactory, String, Properties, CalciteSchema, JavaTypeFactory)","u":"newConnection(org.apache.calcite.avatica.UnregisteredDriver,org.apache.calcite.avatica.AvaticaFactory,java.lang.String,java.util.Properties,org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.adapter.java.JavaTypeFactory)"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"newContextException(int, int, int, int, Resources.ExInst<?>)","u":"newContextException(int,int,int,int,org.apache.calcite.runtime.Resources.ExInst)"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"newContextException(SqlParserPos, Resources.ExInst<?>)","u":"newContextException(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.runtime.Resources.ExInst)"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"newContextException(SqlParserPos, Resources.ExInst<?>, String)","u":"newContextException(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.runtime.Resources.ExInst,java.lang.String)"},{"p":"org.apache.calcite.jdbc","c":"CalciteJdbc41Factory","l":"newDatabaseMetaData(AvaticaConnection)","u":"newDatabaseMetaData(org.apache.calcite.avatica.AvaticaConnection)"},{"p":"org.apache.calcite.rel.core","c":"Aggregate.AggCallBinding","l":"newError(Resources.ExInst<SqlValidatorException>)","u":"newError(org.apache.calcite.runtime.Resources.ExInst)"},{"p":"org.apache.calcite.rex","c":"RexCallBinding","l":"newError(Resources.ExInst<SqlValidatorException>)","u":"newError(org.apache.calcite.runtime.Resources.ExInst)"},{"p":"org.apache.calcite.sql","c":"ExplicitOperatorBinding","l":"newError(Resources.ExInst<SqlValidatorException>)","u":"newError(org.apache.calcite.runtime.Resources.ExInst)"},{"p":"org.apache.calcite.sql","c":"SqlCallBinding","l":"newError(Resources.ExInst<SqlValidatorException>)","u":"newError(org.apache.calcite.runtime.Resources.ExInst)"},{"p":"org.apache.calcite.sql","c":"SqlOperatorBinding","l":"newError(Resources.ExInst<SqlValidatorException>)","u":"newError(org.apache.calcite.runtime.Resources.ExInst)"},{"p":"org.apache.calcite.linq4j.tree","c":"NewExpression","l":"NewExpression(Type, List<Expression>, List<MemberDeclaration>)","u":"%3Cinit%3E(java.lang.reflect.Type,java.util.List,java.util.List)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"newFieldTrimmer()"},{"p":"org.apache.calcite.util","c":"Util","l":"newInternal()"},{"p":"org.apache.calcite.util","c":"Util","l":"newInternal(String)","u":"newInternal(java.lang.String)"},{"p":"org.apache.calcite.util","c":"Util","l":"newInternal(Throwable)","u":"newInternal(java.lang.Throwable)"},{"p":"org.apache.calcite.sql","c":"SqlDialect.FakeUtil","l":"newInternal(Throwable, String)","u":"newInternal(java.lang.Throwable,java.lang.String)"},{"p":"org.apache.calcite.util","c":"Util","l":"newInternal(Throwable, String)","u":"newInternal(java.lang.Throwable,java.lang.String)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter.FrameImpl","l":"newlineAfterClose"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter.FrameImpl","l":"newlineAfterOpen"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter.FrameImpl","l":"newlineAfterSep"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"newlineAndIndent()"},{"p":"org.apache.calcite.sql","c":"SqlWriter","l":"newlineAndIndent()"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"newlineAndIndent(int)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter.FrameImpl","l":"newlineBeforeClose"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter.FrameImpl","l":"newlineBeforeSep"},{"p":"org.apache.calcite.linq4j.tree","c":"BlockBuilder","l":"newName(String)","u":"newName(java.lang.String)"},{"p":"org.apache.calcite.jdbc","c":"CalciteJdbc41Factory","l":"newPreparedStatement(AvaticaConnection, Meta.StatementHandle, Meta.Signature, int, int, int)","u":"newPreparedStatement(org.apache.calcite.avatica.AvaticaConnection,org.apache.calcite.avatica.Meta.StatementHandle,org.apache.calcite.avatica.Meta.Signature,int,int,int)"},{"p":"org.apache.calcite.jdbc","c":"CalciteJdbc41Factory","l":"newResultSet(AvaticaStatement, QueryState, Meta.Signature, TimeZone, Meta.Frame)","u":"newResultSet(org.apache.calcite.avatica.AvaticaStatement,org.apache.calcite.avatica.QueryState,org.apache.calcite.avatica.Meta.Signature,java.util.TimeZone,org.apache.calcite.avatica.Meta.Frame)"},{"p":"org.apache.calcite.jdbc","c":"CalciteJdbc41Factory","l":"newResultSetMetaData(AvaticaStatement, Meta.Signature)","u":"newResultSetMetaData(org.apache.calcite.avatica.AvaticaStatement,org.apache.calcite.avatica.Meta.Signature)"},{"p":"org.apache.calcite.jdbc","c":"CalciteJdbc41Factory","l":"newStatement(AvaticaConnection, Meta.StatementHandle, int, int, int)","u":"newStatement(org.apache.calcite.avatica.AvaticaConnection,org.apache.calcite.avatica.Meta.StatementHandle,int,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlCallBinding","l":"newValidationError(Resources.ExInst<SqlValidatorException>)","u":"newValidationError(org.apache.calcite.runtime.Resources.ExInst)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"newValidationError(SqlNode, Resources.ExInst<SqlValidatorException>)","u":"newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources.ExInst)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"newValidationError(SqlNode, Resources.ExInst<SqlValidatorException>)","u":"newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources.ExInst)"},{"p":"org.apache.calcite.sql","c":"SqlCallBinding","l":"newValidationSignatureError()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"newValidator(SqlOperatorTable, SqlValidatorCatalogReader, RelDataTypeFactory)","u":"newValidator(org.apache.calcite.sql.SqlOperatorTable,org.apache.calcite.sql.validate.SqlValidatorCatalogReader,org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"newValidator(SqlOperatorTable, SqlValidatorCatalogReader, RelDataTypeFactory, SqlValidator.Config)","u":"newValidator(org.apache.calcite.sql.SqlOperatorTable,org.apache.calcite.sql.validate.SqlValidatorCatalogReader,org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.sql.validate.SqlValidator.Config)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"NEXT"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"NEXT"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"NEXT_VALUE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"NEXT_VALUE"},{"p":"org.apache.calcite.runtime","c":"EnumeratorCursor","l":"next()"},{"p":"org.apache.calcite.runtime","c":"ObjectEnumeratorCursor","l":"next()"},{"p":"org.apache.calcite.util","c":"Filterator","l":"next()"},{"p":"org.apache.calcite.util.graph","c":"BreadthFirstIterator","l":"next()"},{"p":"org.apache.calcite.util.graph","c":"DepthFirstIterator","l":"next()"},{"p":"org.apache.calcite.util.graph","c":"TopologicalOrderIterator","l":"next()"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"nextClearBit(int)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"nextLine(String, int)","u":"nextLine(java.lang.String,int)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"nextSetBit(int)"},{"p":"org.apache.calcite.sql.advise","c":"SqlSimpleParser.Tokenizer","l":"nextToken()"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"nextWhitespace"},{"p":"org.apache.calcite.schema","c":"Schema.TableType","l":"NICKNAME"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"NILADIC"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"NL"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"NL"},{"p":"org.apache.calcite.test","c":"SqlToRelTestBase","l":"NL"},{"p":"org.apache.calcite.util","c":"Util","l":"nLogM(double, double)","u":"nLogM(double,double)"},{"p":"org.apache.calcite.util","c":"Util","l":"nLogN(double)"},{"p":"org.apache.calcite.util","c":"NlsString","l":"NlsString(ByteString, String, SqlCollation)","u":"%3Cinit%3E(org.apache.calcite.avatica.util.ByteString,java.lang.String,org.apache.calcite.sql.SqlCollation)"},{"p":"org.apache.calcite.util","c":"NlsString","l":"NlsString(String, String, SqlCollation)","u":"%3Cinit%3E(java.lang.String,java.lang.String,org.apache.calcite.sql.SqlCollation)"},{"p":"org.apache.calcite.plan","c":"TableAccessMap.Mode","l":"NO_ACCESS"},{"p":"org.apache.calcite.sql","c":"SqlExplainLevel","l":"NO_ATTRIBUTES"},{"p":"org.apache.calcite.rel.core","c":"Aggregate","l":"NO_INDICATOR"},{"p":"org.apache.calcite.rex","c":"RexDigestIncludeType","l":"NO_TYPE"},{"p":"org.apache.calcite.interpreter","c":"Nodes.CoreCompiler","l":"node"},{"p":"org.apache.calcite.sql","c":"SqlSpecialOperator.ReduceResult","l":"node"},{"p":"org.apache.calcite.tools","c":"Hoist.Variable","l":"node"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"NODE_TYPES"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserFixture","l":"node()"},{"p":"org.apache.calcite.sql","c":"SqlSpecialOperator.TokenSequence","l":"node(int)"},{"p":"org.apache.calcite.rel.rules","c":"LoptJoinTree.Node","l":"Node(LoptJoinTree.BinaryTree, LoptJoinTree.BinaryTree, LoptJoinTree)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.LoptJoinTree.BinaryTree,org.apache.calcite.rel.rules.LoptJoinTree.BinaryTree,org.apache.calcite.rel.rules.LoptJoinTree)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserFixture","l":"node(Matcher<SqlNode>)","u":"node(org.hamcrest.Matcher)"},{"p":"org.apache.calcite.piglet","c":"Ast.Node","l":"Node(SqlParserPos, Ast.Op)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.piglet.Ast.Op)"},{"p":"org.apache.calcite.rex","c":"RexCall","l":"nodeCount"},{"p":"org.apache.calcite.rex","c":"RexWindow","l":"nodeCount"},{"p":"org.apache.calcite.rex","c":"RexCall","l":"nodeCount()"},{"p":"org.apache.calcite.rex","c":"RexNode","l":"nodeCount()"},{"p":"org.apache.calcite.rex","c":"RexOver","l":"nodeCount()"},{"p":"org.apache.calcite.rex","c":"RexWindowBound","l":"nodeCount()"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"nodeCount(List<? extends RexNode>)","u":"nodeCount(java.util.List)"},{"p":"org.apache.calcite.plan","c":"RelOptRuleCall","l":"nodeInputs"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserFixture","l":"nodeList()"},{"p":"org.apache.calcite.rel.externalize","c":"RelDotWriter.WriteOption","l":"nodePredicate()"},{"p":"org.apache.calcite.interpreter","c":"Nodes","l":"Nodes()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.linq4j.tree","c":"AbstractNode","l":"nodeType"},{"p":"org.apache.calcite.rel.hint","c":"NodeTypeHintPredicate","l":"NodeTypeHintPredicate(NodeTypeHintPredicate.NodeType)","u":"%3Cinit%3E(org.apache.calcite.rel.hint.NodeTypeHintPredicate.NodeType)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.NoElementException","l":"NoElementException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.rel.metadata","c":"JaninoRelMetadataProvider.NoHandler","l":"NoHandler(Class<? extends RelNode>)","u":"%3Cinit%3E(java.lang.Class)"},{"p":"org.apache.calcite.rel.metadata","c":"MetadataHandlerProvider.NoHandler","l":"NoHandler(Class<? extends RelNode>)","u":"%3Cinit%3E(java.lang.Class)"},{"p":"org.apache.calcite.rel.core","c":"Aggregate","l":"noIndicator(Aggregate)","u":"noIndicator(org.apache.calcite.rel.core.Aggregate)"},{"p":"org.apache.calcite.plan","c":"RelRule.OperandDetailBuilder","l":"noInputs()"},{"p":"org.apache.calcite.runtime","c":"PairList","l":"noMatch(BiPredicate<T, U>)","u":"noMatch(java.util.function.BiPredicate)"},{"p":"org.apache.calcite.util","c":"BarfingInvocationHandler","l":"noMethod(Method)","u":"noMethod(java.lang.reflect.Method)"},{"p":"org.apache.calcite.sql","c":"SqlExplainLevel","l":"NON_COST_ATTRIBUTES"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"NON_CUMULATIVE_COST"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeImpl","l":"NON_NULLABLE_SUFFIX"},{"p":"org.apache.calcite.adapter.enumerable","c":"StrictAggImplementor","l":"nonDefaultOnEmptySet(AggContext)","u":"nonDefaultOnEmptySet(org.apache.calcite.adapter.enumerable.AggContext)"},{"p":"org.apache.calcite.adapter.enumerable","c":"StrictWinAggImplementor","l":"nonDefaultOnEmptySet(AggContext)","u":"nonDefaultOnEmptySet(org.apache.calcite.adapter.enumerable.AggContext)"},{"p":"org.apache.calcite.adapter.enumerable","c":"StrictWinAggImplementor","l":"nonDefaultOnEmptySet(WinAggContext)","u":"nonDefaultOnEmptySet(org.apache.calcite.adapter.enumerable.WinAggContext)"},{"p":"org.apache.calcite.adapter.enumerable","c":"NullPolicy","l":"NONE"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeComparability","l":"NONE"},{"p":"org.apache.calcite.rel.type","c":"StructKind","l":"NONE"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.PathMode","l":"NONE"},{"p":"org.apache.calcite.sql.babel.postgres","c":"SqlSetOptions.Values","l":"NONE"},{"p":"org.apache.calcite.sql","c":"JoinConditionType","l":"NONE"},{"p":"org.apache.calcite.sql","c":"SqlCollation.Coercibility","l":"NONE"},{"p":"org.apache.calcite.sql","c":"SqlDialect.CalendarPolicy","l":"NONE"},{"p":"org.apache.calcite.sql.type","c":"SqlOperandTypeChecker.Consistency","l":"NONE"},{"p":"org.apache.calcite.util.format.postgresql","c":"DateCalendarEnum","l":"NONE"},{"p":"org.apache.calcite.plan","c":"Convention","l":"NONE"},{"p":"org.apache.calcite.rel.core","c":"Project.Flags","l":"NONE"},{"p":"org.apache.calcite.plan","c":"RelOptRule","l":"none()"},{"p":"org.apache.calcite.rel.convert","c":"NoneConverter","l":"NoneConverter(RelOptCluster, RelNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.core","c":"JoinInfo","l":"nonEquiConditions"},{"p":"org.apache.calcite.interpreter","c":"NoneToBindableConverterRule","l":"NoneToBindableConverterRule(ConverterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule.Config)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults.NonLeafReplayableQueryable","l":"NonLeafReplayableQueryable(Queryable<T>)","u":"%3Cinit%3E(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"NONNULL_NONNULL"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"nonStandardFeatureUsed(String)","u":"nonStandardFeatureUsed(java.lang.String)"},{"p":"org.apache.calcite.util","c":"Smalls.MultipleFunction","l":"nonStatic(int)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"noOperator(String, String, String)","u":"noOperator(java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.sql.type","c":"SameOperandTypeChecker","l":"nOperands"},{"p":"org.apache.calcite.rex","c":"RexProgram","l":"normalize(RexBuilder, boolean)","u":"normalize(org.apache.calcite.rex.RexBuilder,boolean)"},{"p":"org.apache.calcite.rex","c":"RexProgramBuilder","l":"normalize(RexBuilder, RexProgram)","u":"normalize(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexProgram)"},{"p":"org.apache.calcite.rex","c":"RexProgram","l":"normalize(RexBuilder, RexSimplify)","u":"normalize(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify)"},{"p":"org.apache.calcite.rex","c":"RexNormalize","l":"normalize(SqlOperator, List<RexNode>)","u":"normalize(org.apache.calcite.sql.SqlOperator,java.util.List)"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"normalizePlan(String)","u":"normalizePlan(java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"Not"},{"p":"org.apache.calcite.piglet","c":"Ast.Op","l":"NOT"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"NOT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"NOT"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"NOT"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"NOT_BETWEEN"},{"p":"org.apache.calcite.sql.babel.postgres","c":"TransactionMode","l":"NOT_DEFERRABLE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"NOT_EQUALS"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"NOT_EQUALS"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"NOT_ILIKE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"NOT_IN"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"NOT_IN"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"NOT_LIKE"},{"p":"org.apache.calcite.sql.validate","c":"SqlMonotonicity","l":"NOT_MONOTONIC"},{"p":"org.apache.calcite.plan","c":"Strong.Policy","l":"NOT_NULL"},{"p":"org.apache.calcite.schema","c":"ColumnStrategy","l":"NOT_NULLABLE"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexImpTable.NullAs","l":"NOT_POSSIBLE"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"NOT_RLIKE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"NOT_SIMILAR_TO"},{"p":"org.apache.calcite.piglet","c":"Ast.Direction","l":"NOT_SPECIFIED"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"NOT_SUBMULTISET_OF"},{"p":"org.apache.calcite.sql.fun","c":"SqlBetweenOperator","l":"not()"},{"p":"org.apache.calcite.sql.fun","c":"SqlInOperator","l":"not()"},{"p":"org.apache.calcite.sql.fun","c":"SqlLikeOperator","l":"not()"},{"p":"org.apache.calcite.sql.fun","c":"SqlPosixRegexOperator","l":"not()"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"not()"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"not(Boolean)","u":"not(java.lang.Boolean)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"not(Expression)","u":"not(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"not(Expression, Method)","u":"not(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"not(RexNode)","u":"not(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"not(RexNode)","u":"not(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"notASequence(String)","u":"notASequence(java.lang.String)"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.NotATableFunction","l":"NotATableFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"notContainsCorrelation(RelNode, CorrelationId, Litmus)","u":"notContainsCorrelation(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.CorrelationId,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"notContainsWindowedAgg(Calc)","u":"notContainsWindowedAgg(org.apache.calcite.rel.core.Calc)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"notContainsWindowedAgg(Filter)","u":"notContainsWindowedAgg(org.apache.calcite.rel.core.Filter)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"notContainsWindowedAgg(Project)","u":"notContainsWindowedAgg(org.apache.calcite.rel.core.Project)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"NotEqual"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"notEqual(Expression, Expression)","u":"notEqual(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"notEqual(Expression, Expression, boolean, Method)","u":"notEqual(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,boolean,java.lang.reflect.Method)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"notEquals(RexNode, RexNode)","u":"notEquals(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"notFn(RexBuilder)","u":"notFn(org.apache.calcite.rex.RexBuilder)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"notGroupExpr(String)","u":"notGroupExpr(java.lang.String)"},{"p":"org.apache.calcite.util","c":"Unsafe","l":"notifyAll(Object)","u":"notifyAll(java.lang.Object)"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"notifyChosen(RelNode)","u":"notifyChosen(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"notifyDiscard(RelNode)","u":"notifyDiscard(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"notifyEquivalence(RelNode, Object, boolean)","u":"notifyEquivalence(org.apache.calcite.rel.RelNode,java.lang.Object,boolean)"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"notifyTransformation(RelOptRuleCall, RelNode, boolean)","u":"notifyTransformation(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.RelNode,boolean)"},{"p":"org.apache.calcite.rex","c":"RexUtil.RexFinder","l":"notInCalc(Calc)","u":"notInCalc(org.apache.calcite.rel.core.Calc)"},{"p":"org.apache.calcite.rex","c":"RexUtil.RexFinder","l":"notInFilter(Filter)","u":"notInFilter(org.apache.calcite.rel.core.Filter)"},{"p":"org.apache.calcite.rex","c":"RexUtil.RexFinder","l":"notInJoin(Join)","u":"notInJoin(org.apache.calcite.rel.core.Join)"},{"p":"org.apache.calcite.rex","c":"RexUtil.RexFinder","l":"notInProject(Project)","u":"notInProject(org.apache.calcite.rel.core.Project)"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"notNull(RexNode)","u":"notNull(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.sql.type","c":"NotNullOperandTypeChecker","l":"NotNullOperandTypeChecker(int, boolean)","u":"%3Cinit%3E(int,boolean)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"notSelectDistinctExpr(String)","u":"notSelectDistinctExpr(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"notTemporalTable(String)","u":"notTemporalTable(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"noValueSuppliedForViewColumn(String, String)","u":"noValueSuppliedForViewColumn(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"NTH_VALUE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"NTH_VALUE"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"nth(int)"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"nth(int, int, SqlSingleOperandTypeChecker)","u":"nth(int,int,org.apache.calcite.sql.type.SqlSingleOperandTypeChecker)"},{"p":"org.apache.calcite.linq4j.tree","c":"Types","l":"nthField(int, Class<?>)","u":"nthField(int,java.lang.Class)"},{"p":"org.apache.calcite.linq4j.tree","c":"Types","l":"nthField(int, Type)","u":"nthField(int,java.lang.reflect.Type)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"NTILE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"NTILE"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexImpTable.NullAs","l":"NULL"},{"p":"org.apache.calcite.runtime.rtti","c":"RuntimeTypeInformation.RuntimeSqlTypeName","l":"NULL"},{"p":"org.apache.calcite.sql","c":"SqlDialect.CalendarPolicy","l":"NULL"},{"p":"org.apache.calcite.sql","c":"SqlJsonQueryEmptyOrErrorBehavior","l":"NULL"},{"p":"org.apache.calcite.sql","c":"SqlJsonValueEmptyOrErrorBehavior","l":"NULL"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFamily","l":"NULL"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"NULL"},{"p":"org.apache.calcite.util","c":"Util.FoundOne","l":"NULL"},{"p":"org.apache.calcite.config","c":"CalciteConnectionProperty","l":"NULL_EQUAL_TO_EMPTY"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexImpTable","l":"NULL_EXPR"},{"p":"org.apache.calcite.sql","c":"SqlNullSemantics","l":"NULL_MATCHES_ANYTHING"},{"p":"org.apache.calcite.sql","c":"SqlNullSemantics","l":"NULL_MATCHES_NOTHING"},{"p":"org.apache.calcite.sql","c":"SqlNullSemantics","l":"NULL_MATCHES_NULL"},{"p":"org.apache.calcite.sql","c":"SqlJsonConstructorNullClause","l":"NULL_ON_NULL"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"NULL_SAFE_EQUAL"},{"p":"org.apache.calcite.sql","c":"SqlStateCodes","l":"NULL_VALUE_NOT_ALLOWED"},{"p":"org.apache.calcite.util","c":"Smalls.Null4Function","l":"Null4Function()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util","c":"Smalls.Null8Function","l":"Null8Function()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.schema","c":"ColumnStrategy","l":"NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"NULLABLE_LITERAL"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"NULLABLE_MOD"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"NULLABLE_SUM"},{"p":"org.apache.calcite.linq4j.tree","c":"ArrayLengthRecordField","l":"nullable()"},{"p":"org.apache.calcite.linq4j.tree","c":"Types.RecordField","l":"nullable()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory.Builder","l":"nullable(boolean)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory.FieldInfoBuilder","l":"nullable(boolean)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"nullableAll(List<? extends E>, Function1<E, Boolean>)","u":"nullableAll(java.util.List,org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"nullableExists(List<? extends E>, Function1<E, Boolean>)","u":"nullableExists(java.util.List,org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory.Builder","l":"nullableRecord(boolean)"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema","l":"nullables"},{"p":"org.apache.calcite.test.schemata.hr","c":"NullableTest","l":"NullableTest(Integer, Integer, int)","u":"%3Cinit%3E(java.lang.Integer,java.lang.Integer,int)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"nullaryFunctionMap"},{"p":"org.apache.calcite.util","c":"Sarg","l":"nullAs"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"nullCollation"},{"p":"org.apache.calcite.sql","c":"SqlDialect.Context","l":"nullCollation()"},{"p":"org.apache.calcite.rel","c":"RelFieldCollation.NullDirection","l":"nullComparison"},{"p":"org.apache.calcite.rel","c":"RelFieldCollation","l":"nullDirection"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfig","l":"nullEqualToEmpty()"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfigImpl","l":"nullEqualToEmpty()"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"NULLIF"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"NULLIF"},{"p":"org.apache.calcite.sql.validate","c":"AggregatingSelectScope","l":"nullifyType(SqlNode, RelDataType)","u":"nullifyType(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingScope","l":"nullifyType(SqlNode, RelDataType)","u":"nullifyType(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate","c":"ParameterScope","l":"nullifyType(SqlNode, RelDataType)","u":"nullifyType(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope","l":"nullifyType(SqlNode, RelDataType)","u":"nullifyType(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"nullIllegal()"},{"p":"org.apache.calcite.sql2rel","c":"NullInitializerExpressionFactory","l":"NullInitializerExpressionFactory()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"nullKeyOfJsonObjectNotAllowed()"},{"p":"org.apache.calcite.adapter.druid","c":"DruidExpressions","l":"nullLiteral()"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"NULLS_COMPARATOR"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"NULLS_COMPARATOR2"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"NULLS_FIRST"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"NULLS_FIRST"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"NULLS_LAST"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"NULLS_LAST"},{"p":"org.apache.calcite.linq4j.function","c":"Functions","l":"nullsComparator(boolean, boolean)","u":"nullsComparator(boolean,boolean)"},{"p":"org.apache.calcite.linq4j.function","c":"Functions","l":"nullsComparator(boolean, boolean, Comparator<T>)","u":"nullsComparator(boolean,boolean,java.util.Comparator)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"nullsFirst(RexNode)","u":"nullsFirst(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"nullsLast(RexNode)","u":"nullsLast(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.tools","c":"RelBuilder.OverCall","l":"nullWhenCountZero(boolean)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"number(Number)","u":"number(java.lang.Number)"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"NumberCompiledPattern","l":"NumberCompiledPattern(ChronoUnitEnum, Function<ZonedDateTime, Integer>, Function<Integer, Integer>, int, int, int, int, String, Set<PatternModifier>)","u":"%3Cinit%3E(org.apache.calcite.util.format.postgresql.ChronoUnitEnum,java.util.function.Function,java.util.function.Function,int,int,int,int,java.lang.String,java.util.Set)"},{"p":"org.apache.calcite.util.format.postgresql.format","c":"NumberFormatPattern","l":"NumberFormatPattern(String, ChronoUnitEnum, Function<ZonedDateTime, Integer>, Function<Integer, Integer>, int, int, int, int)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.util.format.postgresql.ChronoUnitEnum,java.util.function.Function,java.util.function.Function,int,int,int,int)"},{"p":"org.apache.calcite.util.format.postgresql.format","c":"NumberFormatPattern","l":"NumberFormatPattern(String, ChronoUnitEnum, Function<ZonedDateTime, Integer>, int, int, int, int)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.util.format.postgresql.ChronoUnitEnum,java.util.function.Function,int,int,int,int)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidExpressions","l":"numberLiteral(Number)","u":"numberLiteral(java.lang.Number)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"numberLiteralOutOfRange(String)","u":"numberLiteralOutOfRange(java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"numberValue(Number, RoundingMode)","u":"numberValue(java.lang.Number,java.math.RoundingMode)"},{"p":"org.apache.calcite.rex","c":"RexLiteral","l":"numberValue(RexNode)","u":"numberValue(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"numberValueRoundDown(Number)","u":"numberValueRoundDown(java.lang.Number)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUtil","l":"numDistinctVals(Double, Double)","u":"numDistinctVals(java.lang.Double,java.lang.Double)"},{"p":"org.apache.calcite.sql","c":"SqlFunctionCategory","l":"NUMERIC"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFamily","l":"NUMERIC"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"NUMERIC"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"NUMERIC_CHARACTER"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"NUMERIC_INT32"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"NUMERIC_INTEGER"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"NUMERIC_INTERVAL"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"NUMERIC_NUMERIC"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"NUMERIC_OPTIONAL_INTEGER"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"NUMERIC_OPTIONAL_NUMERIC"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"NUMERIC_OR_INTERVAL"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"NUMERIC_OR_STRING"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"NUMERIC_TYPES"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"NUMERIC_UNIT_INTERVAL_NUMERIC_LITERAL"},{"p":"org.apache.calcite.sql","c":"SqlStateCodes","l":"NUMERIC_VALUE_OUT_OF_RANGE"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.NumericComparison","l":"NumericComparison(T, BiFunction<T, T, T>)","u":"%3Cinit%3E(T,java.util.function.BiFunction)"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema.EveryType","l":"numericFields()"},{"p":"org.apache.calcite.util","c":"XmlOutput","l":"numTagsWritten()"},{"p":"org.apache.calcite.sql.type","c":"ExtraSqlTypes","l":"NVARCHAR"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"NVL"},{"p":"org.apache.calcite.sql.fun","c":"OracleSqlOperatorTable","l":"NVL"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"NVL"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"NVL2"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"NVL2"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"NVL2_RESTRICTIVE"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser.Token","l":"o"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser.Op","l":"o()"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser.Token","l":"o()"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.JsonPathContext","l":"obj"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.JsonValueContext","l":"obj"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive.Flavor","l":"OBJECT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"OBJECT_TO_STRING"},{"p":"org.apache.calcite.runtime","c":"ObjectEnumeratorCursor","l":"ObjectEnumeratorCursor(Enumerator<Object>)","u":"%3Cinit%3E(org.apache.calcite.linq4j.Enumerator)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"objectNotFound(String)","u":"objectNotFound(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"objectNotFoundDidYouMean(String, String)","u":"objectNotFoundDidYouMean(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"objectNotFoundWithin(String, String)","u":"objectNotFoundWithin(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"objectNotFoundWithinDidYouMean(String, String, String)","u":"objectNotFoundWithinDidYouMean(java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"OBJECTS_EQUAL"},{"p":"org.apache.calcite.sql.type","c":"ObjectSqlType","l":"ObjectSqlType(SqlTypeName, SqlIdentifier, boolean, List<? extends RelDataTypeField>, RelDataTypeComparability)","u":"%3Cinit%3E(org.apache.calcite.sql.type.SqlTypeName,org.apache.calcite.sql.SqlIdentifier,boolean,java.util.List,org.apache.calcite.rel.type.RelDataTypeComparability)"},{"p":"org.apache.calcite.util","c":"Glossary","l":"OBSERVER_PATTERN"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"occurrenceNotZero()"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"OCTET_LENGTH"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"OCTET_LENGTH"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"octetLength(ByteString)","u":"octetLength(org.apache.calcite.avatica.util.ByteString)"},{"p":"org.apache.calcite.runtime","c":"FlatLists","l":"of()"},{"p":"org.apache.calcite.runtime","c":"ImmutablePairList","l":"of()"},{"p":"org.apache.calcite.runtime","c":"PairList","l":"of()"},{"p":"org.apache.calcite.sql.parser","c":"Span","l":"of()"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"of()"},{"p":"org.apache.calcite.util","c":"CompositeList","l":"of()"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"of()"},{"p":"org.apache.calcite.util","c":"ImmutableIntList","l":"of()"},{"p":"org.apache.calcite.sql.type","c":"OperandHandlers","l":"of(BiFunction<SqlValidator, SqlCall, SqlCall>)","u":"of(java.util.function.BiFunction)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexImpTable.NullAs","l":"of(boolean)"},{"p":"org.apache.calcite.util","c":"Sarg","l":"of(boolean, RangeSet<C>)","u":"of(boolean,com.google.common.collect.RangeSet)"},{"p":"org.apache.calcite","c":"DataContexts","l":"of(CalciteConnection, SchemaPlus)","u":"of(org.apache.calcite.jdbc.CalciteConnection,org.apache.calcite.schema.SchemaPlus)"},{"p":"org.apache.calcite.util","c":"Sources","l":"of(CharSequence)","u":"of(java.lang.CharSequence)"},{"p":"org.apache.calcite.rel.metadata","c":"MetadataDef","l":"of(Class<M>, Class<? extends MetadataHandler<M>>, Method...)","u":"of(java.lang.Class,java.lang.Class,java.lang.reflect.Method...)"},{"p":"org.apache.calcite.sql.parser","c":"Span","l":"of(Collection<? extends SqlNode>)","u":"of(java.util.Collection)"},{"p":"org.apache.calcite.runtime","c":"FunctionContexts","l":"of(DataContext, Object[])","u":"of(org.apache.calcite.DataContext,java.lang.Object[])"},{"p":"org.apache.calcite.runtime","c":"ResultSetEnumerable","l":"of(DataSource, String)","u":"of(javax.sql.DataSource,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"ResultSetEnumerable","l":"of(DataSource, String, Function1<ResultSet, Function0<T>>)","u":"of(javax.sql.DataSource,java.lang.String,org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.runtime","c":"ResultSetEnumerable","l":"of(DataSource, String, Function1<ResultSet, Function0<T>>, ResultSetEnumerable.PreparedStatementEnricher)","u":"of(javax.sql.DataSource,java.lang.String,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.runtime.ResultSetEnumerable.PreparedStatementEnricher)"},{"p":"org.apache.calcite.runtime","c":"ResultSetEnumerable","l":"of(DataSource, String, Primitive[])","u":"of(javax.sql.DataSource,java.lang.String,org.apache.calcite.linq4j.tree.Primitive[])"},{"p":"org.apache.calcite.util.graph","c":"TopologicalOrderIterator","l":"of(DirectedGraph<V, E>)","u":"of(org.apache.calcite.util.graph.DirectedGraph)"},{"p":"org.apache.calcite.util.graph","c":"BreadthFirstIterator","l":"of(DirectedGraph<V, E>, V)","u":"of(org.apache.calcite.util.graph.DirectedGraph,V)"},{"p":"org.apache.calcite.util.graph","c":"DepthFirstIterator","l":"of(DirectedGraph<V, E>, V)","u":"of(org.apache.calcite.util.graph.DirectedGraph,V)"},{"p":"org.apache.calcite.schema","c":"Statistics","l":"of(double, List<ImmutableBitSet>)","u":"of(double,java.util.List)"},{"p":"org.apache.calcite.schema","c":"Statistics","l":"of(double, List<ImmutableBitSet>, List<RelCollation>)","u":"of(double,java.util.List,java.util.List)"},{"p":"org.apache.calcite.schema","c":"Statistics","l":"of(Double, List<ImmutableBitSet>, List<RelReferentialConstraint>, List<RelCollation>)","u":"of(java.lang.Double,java.util.List,java.util.List,java.util.List)"},{"p":"org.apache.calcite.util","c":"ImmutableNullableList","l":"of(E)"},{"p":"org.apache.calcite.util","c":"Holder","l":"of(E)"},{"p":"org.apache.calcite.util","c":"ImmutableNullableSet","l":"of(E)"},{"p":"org.apache.calcite.util","c":"ImmutableNullableList","l":"of(E, E)","u":"of(E,E)"},{"p":"org.apache.calcite.util","c":"ImmutableNullableSet","l":"of(E, E)","u":"of(E,E)"},{"p":"org.apache.calcite.util","c":"ImmutableNullableList","l":"of(E, E, E)","u":"of(E,E,E)"},{"p":"org.apache.calcite.util","c":"ImmutableNullableSet","l":"of(E, E, E)","u":"of(E,E,E)"},{"p":"org.apache.calcite.util","c":"ImmutableNullableList","l":"of(E, E, E, E)","u":"of(E,E,E,E)"},{"p":"org.apache.calcite.util","c":"ImmutableNullableSet","l":"of(E, E, E, E)","u":"of(E,E,E,E)"},{"p":"org.apache.calcite.util","c":"ImmutableNullableList","l":"of(E, E, E, E, E)","u":"of(E,E,E,E,E)"},{"p":"org.apache.calcite.util","c":"ImmutableNullableList","l":"of(E, E, E, E, E, E)","u":"of(E,E,E,E,E,E)"},{"p":"org.apache.calcite.util","c":"ImmutableNullableList","l":"of(E, E, E, E, E, E, E)","u":"of(E,E,E,E,E,E,E)"},{"p":"org.apache.calcite.util","c":"ImmutableNullableList","l":"of(E, E, E, E, E, E, E, E, E...)","u":"of(E,E,E,E,E,E,E,E,E...)"},{"p":"org.apache.calcite.util","c":"ImmutableNullableSet","l":"of(E, E, E, E, E, E...)","u":"of(E,E,E,E,E,E...)"},{"p":"org.apache.calcite.runtime","c":"ConsList","l":"of(E, List<? extends E>)","u":"of(E,java.util.List)"},{"p":"org.apache.calcite.util","c":"UnmodifiableArrayList","l":"of(E...)"},{"p":"org.apache.calcite.util","c":"Sources","l":"of(File)","u":"of(java.io.File)"},{"p":"org.apache.calcite","c":"DataContexts","l":"of(Function<String, ? extends Object>)","u":"of(java.util.function.Function)"},{"p":"org.apache.calcite.tools","c":"Programs","l":"of(HepProgram, boolean, RelMetadataProvider)","u":"of(org.apache.calcite.plan.hep.HepProgram,boolean,org.apache.calcite.rel.metadata.RelMetadataProvider)"},{"p":"org.apache.calcite.plan","c":"Strong","l":"of(ImmutableBitSet)","u":"of(org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.rel","c":"RelCollations","l":"of(ImmutableIntList)","u":"of(org.apache.calcite.util.ImmutableIntList)"},{"p":"org.apache.calcite.util","c":"BitSets","l":"of(ImmutableIntList)","u":"of(org.apache.calcite.util.ImmutableIntList)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"of(ImmutableIntList)","u":"of(org.apache.calcite.util.ImmutableIntList)"},{"p":"org.apache.calcite.rel.core","c":"JoinInfo","l":"of(ImmutableIntList, ImmutableIntList)","u":"of(org.apache.calcite.util.ImmutableIntList,org.apache.calcite.util.ImmutableIntList)"},{"p":"org.apache.calcite.plan","c":"Strong","l":"of(ImmutableSet<RexFieldAccess>)","u":"of(com.google.common.collect.ImmutableSet)"},{"p":"org.apache.calcite.rel","c":"RelCollations","l":"of(int)"},{"p":"org.apache.calcite.sql.type","c":"SqlOperandCountRanges","l":"of(int)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"of(int)"},{"p":"org.apache.calcite.linq4j","c":"Ord","l":"of(int, E)","u":"of(int,E)"},{"p":"org.apache.calcite.util.mapping","c":"IntPair","l":"of(int, int)","u":"of(int,int)"},{"p":"org.apache.calcite.rex","c":"RexInputRef","l":"of(int, List<RelDataTypeField>)","u":"of(int,java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexInputRef","l":"of(int, RelDataType)","u":"of(int,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.util","c":"BitSets","l":"of(int...)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"of(int...)"},{"p":"org.apache.calcite.util","c":"ImmutableIntList","l":"of(int...)"},{"p":"org.apache.calcite.util","c":"Version","l":"of(int...)"},{"p":"org.apache.calcite.util","c":"BitSets","l":"of(Integer[])","u":"of(java.lang.Integer[])"},{"p":"org.apache.calcite.util","c":"BitSets","l":"of(Iterable<? extends Number>)","u":"of(java.lang.Iterable)"},{"p":"org.apache.calcite.sql.util","c":"SqlOperatorTables","l":"of(Iterable<? extends SqlOperator>)","u":"of(java.lang.Iterable)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"of(Iterable<Integer>)","u":"of(java.lang.Iterable)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRel.Prefer","l":"of(JavaRowFormat)","u":"of(org.apache.calcite.adapter.enumerable.JavaRowFormat)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysTypeImpl","l":"of(JavaTypeFactory, RelDataType, JavaRowFormat)","u":"of(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.enumerable.JavaRowFormat)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysTypeImpl","l":"of(JavaTypeFactory, RelDataType, JavaRowFormat, boolean)","u":"of(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.enumerable.JavaRowFormat,boolean)"},{"p":"org.apache.calcite.sql.util","c":"IdPair","l":"of(L, R)","u":"of(L,R)"},{"p":"org.apache.calcite.schema.impl","c":"StarTable","l":"of(Lattice, List<Table>)","u":"of(org.apache.calcite.materialize.Lattice,java.util.List)"},{"p":"org.apache.calcite.util","c":"CompositeList","l":"of(List<? extends T>, List<? extends T>)","u":"of(java.util.List,java.util.List)"},{"p":"org.apache.calcite.util","c":"CompositeList","l":"of(List<? extends T>, List<? extends T>, List<? extends T>)","u":"of(java.util.List,java.util.List,java.util.List)"},{"p":"org.apache.calcite.util","c":"CompositeList","l":"of(List<? extends T>...)","u":"of(java.util.List...)"},{"p":"org.apache.calcite.rel","c":"RelCollationImpl","l":"of(List<RelFieldCollation>)","u":"of(java.util.List)"},{"p":"org.apache.calcite.rel","c":"RelCollations","l":"of(List<RelFieldCollation>)","u":"of(java.util.List)"},{"p":"org.apache.calcite.rel.metadata","c":"ChainedRelMetadataProvider","l":"of(List<RelMetadataProvider>)","u":"of(java.util.List)"},{"p":"org.apache.calcite.schema","c":"Statistics","l":"of(List<RelReferentialConstraint>)","u":"of(java.util.List)"},{"p":"org.apache.calcite.rel","c":"RelReferentialConstraintImpl","l":"of(List<String>, List<String>, List<IntPair>)","u":"of(java.util.List,java.util.List,java.util.List)"},{"p":"org.apache.calcite.runtime","c":"FlatLists","l":"of(List<T>)","u":"of(java.util.List)"},{"p":"org.apache.calcite.util","c":"CompositeList","l":"of(List<T>)","u":"of(java.util.List)"},{"p":"org.apache.calcite.util","c":"Pair","l":"of(Map.Entry<? extends K, ? extends V>)","u":"of(java.util.Map.Entry)"},{"p":"org.apache.calcite.util","c":"CompositeMap","l":"of(Map<K, V>, Map<K, V>...)","u":"of(java.util.Map,java.util.Map...)"},{"p":"org.apache.calcite","c":"DataContexts","l":"of(Map<String, ?>)","u":"of(java.util.Map)"},{"p":"org.apache.calcite.runtime","c":"PairList","l":"of(Map<T, U>)","u":"of(java.util.Map)"},{"p":"org.apache.calcite.rex","c":"RexPermuteInputsShuttle","l":"of(Mappings.TargetMapping)","u":"of(org.apache.calcite.util.mapping.Mappings.TargetMapping)"},{"p":"org.apache.calcite.rel.mutable","c":"Holder","l":"of(MutableRel)","u":"of(org.apache.calcite.rel.mutable.MutableRel)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableAggregate","l":"of(MutableRel, ImmutableBitSet, ImmutableList<ImmutableBitSet>, List<AggregateCall>)","u":"of(org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.util.ImmutableBitSet,com.google.common.collect.ImmutableList,java.util.List)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableProject","l":"of(MutableRel, List<RexNode>, List<String>)","u":"of(org.apache.calcite.rel.mutable.MutableRel,java.util.List,java.util.List)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableSort","l":"of(MutableRel, RelCollation, RexNode, RexNode)","u":"of(org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableExchange","l":"of(MutableRel, RelDistribution)","u":"of(org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.RelDistribution)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableSample","l":"of(MutableRel, RelOptSamplingParameters)","u":"of(org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.plan.RelOptSamplingParameters)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableFilter","l":"of(MutableRel, RexNode)","u":"of(org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableCalc","l":"of(MutableRel, RexProgram)","u":"of(org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rex.RexProgram)"},{"p":"org.apache.calcite.schema.lookup","c":"Lookup","l":"of(NameMap<T>)","u":"of(org.apache.calcite.util.NameMap)"},{"p":"org.apache.calcite.interpreter","c":"Row","l":"of(Object)","u":"of(java.lang.Object)"},{"p":"org.apache.calcite.plan","c":"Contexts","l":"of(Object)","u":"of(java.lang.Object)"},{"p":"org.apache.calcite.interpreter","c":"Row","l":"of(Object, Object)","u":"of(java.lang.Object,java.lang.Object)"},{"p":"org.apache.calcite.interpreter","c":"Row","l":"of(Object, Object, Object)","u":"of(java.lang.Object,java.lang.Object,java.lang.Object)"},{"p":"org.apache.calcite.interpreter","c":"Row","l":"of(Object...)","u":"of(java.lang.Object...)"},{"p":"org.apache.calcite.plan","c":"Contexts","l":"of(Object...)","u":"of(java.lang.Object...)"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.Query","l":"of(Queryable<T>)","u":"of(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.plan","c":"VisitorDataContext","l":"of(RelDataType, List<? extends Pair<RexInputRef, ? extends RexNode>>)","u":"of(org.apache.calcite.rel.type.RelDataType,java.util.List)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableIntersect","l":"of(RelDataType, List<MutableRel>, boolean)","u":"of(org.apache.calcite.rel.type.RelDataType,java.util.List,boolean)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableMinus","l":"of(RelDataType, List<MutableRel>, boolean)","u":"of(org.apache.calcite.rel.type.RelDataType,java.util.List,boolean)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableUnion","l":"of(RelDataType, List<MutableRel>, boolean)","u":"of(org.apache.calcite.rel.type.RelDataType,java.util.List,boolean)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableUncollect","l":"of(RelDataType, MutableRel, boolean)","u":"of(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.mutable.MutableRel,boolean)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableProject","l":"of(RelDataType, MutableRel, List<RexNode>)","u":"of(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.mutable.MutableRel,java.util.List)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableWindow","l":"of(RelDataType, MutableRel, List<Window.Group>, List<RexLiteral>)","u":"of(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.mutable.MutableRel,java.util.List,java.util.List)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableCorrelate","l":"of(RelDataType, MutableRel, MutableRel, CorrelationId, ImmutableBitSet, JoinRelType)","u":"of(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.core.CorrelationId,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableJoin","l":"of(RelDataType, MutableRel, MutableRel, RexNode, JoinRelType, Set<CorrelationId>)","u":"of(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType,java.util.Set)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableTableModify","l":"of(RelDataType, MutableRel, RelOptTable, Prepare.CatalogReader, TableModify.Operation, List<String>, List<RexNode>, boolean)","u":"of(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.plan.RelOptTable,org.apache.calcite.prepare.Prepare.CatalogReader,org.apache.calcite.rel.core.TableModify.Operation,java.util.List,java.util.List,boolean)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableMatch","l":"of(RelDataType, MutableRel, RexNode, boolean, boolean, Map<String, RexNode>, Map<String, RexNode>, RexNode, Map<String, ? extends SortedSet<String>>, boolean, ImmutableBitSet, RelCollation, RexNode)","u":"of(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rex.RexNode,boolean,boolean,java.util.Map,java.util.Map,org.apache.calcite.rex.RexNode,java.util.Map,boolean,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableCollect","l":"of(RelDataType, MutableRel, String)","u":"of(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.mutable.MutableRel,java.lang.String)"},{"p":"org.apache.calcite.plan","c":"VisitorDataContext","l":"of(RelDataType, RexNode)","u":"of(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel","c":"RelDistributions","l":"of(RelDistribution.Type, ImmutableIntList)","u":"of(org.apache.calcite.rel.RelDistribution.Type,org.apache.calcite.util.ImmutableIntList)"},{"p":"org.apache.calcite.rel","c":"RelCollationImpl","l":"of(RelFieldCollation...)","u":"of(org.apache.calcite.rel.RelFieldCollation...)"},{"p":"org.apache.calcite.rel","c":"RelCollations","l":"of(RelFieldCollation...)","u":"of(org.apache.calcite.rel.RelFieldCollation...)"},{"p":"org.apache.calcite.rel.metadata","c":"JaninoRelMetadataProvider","l":"of(RelMetadataProvider)","u":"of(org.apache.calcite.rel.metadata.RelMetadataProvider)"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.Query","l":"of(RelNode)","u":"of(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan","c":"VisitorDataContext","l":"of(RelNode, LogicalFilter)","u":"of(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalFilter)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule.ViewPartialRewriting","l":"of(RelNode, Project, RelNode)","u":"of(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel","c":"RelRoot","l":"of(RelNode, RelDataType, SqlKind)","u":"of(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.rel.core","c":"JoinInfo","l":"of(RelNode, RelNode, RexNode)","u":"of(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel","c":"RelRoot","l":"of(RelNode, SqlKind)","u":"of(org.apache.calcite.rel.RelNode,org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableTableFunctionScan","l":"of(RelOptCluster, RelDataType, List<MutableRel>, RexNode, Type, Set<RelColumnMapping>)","u":"of(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.type.RelDataType,java.util.List,org.apache.calcite.rex.RexNode,java.lang.reflect.Type,java.util.Set)"},{"p":"org.apache.calcite.rex","c":"RexTableInputRef.RelTableRef","l":"of(RelOptTable, int)","u":"of(org.apache.calcite.plan.RelOptTable,int)"},{"p":"org.apache.calcite.plan","c":"RelOptPredicateList","l":"of(RexBuilder, Iterable<RexNode>)","u":"of(org.apache.calcite.rex.RexBuilder,java.lang.Iterable)"},{"p":"org.apache.calcite.plan","c":"RelOptPredicateList","l":"of(RexBuilder, Iterable<RexNode>, Iterable<RexNode>, Iterable<RexNode>)","u":"of(org.apache.calcite.rex.RexBuilder,java.lang.Iterable,java.lang.Iterable,java.lang.Iterable)"},{"p":"org.apache.calcite.rex","c":"RexTableInputRef","l":"of(RexTableInputRef.RelTableRef, int, RelDataType)","u":"of(org.apache.calcite.rex.RexTableInputRef.RelTableRef,int,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rex","c":"RexTableInputRef","l":"of(RexTableInputRef.RelTableRef, RexInputRef)","u":"of(org.apache.calcite.rex.RexTableInputRef.RelTableRef,org.apache.calcite.rex.RexInputRef)"},{"p":"org.apache.calcite.util","c":"Sarg","l":"of(RexUnknownAs, RangeSet<C>)","u":"of(org.apache.calcite.rex.RexUnknownAs,com.google.common.collect.RangeSet)"},{"p":"org.apache.calcite.tools","c":"Programs","l":"of(RuleSet)","u":"of(org.apache.calcite.tools.RuleSet)"},{"p":"org.apache.calcite.util","c":"TryThreadLocal","l":"of(S)"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator.CorelMap","l":"of(SortedSetMultimap<RelNode, RelDecorrelator.CorRef>, NavigableMap<CorrelationId, RelNode>, Map<RexFieldAccess, RelDecorrelator.CorRef>)","u":"of(com.google.common.collect.SortedSetMultimap,java.util.NavigableMap,java.util.Map)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcConvention","l":"of(SqlDialect, Expression, String)","u":"of(org.apache.calcite.sql.SqlDialect,org.apache.calcite.linq4j.tree.Expression,java.lang.String)"},{"p":"org.apache.calcite.rel","c":"RelFieldCollation.Direction","l":"of(SqlMonotonicity)","u":"of(org.apache.calcite.sql.validate.SqlMonotonicity)"},{"p":"org.apache.calcite.sql.parser","c":"Span","l":"of(SqlNode)","u":"of(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"of(SqlNode)","u":"of(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.parser","c":"Span","l":"of(SqlNode, SqlNode)","u":"of(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"of(SqlNode, SqlNode)","u":"of(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"of(SqlNode, SqlNode, SqlNode...)","u":"of(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode...)"},{"p":"org.apache.calcite.sql.parser","c":"Span","l":"of(SqlNodeList)","u":"of(org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.sql.util","c":"SqlOperatorTables","l":"of(SqlOperator...)","u":"of(org.apache.calcite.sql.SqlOperator...)"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable","l":"of(SqlOperatorTable)","u":"of(org.apache.calcite.sql.SqlOperatorTable)"},{"p":"org.apache.calcite.sql.parser","c":"Span","l":"of(SqlParserPos)","u":"of(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"of(SqlParserPos, List<SqlNode>)","u":"of(org.apache.calcite.sql.parser.SqlParserPos,java.util.List)"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.Query","l":"of(String)","u":"of(java.lang.String)"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibrary","l":"of(String)","u":"of(java.lang.String)"},{"p":"org.apache.calcite.sql.parser","c":"StringAndPos","l":"of(String)","u":"of(java.lang.String)"},{"p":"org.apache.calcite.util","c":"IntegerIntervalSet","l":"of(String)","u":"of(java.lang.String)"},{"p":"org.apache.calcite.util","c":"Template","l":"of(String)","u":"of(java.lang.String)"},{"p":"org.apache.calcite.util","c":"Version","l":"of(String)","u":"of(java.lang.String)"},{"p":"org.apache.calcite.rex","c":"RexPatternFieldRef","l":"of(String, int, RelDataType)","u":"of(java.lang.String,int,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.util","c":"Template","l":"of(String, Locale)","u":"of(java.lang.String,java.util.Locale)"},{"p":"org.apache.calcite.rex","c":"RexPatternFieldRef","l":"of(String, RexInputRef)","u":"of(java.lang.String,org.apache.calcite.rex.RexInputRef)"},{"p":"org.apache.calcite.runtime","c":"FlatLists","l":"of(T)"},{"p":"org.apache.calcite.runtime","c":"FlatLists","l":"of(T, T)","u":"of(T,T)"},{"p":"org.apache.calcite.runtime","c":"FlatLists","l":"of(T, T, T)","u":"of(T,T,T)"},{"p":"org.apache.calcite.runtime","c":"FlatLists","l":"of(T, T, T, T)","u":"of(T,T,T,T)"},{"p":"org.apache.calcite.runtime","c":"FlatLists","l":"of(T, T, T, T, T)","u":"of(T,T,T,T,T)"},{"p":"org.apache.calcite.runtime","c":"FlatLists","l":"of(T, T, T, T, T, T)","u":"of(T,T,T,T,T,T)"},{"p":"org.apache.calcite.runtime","c":"ImmutablePairList","l":"of(T, U)","u":"of(T,U)"},{"p":"org.apache.calcite.runtime","c":"PairList","l":"of(T, U)","u":"of(T,U)"},{"p":"org.apache.calcite.runtime","c":"FlatLists","l":"of(T...)"},{"p":"org.apache.calcite.util","c":"Pair","l":"of(T1, T2)","u":"of(T1,T2)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableScan","l":"of(TableScan)","u":"of(org.apache.calcite.rel.core.TableScan)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"of(Type)","u":"of(java.lang.reflect.Type)"},{"p":"org.apache.calcite.linq4j.tree","c":"Types","l":"of(Type, Type...)","u":"of(java.lang.reflect.Type,java.lang.reflect.Type...)"},{"p":"org.apache.calcite.util","c":"Sources","l":"of(URL)","u":"of(java.net.URL)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableValues","l":"of(Values)","u":"of(org.apache.calcite.rel.core.Values)"},{"p":"org.apache.calcite.rex","c":"RexInputRef","l":"of2(int, List<RelDataTypeField>)","u":"of2(int,java.util.List)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"ofBox(Type)","u":"ofBox(java.lang.reflect.Type)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"ofBoxOr(Type)","u":"ofBoxOr(java.lang.reflect.Type)"},{"p":"org.apache.calcite.runtime","c":"FlatLists","l":"ofComparable(List<T>)","u":"ofComparable(java.util.List)"},{"p":"org.apache.calcite.util","c":"CompositeList","l":"ofCopy(Iterable<List<T>>)","u":"ofCopy(java.lang.Iterable)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraLimit","l":"offset"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableLimit","l":"offset"},{"p":"org.apache.calcite.rel.core","c":"Sort","l":"offset"},{"p":"org.apache.calcite.rel.mutable","c":"MutableSort","l":"offset"},{"p":"org.apache.calcite.sql.fun","c":"SqlItemOperator","l":"offset"},{"p":"org.apache.calcite.sql","c":"SqlOrderBy","l":"offset"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Clause","l":"OFFSET"},{"p":"org.apache.calcite.sql","c":"SqlWriter.FrameTypeEnum","l":"OFFSET"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcCorrelationDataContext","l":"OFFSET"},{"p":"org.apache.calcite.sql.fun","c":"SqlInternalOperators","l":"OFFSET"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"OFFSET"},{"p":"org.apache.calcite.util.mapping","c":"Mappings","l":"offset(Mappings.TargetMapping, int, int)","u":"offset(org.apache.calcite.util.mapping.Mappings.TargetMapping,int,int)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"offsetLimitNotAllowed()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings","l":"offsetSource(Mappings.TargetMapping, int)","u":"offsetSource(org.apache.calcite.util.mapping.Mappings.TargetMapping,int)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings","l":"offsetSource(Mappings.TargetMapping, int, int)","u":"offsetSource(org.apache.calcite.util.mapping.Mappings.TargetMapping,int,int)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings","l":"offsetTarget(Mappings.TargetMapping, int)","u":"offsetTarget(org.apache.calcite.util.mapping.Mappings.TargetMapping,int)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings","l":"offsetTarget(Mappings.TargetMapping, int, int)","u":"offsetTarget(org.apache.calcite.util.mapping.Mappings.TargetMapping,int,int)"},{"p":"org.apache.calcite.tools","c":"RuleSets","l":"ofList(Iterable<? extends RelOptRule>)","u":"ofList(java.lang.Iterable)"},{"p":"org.apache.calcite.tools","c":"RuleSets","l":"ofList(RelOptRule...)","u":"ofList(org.apache.calcite.plan.RelOptRule...)"},{"p":"org.apache.calcite.util","c":"TryThreadLocal","l":"ofNonNull(S)"},{"p":"org.apache.calcite.tools","c":"Programs","l":"ofRules(Iterable<? extends RelOptRule>)","u":"ofRules(java.lang.Iterable)"},{"p":"org.apache.calcite.tools","c":"Programs","l":"ofRules(RelOptRule...)","u":"ofRules(org.apache.calcite.plan.RelOptRule...)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"ofType(Class<TResult>)","u":"ofType(java.lang.Class)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"ofType(Class<TResult>)","u":"ofType(java.lang.Class)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"ofType(Class<TResult>)","u":"ofType(java.lang.Class)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"ofType(Class<TResult>)","u":"ofType(java.lang.Class)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"ofType(Enumerable<TSource>, Class<TResult>)","u":"ofType(org.apache.calcite.linq4j.Enumerable,java.lang.Class)"},{"p":"org.apache.calcite.linq4j","c":"Linq4j","l":"ofType(Iterable<TSource>, Class<TResult>)","u":"ofType(java.lang.Iterable,java.lang.Class)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"ofType(Queryable<?>, Class<TResult>)","u":"ofType(org.apache.calcite.linq4j.Queryable,java.lang.Class)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"ofType(Queryable<T>, Class<TResult>)","u":"ofType(org.apache.calcite.linq4j.Queryable,java.lang.Class)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"ofType(Queryable<T>, Class<TResult>)","u":"ofType(org.apache.calcite.linq4j.Queryable,java.lang.Class)"},{"p":"org.apache.calcite.linq4j.function","c":"Functions","l":"ofTypePredicate(Class<T2>)","u":"ofTypePredicate(java.lang.Class)"},{"p":"org.apache.calcite.test","c":"SqlToRelFixture","l":"ok()"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"ok()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserFixture","l":"ok(String)","u":"ok(java.lang.String)"},{"p":"org.apache.calcite.plan","c":"DeriveMode","l":"OMAKASE"},{"p":"org.apache.calcite.sql","c":"JoinConditionType","l":"ON"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"onCopy(RelNode, RelNode)","u":"onCopy(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan.hep","c":"HepPlanner","l":"onCopy(RelNode, RelNode)","u":"onCopy(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan","c":"RelOptPlanner","l":"onCopy(RelNode, RelNode)","u":"onCopy(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"ONE_OR_MORE"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize.RowsPerMatchOption","l":"ONE_ROW"},{"p":"org.apache.calcite.plan","c":"RelRule.OperandDetailBuilder","l":"oneInput(RelRule.OperandTransform)","u":"oneInput(org.apache.calcite.plan.RelRule.OperandTransform)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"OnesComplement"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"onesComplement(Expression)","u":"onesComplement(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"onesComplement(Expression, Method)","u":"onesComplement(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeTransforms","l":"ONLY_COLUMN"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope.ResolvedImpl","l":"only()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"onlyScalarSubQueryAllowed()"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoRuleCall","l":"onMatch()"},{"p":"org.apache.calcite.adapter.arrow","c":"ArrowRules.ArrowFilterRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraRules.CassandraFilterRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraRules.CassandraLimitRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraRules.CassandraSortRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.adapter.csv","c":"CsvProjectTableScanRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules.DruidAggregateProjectRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules.DruidAggregateRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules.DruidFilterRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules.DruidHavingFilterRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules.DruidPostAggregationProjectRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules.DruidProjectRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules.DruidSortRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableBatchNestedLoopJoinRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableFilterToCalcRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableLimitRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableLimitSortRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableMergeUnionRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableProjectToCalcRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.adapter.file","c":"CsvProjectTableScanRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeRules.GeodeFilterRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeRules.GeodeSortLimitRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbRules.InnodbSortTableScanRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbRules.InnodbFilterRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.adapter.splunk","c":"SplunkPushDownRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableTableScanRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.piglet","c":"PigToSqlAggregateRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.plan","c":"RelOptRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.plan.volcano","c":"AbstractConverter.ExpandConversionRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.convert","c":"ConverterRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.convert","c":"TraitMatchingRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"AbstractJoinExtractFilterRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateCaseToFilterRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateExpandDistinctAggregatesRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateExpandWithinDistinctRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateExtractProjectRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateFilterTransposeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateJoinJoinRemoveRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateJoinRemoveRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateJoinTransposeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateMergeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateProjectConstantToDummyJoinRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateProjectMergeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateProjectPullUpConstantsRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateProjectStarTableRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateReduceFunctionsRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateRemoveRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateStarTableRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateUnionAggregateRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateUnionTransposeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateValuesRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"CalcMergeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"CalcRemoveRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"CalcSplitRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"CoerceInputsRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"DateRangeRules.FilterDateRangeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"DphypJoinReorderRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"ExchangeRemoveConstantKeysRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"FilterAggregateTransposeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"FilterCalcMergeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"FilterCorrelateRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"FilterFlattenCorrelatedConditionRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"FilterJoinRule.FilterIntoJoinRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"FilterJoinRule.JoinConditionPushRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"FilterMergeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"FilterMultiJoinMergeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"FilterProjectTransposeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"FilterRemoveIsNotDistinctFromRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"FilterSampleTransposeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"FilterSetOpTransposeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"FilterTableFunctionTransposeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"FilterTableScanRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"FilterToCalcRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"FilterWindowTransposeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"IntersectToDistinctRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"JoinAddRedundantSemiJoinRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"JoinAssociateRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"JoinCommuteRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"JoinDeriveIsNotNullFilterRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"JoinProjectTransposeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"JoinPushExpressionsRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"JoinPushThroughJoinRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"JoinPushTransitivePredicatesRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"JoinToCorrelateRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"JoinToHyperGraphRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"JoinToMultiJoinRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"JoinUnionTransposeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"LoptOptimizeJoinRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"MatchRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewOnlyAggregateRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewOnlyFilterRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewOnlyJoinRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewProjectAggregateRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewProjectFilterRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewProjectJoinRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"MaterializedViewFilterScanRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"MeasureRules.AggregateMeasure2Rule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"MeasureRules.AggregateMeasureRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"MeasureRules.FilterSortMeasureRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"MeasureRules.ProjectMeasureRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"MeasureRules.ProjectSortMeasureRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"MinusToDistinctRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"MultiJoinOptimizeBushyRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectAggregateMergeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectCalcMergeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectCorrelateTransposeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectFilterTransposeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectJoinJoinRemoveRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectJoinRemoveRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectJoinTransposeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectMergeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectMultiJoinMergeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectOverSumToSum0Rule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectRemoveRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectSetOpTransposeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectTableScanRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectToCalcRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectToWindowRule.CalcToWindowRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectToWindowRule.ProjectToLogicalProjectAndWindowRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectWindowTransposeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules.RemoveEmptySingleRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceDecimalsRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.CalcReduceExpressionsRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.FilterReduceExpressionsRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.JoinReduceExpressionsRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.ProjectReduceExpressionsRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.WindowReduceExpressionsRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"SampleToFilterRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinFilterTransposeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinJoinTransposeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinProjectTransposeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinRemoveRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinRule.JoinOnUniqueToSemiJoinRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinRule.JoinToSemiJoinRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinRule.ProjectToSemiJoinRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"SortJoinCopyRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"SortJoinTransposeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"SortMergeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"SortProjectTransposeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"SortRemoveConstantKeysRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"SortRemoveRedundantRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"SortRemoveRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"SortUnionTransposeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"SpatialRules.FilterHilbertRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"SubQueryRemoveRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"TableScanRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"UnionEliminatorRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"UnionMergeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"UnionPullUpConstantsRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"UnionToDistinctRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"UnionToValuesRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"ValuesReduceRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.stream","c":"StreamRules.DeltaAggregateTransposeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.stream","c":"StreamRules.DeltaFilterTransposeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.stream","c":"StreamRules.DeltaJoinTransposeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.stream","c":"StreamRules.DeltaProjectTransposeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.stream","c":"StreamRules.DeltaSortTransposeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.stream","c":"StreamRules.DeltaTableScanRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.stream","c":"StreamRules.DeltaTableScanToEmptyRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.stream","c":"StreamRules.DeltaUnionTransposeRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator.AdjustProjectForCountAggregateRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator.RemoveCorrelationForScalarAggregateRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator.RemoveCorrelationForScalarProjectRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator.RemoveSingleAggregateRule","l":"onMatch(RelOptRuleCall)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.rel.rules","c":"SingleValuesOptimizationRules.PruneSingleValueRule","l":"onMatch(RelOptRuleCall, Values, Project, Join, RelNode, boolean)","u":"onMatch(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Values,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,boolean)"},{"p":"org.apache.calcite.rex","c":"RexAction","l":"onMatch(RexNode[])","u":"onMatch(org.apache.calcite.rex.RexNode[])"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"onNewClass(RelNode)","u":"onNewClass(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"onNewClass(RelNode)","u":"onNewClass(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"onRegister(RelDataTypeFactory)","u":"onRegister(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockViewTable","l":"onRegister(RelDataTypeFactory)","u":"onRegister(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"onRegister(RelOptPlanner)","u":"onRegister(org.apache.calcite.plan.RelOptPlanner)"},{"p":"org.apache.calcite.rel","c":"RelNode","l":"onRegister(RelOptPlanner)","u":"onRegister(org.apache.calcite.plan.RelOptPlanner)"},{"p":"org.apache.calcite.runtime","c":"SocketFactoryImpl","l":"OOBINLINE"},{"p":"org.apache.calcite.piglet","c":"Ast.Node","l":"op"},{"p":"org.apache.calcite.rex","c":"RexCall","l":"op"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser.Call","l":"op"},{"p":"org.apache.calcite.sql","c":"SqlSpecialOperator.TokenSequence","l":"op(int)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"op(SqlKind)","u":"op(org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"op(SqlKind, SqlOperator)","u":"op(org.apache.calcite.sql.SqlKind,org.apache.calcite.sql.SqlOperator)"},{"p":"org.apache.calcite.util","c":"StackWriter","l":"OPEN_SQL_IDENTIFIER"},{"p":"org.apache.calcite.util","c":"StackWriter","l":"OPEN_SQL_STRING_LITERAL"},{"p":"org.apache.calcite.util","c":"RangeSets.Consumer","l":"open(V, V)","u":"open(V,V)"},{"p":"org.apache.calcite.util","c":"RangeSets.Handler","l":"open(V, V)","u":"open(V,V)"},{"p":"org.apache.calcite.util","c":"RangeSets.Consumer","l":"openClosed(V, V)","u":"openClosed(V,V)"},{"p":"org.apache.calcite.util","c":"RangeSets.Handler","l":"openClosed(V, V)","u":"openClosed(V,V)"},{"p":"org.apache.calcite.util","c":"Source","l":"openStream()"},{"p":"org.apache.calcite.test","c":"DiffTestCase","l":"openTestLog()"},{"p":"org.apache.calcite.test","c":"DiffTestCase","l":"openTestLogOutputStream(File)","u":"openTestLogOutputStream(java.io.File)"},{"p":"org.apache.calcite.model","c":"JsonCustomSchema","l":"operand"},{"p":"org.apache.calcite.model","c":"JsonCustomTable","l":"operand"},{"p":"org.apache.calcite.sql.type","c":"OperandHandlers","l":"OPERAND_1_MIGHT_BE_TIME_FRAME"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize","l":"OPERAND_AFTER"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize","l":"OPERAND_INTERVAL"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize","l":"OPERAND_MEASURES"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize","l":"OPERAND_ORDER_BY"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize","l":"OPERAND_PARTITION_BY"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize","l":"OPERAND_PATTERN"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize","l":"OPERAND_PATTERN_DEFINES"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize","l":"OPERAND_ROWS_PER_MATCH"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize","l":"OPERAND_STRICT_END"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize","l":"OPERAND_STRICT_START"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize","l":"OPERAND_SUBSET"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize","l":"OPERAND_TABLE_REF"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor.Operand","l":"Operand(Class<? extends MutableRel>)","u":"%3Cinit%3E(java.lang.Class)"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor.AbstractUnifyRule","l":"operand(Class<? extends MutableRel>, SubstitutionVisitor.Operand...)","u":"operand(java.lang.Class,org.apache.calcite.plan.SubstitutionVisitor.Operand...)"},{"p":"org.apache.calcite.plan","c":"RelRule.OperandBuilder","l":"operand(Class<R>)","u":"operand(java.lang.Class)"},{"p":"org.apache.calcite.plan","c":"RelOptRule","l":"operand(Class<R>, RelOptRuleOperand, RelOptRuleOperand...)","u":"operand(java.lang.Class,org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.plan.RelOptRuleOperand...)"},{"p":"org.apache.calcite.plan","c":"RelOptRule","l":"operand(Class<R>, RelOptRuleOperandChildren)","u":"operand(java.lang.Class,org.apache.calcite.plan.RelOptRuleOperandChildren)"},{"p":"org.apache.calcite.plan","c":"RelOptRule","l":"operand(Class<R>, RelTrait, Predicate<? super R>, RelOptRuleOperand, RelOptRuleOperand...)","u":"operand(java.lang.Class,org.apache.calcite.plan.RelTrait,com.google.common.base.Predicate,org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.plan.RelOptRuleOperand...)"},{"p":"org.apache.calcite.plan","c":"RelOptRule","l":"operand(Class<R>, RelTrait, Predicate<? super R>, RelOptRuleOperandChildren)","u":"operand(java.lang.Class,org.apache.calcite.plan.RelTrait,com.google.common.base.Predicate,org.apache.calcite.plan.RelOptRuleOperandChildren)"},{"p":"org.apache.calcite.plan","c":"RelOptRule","l":"operand(Class<R>, RelTrait, RelOptRuleOperandChildren)","u":"operand(java.lang.Class,org.apache.calcite.plan.RelTrait,org.apache.calcite.plan.RelOptRuleOperandChildren)"},{"p":"org.apache.calcite.sql","c":"SqlBasicCall","l":"operand(int)"},{"p":"org.apache.calcite.sql","c":"SqlCall","l":"operand(int)"},{"p":"org.apache.calcite.sql","c":"SqlCallBinding","l":"operand(int)"},{"p":"org.apache.calcite.plan","c":"RelOptRuleCall","l":"operand0"},{"p":"org.apache.calcite.rex","c":"RexCall","l":"operandCount()"},{"p":"org.apache.calcite.sql","c":"SqlBasicCall","l":"operandCount()"},{"p":"org.apache.calcite.sql","c":"SqlCall","l":"operandCount()"},{"p":"org.apache.calcite.sql.type","c":"OperandHandlers","l":"OperandHandlers()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.plan","c":"RelOptRule","l":"operandJ(Class<R>, RelTrait, Predicate<? super R>, RelOptRuleOperand, RelOptRuleOperand...)","u":"operandJ(java.lang.Class,org.apache.calcite.plan.RelTrait,java.util.function.Predicate,org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.plan.RelOptRuleOperand...)"},{"p":"org.apache.calcite.plan","c":"RelOptRule","l":"operandJ(Class<R>, RelTrait, Predicate<? super R>, RelOptRuleOperandChildren)","u":"operandJ(java.lang.Class,org.apache.calcite.plan.RelTrait,java.util.function.Predicate,org.apache.calcite.plan.RelOptRuleOperandChildren)"},{"p":"org.apache.calcite.model","c":"ModelHandler","l":"operandMap(JsonSchema, Map<String, Object>)","u":"operandMap(org.apache.calcite.model.JsonSchema,java.util.Map)"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"operandMetadata(List<SqlTypeFamily>, Function<RelDataTypeFactory, List<RelDataType>>, IntFunction<String>, Predicate<Integer>)","u":"operandMetadata(java.util.List,java.util.function.Function,java.util.function.IntFunction,java.util.function.Predicate)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"operandNotComparable(String)","u":"operandNotComparable(java.lang.String)"},{"p":"org.apache.calcite.plan","c":"RelOptRule","l":"operands"},{"p":"org.apache.calcite.rex","c":"RexCall","l":"operands"},{"p":"org.apache.calcite.rex","c":"RexCallBinding","l":"operands()"},{"p":"org.apache.calcite.sql","c":"SqlCallBinding","l":"operands()"},{"p":"org.apache.calcite.sql.type","c":"OperandsTypeChecking","l":"OperandsTypeChecking()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.plan","c":"RelRule.Config","l":"operandSupplier()"},{"p":"org.apache.calcite.rel.rules","c":"AggregateProjectPullUpConstantsRule.Config","l":"operandSupplier()"},{"p":"org.apache.calcite.rel.rules","c":"ProjectFilterTransposeRule.Config","l":"operandSupplier()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableTableModify","l":"operation"},{"p":"org.apache.calcite.sql.babel.postgres","c":"SqlBegin","l":"OPERATOR"},{"p":"org.apache.calcite.sql.babel.postgres","c":"SqlCommit","l":"OPERATOR"},{"p":"org.apache.calcite.sql.babel.postgres","c":"SqlDiscard","l":"OPERATOR"},{"p":"org.apache.calcite.sql.babel.postgres","c":"SqlRollback","l":"OPERATOR"},{"p":"org.apache.calcite.sql.babel.postgres","c":"SqlShow","l":"OPERATOR"},{"p":"org.apache.calcite.sql","c":"SqlDelete","l":"OPERATOR"},{"p":"org.apache.calcite.sql","c":"SqlDescribeSchema","l":"OPERATOR"},{"p":"org.apache.calcite.sql","c":"SqlDescribeTable","l":"OPERATOR"},{"p":"org.apache.calcite.sql","c":"SqlExplain","l":"OPERATOR"},{"p":"org.apache.calcite.sql","c":"SqlInsert","l":"OPERATOR"},{"p":"org.apache.calcite.sql","c":"SqlJoin","l":"OPERATOR"},{"p":"org.apache.calcite.sql","c":"SqlLambda","l":"OPERATOR"},{"p":"org.apache.calcite.sql","c":"SqlMerge","l":"OPERATOR"},{"p":"org.apache.calcite.sql","c":"SqlOrderBy","l":"OPERATOR"},{"p":"org.apache.calcite.sql","c":"SqlSetOption","l":"OPERATOR"},{"p":"org.apache.calcite.sql","c":"SqlUpdate","l":"OPERATOR"},{"p":"org.apache.calcite.sql.util","c":"ReflectiveSqlOperatorTable","l":"operators"},{"p":"org.apache.calcite.tools","c":"Frameworks.ConfigBuilder","l":"operatorTable(SqlOperatorTable)","u":"operatorTable(org.apache.calcite.sql.SqlOperatorTable)"},{"p":"org.apache.calcite.prepare","c":"CalciteCatalogReader","l":"operatorTable(String...)","u":"operatorTable(java.lang.String...)"},{"p":"org.apache.calcite.adapter.enumerable","c":"JavaRowFormat","l":"optimize(RelDataType)","u":"optimize(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.prepare","c":"Prepare","l":"optimize(RelRoot, List<Prepare.Materialization>, List<CalciteSchema.LatticeEntry>)","u":"optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)"},{"p":"org.apache.calcite.linq4j.tree","c":"ClassDeclarationFinder","l":"optimizeDeclarations(List<MemberDeclaration>)","u":"optimizeDeclarations(java.util.List)"},{"p":"org.apache.calcite.linq4j.tree","c":"OptimizeShuttle","l":"OptimizeShuttle()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.type","c":"FamilyOperandTypeChecker","l":"optional"},{"p":"org.apache.calcite.rex","c":"RexDigestIncludeType","l":"OPTIONAL"},{"p":"org.apache.calcite.runtime","c":"Pattern.Op","l":"OPTIONAL"},{"p":"org.apache.calcite.util","c":"Optionality","l":"OPTIONAL"},{"p":"org.apache.calcite.linq4j.function","c":"Parameter","l":"optional()"},{"p":"org.apache.calcite.runtime","c":"Pattern.PatternBuilder","l":"optional()"},{"p":"org.apache.calcite.rel.hint","c":"HintStrategy.Builder","l":"optionChecker(HintOptionChecker)","u":"optionChecker(org.apache.calcite.rel.hint.HintOptionChecker)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateForeignSchema","l":"options()"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateTableLike","l":"options()"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"Or"},{"p":"org.apache.calcite.piglet","c":"Ast.Op","l":"OR"},{"p":"org.apache.calcite.rel.hint","c":"CompositeHintPredicate.Composition","l":"OR"},{"p":"org.apache.calcite.runtime","c":"Pattern.Op","l":"OR"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"OR"},{"p":"org.apache.calcite.sql.type","c":"CompositeOperandTypeChecker.Composition","l":"OR"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"OR"},{"p":"org.apache.calcite.runtime","c":"Pattern.PatternBuilder","l":"or()"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"or(Expression, Expression)","u":"or(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"or(Expression, Expression, Method)","u":"or(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.rel.hint","c":"HintPredicates","l":"or(HintPredicate...)","u":"or(org.apache.calcite.rel.hint.HintPredicate...)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"or(Iterable<? extends RexNode>)","u":"or(java.lang.Iterable)"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"or(RexNode...)","u":"or(org.apache.calcite.rex.RexNode...)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"or(RexNode...)","u":"or(org.apache.calcite.rex.RexNode...)"},{"p":"org.apache.calcite.rex","c":"RexUnknownAs","l":"or(RexUnknownAs)","u":"or(org.apache.calcite.rex.RexUnknownAs)"},{"p":"org.apache.calcite.sql.type","c":"SqlOperandTypeChecker","l":"or(SqlOperandTypeChecker)","u":"or(org.apache.calcite.sql.type.SqlOperandTypeChecker)"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"or(SqlOperandTypeChecker...)","u":"or(org.apache.calcite.sql.type.SqlOperandTypeChecker...)"},{"p":"org.apache.calcite.sql.type","c":"SqlSingleOperandTypeChecker","l":"or(SqlSingleOperandTypeChecker)","u":"or(org.apache.calcite.sql.type.SqlSingleOperandTypeChecker)"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"or(SqlSingleOperandTypeChecker...)","u":"or(org.apache.calcite.sql.type.SqlSingleOperandTypeChecker...)"},{"p":"org.apache.calcite.config","c":"Lex","l":"ORACLE"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibrary","l":"ORACLE"},{"p":"org.apache.calcite.sql","c":"SqlDialect.DatabaseProduct","l":"ORACLE"},{"p":"org.apache.calcite.test","c":"CalciteAssert.DatabaseInstance","l":"ORACLE"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"ORACLE_10"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformance","l":"ORACLE_10"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"ORACLE_12"},{"p":"org.apache.calcite.sql.dialect","c":"OracleSqlDialect","l":"OracleSqlDialect(SqlDialect.Context)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect.Context)"},{"p":"org.apache.calcite.sql.fun","c":"OracleSqlOperatorTable","l":"OracleSqlOperatorTable()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"OrAssign"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"orAssign(Expression, Expression)","u":"orAssign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"orAssign(Expression, Expression, Method)","u":"orAssign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"orAssign(Expression, Expression, Method, LambdaExpression)","u":"orAssign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.LambdaExpression)"},{"p":"org.apache.calcite.linq4j","c":"Ord","l":"Ord(int, E)","u":"%3Cinit%3E(int,E)"},{"p":"org.apache.calcite.piglet","c":"Ast.Op","l":"ORDER"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Clause","l":"ORDER_BY"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ORDER_BY"},{"p":"org.apache.calcite.sql","c":"SqlWriter.FrameTypeEnum","l":"ORDER_BY"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ORDER_BY"},{"p":"org.apache.calcite.sql","c":"SqlWriter.FrameTypeEnum","l":"ORDER_BY_LIST"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ORDER_BY_WITH_FETCH_AND_OFFSET"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ORDER_COMPARISON"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"orderBy(Enumerable<TSource>, Function1<TSource, TKey>)","u":"orderBy(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"orderBy(Enumerable<TSource>, Function1<TSource, TKey>, Comparator<TKey>)","u":"orderBy(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,java.util.Comparator)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"orderBy(Enumerable<TSource>, Function1<TSource, TKey>, Comparator<TKey>, int, int)","u":"orderBy(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,java.util.Comparator,int,int)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"orderBy(Function1<T, TKey>)","u":"orderBy(org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"orderBy(Function1<T, TKey>, Comparator<TKey>)","u":"orderBy(org.apache.calcite.linq4j.function.Function1,java.util.Comparator)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"orderBy(Function1<TSource, TKey>)","u":"orderBy(org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"orderBy(Function1<TSource, TKey>, Comparator<TKey>)","u":"orderBy(org.apache.calcite.linq4j.function.Function1,java.util.Comparator)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"orderBy(FunctionExpression<Function1<T, TKey>>)","u":"orderBy(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"orderBy(FunctionExpression<Function1<T, TKey>>)","u":"orderBy(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"orderBy(FunctionExpression<Function1<T, TKey>>, Comparator<TKey>)","u":"orderBy(org.apache.calcite.linq4j.tree.FunctionExpression,java.util.Comparator)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"orderBy(FunctionExpression<Function1<T, TKey>>, Comparator<TKey>)","u":"orderBy(org.apache.calcite.linq4j.tree.FunctionExpression,java.util.Comparator)"},{"p":"","c":"","l":"orderBy(FunctionExpression<Function1<TSource, TKey>>)"},{"p":"","c":"","l":"orderBy(FunctionExpression<Function1<TSource, TKey>>)"},{"p":"","c":"","l":"orderBy(FunctionExpression<Function1<TSource, TKey>>, Comparator<TKey>)"},{"p":"","c":"","l":"orderBy(FunctionExpression<Function1<TSource, TKey>>, Comparator<TKey>)"},{"p":"org.apache.calcite.tools","c":"RelBuilder.OverCall","l":"orderBy(Iterable<? extends RexNode>)","u":"orderBy(java.lang.Iterable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"orderBy(Queryable<T>, FunctionExpression<Function1<T, TKey>>)","u":"orderBy(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"orderBy(Queryable<T>, FunctionExpression<Function1<T, TKey>>)","u":"orderBy(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"orderBy(Queryable<T>, FunctionExpression<Function1<T, TKey>>)","u":"orderBy(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"orderBy(Queryable<T>, FunctionExpression<Function1<T, TKey>>, Comparator<TKey>)","u":"orderBy(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression,java.util.Comparator)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"orderBy(Queryable<T>, FunctionExpression<Function1<T, TKey>>, Comparator<TKey>)","u":"orderBy(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression,java.util.Comparator)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"orderBy(Queryable<T>, FunctionExpression<Function1<T, TKey>>, Comparator<TKey>)","u":"orderBy(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression,java.util.Comparator)"},{"p":"org.apache.calcite.tools","c":"RelBuilder.OverCall","l":"orderBy(RexNode...)","u":"orderBy(org.apache.calcite.rex.RexNode...)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"orderByDataTypeProhibitsRange()"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"orderByDescending(Enumerable<TSource>, Function1<TSource, TKey>)","u":"orderByDescending(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"orderByDescending(Enumerable<TSource>, Function1<TSource, TKey>, Comparator<TKey>)","u":"orderByDescending(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,java.util.Comparator)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"orderByDescending(Function1<T, TKey>)","u":"orderByDescending(org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"orderByDescending(Function1<T, TKey>, Comparator<TKey>)","u":"orderByDescending(org.apache.calcite.linq4j.function.Function1,java.util.Comparator)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"orderByDescending(Function1<TSource, TKey>)","u":"orderByDescending(org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"orderByDescending(Function1<TSource, TKey>, Comparator<TKey>)","u":"orderByDescending(org.apache.calcite.linq4j.function.Function1,java.util.Comparator)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"orderByDescending(FunctionExpression<Function1<T, TKey>>)","u":"orderByDescending(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"orderByDescending(FunctionExpression<Function1<T, TKey>>)","u":"orderByDescending(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"orderByDescending(FunctionExpression<Function1<T, TKey>>, Comparator<TKey>)","u":"orderByDescending(org.apache.calcite.linq4j.tree.FunctionExpression,java.util.Comparator)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"orderByDescending(FunctionExpression<Function1<T, TKey>>, Comparator<TKey>)","u":"orderByDescending(org.apache.calcite.linq4j.tree.FunctionExpression,java.util.Comparator)"},{"p":"","c":"","l":"orderByDescending(FunctionExpression<Function1<TSource, TKey>>)"},{"p":"","c":"","l":"orderByDescending(FunctionExpression<Function1<TSource, TKey>>)"},{"p":"","c":"","l":"orderByDescending(FunctionExpression<Function1<TSource, TKey>>, Comparator<TKey>)"},{"p":"","c":"","l":"orderByDescending(FunctionExpression<Function1<TSource, TKey>>, Comparator<TKey>)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"orderByDescending(Queryable<T>, FunctionExpression<Function1<T, TKey>>)","u":"orderByDescending(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"orderByDescending(Queryable<T>, FunctionExpression<Function1<T, TKey>>)","u":"orderByDescending(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"orderByDescending(Queryable<T>, FunctionExpression<Function1<T, TKey>>)","u":"orderByDescending(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"orderByDescending(Queryable<T>, FunctionExpression<Function1<T, TKey>>, Comparator<TKey>)","u":"orderByDescending(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression,java.util.Comparator)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"orderByDescending(Queryable<T>, FunctionExpression<Function1<T, TKey>>, Comparator<TKey>)","u":"orderByDescending(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression,java.util.Comparator)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"orderByDescending(Queryable<T>, FunctionExpression<Function1<T, TKey>>, Comparator<TKey>)","u":"orderByDescending(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression,java.util.Comparator)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"orderByFolding()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"orderByOrdinalOutOfRange()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"orderByOverlap()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"orderByRangeMismatch()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"orderByRequiresOneKey(String)","u":"orderByRequiresOneKey(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"orderbyShouldNotContainOver()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil.FlatAggregate","l":"orderCall"},{"p":"org.apache.calcite.sql","c":"SqlSyntax","l":"ORDERED_FUNCTION"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Context","l":"orderField(int)"},{"p":"org.apache.calcite.rel","c":"RelNodes","l":"ORDERING"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"ORDERING"},{"p":"org.apache.calcite.util.mapping","c":"IntPair","l":"ORDERING"},{"p":"org.apache.calcite.rel.core","c":"Match","l":"orderKeys"},{"p":"org.apache.calcite.rel.core","c":"Window.Group","l":"orderKeys"},{"p":"org.apache.calcite.rel.mutable","c":"MutableMatch","l":"orderKeys"},{"p":"org.apache.calcite.rex","c":"RexWindow","l":"orderKeys"},{"p":"org.apache.calcite.sql","c":"SqlOrderBy","l":"orderList"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil.FlatAggregate","l":"orderList"},{"p":"org.apache.calcite.test.schemata.orderstream","c":"OrdersHistoryTable","l":"OrdersHistoryTable(ImmutableList<Object[]>)","u":"%3Cinit%3E(com.google.common.collect.ImmutableList)"},{"p":"org.apache.calcite.test.schemata.orderstream","c":"OrdersStreamTableFactory","l":"OrdersStreamTableFactory()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.test.schemata.orderstream","c":"OrdersTable","l":"OrdersTable(ImmutableList<Object[]>)","u":"%3Cinit%3E(com.google.common.collect.ImmutableList)"},{"p":"org.apache.calcite.piglet","c":"Ast.OrderStmt","l":"OrderStmt(SqlParserPos, Ast.Identifier, Ast.Identifier, List<Pair<Ast.Identifier, Ast.Direction>>)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.piglet.Ast.Identifier,org.apache.calcite.piglet.Ast.Identifier,java.util.List)"},{"p":"org.apache.calcite.materialize","c":"Lattice.Column","l":"ordinal"},{"p":"org.apache.calcite.profile","c":"Profiler.Column","l":"ordinal"},{"p":"org.apache.calcite.rel.core","c":"Match.RexMRAggCall","l":"ordinal"},{"p":"org.apache.calcite.rel.core","c":"Window.RexWinAggCall","l":"ordinal"},{"p":"org.apache.calcite.tools","c":"Hoist.Variable","l":"ordinal"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"ORDINAL"},{"p":"org.apache.calcite.sql","c":"SqlLiteral.SqlSymbol","l":"ordinal()"},{"p":"org.apache.calcite.plan","c":"RelOptRuleOperand","l":"ordinalInParent"},{"p":"org.apache.calcite.rel.mutable","c":"MutableRel","l":"ordinalInParent"},{"p":"org.apache.calcite.plan","c":"RelOptRuleOperand","l":"ordinalInRule"},{"p":"org.apache.calcite.sql","c":"SqlUnnestOperator","l":"ORDINALITY_COLUMN_NAME"},{"p":"org.apache.calcite.sql.type","c":"OrdinalReturnTypeInference","l":"OrdinalReturnTypeInference(int)","u":"%3Cinit%3E(int)"},{"p":"org.apache.calcite.rel","c":"RelCollations","l":"ordinals(List<RelFieldCollation>)","u":"ordinals(java.util.List)"},{"p":"org.apache.calcite.rel","c":"RelCollationImpl","l":"ordinals(RelCollation)","u":"ordinals(org.apache.calcite.rel.RelCollation)"},{"p":"org.apache.calcite.rel","c":"RelCollations","l":"ordinals(RelCollation)","u":"ordinals(org.apache.calcite.rel.RelCollation)"},{"p":"org.apache.calcite.tools","c":"Hoist","l":"ordinalString(Hoist.Variable)","u":"ordinalString(org.apache.calcite.tools.Hoist.Variable)"},{"p":"org.apache.calcite.tools","c":"Hoist","l":"ordinalStringIfChar(Hoist.Variable)","u":"ordinalStringIfChar(org.apache.calcite.tools.Hoist.Variable)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"OrElse"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"orElse(Expression, Expression)","u":"orElse(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"orElse(Expression, Expression, Method)","u":"orElse(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.sql.type","c":"SqlReturnTypeInference","l":"orElse(SqlReturnTypeInference)","u":"orElse(org.apache.calcite.sql.type.SqlReturnTypeInference)"},{"p":"org.apache.calcite.util","c":"Util","l":"orEmpty(Iterable<T>)","u":"orEmpty(java.lang.Iterable)"},{"p":"org.apache.calcite.tools","c":"Hoist.Hoisted","l":"originalSql"},{"p":"org.apache.calcite.tools","c":"Hoist.Variable","l":"originalSql"},{"p":"org.apache.calcite.test","c":"CalciteAssert.SchemaSpec","l":"ORINOCO"},{"p":"org.apache.calcite.adapter.os","c":"OsQueryType","l":"OS_VERSION"},{"p":"org.apache.calcite.adapter.os","c":"OsQuery","l":"OsQuery(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"OTHER"},{"p":"org.apache.calcite.rel.core","c":"Aggregate.Group","l":"OTHER"},{"p":"org.apache.calcite.schema","c":"Schema.TableType","l":"OTHER"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"OTHER"},{"p":"org.apache.calcite.sql","c":"SqlWriter.FrameTypeEnum","l":"OTHER"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"OTHER"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"OTHER_DDL"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"OTHER_FUNCTION"},{"p":"org.apache.calcite.sql","c":"SqlSplittableAggFunction.AbstractSumSplitter","l":"other(RelDataTypeFactory, AggregateCall)","u":"other(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.core.AggregateCall)"},{"p":"org.apache.calcite.sql","c":"SqlSplittableAggFunction.CountSplitter","l":"other(RelDataTypeFactory, AggregateCall)","u":"other(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.core.AggregateCall)"},{"p":"org.apache.calcite.sql","c":"SqlSplittableAggFunction","l":"other(RelDataTypeFactory, AggregateCall)","u":"other(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.core.AggregateCall)"},{"p":"org.apache.calcite.sql","c":"SqlSplittableAggFunction.SelfSplitter","l":"other(RelDataTypeFactory, AggregateCall)","u":"other(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.core.AggregateCall)"},{"p":"org.apache.calcite.rel.convert","c":"ConverterRule","l":"out"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"OUT_OF_RANGE_MESSAGE"},{"p":"org.apache.calcite.util","c":"PartiallyOrderedSet","l":"out(StringBuilder)","u":"out(java.lang.StringBuilder)"},{"p":"org.apache.calcite.util","c":"StackWriter","l":"OUTDENT"},{"p":"org.apache.calcite.rel.rules","c":"JoinProjectTransposeRule.Config","l":"OUTER"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.Exists","l":"outerJoin"},{"p":"org.apache.calcite.util","c":"TestUtil","l":"outOfOrderItems(List<E>)","u":"outOfOrderItems(java.util.List)"},{"p":"org.apache.calcite.rel.convert","c":"ConverterRule.Config","l":"outTrait()"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"OVER"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"OVER"},{"p":"org.apache.calcite.tools","c":"RelBuilder.AggCall","l":"over()"},{"p":"org.apache.calcite.util","c":"Util.OverFinder","l":"OverFinder()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName.Limit","l":"OVERFLOW"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"overFolding()"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"OVERLAPS"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"OVERLAPS"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserPos","l":"overlaps(SqlParserPos)","u":"overlaps(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"OVERLAY"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"OVERLAY"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"overlay(ByteString, ByteString, int)","u":"overlay(org.apache.calcite.avatica.util.ByteString,org.apache.calcite.avatica.util.ByteString,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"overlay(ByteString, ByteString, int, int)","u":"overlay(org.apache.calcite.avatica.util.ByteString,org.apache.calcite.avatica.util.ByteString,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"overlay(SqlWindow, SqlValidator)","u":"overlay(org.apache.calcite.sql.SqlWindow,org.apache.calcite.sql.validate.SqlValidator)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"overlay(String, String, int)","u":"overlay(java.lang.String,java.lang.String,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"overlay(String, String, int, int)","u":"overlay(java.lang.String,java.lang.String,int,int)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"OVERLAY3"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"overMissingOrderBy()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"overNonAggregate()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumUtils","l":"overridingMethodDecl(Method, Iterable<ParameterExpression>, BlockStatement)","u":"overridingMethodDecl(java.lang.reflect.Method,java.lang.Iterable,org.apache.calcite.linq4j.tree.BlockStatement)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.OverridingSourceMapping","l":"OverridingSourceMapping(Mappings.SourceMapping, int, int)","u":"%3Cinit%3E(org.apache.calcite.util.mapping.Mappings.SourceMapping,int,int)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.OverridingTargetMapping","l":"OverridingTargetMapping(Mappings.TargetMapping, int, int)","u":"%3Cinit%3E(org.apache.calcite.util.mapping.Mappings.TargetMapping,int,int)"},{"p":"org.apache.calcite.test.schemata.tpch","c":"TpchSchema.Part","l":"p_brand"},{"p":"org.apache.calcite.test.schemata.tpch","c":"TpchSchema","l":"p(int)"},{"p":"org.apache.calcite.rel.externalize","c":"RelJson","l":"PACKAGES"},{"p":"org.apache.calcite.test.schemata.bookstore","c":"BookstoreSchema.Page","l":"Page(int, String)","u":"%3Cinit%3E(int,java.lang.String)"},{"p":"org.apache.calcite.test.schemata.bookstore","c":"BookstoreSchema.Page","l":"pageNo"},{"p":"org.apache.calcite.test.schemata.bookstore","c":"BookstoreSchema.Book","l":"pages"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"PAIR_LIST_COPY_OF"},{"p":"org.apache.calcite.util","c":"Pair","l":"Pair(T1, T2)","u":"%3Cinit%3E(T1,T2)"},{"p":"org.apache.calcite.rel.core","c":"JoinInfo","l":"pairs()"},{"p":"org.apache.calcite.util","c":"Util","l":"pairs(List<E>)","u":"pairs(java.util.List)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableRel","l":"PAIRWISE_STRING_EQUIVALENCE"},{"p":"org.apache.calcite.sql","c":"SqlDialect.DatabaseProduct","l":"PARACCEL"},{"p":"org.apache.calcite.sql.dialect","c":"ParaccelSqlDialect","l":"ParaccelSqlDialect(SqlDialect.Context)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect.Context)"},{"p":"org.apache.calcite.sql","c":"SqlWindowTableFunction","l":"PARAM_DATA"},{"p":"org.apache.calcite.sql","c":"SqlWindowTableFunction","l":"PARAM_KEY"},{"p":"org.apache.calcite.sql","c":"SqlWindowTableFunction","l":"PARAM_OFFSET"},{"p":"org.apache.calcite.sql","c":"SqlWindowTableFunction","l":"PARAM_SIZE"},{"p":"org.apache.calcite.sql","c":"SqlWindowTableFunction","l":"PARAM_SLIDE"},{"p":"org.apache.calcite.sql","c":"SqlWindowTableFunction","l":"PARAM_TIMECOL"},{"p":"org.apache.calcite.linq4j.tree","c":"CatchBlock","l":"parameter"},{"p":"org.apache.calcite.linq4j.tree","c":"DeclarationStatement","l":"parameter"},{"p":"org.apache.calcite.linq4j.tree","c":"FieldDeclaration","l":"parameter"},{"p":"org.apache.calcite.linq4j.tree","c":"ForEachStatement","l":"parameter"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"Parameter"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"parameter(int, Type, String)","u":"parameter(int,java.lang.reflect.Type,java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"parameter(Type)","u":"parameter(java.lang.reflect.Type)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"parameter(Type, String)","u":"parameter(java.lang.reflect.Type,java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"ParameterExpression","l":"ParameterExpression(int, Type, String)","u":"%3Cinit%3E(int,java.lang.reflect.Type,java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"ParameterExpression","l":"ParameterExpression(Type)","u":"%3Cinit%3E(java.lang.reflect.Type)"},{"p":"org.apache.calcite.linq4j.tree","c":"FunctionExpression","l":"parameterList"},{"p":"org.apache.calcite.schema.impl","c":"ReflectiveFunctionBase.ParameterListBuilder","l":"ParameterListBuilder()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.enumerable","c":"AggContext","l":"parameterRelTypes()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableAggregateBase.AggContextImpl","l":"parameterRelTypes()"},{"p":"org.apache.calcite.prepare","c":"Prepare","l":"parameterRowType"},{"p":"org.apache.calcite.prepare","c":"Prepare.PreparedResultImpl","l":"parameterRowType"},{"p":"org.apache.calcite.linq4j.tree","c":"ConstructorDeclaration","l":"parameters"},{"p":"org.apache.calcite.linq4j.tree","c":"MethodDeclaration","l":"parameters"},{"p":"org.apache.calcite.schema.impl","c":"ReflectiveFunctionBase","l":"parameters"},{"p":"org.apache.calcite.sql.validate","c":"ParameterScope","l":"ParameterScope(SqlValidatorImpl, Map<String, RelDataType>)","u":"%3Cinit%3E(org.apache.calcite.sql.validate.SqlValidatorImpl,java.util.Map)"},{"p":"org.apache.calcite.adapter.enumerable","c":"AggContext","l":"parameterTypes()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableAggregateBase.AggContextImpl","l":"parameterTypes()"},{"p":"org.apache.calcite.sql","c":"SqlWindowTableFunction.AbstractOperandMetadata","l":"paramNames()"},{"p":"org.apache.calcite.sql.type","c":"OperandMetadataImpl","l":"paramNames()"},{"p":"org.apache.calcite.sql.type","c":"SqlOperandMetadata","l":"paramNames()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"paramNotFoundInFunctionDidYouMean(String, String, String)","u":"paramNotFoundInFunctionDidYouMean(java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"paramNotFoundInLambdaExpression(String, String)","u":"paramNotFoundInLambdaExpression(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableSample","l":"params"},{"p":"org.apache.calcite.sql","c":"SqlWindowTableFunction.AbstractOperandMetadata","l":"paramTypes(RelDataTypeFactory)","u":"paramTypes(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.sql.type","c":"OperandMetadataImpl","l":"paramTypes(RelDataTypeFactory)","u":"paramTypes(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.sql.type","c":"SqlOperandMetadata","l":"paramTypes(RelDataTypeFactory)","u":"paramTypes(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.linq4j.tree","c":"ClassDeclarationFinder","l":"parent"},{"p":"org.apache.calcite.materialize","c":"LatticeChildNode","l":"parent"},{"p":"org.apache.calcite.rel.mutable","c":"MutableRel","l":"parent"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibrary","l":"parent"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingScope","l":"parent"},{"p":"org.apache.calcite.schema","c":"Path","l":"parent()"},{"p":"org.apache.calcite.sql","c":"SqlWriter.FrameTypeEnum","l":"PARENTHESES"},{"p":"org.apache.calcite.test.schemata.countries","c":"StatesTableFunction","l":"parks(boolean)"},{"p":"org.apache.calcite.sql.test","c":"SqlTests.Stage","l":"PARSE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"PARSE_DATE"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"PARSE_DATE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"PARSE_DATETIME"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"PARSE_DATETIME"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"PARSE_TIME"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"PARSE_TIME"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"PARSE_TIMESTAMP"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"PARSE_TIMESTAMP"},{"p":"org.apache.calcite.runtime","c":"Hook","l":"PARSE_TREE"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"PARSE_URL"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"PARSE_URL2"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"PARSE_URL3"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser","l":"parse()"},{"p":"org.apache.calcite.schema","c":"Schemas","l":"parse(CalciteConnection, CalciteSchema, List<String>, String)","u":"parse(org.apache.calcite.jdbc.CalciteConnection,org.apache.calcite.jdbc.CalciteSchema,java.util.List,java.lang.String)"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare","l":"parse(CalcitePrepare.Context, String)","u":"parse(org.apache.calcite.jdbc.CalcitePrepare.Context,java.lang.String)"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl","l":"parse(CalcitePrepare.Context, String)","u":"parse(org.apache.calcite.jdbc.CalcitePrepare.Context,java.lang.String)"},{"p":"org.apache.calcite.adapter.redis","c":"RedisDataProcess","l":"parse(List<String>)","u":"parse(java.util.List)"},{"p":"org.apache.calcite.prepare","c":"PlannerImpl","l":"parse(Reader)","u":"parse(java.io.Reader)"},{"p":"org.apache.calcite.tools","c":"Planner","l":"parse(Reader)","u":"parse(java.io.Reader)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"parse(String)","u":"parse(java.lang.String)"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibrary","l":"parse(String)","u":"parse(java.lang.String)"},{"p":"org.apache.calcite.tools","c":"Planner","l":"parse(String)","u":"parse(java.lang.String)"},{"p":"org.apache.calcite.util.format","c":"FormatModel","l":"parse(String)","u":"parse(java.lang.String)"},{"p":"org.apache.calcite.adapter.splunk.search","c":"SplunkConnectionImpl","l":"parseArgs(String[], Map<String, String>)","u":"parseArgs(java.lang.String[],java.util.Map)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"parseArrayLiteral(String)","u":"parseArrayLiteral(java.lang.String)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"parseBinaryString(String)","u":"parseBinaryString(java.lang.String)"},{"p":"org.apache.calcite.adapter.splunk.util","c":"StringUtils","l":"parseBoolean(String, boolean, boolean)","u":"parseBoolean(java.lang.String,boolean,boolean)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"parseCollation(String)","u":"parseCollation(java.lang.String)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"parseCString(String)","u":"parseCString(java.lang.String)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"parseDate(String)","u":"parseDate(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.DateParseFunction","l":"parseDate(String, String)","u":"parseDate(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"parseDateLiteral(String, SqlParserPos)","u":"parseDateLiteral(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.DateParseFunction","l":"parseDatetime(String, String)","u":"parseDatetime(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.util.format.postgresql","c":"CompiledDateTimeFormat","l":"parseDateTime(String, ZoneId, Locale)","u":"parseDateTime(java.lang.String,java.time.ZoneId,java.util.Locale)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil.ParsedCollation","l":"ParsedCollation(Charset, Locale, String)","u":"%3Cinit%3E(java.nio.charset.Charset,java.util.Locale,java.lang.String)"},{"p":"org.apache.calcite.adapter.file","c":"CsvEnumerator","l":"parseDecimal(int, int, String)","u":"parseDecimal(int,int,java.lang.String)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"parseDecimal(String)","u":"parseDecimal(java.lang.String)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"parseDecimalLiteral(String, SqlParserPos)","u":"parseDecimalLiteral(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser","l":"parseExpression()"},{"p":"org.apache.calcite.sql2rel","c":"InitializerContext","l":"parseExpression(SqlParser.Config, String)","u":"parseExpression(org.apache.calcite.sql.parser.SqlParser.Config,java.lang.String)"},{"p":"org.apache.calcite.sql.test","c":"AbstractSqlTester","l":"parseExpression(SqlTestFactory, String)","u":"parseExpression(org.apache.calcite.sql.test.SqlTestFactory,java.lang.String)"},{"p":"org.apache.calcite.sql.test","c":"SqlTester","l":"parseExpression(SqlTestFactory, String)","u":"parseExpression(org.apache.calcite.sql.test.SqlTestFactory,java.lang.String)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest.TesterImpl","l":"parseExpressionAndHandleEx(SqlTestFactory, String, Consumer<SqlParser>)","u":"parseExpressionAndHandleEx(org.apache.calcite.sql.test.SqlTestFactory,java.lang.String,java.util.function.Consumer)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"parseInteger(String)","u":"parseInteger(java.lang.String)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"parseIntervalLiteral(SqlParserPos, int, String, SqlIntervalQualifier)","u":"parseIntervalLiteral(org.apache.calcite.sql.parser.SqlParserPos,int,java.lang.String,org.apache.calcite.sql.SqlIntervalQualifier)"},{"p":"org.apache.calcite.util","c":"Util","l":"parseLocale(String)","u":"parseLocale(java.lang.String)"},{"p":"org.apache.calcite.util.format","c":"FormatModel","l":"parseNoCache(String)","u":"parseNoCache(java.lang.String)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"parsePositiveInt(String)","u":"parsePositiveInt(java.lang.String)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser","l":"parseQuery()"},{"p":"org.apache.calcite.sql.test","c":"AbstractSqlTester","l":"parseQuery(SqlTestFactory, String)","u":"parseQuery(org.apache.calcite.sql.test.SqlTestFactory,java.lang.String)"},{"p":"org.apache.calcite.sql.test","c":"SqlTester","l":"parseQuery(SqlTestFactory, String)","u":"parseQuery(org.apache.calcite.sql.test.SqlTestFactory,java.lang.String)"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisor","l":"parseQuery(String)","u":"parseQuery(java.lang.String)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser","l":"parseQuery(String)","u":"parseQuery(java.lang.String)"},{"p":"org.apache.calcite.config","c":"CalciteConnectionProperty","l":"PARSER_FACTORY"},{"p":"org.apache.calcite.server","c":"ServerDdlExecutor","l":"PARSER_FACTORY"},{"p":"org.apache.calcite.util.trace","c":"CalciteTrace","l":"PARSER_LOGGER"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserFixture","l":"parser()"},{"p":"org.apache.calcite.sql","c":"SqlSpecialOperator.TokenSequence","l":"parser(int, Predicate<PrecedenceClimbingParser.Token>)","u":"parser(int,java.util.function.Predicate)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserFixture","l":"parserChecker"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl","l":"parserConfig()"},{"p":"org.apache.calcite.sql.test","c":"SqlTestFactory","l":"parserConfig()"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"parserConfig()"},{"p":"org.apache.calcite.tools","c":"Hoist.Config","l":"parserConfig()"},{"p":"org.apache.calcite.tools","c":"Frameworks.ConfigBuilder","l":"parserConfig(SqlParser.Config)","u":"parserConfig(org.apache.calcite.sql.parser.SqlParser.Config)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"parserContext(int, int)","u":"parserContext(int,int)"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.ParseResult","l":"ParseResult(CalcitePrepareImpl, SqlValidator, String, SqlNode, RelDataType)","u":"%3Cinit%3E(org.apache.calcite.prepare.CalcitePrepareImpl,org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser.Config","l":"parserFactory()"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfig","l":"parserFactory(Class<T>, T)","u":"parserFactory(java.lang.Class,T)"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfigImpl","l":"parserFactory(Class<T>, T)","u":"parserFactory(java.lang.Class,T)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser","l":"parseStmt()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest.TesterImpl","l":"parseStmtAndHandleEx(SqlTestFactory, String, Consumer<SqlParser>)","u":"parseStmtAndHandleEx(org.apache.calcite.sql.test.SqlTestFactory,java.lang.String,java.util.function.Consumer)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser","l":"parseStmtList()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest.TesterImpl","l":"parseStmtsAndHandleEx(SqlTestFactory, String)","u":"parseStmtsAndHandleEx(org.apache.calcite.sql.test.SqlTestFactory,java.lang.String)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"parseString(String)","u":"parseString(java.lang.String)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"parseTime(String)","u":"parseTime(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.DateParseFunction","l":"parseTime(String, String)","u":"parseTime(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"parseTimeLiteral(String, SqlParserPos)","u":"parseTimeLiteral(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"parseTimestamp(String)","u":"parseTimestamp(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.DateParseFunction","l":"parseTimestamp(String, String)","u":"parseTimestamp(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.DateParseFunction","l":"parseTimestamp(String, String, String)","u":"parseTimestamp(java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"parseTimestampLiteral(String, SqlParserPos)","u":"parseTimestampLiteral(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"parseTimestampTzLiteral(String, SqlParserPos)","u":"parseTimestampTzLiteral(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"parseTimestampWithLocalTimeZoneLiteral(String, SqlParserPos)","u":"parseTimestampWithLocalTimeZoneLiteral(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"parseTimeTzLiteral(String, SqlParserPos)","u":"parseTimeTzLiteral(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.ParseUrlFunction","l":"parseUrl(String, String)","u":"parseUrl(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.ParseUrlFunction","l":"parseUrl(String, String, String)","u":"parseUrl(java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.ParseUrlFunction","l":"ParseUrlFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"parseUuidLiteral(String, SqlParserPos)","u":"parseUuidLiteral(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"AmPmCompiledPattern","l":"parseValue(ParsePosition, String, boolean, Locale)","u":"parseValue(java.text.ParsePosition,java.lang.String,boolean,java.util.Locale)"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"BcAdCompiledPattern","l":"parseValue(ParsePosition, String, boolean, Locale)","u":"parseValue(java.text.ParsePosition,java.lang.String,boolean,java.util.Locale)"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"CompiledPattern","l":"parseValue(ParsePosition, String, boolean, Locale)","u":"parseValue(java.text.ParsePosition,java.lang.String,boolean,java.util.Locale)"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"DayOfWeekCompiledPattern","l":"parseValue(ParsePosition, String, boolean, Locale)","u":"parseValue(java.text.ParsePosition,java.lang.String,boolean,java.util.Locale)"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"MonthCompiledPattern","l":"parseValue(ParsePosition, String, boolean, Locale)","u":"parseValue(java.text.ParsePosition,java.lang.String,boolean,java.util.Locale)"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"NumberCompiledPattern","l":"parseValue(ParsePosition, String, boolean, Locale)","u":"parseValue(java.text.ParsePosition,java.lang.String,boolean,java.util.Locale)"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"RomanNumeralsCompiledPattern","l":"parseValue(ParsePosition, String, boolean, Locale)","u":"parseValue(java.text.ParsePosition,java.lang.String,boolean,java.util.Locale)"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"TimeZoneCompiledPattern","l":"parseValue(ParsePosition, String, boolean, Locale)","u":"parseValue(java.text.ParsePosition,java.lang.String,boolean,java.util.Locale)"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"TimeZoneHoursCompiledPattern","l":"parseValue(ParsePosition, String, boolean, Locale)","u":"parseValue(java.text.ParsePosition,java.lang.String,boolean,java.util.Locale)"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"TimeZoneMinutesCompiledPattern","l":"parseValue(ParsePosition, String, boolean, Locale)","u":"parseValue(java.text.ParsePosition,java.lang.String,boolean,java.util.Locale)"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"TimeZoneOffsetCompiledPattern","l":"parseValue(ParsePosition, String, boolean, Locale)","u":"parseValue(java.text.ParsePosition,java.lang.String,boolean,java.util.Locale)"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"YearWithCommasCompiledPattern","l":"parseValue(ParsePosition, String, boolean, Locale)","u":"parseValue(java.text.ParsePosition,java.lang.String,boolean,java.util.Locale)"},{"p":"org.apache.calcite.test.schemata.tpch","c":"TpchSchema","l":"part"},{"p":"org.apache.calcite.test.schemata.tpch","c":"TpchSchema.Part","l":"Part(int)","u":"%3Cinit%3E(int)"},{"p":"org.apache.calcite.util.mapping","c":"MappingType","l":"PARTIAL_FUNCTION"},{"p":"org.apache.calcite.util.mapping","c":"MappingType","l":"PARTIAL_INJECTION"},{"p":"org.apache.calcite.util.mapping","c":"MappingType","l":"PARTIAL_SURJECTION"},{"p":"org.apache.calcite.util","c":"PartiallyOrderedSet","l":"PartiallyOrderedSet(PartiallyOrderedSet.Ordering<E>)","u":"%3Cinit%3E(org.apache.calcite.util.PartiallyOrderedSet.Ordering)"},{"p":"org.apache.calcite.util","c":"PartiallyOrderedSet","l":"PartiallyOrderedSet(PartiallyOrderedSet.Ordering<E>, Collection<E>)","u":"%3Cinit%3E(org.apache.calcite.util.PartiallyOrderedSet.Ordering,java.util.Collection)"},{"p":"org.apache.calcite.util","c":"PartiallyOrderedSet","l":"PartiallyOrderedSet(PartiallyOrderedSet.Ordering<E>, Function<E, Iterable<E>>, Function<E, Iterable<E>>)","u":"%3Cinit%3E(org.apache.calcite.util.PartiallyOrderedSet.Ordering,com.google.common.base.Function,com.google.common.base.Function)"},{"p":"org.apache.calcite.util","c":"PartiallyOrderedSet","l":"PartiallyOrderedSet(PartiallyOrderedSet.Ordering<E>, Function<E, Iterable<E>>, Function<E, Iterable<E>>)","u":"%3Cinit%3E(org.apache.calcite.util.PartiallyOrderedSet.Ordering,java.util.function.Function,java.util.function.Function)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.PartialMapping","l":"PartialMapping(int, int, MappingType)","u":"%3Cinit%3E(int,int,org.apache.calcite.util.mapping.MappingType)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.PartialMapping","l":"PartialMapping(List<Integer>, int, MappingType)","u":"%3Cinit%3E(java.util.List,int,org.apache.calcite.util.mapping.MappingType)"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser","l":"partialParse()"},{"p":"org.apache.calcite.tools","c":"RelBuilder.OverCall","l":"partitionBy(Iterable<? extends RexNode>)","u":"partitionBy(java.lang.Iterable)"},{"p":"org.apache.calcite.tools","c":"RelBuilder.OverCall","l":"partitionBy(RexNode...)","u":"partitionBy(org.apache.calcite.rex.RexNode...)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"partitionbyShouldNotContainOver()"},{"p":"org.apache.calcite.rel.core","c":"Match","l":"partitionKeys"},{"p":"org.apache.calcite.rel.mutable","c":"MutableMatch","l":"partitionKeys"},{"p":"org.apache.calcite.rex","c":"RexWindow","l":"partitionKeys"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"partitionNotAllowed()"},{"p":"org.apache.calcite.test.schemata.tpch","c":"TpchSchema","l":"partsupp"},{"p":"org.apache.calcite.test.schemata.tpch","c":"TpchSchema.PartSupp","l":"PartSupp(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"org.apache.calcite.sql","c":"TableCharacteristic","l":"passColumnsThrough"},{"p":"org.apache.calcite.sql","c":"TableCharacteristic.Builder","l":"passColumnsThrough()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableTableScan","l":"passThrough(RelTraitSet)","u":"passThrough(org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableValues","l":"passThrough(RelTraitSet)","u":"passThrough(org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.rel","c":"PhysicalNode","l":"passThrough(RelTraitSet)","u":"passThrough(org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableAsofJoin","l":"passThroughTraits(RelTraitSet)","u":"passThroughTraits(org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableBatchNestedLoopJoin","l":"passThroughTraits(RelTraitSet)","u":"passThroughTraits(org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableCalc","l":"passThroughTraits(RelTraitSet)","u":"passThroughTraits(org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableCorrelate","l":"passThroughTraits(RelTraitSet)","u":"passThroughTraits(org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableFilter","l":"passThroughTraits(RelTraitSet)","u":"passThroughTraits(org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableHashJoin","l":"passThroughTraits(RelTraitSet)","u":"passThroughTraits(org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableMergeJoin","l":"passThroughTraits(RelTraitSet)","u":"passThroughTraits(org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableNestedLoopJoin","l":"passThroughTraits(RelTraitSet)","u":"passThroughTraits(org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableProject","l":"passThroughTraits(RelTraitSet)","u":"passThroughTraits(org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRel","l":"passThroughTraits(RelTraitSet)","u":"passThroughTraits(org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableSortedAggregate","l":"passThroughTraits(RelTraitSet)","u":"passThroughTraits(org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.rel","c":"PhysicalNode","l":"passThroughTraits(RelTraitSet)","u":"passThroughTraits(org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.test","c":"ConnectionSpec","l":"password"},{"p":"org.apache.calcite.model","c":"JsonFunction","l":"path"},{"p":"org.apache.calcite.model","c":"JsonSchema","l":"path"},{"p":"org.apache.calcite.model","c":"JsonView","l":"path"},{"p":"org.apache.calcite.sql.validate","c":"CyclicDefinitionException","l":"path"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope.Resolve","l":"path"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema.Entry","l":"path()"},{"p":"org.apache.calcite.util","c":"Source","l":"path()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope.Path","l":"Path()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.schema","c":"Schemas","l":"path(CalciteSchema, Iterable<String>)","u":"path(org.apache.calcite.jdbc.CalciteSchema,java.lang.Iterable)"},{"p":"org.apache.calcite.schema","c":"Schemas","l":"path(Iterable<? extends Map.Entry<String, Schema>>)","u":"path(java.lang.Iterable)"},{"p":"org.apache.calcite.schema","c":"Schemas","l":"path(SchemaPlus)","u":"path(org.apache.calcite.schema.SchemaPlus)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"path(String)","u":"path(java.lang.String)"},{"p":"org.apache.calcite.rel.core","c":"Match","l":"pattern"},{"p":"org.apache.calcite.rel.mutable","c":"MutableMatch","l":"pattern"},{"p":"org.apache.calcite.schema.lookup","c":"LikePattern","l":"pattern"},{"p":"org.apache.calcite.util.format.postgresql.format","c":"FormatPattern","l":"pattern"},{"p":"org.apache.calcite.util","c":"Glossary","l":"PATTERN"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"PATTERN_ALTER"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"PATTERN_ALTER"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"PATTERN_BUILDER"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"PATTERN_BUILDER_BUILD"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"PATTERN_BUILDER_SEQ"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"PATTERN_BUILDER_SYMBOL"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"PATTERN_CONCAT"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"PATTERN_CONCAT"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"PATTERN_EXCLUDE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"PATTERN_EXCLUDED"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"PATTERN_INPUT_REF"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"PATTERN_PERMUTE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"PATTERN_PERMUTE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"PATTERN_QUANTIFIER"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"PATTERN_QUANTIFIER"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"PATTERN_TO_AUTOMATON"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"patternAggregationInNavigation(String)","u":"patternAggregationInNavigation(java.lang.String)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"patternAlter(Iterable<? extends RexNode>)","u":"patternAlter(java.lang.Iterable)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"patternAlter(RexNode...)","u":"patternAlter(org.apache.calcite.rex.RexNode...)"},{"p":"org.apache.calcite.runtime","c":"Utilities","l":"patternBuilder()"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"patternConcat(Iterable<? extends RexNode>)","u":"patternConcat(java.lang.Iterable)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"patternConcat(RexNode...)","u":"patternConcat(org.apache.calcite.rex.RexNode...)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"patternCountFunctionArg()"},{"p":"org.apache.calcite.rel.core","c":"Match","l":"patternDefinitions"},{"p":"org.apache.calcite.rel.mutable","c":"MutableMatch","l":"patternDefinitions"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"patternExclude(RexNode)","u":"patternExclude(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"patternField(String, RelDataType, int)","u":"patternField(java.lang.String,org.apache.calcite.rel.type.RelDataType,int)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"patternFunctionNullCheck(String)","u":"patternFunctionNullCheck(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"patternFunctionVariableCheck(String)","u":"patternFunctionVariableCheck(java.lang.String)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"patternPermute(Iterable<? extends RexNode>)","u":"patternPermute(java.lang.Iterable)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"patternPermute(RexNode...)","u":"patternPermute(org.apache.calcite.rex.RexNode...)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"patternPrevFunctionInMeasure(String)","u":"patternPrevFunctionInMeasure(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"patternPrevFunctionOrder(String)","u":"patternPrevFunctionOrder(java.lang.String)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"patternQuantify(Iterable<? extends RexNode>)","u":"patternQuantify(java.lang.Iterable)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"patternQuantify(RexNode...)","u":"patternQuantify(org.apache.calcite.rex.RexNode...)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"patternRunningFunctionInDefine(String)","u":"patternRunningFunctionInDefine(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"patternVarAlreadyDefined(String)","u":"patternVarAlreadyDefined(java.lang.String)"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"pctY"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeSchemaFactory","l":"PDX_SERIALIZABLE_PACKAGE_PATH"},{"p":"org.apache.calcite.adapter.geode.simple","c":"GeodeSimpleSchemaFactory","l":"PDX_SERIALIZABLE_PACKAGE_PATH"},{"p":"org.apache.calcite.rel.type","c":"StructKind","l":"PEEK_FIELDS"},{"p":"org.apache.calcite.rel.type","c":"StructKind","l":"PEEK_FIELDS_DEFAULT"},{"p":"org.apache.calcite.rel.type","c":"StructKind","l":"PEEK_FIELDS_NO_EXPAND"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.Dummy","l":"peek()"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"peek()"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"peek(int)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"peek(int, int)","u":"peek(int,int)"},{"p":"org.apache.calcite.util","c":"Stacks","l":"peek(int, List<T>)","u":"peek(int,java.util.List)"},{"p":"org.apache.calcite.util","c":"Stacks","l":"peek(List<T>)","u":"peek(java.util.List)"},{"p":"org.apache.calcite.rel.type","c":"TimeFrame","l":"per(TimeFrame)","u":"per(org.apache.calcite.rel.type.TimeFrame)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"PERCENT_RANK"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"PERCENT_RANK"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"PERCENT_REMAINDER"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"PERCENTAGE_ORIGINAL_ROWS"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"PERCENTILE_CONT"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"PERCENTILE_CONT"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"PERCENTILE_CONT2"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"PERCENTILE_DISC"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"PERCENTILE_DISC"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"PERCENTILE_DISC_CONT"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"PERCENTILE_DISC2"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"percentileFunctionsArgumentLimit()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"percentRemainderNotAllowed()"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl","l":"perform(CalciteServerStatement, FrameworkConfig, Frameworks.BasePrepareAction<R>)","u":"perform(org.apache.calcite.server.CalciteServerStatement,org.apache.calcite.tools.FrameworkConfig,org.apache.calcite.tools.Frameworks.BasePrepareAction)"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl","l":"perform(CalciteServerStatement, Frameworks.PrepareAction<R>)","u":"perform(org.apache.calcite.server.CalciteServerStatement,org.apache.calcite.tools.Frameworks.PrepareAction)"},{"p":"org.apache.calcite.rel.rules","c":"FilterJoinRule","l":"perform(RelOptRuleCall, Filter, Join)","u":"perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinRule","l":"perform(RelOptRuleCall, Project, Join, RelNode, Aggregate)","u":"perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Aggregate)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule","l":"perform(RelOptRuleCall, Project, RelNode)","u":"perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"performUnconditionalRewrites(SqlNode, boolean)","u":"performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"PERIOD"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"PERIOD_EQUALS"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"PERIOD_EQUALS"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"PERIOD_OR_DATETIME"},{"p":"org.apache.calcite.util","c":"Util","l":"permAssert(boolean, String)","u":"permAssert(boolean,java.lang.String)"},{"p":"org.apache.calcite.util","c":"Permutation","l":"Permutation(int)","u":"%3Cinit%3E(int)"},{"p":"org.apache.calcite.util","c":"Permutation","l":"Permutation(int[])","u":"%3Cinit%3E(int[])"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"permutation(List<RexNode>, RelDataType)","u":"permutation(java.util.List,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"permutationIgnoreCast(List<RexNode>, RelDataType)","u":"permutationIgnoreCast(java.util.List,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"permutationPushDownProject(List<RexNode>, RelDataType, int, int)","u":"permutationPushDownProject(java.util.List,org.apache.calcite.rel.type.RelDataType,int,int)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"permute(Iterable<ImmutableBitSet>, Map<Integer, Integer>)","u":"permute(java.lang.Iterable,java.util.Map)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings","l":"permute(List<T>, Mappings.TargetMapping)","u":"permute(java.util.List,org.apache.calcite.util.mapping.Mappings.TargetMapping)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"permute(Map<Integer, Integer>)","u":"permute(java.util.Map)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"permute(Mapping)","u":"permute(org.apache.calcite.util.mapping.Mapping)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"permute(Mappings.TargetMapping)","u":"permute(org.apache.calcite.util.mapping.Mappings.TargetMapping)"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor","l":"permute(MutableAggregate, MutableRel, Mapping)","u":"permute(org.apache.calcite.rel.mutable.MutableAggregate,org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.util.mapping.Mapping)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"permute(Object, int[])","u":"permute(java.lang.Object,int[])"},{"p":"org.apache.calcite.rel","c":"RelCollations","l":"permute(RelCollation, Map<Integer, Integer>)","u":"permute(org.apache.calcite.rel.RelCollation,java.util.Map)"},{"p":"org.apache.calcite.rel","c":"RelCollations","l":"permute(RelCollation, Mappings.TargetMapping)","u":"permute(org.apache.calcite.rel.RelCollation,org.apache.calcite.util.mapping.Mappings.TargetMapping)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"permute(RelDataTypeFactory, RelDataType, Mapping)","u":"permute(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.util.mapping.Mapping)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"permute(RelNode, Permutation, List<String>)","u":"permute(org.apache.calcite.rel.RelNode,org.apache.calcite.util.Permutation,java.util.List)"},{"p":"org.apache.calcite.sql","c":"SqlCallBinding","l":"permutedCall()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"personalityManagesRowCount()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"personalitySupportsLabels()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"personalitySupportsSnapshots()"},{"p":"org.apache.calcite.sql","c":"SqlDialect.DatabaseProduct","l":"PHOENIX"},{"p":"org.apache.calcite.sql.dialect","c":"PhoenixSqlDialect","l":"PhoenixSqlDialect(SqlDialect.Context)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect.Context)"},{"p":"org.apache.calcite.sql","c":"SqlExplain.Depth","l":"PHYSICAL"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRel.Result","l":"physType"},{"p":"org.apache.calcite.adapter.spark","c":"SparkRel.Result","l":"physType"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"PI"},{"p":"org.apache.calcite.adapter.pig","c":"PigAggregate","l":"PigAggregate(RelOptCluster, RelTraitSet, RelNode, boolean, ImmutableBitSet, List<ImmutableBitSet>, List<AggregateCall>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)"},{"p":"org.apache.calcite.adapter.pig","c":"PigAggregate","l":"PigAggregate(RelOptCluster, RelTraitSet, RelNode, ImmutableBitSet, List<ImmutableBitSet>, List<AggregateCall>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)"},{"p":"org.apache.calcite.adapter.pig","c":"PigRelFactories.PigAggregateFactory","l":"PigAggregateFactory()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.pig","c":"PigFilter","l":"PigFilter(RelOptCluster, RelTraitSet, RelNode, RexNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.adapter.pig","c":"PigRelFactories.PigFilterFactory","l":"PigFilterFactory()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.pig","c":"PigJoin","l":"PigJoin(RelOptCluster, RelTraitSet, RelNode, RelNode, RexNode, JoinRelType)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.adapter.pig","c":"PigRelFactories.PigJoinFactory","l":"PigJoinFactory()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.pig","c":"PigProject","l":"PigProject(RelOptCluster, RelTraitSet, RelNode, List<? extends RexNode>, RelDataType)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.piglet","c":"PigConverter","l":"pigQuery2Rel(String)","u":"pigQuery2Rel(java.lang.String)"},{"p":"org.apache.calcite.piglet","c":"PigConverter","l":"pigQuery2Rel(String, boolean, boolean, boolean)","u":"pigQuery2Rel(java.lang.String,boolean,boolean,boolean)"},{"p":"org.apache.calcite.tools","c":"PigRelBuilder","l":"PigRelBuilder(Context, RelOptCluster, RelOptSchema)","u":"%3Cinit%3E(org.apache.calcite.plan.Context,org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelOptSchema)"},{"p":"org.apache.calcite.piglet","c":"PigRelBuilder.PigRelTranslationContext","l":"PigRelTranslationContext()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.pig","c":"PigSchema","l":"PigSchema()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.piglet","c":"PigConverter","l":"pigScript2Rel(String, Map<String, String>, boolean)","u":"pigScript2Rel(java.lang.String,java.util.Map,boolean)"},{"p":"org.apache.calcite.adapter.pig","c":"PigTable","l":"PigTable(String, String[])","u":"%3Cinit%3E(java.lang.String,java.lang.String[])"},{"p":"org.apache.calcite.adapter.pig","c":"PigTableFactory","l":"PigTableFactory()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.pig","c":"PigTableScan","l":"PigTableScan(RelOptCluster, RelTraitSet, RelOptTable)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.adapter.pig","c":"PigRelFactories.PigTableScanFactory","l":"PigTableScanFactory()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.pig","c":"PigToEnumerableConverter","l":"PigToEnumerableConverter(RelOptCluster, RelTraitSet, RelNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.piglet","c":"PigConverter","l":"pigToSql(String, SqlDialect)","u":"pigToSql(java.lang.String,org.apache.calcite.sql.SqlDialect)"},{"p":"org.apache.calcite.piglet","c":"PigToSqlAggregateRule","l":"PigToSqlAggregateRule(PigToSqlAggregateRule.Config)","u":"%3Cinit%3E(org.apache.calcite.piglet.PigToSqlAggregateRule.Config)"},{"p":"org.apache.calcite.piglet","c":"PigUserDefinedFunction","l":"PigUserDefinedFunction(String, SqlReturnTypeInference, SqlOperandMetadata, Function)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandMetadata,org.apache.calcite.schema.Function)"},{"p":"org.apache.calcite.piglet","c":"PigUserDefinedFunction","l":"PigUserDefinedFunction(String, SqlReturnTypeInference, SqlOperandMetadata, Function, FuncSpec)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandMetadata,org.apache.calcite.schema.Function,org.apache.pig.FuncSpec)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"PIVOT"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"pivot(RelBuilder.GroupKey, Iterable<? extends RelBuilder.AggCall>, Iterable<? extends RexNode>, Iterable<? extends Map.Entry<String, ? extends Iterable<? extends RexNode>>>)","u":"pivot(org.apache.calcite.tools.RelBuilder.GroupKey,java.lang.Iterable,java.lang.Iterable,java.lang.Iterable)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"pivotAggMalformed()"},{"p":"org.apache.calcite.sql.validate","c":"PivotNamespace","l":"PivotNamespace(SqlValidatorImpl, SqlPivot, SqlNode)","u":"%3Cinit%3E(org.apache.calcite.sql.validate.SqlValidatorImpl,org.apache.calcite.sql.SqlPivot,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"PivotScope","l":"PivotScope(SqlValidatorScope, SqlPivot)","u":"%3Cinit%3E(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlPivot)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"pivotValueArityMismatch(int, int)","u":"pivotValueArityMismatch(int,int)"},{"p":"org.apache.calcite.adapter.innodb","c":"QueryType","l":"PK_FULL_SCAN"},{"p":"org.apache.calcite.adapter.innodb","c":"QueryType","l":"PK_POINT_QUERY"},{"p":"org.apache.calcite.adapter.innodb","c":"QueryType","l":"PK_RANGE_QUERY"},{"p":"org.apache.calcite.test.schemata.bookstore","c":"BookstoreSchema.Place","l":"Place(BookstoreSchema.Coordinate, String, String)","u":"%3Cinit%3E(org.apache.calcite.test.schemata.bookstore.BookstoreSchema.Coordinate,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"Hook","l":"PLAN_BEFORE_IMPLEMENTATION"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertQuery","l":"planContains(String)","u":"planContains(java.lang.String)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertQuery","l":"planHasSql(String)","u":"planHasSql(java.lang.String)"},{"p":"org.apache.calcite.plan.volcano","c":"RuleQueue","l":"planner"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl.CalcitePreparingStmt","l":"planner"},{"p":"org.apache.calcite.runtime","c":"Hook","l":"PLANNER"},{"p":"org.apache.calcite.prepare","c":"PlannerImpl","l":"PlannerImpl(FrameworkConfig)","u":"%3Cinit%3E(org.apache.calcite.tools.FrameworkConfig)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertQuery","l":"planUpdateHasSql(String, int)","u":"planUpdateHasSql(java.lang.String,int)"},{"p":"org.apache.calcite.piglet","c":"Ast.Op","l":"PLUS"},{"p":"org.apache.calcite.runtime","c":"Pattern.Op","l":"PLUS"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"PLUS"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"PLUS"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"PLUS_OPERATOR"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"PLUS_PREFIX"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"plus()"},{"p":"org.apache.calcite.runtime","c":"Pattern.PatternBuilder","l":"plus()"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"plus(BigDecimal, BigDecimal)","u":"plus(java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"plus(int, int)","u":"plus(int,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"plus(int, Integer)","u":"plus(int,java.lang.Integer)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"plus(Integer, int)","u":"plus(java.lang.Integer,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"plus(Integer, Integer)","u":"plus(java.lang.Integer,java.lang.Integer)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"plus(Integer, Long)","u":"plus(java.lang.Integer,java.lang.Long)"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable","l":"plus(Iterable<SqlLibrary>)","u":"plus(java.lang.Iterable)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"plus(Long, Integer)","u":"plus(java.lang.Long,java.lang.Integer)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope.Path","l":"plus(RelDataType, int, String, StructKind)","u":"plus(org.apache.calcite.rel.type.RelDataType,int,java.lang.String,org.apache.calcite.rel.type.StructKind)"},{"p":"org.apache.calcite.plan","c":"RelOptCost","l":"plus(RelOptCost)","u":"plus(org.apache.calcite.plan.RelOptCost)"},{"p":"org.apache.calcite.plan","c":"RelOptCostImpl","l":"plus(RelOptCost)","u":"plus(org.apache.calcite.plan.RelOptCost)"},{"p":"org.apache.calcite.plan","c":"RelTraitSet","l":"plus(RelTrait)","u":"plus(org.apache.calcite.plan.RelTrait)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserPos","l":"plus(SqlParserPos)","u":"plus(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlIdentifier","l":"plus(String, SqlParserPos)","u":"plus(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserPos","l":"plusAll(Collection<? extends SqlNode>)","u":"plusAll(java.util.Collection)"},{"p":"org.apache.calcite.plan","c":"RelTraitSet","l":"plusAll(RelTrait[])","u":"plusAll(org.apache.calcite.plan.RelTrait[])"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserPos","l":"plusAll(SqlNode[])","u":"plusAll(org.apache.calcite.sql.SqlNode[])"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"plusAny(Object, Object)","u":"plusAny(java.lang.Object,java.lang.Object)"},{"p":"org.apache.calcite.sql","c":"SqlIdentifier","l":"plusStar()"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"PM"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeUtils.SpatialType","l":"POINT"},{"p":"org.apache.calcite.util","c":"Sarg","l":"pointCount"},{"p":"org.apache.calcite.plan","c":"Strong","l":"policy(RexNode)","u":"policy(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.plan","c":"Strong","l":"policy(SqlKind)","u":"policy(org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.plan","c":"Strong","l":"policy(SqlOperator)","u":"policy(org.apache.calcite.sql.SqlOperator)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeUtils.SpatialType","l":"POLYGON"},{"p":"org.apache.calcite.test","c":"ConnectionFactories","l":"pool(ConnectionFactory)","u":"pool(org.apache.calcite.test.ConnectionFactory)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertThat","l":"pooled()"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.Dummy","l":"pop(CalcitePrepare.Context)","u":"pop(org.apache.calcite.jdbc.CalcitePrepare.Context)"},{"p":"org.apache.calcite.util","c":"Stacks","l":"pop(List<T>)","u":"pop(java.util.List)"},{"p":"org.apache.calcite.util","c":"Stacks","l":"pop(List<T>, T)","u":"pop(java.util.List,T)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"popFunctionCall()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"popFunctionCall()"},{"p":"org.apache.calcite.util","c":"BitSets","l":"populate(BitSet, ImmutableIntList)","u":"populate(java.util.BitSet,org.apache.calcite.util.ImmutableIntList)"},{"p":"org.apache.calcite.util","c":"BitSets","l":"populate(BitSet, Iterable<? extends Number>)","u":"populate(java.util.BitSet,java.lang.Iterable)"},{"p":"org.apache.calcite.test","c":"MockDdlExecutor","l":"populate(SqlIdentifier, SqlNode, CalcitePrepare.Context)","u":"populate(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNode,org.apache.calcite.jdbc.CalcitePrepare.Context)"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"populateBounds()"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl","l":"populateMaterializations(CalcitePrepare.Context, RelOptCluster, Prepare.Materialization)","u":"populateMaterializations(org.apache.calcite.jdbc.CalcitePrepare.Context,org.apache.calcite.plan.RelOptCluster,org.apache.calcite.prepare.Prepare.Materialization)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"POPULATION_SIZE"},{"p":"org.apache.calcite.piglet","c":"Ast.Node","l":"pos"},{"p":"org.apache.calcite.rex","c":"RexCall","l":"pos"},{"p":"org.apache.calcite.sql.parser","c":"StringAndPos","l":"pos"},{"p":"org.apache.calcite.sql","c":"SqlNode","l":"pos"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor","l":"POS"},{"p":"org.apache.calcite.sql.parser","c":"Span","l":"pos()"},{"p":"org.apache.calcite.sql","c":"SqlSpecialOperator.TokenSequence","l":"pos(int)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"POSITION"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"POSITION"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"POSITION"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"position(ByteString, ByteString)","u":"position(org.apache.calcite.avatica.util.ByteString,org.apache.calcite.avatica.util.ByteString)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"position(ByteString, ByteString, int)","u":"position(org.apache.calcite.avatica.util.ByteString,org.apache.calcite.avatica.util.ByteString,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"position(ByteString, ByteString, int, int)","u":"position(org.apache.calcite.avatica.util.ByteString,org.apache.calcite.avatica.util.ByteString,int,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"position(String, String)","u":"position(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"position(String, String, int)","u":"position(java.lang.String,java.lang.String,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"position(String, String, int, int)","u":"position(java.lang.String,java.lang.String,int,int)"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"POSITIVE_INTEGER_LITERAL"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"POSIX_REGEX_CASE_INSENSITIVE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"POSIX_REGEX_CASE_INSENSITIVE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"POSIX_REGEX_CASE_SENSITIVE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"POSIX_REGEX_CASE_SENSITIVE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"POSIX_REGEX_INSENSITIVE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"POSIX_REGEX_SENSITIVE"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.PosixRegexFunction","l":"PosixRegexFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.PosixRegexFunction","l":"posixRegexInsensitive(String, String)","u":"posixRegexInsensitive(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.PosixRegexFunction","l":"posixRegexSensitive(String, String)","u":"posixRegexSensitive(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"ForStatement","l":"post"},{"p":"org.apache.calcite.test","c":"CalciteAssert.SchemaSpec","l":"POST"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules","l":"POST_AGGREGATION_PROJECT"},{"p":"org.apache.calcite.util","c":"Util","l":"post(boolean, String)","u":"post(boolean,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"HttpUtils","l":"post(String, CharSequence, Map<String, String>)","u":"post(java.lang.String,java.lang.CharSequence,java.util.Map)"},{"p":"org.apache.calcite.runtime","c":"HttpUtils","l":"post(String, CharSequence, Map<String, String>, int, int)","u":"post(java.lang.String,java.lang.CharSequence,java.util.Map,int,int)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"PostDecrementAssign"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"postDecrementAssign(Expression)","u":"postDecrementAssign(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"postDecrementAssign(Expression, Method)","u":"postDecrementAssign(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.sql2rel","c":"InitializerExpressionFactory","l":"postExpressionConversionHook()"},{"p":"org.apache.calcite.sql2rel","c":"NullInitializerExpressionFactory","l":"postExpressionConversionHook()"},{"p":"org.apache.calcite.sql","c":"SqlSyntax","l":"POSTFIX"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser.Type","l":"POSTFIX"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser.Builder","l":"postfix(Object, int)","u":"postfix(java.lang.Object,int)"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser","l":"postfix(Object, int)","u":"postfix(java.lang.Object,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibrary","l":"POSTGRESQL"},{"p":"org.apache.calcite.sql","c":"SqlDialect.DatabaseProduct","l":"POSTGRESQL"},{"p":"org.apache.calcite.test","c":"CalciteAssert.DatabaseInstance","l":"POSTGRESQL"},{"p":"org.apache.calcite.util.format","c":"FormatModels","l":"POSTGRESQL"},{"p":"org.apache.calcite.sql.dialect","c":"PostgresqlSqlDialect","l":"POSTGRESQL_TYPE_SYSTEM"},{"p":"org.apache.calcite.sql.dialect","c":"PostgresqlSqlDialect","l":"PostgresqlSqlDialect(SqlDialect.Context)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect.Context)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"PostIncrementAssign"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"postIncrementAssign(Expression)","u":"postIncrementAssign(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"postIncrementAssign(Expression, Method)","u":"postIncrementAssign(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"POW"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"Power"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"POWER"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"POWER"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"POWER_PG"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"POWER_PG"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"power(BigDecimal, BigDecimal)","u":"power(java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"power(BigDecimal, double)","u":"power(java.math.BigDecimal,double)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"power(double, BigDecimal)","u":"power(double,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"power(double, double)","u":"power(double,double)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"power(Expression, Expression)","u":"power(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"power(Expression, Expression, Method)","u":"power(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"PowerAssign"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"powerAssign(Expression, Expression)","u":"powerAssign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"powerAssign(Expression, Expression, Method)","u":"powerAssign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"powerAssign(Expression, Expression, Method, LambdaExpression)","u":"powerAssign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.LambdaExpression)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceDecimalsRule.RexExpander","l":"powerOfTen(int)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"powerSet()"},{"p":"org.apache.calcite.util","c":"NumberUtil","l":"powTen(int)"},{"p":"org.apache.calcite.test.schemata.tpch","c":"TpchSchema.Part","l":"pPartkey"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"PRAGMATIC_2003"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformance","l":"PRAGMATIC_2003"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"PRAGMATIC_99"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformance","l":"PRAGMATIC_99"},{"p":"org.apache.calcite.util","c":"Util","l":"pre(boolean, String)","u":"pre(boolean,java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"PRECEDES"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"PRECEDES"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"PRECEDING"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"PRECEDING_OPERATOR"},{"p":"org.apache.calcite.rex","c":"RexWindowBounds","l":"preceding(RexNode)","u":"preceding(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"preceding(RexNode)","u":"preceding(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.sql","c":"SqlAbstractDateTimeLiteral","l":"precision"},{"p":"org.apache.calcite.rel.type","c":"RelDataType","l":"PRECISION_NOT_SPECIFIED"},{"p":"org.apache.calcite.util.graph","c":"Graphs","l":"predecessorListOf(DirectedGraph<V, E>, V)","u":"predecessorListOf(org.apache.calcite.util.graph.DirectedGraph,V)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"PreDecrementAssign"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"preDecrementAssign(Expression)","u":"preDecrementAssign(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"preDecrementAssign(Expression, Method)","u":"preDecrementAssign(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.rel.hint","c":"HintStrategy","l":"predicate"},{"p":"org.apache.calcite.rel.rules","c":"FilterTableScanRule","l":"PREDICATE"},{"p":"org.apache.calcite.rel.rules","c":"ProjectTableScanRule","l":"PREDICATE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"PREDICATE_TEST"},{"p":"org.apache.calcite.plan","c":"RelRule.OperandDetailBuilder","l":"predicate(Predicate<? super R>)","u":"predicate(java.util.function.Predicate)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"predicateConstants(Class<C>, RexBuilder, List<RexNode>)","u":"predicateConstants(java.lang.Class,org.apache.calcite.rex.RexBuilder,java.util.List)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule","l":"predicateConstants(Class<C>, RexBuilder, RelOptPredicateList)","u":"predicateConstants(java.lang.Class,org.apache.calcite.rex.RexBuilder,org.apache.calcite.plan.RelOptPredicateList)"},{"p":"org.apache.calcite.runtime","c":"PredicateImpl","l":"PredicateImpl()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"PREDICATES"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRel.Prefer","l":"prefer(JavaRowFormat)","u":"prefer(org.apache.calcite.adapter.enumerable.JavaRowFormat)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRel.Prefer","l":"preferArray()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRel.Prefer","l":"preferCustom()"},{"p":"org.apache.calcite.chinook","c":"PreferredAlbumsTableFactory","l":"PreferredAlbumsTableFactory()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.chinook","c":"PreferredGenresTableFactory","l":"PreferredGenresTableFactory()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql","c":"SqlSyntax","l":"PREFIX"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser.Type","l":"PREFIX"},{"p":"org.apache.calcite.sql.validate","c":"SqlQualified","l":"prefix()"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser.Builder","l":"prefix(Object, int)","u":"prefix(java.lang.Object,int)"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser","l":"prefix(Object, int)","u":"prefix(java.lang.Object,int)"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema","l":"prefixEmps"},{"p":"org.apache.calcite.sql.validate","c":"SqlQualified","l":"prefixLength"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"PreIncrementAssign"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"preIncrementAssign(Expression)","u":"preIncrementAssign(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"preIncrementAssign(Expression, Method)","u":"preIncrementAssign(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.tools","c":"RelBuilder.AggCall","l":"preOperands(Iterable<? extends RexNode>)","u":"preOperands(java.lang.Iterable)"},{"p":"org.apache.calcite.tools","c":"RelBuilder.AggCall","l":"preOperands(RexNode...)","u":"preOperands(org.apache.calcite.rex.RexNode...)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableRels","l":"preOrderTraverseNext(MutableRel)","u":"preOrderTraverseNext(org.apache.calcite.rel.mutable.MutableRel)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"preparationAborted()"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.ParseResult","l":"prepare"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl.CalcitePreparingStmt","l":"prepare"},{"p":"org.apache.calcite.schema","c":"Schemas","l":"prepare(CalciteConnection, CalciteSchema, List<String>, String, ImmutableMap<CalciteConnectionProperty, String>)","u":"prepare(org.apache.calcite.jdbc.CalciteConnection,org.apache.calcite.jdbc.CalciteSchema,java.util.List,java.lang.String,com.google.common.collect.ImmutableMap)"},{"p":"org.apache.calcite.prepare","c":"Prepare","l":"Prepare(CalcitePrepare.Context, Prepare.CatalogReader, Convention)","u":"%3Cinit%3E(org.apache.calcite.jdbc.CalcitePrepare.Context,org.apache.calcite.prepare.Prepare.CatalogReader,org.apache.calcite.plan.Convention)"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaImpl","l":"prepare(Meta.ConnectionHandle, String, long)","u":"prepare(org.apache.calcite.avatica.Meta.ConnectionHandle,java.lang.String,long)"},{"p":"org.apache.calcite.jdbc","c":"CalciteStatement","l":"prepare(Queryable<T>)","u":"prepare(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.tools","c":"Frameworks.PrepareAction","l":"PrepareAction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.tools","c":"Frameworks.PrepareAction","l":"PrepareAction(FrameworkConfig)","u":"%3Cinit%3E(org.apache.calcite.tools.FrameworkConfig)"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaImpl","l":"prepareAndExecute(Meta.StatementHandle, String, long, int, Meta.PrepareCallback)","u":"prepareAndExecute(org.apache.calcite.avatica.Meta.StatementHandle,java.lang.String,long,int,org.apache.calcite.avatica.Meta.PrepareCallback)"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaImpl","l":"prepareAndExecute(Meta.StatementHandle, String, long, Meta.PrepareCallback)","u":"prepareAndExecute(org.apache.calcite.avatica.Meta.StatementHandle,java.lang.String,long,org.apache.calcite.avatica.Meta.PrepareCallback)"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaImpl","l":"prepareAndExecuteBatch(Meta.StatementHandle, List<String>)","u":"prepareAndExecuteBatch(org.apache.calcite.avatica.Meta.StatementHandle,java.util.List)"},{"p":"org.apache.calcite.prepare","c":"Prepare.PreparedExplain","l":"PreparedExplain(RelDataType, RelDataType, RelRoot, SqlExplainFormat, SqlExplainLevel)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelRoot,org.apache.calcite.sql.SqlExplainFormat,org.apache.calcite.sql.SqlExplainLevel)"},{"p":"org.apache.calcite.prepare","c":"Prepare.PreparedResultImpl","l":"PreparedResultImpl(RelDataType, RelDataType, List<? extends List<String>>, List<RelCollation>, RelNode, TableModify.Operation, boolean)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,java.util.List,java.util.List,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.TableModify.Operation,boolean)"},{"p":"org.apache.calcite.jdbc","c":"Driver","l":"prepareFactory"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare","l":"prepareQueryable(CalcitePrepare.Context, Queryable<T>)","u":"prepareQueryable(org.apache.calcite.jdbc.CalcitePrepare.Context,org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl","l":"prepareQueryable(CalcitePrepare.Context, Queryable<T>)","u":"prepareQueryable(org.apache.calcite.jdbc.CalcitePrepare.Context,org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl.CalcitePreparingStmt","l":"prepareQueryable(Queryable, RelDataType)","u":"prepareQueryable(org.apache.calcite.linq4j.Queryable,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl.CalcitePreparingStmt","l":"prepareRel(RelNode)","u":"prepareRel(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare","l":"prepareSql(CalcitePrepare.Context, CalcitePrepare.Query<T>, Type, long)","u":"prepareSql(org.apache.calcite.jdbc.CalcitePrepare.Context,org.apache.calcite.jdbc.CalcitePrepare.Query,java.lang.reflect.Type,long)"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl","l":"prepareSql(CalcitePrepare.Context, CalcitePrepare.Query<T>, Type, long)","u":"prepareSql(org.apache.calcite.jdbc.CalcitePrepare.Context,org.apache.calcite.jdbc.CalcitePrepare.Query,java.lang.reflect.Type,long)"},{"p":"org.apache.calcite.prepare","c":"Prepare","l":"prepareSql(SqlNode, Class, SqlValidator, boolean)","u":"prepareSql(org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)"},{"p":"org.apache.calcite.prepare","c":"Prepare","l":"prepareSql(SqlNode, SqlNode, Class<?>, SqlValidator, boolean)","u":"prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)"},{"p":"org.apache.calcite.tools","c":"RelRunner","l":"prepareStatement(RelNode)","u":"prepareStatement(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel","c":"RelCollationImpl","l":"PRESERVE"},{"p":"org.apache.calcite.rel","c":"RelCollations","l":"PRESERVE"},{"p":"org.apache.calcite.rel.rules","c":"ProjectCorrelateTransposeRule.Config","l":"preserveExprCondition()"},{"p":"org.apache.calcite.rel.rules","c":"ProjectFilterTransposeRule.Config","l":"preserveExprCondition()"},{"p":"org.apache.calcite.rel.rules","c":"ProjectJoinTransposeRule.Config","l":"preserveExprCondition()"},{"p":"org.apache.calcite.rel.rules","c":"ProjectSetOpTransposeRule.Config","l":"preserveExprCondition()"},{"p":"org.apache.calcite.sql","c":"SqlDialect.DatabaseProduct","l":"PRESTO"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"PRESTO"},{"p":"org.apache.calcite.sql.dialect","c":"PrestoSqlDialect","l":"PrestoSqlDialect(SqlDialect.Context)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect.Context)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"PREV"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"PREV"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"preValidateCall(SqlValidator, SqlValidatorScope, SqlCall)","u":"preValidateCall(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.tools","c":"RelBuilder.Config","l":"preventEmptyFieldList()"},{"p":"org.apache.calcite.util","c":"BitSets","l":"previousClearBit(BitSet, int)","u":"previousClearBit(java.util.BitSet,int)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"previousClearBit(int)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"preVisit(BinaryExpression)","u":"preVisit(org.apache.calcite.linq4j.tree.BinaryExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"preVisit(BlockStatement)","u":"preVisit(org.apache.calcite.linq4j.tree.BlockStatement)"},{"p":"org.apache.calcite.linq4j.tree","c":"ClassDeclarationFinder","l":"preVisit(ClassDeclaration)","u":"preVisit(org.apache.calcite.linq4j.tree.ClassDeclaration)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"preVisit(ClassDeclaration)","u":"preVisit(org.apache.calcite.linq4j.tree.ClassDeclaration)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"preVisit(ConditionalStatement)","u":"preVisit(org.apache.calcite.linq4j.tree.ConditionalStatement)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"preVisit(ConstructorDeclaration)","u":"preVisit(org.apache.calcite.linq4j.tree.ConstructorDeclaration)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"preVisit(DeclarationStatement)","u":"preVisit(org.apache.calcite.linq4j.tree.DeclarationStatement)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"preVisit(FieldDeclaration)","u":"preVisit(org.apache.calcite.linq4j.tree.FieldDeclaration)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"preVisit(ForEachStatement)","u":"preVisit(org.apache.calcite.linq4j.tree.ForEachStatement)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"preVisit(ForStatement)","u":"preVisit(org.apache.calcite.linq4j.tree.ForStatement)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"preVisit(FunctionExpression)","u":"preVisit(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"preVisit(GotoStatement)","u":"preVisit(org.apache.calcite.linq4j.tree.GotoStatement)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"preVisit(IndexExpression)","u":"preVisit(org.apache.calcite.linq4j.tree.IndexExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"preVisit(MemberExpression)","u":"preVisit(org.apache.calcite.linq4j.tree.MemberExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"preVisit(MethodCallExpression)","u":"preVisit(org.apache.calcite.linq4j.tree.MethodCallExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"preVisit(MethodDeclaration)","u":"preVisit(org.apache.calcite.linq4j.tree.MethodDeclaration)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"preVisit(NewArrayExpression)","u":"preVisit(org.apache.calcite.linq4j.tree.NewArrayExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"ClassDeclarationFinder","l":"preVisit(NewExpression)","u":"preVisit(org.apache.calcite.linq4j.tree.NewExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"preVisit(NewExpression)","u":"preVisit(org.apache.calcite.linq4j.tree.NewExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"preVisit(TernaryExpression)","u":"preVisit(org.apache.calcite.linq4j.tree.TernaryExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"preVisit(ThrowStatement)","u":"preVisit(org.apache.calcite.linq4j.tree.ThrowStatement)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"preVisit(TryStatement)","u":"preVisit(org.apache.calcite.linq4j.tree.TryStatement)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"preVisit(TypeBinaryExpression)","u":"preVisit(org.apache.calcite.linq4j.tree.TypeBinaryExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"preVisit(UnaryExpression)","u":"preVisit(org.apache.calcite.linq4j.tree.UnaryExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"preVisit(WhileStatement)","u":"preVisit(org.apache.calcite.linq4j.tree.WhileStatement)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlKeyConstraint","l":"PRIMARY"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"PRIMARY_KEY"},{"p":"org.apache.calcite.sql.ddl","c":"SqlDdlNodes","l":"primary(SqlParserPos, SqlIdentifier, SqlNodeList)","u":"primary(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlKeyConstraint","l":"primary(SqlParserPos, SqlIdentifier, SqlNodeList)","u":"primary(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema","l":"primes"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema","l":"primesBoxed"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema","l":"primesCustomBoxed"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive.Flavor","l":"PRIMITIVE"},{"p":"org.apache.calcite.test","c":"Matchers","l":"primitiveArrayWithSize(int)"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema.EveryType","l":"primitiveBoolean"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema.EveryType","l":"primitiveByte"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema.EveryType","l":"primitiveChar"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"primitiveClass"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema.EveryType","l":"primitiveDouble"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema.EveryType","l":"primitiveFloat"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema.EveryType","l":"primitiveInt"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema.EveryType","l":"primitiveLong"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"primitiveName"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema.EveryType","l":"primitiveShort"},{"p":"org.apache.calcite.adapter.enumerable","c":"MatchUtils","l":"print(int)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"print(int)"},{"p":"org.apache.calcite.sql","c":"SqlWriter","l":"print(int)"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser","l":"print(PrecedenceClimbingParser.Token)","u":"print(org.apache.calcite.util.PrecedenceClimbingParser.Token)"},{"p":"org.apache.calcite.util","c":"Util","l":"print(PrintWriter, Object)","u":"print(java.io.PrintWriter,java.lang.Object)"},{"p":"org.apache.calcite.util","c":"Util","l":"print(PrintWriter, Object, int)","u":"print(java.io.PrintWriter,java.lang.Object,int)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"print(String)","u":"print(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlWriter","l":"print(String)","u":"print(java.lang.String)"},{"p":"org.apache.calcite.util","c":"XmlOutput","l":"print(String)","u":"print(java.lang.String)"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser.Call","l":"print(StringBuilder)","u":"print(java.lang.StringBuilder)"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser.Token","l":"print(StringBuilder)","u":"print(java.lang.StringBuilder)"},{"p":"org.apache.calcite.rex","c":"RexLiteral","l":"printAsJava(PrintWriter)","u":"printAsJava(java.io.PrintWriter)"},{"p":"org.apache.calcite.rel.rules","c":"LongBitmap","l":"printBitmap(long)"},{"p":"org.apache.calcite.util","c":"RangeSets","l":"printer(StringBuilder, BiConsumer<StringBuilder, C>)","u":"printer(java.lang.StringBuilder,java.util.function.BiConsumer)"},{"p":"org.apache.calcite.util","c":"Util","l":"printIterable(StringBuilder, Iterable<E>)","u":"printIterable(java.lang.StringBuilder,java.lang.Iterable)"},{"p":"org.apache.calcite.util","c":"Util","l":"printJavaString(Appendable, String, boolean)","u":"printJavaString(java.lang.Appendable,java.lang.String,boolean)"},{"p":"org.apache.calcite.util","c":"Util","l":"printList(StringBuilder, int, ObjIntConsumer<StringBuilder>)","u":"printList(java.lang.StringBuilder,int,java.util.function.ObjIntConsumer)"},{"p":"org.apache.calcite.util","c":"Util","l":"println(PrintWriter, Object)","u":"println(java.io.PrintWriter,java.lang.Object)"},{"p":"org.apache.calcite.util","c":"Puffin.Context","l":"println(String)","u":"println(java.lang.String)"},{"p":"org.apache.calcite.util","c":"StackWriter","l":"printSqlIdentifier(PrintWriter, String)","u":"printSqlIdentifier(java.io.PrintWriter,java.lang.String)"},{"p":"org.apache.calcite.util","c":"StackWriter","l":"printSqlStringLiteral(PrintWriter, String)","u":"printSqlStringLiteral(java.io.PrintWriter,java.lang.String)"},{"p":"org.apache.calcite.util","c":"TestUtil","l":"printStackTrace(Throwable)","u":"printStackTrace(java.lang.Throwable)"},{"p":"org.apache.calcite.util","c":"Sarg","l":"printTo(StringBuilder, BiConsumer<StringBuilder, C>)","u":"printTo(java.lang.StringBuilder,java.util.function.BiConsumer)"},{"p":"org.apache.calcite.adapter.splunk.search","c":"SplunkConnectionImpl","l":"printUsage(String)","u":"printUsage(java.lang.String)"},{"p":"org.apache.calcite.util","c":"Util","l":"printWriter(File)","u":"printWriter(java.io.File)"},{"p":"org.apache.calcite.util","c":"Util","l":"printWriter(OutputStream)","u":"printWriter(java.io.OutputStream)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"PROCEDURE_CALL"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"PROCEDURE_CALL"},{"p":"org.apache.calcite.util","c":"Smalls","l":"PROCESS_CURSOR_METHOD"},{"p":"org.apache.calcite.util","c":"Smalls","l":"PROCESS_CURSORS_METHOD"},{"p":"org.apache.calcite.util","c":"Smalls","l":"processCursor(int, Enumerable<Object[]>)","u":"processCursor(int,org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.util","c":"Smalls","l":"processCursors(int, Enumerable<Object[]>, Enumerable<Smalls.IntString>)","u":"processCursors(int,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.adapter.splunk.search","c":"SearchResultListener","l":"processSearchResult(String[])","u":"processSearchResult(java.lang.String[])"},{"p":"org.apache.calcite.adapter.splunk.search","c":"SplunkConnectionImpl.CountingSearchResultListener","l":"processSearchResult(String[])","u":"processSearchResult(java.lang.String[])"},{"p":"org.apache.calcite.util","c":"Smalls.WideSaleSchema","l":"prod"},{"p":"org.apache.calcite.test.schemata.foodmart","c":"FoodmartSchema.SalesFact","l":"prod_id"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"prodId"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"PRODUCT_FORCE_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"PRODUCT_NULLABLE"},{"p":"org.apache.calcite.linq4j","c":"Linq4j","l":"product(Iterable<? extends Iterable<T>>)","u":"product(java.lang.Iterable)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"product(List<Enumerator<List<E>>>, int, boolean)","u":"product(java.util.List,int,boolean)"},{"p":"org.apache.calcite.linq4j","c":"Linq4j","l":"product(List<Enumerator<T>>)","u":"product(java.util.List)"},{"p":"org.apache.calcite.util","c":"Permutation","l":"product(Permutation)","u":"product(org.apache.calcite.util.Permutation)"},{"p":"org.apache.calcite.test.schemata.orderstream","c":"ProductsTable","l":"ProductsTable(ImmutableList<Object[]>)","u":"%3Cinit%3E(com.google.common.collect.ImmutableList)"},{"p":"org.apache.calcite.test.schemata.orderstream","c":"ProductsTableFactory","l":"ProductsTableFactory()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.test.schemata.orderstream","c":"ProductsTemporalTable","l":"ProductsTemporalTable()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.profile","c":"Profiler","l":"profile(Iterable<List<Comparable>>, List<Profiler.Column>, Collection<ImmutableBitSet>)","u":"profile(java.lang.Iterable,java.util.List,java.util.Collection)"},{"p":"org.apache.calcite.profile","c":"ProfilerImpl","l":"profile(Iterable<List<Comparable>>, List<Profiler.Column>, Collection<ImmutableBitSet>)","u":"profile(java.lang.Iterable,java.util.List,java.util.Collection)"},{"p":"org.apache.calcite.profile","c":"SimpleProfiler","l":"profile(Iterable<List<Comparable>>, List<Profiler.Column>, Collection<ImmutableBitSet>)","u":"profile(java.lang.Iterable,java.util.List,java.util.Collection)"},{"p":"org.apache.calcite.materialize","c":"Lattices","l":"PROFILER"},{"p":"org.apache.calcite.rel.core","c":"Calc","l":"program"},{"p":"org.apache.calcite.rel.mutable","c":"MutableCalc","l":"program"},{"p":"org.apache.calcite.rel.rules","c":"CalcRelSplitter","l":"program"},{"p":"org.apache.calcite.piglet","c":"Ast.Op","l":"PROGRAM"},{"p":"org.apache.calcite.runtime","c":"Hook","l":"PROGRAM"},{"p":"org.apache.calcite.piglet","c":"Ast.Program","l":"Program(SqlParserPos, List<Ast.Stmt>)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,java.util.List)"},{"p":"org.apache.calcite.tools","c":"Frameworks.ConfigBuilder","l":"programs(List<Program>)","u":"programs(java.util.List)"},{"p":"org.apache.calcite.tools","c":"Frameworks.ConfigBuilder","l":"programs(Program...)","u":"programs(org.apache.calcite.tools.Program...)"},{"p":"org.apache.calcite.plan","c":"DeriveMode","l":"PROHIBITED"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"proj4jEpsgIsMissing()"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraRules","l":"PROJECT"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules","l":"PROJECT"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbRules","l":"PROJECT"},{"p":"org.apache.calcite.adapter.splunk","c":"SplunkPushDownRule","l":"PROJECT"},{"p":"org.apache.calcite.rel.hint","c":"HintPredicates","l":"PROJECT"},{"p":"org.apache.calcite.rel.rules","c":"MeasureRules","l":"PROJECT"},{"p":"org.apache.calcite.rel.rules","c":"ProjectFilterTransposeRule.Config","l":"PROJECT"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules.RemoveEmptySingleRule.RemoveEmptySingleRuleConfig","l":"PROJECT"},{"p":"org.apache.calcite.rel.rules","c":"SubQueryRemoveRule.Config","l":"PROJECT"},{"p":"org.apache.calcite.rel.rules","c":"ValuesReduceRule.Config","l":"PROJECT"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRules","l":"PROJECT_AGGREGATE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"PROJECT_AGGREGATE_MERGE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"PROJECT_CALC_MERGE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"PROJECT_CORRELATE_TRANSPOSE"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules","l":"PROJECT_EXTRACT_RULE"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRules","l":"PROJECT_FILTER"},{"p":"org.apache.calcite.rel.rules","c":"ProjectFilterTransposeRule.Config","l":"PROJECT_FILTER"},{"p":"org.apache.calcite.rel.rules","c":"ValuesReduceRule.Config","l":"PROJECT_FILTER"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules","l":"PROJECT_FILTER_TRANSPOSE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"PROJECT_FILTER_TRANSPOSE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"PROJECT_FILTER_TRANSPOSE_WHOLE_EXPRESSIONS"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"PROJECT_FILTER_TRANSPOSE_WHOLE_PROJECT_EXPRESSIONS"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"PROJECT_FILTER_VALUES_MERGE"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules","l":"PROJECT_INSTANCE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"PROJECT_INTERPRETER_TABLE_SCAN"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRules","l":"PROJECT_JOIN"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"PROJECT_JOIN_JOIN_REMOVE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"PROJECT_JOIN_REMOVE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"PROJECT_JOIN_TRANSPOSE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"PROJECT_MERGE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"PROJECT_MULTI_JOIN_MERGE"},{"p":"org.apache.calcite.adapter.splunk","c":"SplunkPushDownRule","l":"PROJECT_ON_FILTER"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"PROJECT_OVER_SUM_TO_SUM0_RULE"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"PROJECT_PREDICATE"},{"p":"org.apache.calcite.rex","c":"RexUtil.SubQueryFinder","l":"PROJECT_PREDICATE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"PROJECT_REDUCE_EXPRESSIONS"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"PROJECT_REMOVE"},{"p":"org.apache.calcite.adapter.arrow","c":"ArrowRules","l":"PROJECT_SCAN"},{"p":"org.apache.calcite.adapter.csv","c":"CsvRules","l":"PROJECT_SCAN"},{"p":"org.apache.calcite.adapter.file","c":"FileRules","l":"PROJECT_SCAN"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"PROJECT_SET_OP_TRANSPOSE"},{"p":"org.apache.calcite.rel.rules","c":"MeasureRules","l":"PROJECT_SORT"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"PROJECT_SUB_QUERY_TO_CORRELATE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"PROJECT_TABLE_SCAN"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"PROJECT_TO_CALC"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"PROJECT_TO_LOGICAL_PROJECT_AND_WINDOW"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"PROJECT_TO_SEMI_JOIN"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"PROJECT_VALUES_MERGE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"PROJECT_WINDOW_TRANSPOSE"},{"p":"org.apache.calcite.rel","c":"RelRoot","l":"project()"},{"p":"org.apache.calcite.rel","c":"RelRoot","l":"project(boolean)"},{"p":"org.apache.calcite.adapter.csv","c":"CsvTranslatableTable","l":"project(DataContext, int[])","u":"project(org.apache.calcite.DataContext,int[])"},{"p":"org.apache.calcite.adapter.file","c":"CsvTranslatableTable","l":"project(DataContext, int[])","u":"project(org.apache.calcite.DataContext,int[])"},{"p":"org.apache.calcite.rel.core","c":"TableScan","l":"project(ImmutableBitSet, Set<RelDataTypeField>, RelBuilder)","u":"project(org.apache.calcite.util.ImmutableBitSet,java.util.Set,org.apache.calcite.tools.RelBuilder)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"project(Iterable<? extends RexNode>)","u":"project(java.lang.Iterable)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"project(Iterable<? extends RexNode>, Iterable<? extends String>)","u":"project(java.lang.Iterable,java.lang.Iterable)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"project(Iterable<? extends RexNode>, Iterable<? extends String>, boolean)","u":"project(java.lang.Iterable,java.lang.Iterable,boolean)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"project(Iterable<? extends RexNode>, Iterable<? extends String>, boolean, Iterable<CorrelationId>)","u":"project(java.lang.Iterable,java.lang.Iterable,boolean,java.lang.Iterable)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysType","l":"project(List<Integer>, boolean, JavaRowFormat)","u":"project(java.util.List,boolean,org.apache.calcite.adapter.enumerable.JavaRowFormat)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysTypeImpl","l":"project(List<Integer>, boolean, JavaRowFormat)","u":"project(java.util.List,boolean,org.apache.calcite.adapter.enumerable.JavaRowFormat)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysType","l":"project(List<Integer>, JavaRowFormat)","u":"project(java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysTypeImpl","l":"project(List<Integer>, JavaRowFormat)","u":"project(java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)"},{"p":"org.apache.calcite.rel.core","c":"Project","l":"Project(RelInput)","u":"%3Cinit%3E(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdCollation","l":"project(RelMetadataQuery, RelNode, List<? extends RexNode>)","u":"project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdDistribution","l":"project(RelMetadataQuery, RelNode, List<? extends RexNode>)","u":"project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)"},{"p":"org.apache.calcite.piglet","c":"PigRelBuilder","l":"project(RelNode, RelDataType)","u":"project(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.core","c":"Project","l":"Project(RelOptCluster, RelTraitSet, List<RelHint>, RelNode, List<? extends RexNode>, RelDataType)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.core","c":"Project","l":"Project(RelOptCluster, RelTraitSet, List<RelHint>, RelNode, List<? extends RexNode>, RelDataType, Set<CorrelationId>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType,java.util.Set)"},{"p":"org.apache.calcite.rel.core","c":"Project","l":"Project(RelOptCluster, RelTraitSet, RelNode, List<? extends RexNode>, RelDataType)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.core","c":"Project","l":"Project(RelOptCluster, RelTraitSet, RelNode, List<? extends RexNode>, RelDataType, int)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType,int)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"project(RexNode...)","u":"project(org.apache.calcite.rex.RexNode...)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectAggregateMergeRule","l":"ProjectAggregateMergeRule(ProjectAggregateMergeRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.ProjectAggregateMergeRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectCalcMergeRule","l":"ProjectCalcMergeRule(ProjectCalcMergeRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.ProjectCalcMergeRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectCalcMergeRule","l":"ProjectCalcMergeRule(RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectCorrelateTransposeRule","l":"ProjectCorrelateTransposeRule(ProjectCorrelateTransposeRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.ProjectCorrelateTransposeRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectCorrelateTransposeRule","l":"ProjectCorrelateTransposeRule(PushProjector.ExprCondition, RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.PushProjector.ExprCondition,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"projectExcept(Iterable<RexNode>)","u":"projectExcept(java.lang.Iterable)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"projectExcept(RexNode...)","u":"projectExcept(org.apache.calcite.rex.RexNode...)"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.Struct","l":"projectFactory"},{"p":"org.apache.calcite.rel.rules","c":"ProjectFilterTransposeRule","l":"ProjectFilterTransposeRule(Class<? extends Project>, Class<? extends Filter>, RelBuilderFactory, PushProjector.ExprCondition)","u":"%3Cinit%3E(java.lang.Class,java.lang.Class,org.apache.calcite.tools.RelBuilderFactory,org.apache.calcite.rel.rules.PushProjector.ExprCondition)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectFilterTransposeRule","l":"ProjectFilterTransposeRule(ProjectFilterTransposeRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.ProjectFilterTransposeRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectFilterTransposeRule","l":"ProjectFilterTransposeRule(RelOptRuleOperand, PushProjector.ExprCondition, boolean, boolean, RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.rel.rules.PushProjector.ExprCondition,boolean,boolean,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.runtime","c":"ProjectionTransformer","l":"ProjectionTransformer(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"projectJoinInputs(RelNode[], List<RexNode>, List<RexNode>, int, List<Integer>, List<Integer>, List<Integer>)","u":"projectJoinInputs(org.apache.calcite.rel.RelNode[],java.util.List,java.util.List,int,java.util.List,java.util.List,java.util.List)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectJoinJoinRemoveRule","l":"ProjectJoinJoinRemoveRule(Class<? extends Project>, Class<? extends Join>, RelBuilderFactory)","u":"%3Cinit%3E(java.lang.Class,java.lang.Class,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectJoinJoinRemoveRule","l":"ProjectJoinJoinRemoveRule(ProjectJoinJoinRemoveRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.ProjectJoinJoinRemoveRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectJoinRemoveRule","l":"ProjectJoinRemoveRule(Class<? extends Project>, Class<? extends Join>, RelBuilderFactory)","u":"%3Cinit%3E(java.lang.Class,java.lang.Class,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectJoinRemoveRule","l":"ProjectJoinRemoveRule(ProjectJoinRemoveRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.ProjectJoinRemoveRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectJoinTransposeRule","l":"ProjectJoinTransposeRule(Class<? extends Project>, Class<? extends Join>, PushProjector.ExprCondition, RelBuilderFactory)","u":"%3Cinit%3E(java.lang.Class,java.lang.Class,org.apache.calcite.rel.rules.PushProjector.ExprCondition,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectJoinTransposeRule","l":"ProjectJoinTransposeRule(ProjectJoinTransposeRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.ProjectJoinTransposeRule.Config)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"projectMapping(RelNode, Mapping, List<String>, RelFactories.ProjectFactory)","u":"projectMapping(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping,java.util.List,org.apache.calcite.rel.core.RelFactories.ProjectFactory)"},{"p":"org.apache.calcite.rel.rules","c":"MeasureRules.ProjectMeasureRule","l":"ProjectMeasureRule(MeasureRules.ProjectMeasureRuleConfig)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.MeasureRules.ProjectMeasureRuleConfig)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewAggregateRule.Config","l":"projectMergeRule()"},{"p":"org.apache.calcite.rel.rules","c":"ProjectMergeRule","l":"ProjectMergeRule(boolean, int, RelBuilderFactory)","u":"%3Cinit%3E(boolean,int,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectMergeRule","l":"ProjectMergeRule(boolean, RelBuilderFactory)","u":"%3Cinit%3E(boolean,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectMergeRule","l":"ProjectMergeRule(boolean, RelFactories.ProjectFactory)","u":"%3Cinit%3E(boolean,org.apache.calcite.rel.core.RelFactories.ProjectFactory)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectMergeRule","l":"ProjectMergeRule(ProjectMergeRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.ProjectMergeRule.Config)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"projectMultiJoin(MultiJoin, Project)","u":"projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.core.Project)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectMultiJoinMergeRule","l":"ProjectMultiJoinMergeRule(Class<? extends Project>, RelBuilderFactory)","u":"%3Cinit%3E(java.lang.Class,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectMultiJoinMergeRule","l":"ProjectMultiJoinMergeRule(ProjectMultiJoinMergeRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.ProjectMultiJoinMergeRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectMultiJoinMergeRule","l":"ProjectMultiJoinMergeRule(RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.piglet","c":"PigRelSqlUdfs","l":"projectMultiset(Object...)","u":"projectMultiset(java.lang.Object...)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"projectNamed(Iterable<? extends RexNode>, Iterable<? extends String>, boolean)","u":"projectNamed(java.lang.Iterable,java.lang.Iterable,boolean)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"projectNamed(Iterable<? extends RexNode>, Iterable<? extends String>, boolean, Iterable<CorrelationId>)","u":"projectNamed(java.lang.Iterable,java.lang.Iterable,boolean,java.lang.Iterable)"},{"p":"org.apache.calcite.interpreter","c":"ProjectNode","l":"ProjectNode(Compiler, Project)","u":"%3Cinit%3E(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.Project)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectOverSumToSum0Rule","l":"ProjectOverSumToSum0Rule(ProjectOverSumToSum0Rule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.ProjectOverSumToSum0Rule.Config)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"projectPlus(Iterable<? extends RexNode>)","u":"projectPlus(java.lang.Iterable)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"projectPlus(RexNode...)","u":"projectPlus(org.apache.calcite.rex.RexNode...)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.ProjectReduceExpressionsRule","l":"ProjectReduceExpressionsRule(Class<? extends Project>, boolean, RelBuilderFactory)","u":"%3Cinit%3E(java.lang.Class,boolean,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.ProjectReduceExpressionsRule","l":"ProjectReduceExpressionsRule(Class<? extends Project>, RelBuilderFactory)","u":"%3Cinit%3E(java.lang.Class,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.ProjectReduceExpressionsRule","l":"ProjectReduceExpressionsRule(ReduceExpressionsRule.ProjectReduceExpressionsRule.ProjectReduceExpressionsRuleConfig)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.ReduceExpressionsRule.ProjectReduceExpressionsRule.ProjectReduceExpressionsRuleConfig)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectRemoveRule","l":"ProjectRemoveRule(ProjectRemoveRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.ProjectRemoveRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectRemoveRule","l":"ProjectRemoveRule(RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableTableScan","l":"projects"},{"p":"org.apache.calcite.rel.mutable","c":"MutableProject","l":"projects"},{"p":"org.apache.calcite.rel.rules","c":"ProjectSetOpTransposeRule","l":"ProjectSetOpTransposeRule(ProjectSetOpTransposeRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.ProjectSetOpTransposeRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectSetOpTransposeRule","l":"ProjectSetOpTransposeRule(PushProjector.ExprCondition, RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.PushProjector.ExprCondition,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rex","c":"RexProgram","l":"projectsIdentity(boolean)"},{"p":"org.apache.calcite.rex","c":"RexProgram","l":"projectsOnlyIdentity()"},{"p":"org.apache.calcite.rel.rules","c":"MeasureRules.ProjectSortMeasureRule","l":"ProjectSortMeasureRule(MeasureRules.ProjectSortMeasureRuleConfig)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.MeasureRules.ProjectSortMeasureRuleConfig)"},{"p":"org.apache.calcite.rel.core","c":"JoinRelType","l":"projectsRight()"},{"p":"org.apache.calcite.rel.rules","c":"ProjectTableScanRule","l":"ProjectTableScanRule(ProjectTableScanRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.ProjectTableScanRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectTableScanRule","l":"ProjectTableScanRule(RelOptRuleOperand, RelBuilderFactory, String)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.tools.RelBuilderFactory,java.lang.String)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectToCalcRule","l":"ProjectToCalcRule(ProjectToCalcRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.ProjectToCalcRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectToCalcRule","l":"ProjectToCalcRule(RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectToWindowRule.ProjectToLogicalProjectAndWindowRule","l":"ProjectToLogicalProjectAndWindowRule(ProjectToWindowRule.ProjectToLogicalProjectAndWindowRule.ProjectToLogicalProjectAndWindowRuleConfig)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.ProjectToWindowRule.ProjectToLogicalProjectAndWindowRule.ProjectToLogicalProjectAndWindowRuleConfig)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectToWindowRule.ProjectToLogicalProjectAndWindowRule","l":"ProjectToLogicalProjectAndWindowRule(RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinRule.ProjectToSemiJoinRule","l":"ProjectToSemiJoinRule(Class<Project>, Class<Join>, Class<Aggregate>, RelBuilderFactory, String)","u":"%3Cinit%3E(java.lang.Class,java.lang.Class,java.lang.Class,org.apache.calcite.tools.RelBuilderFactory,java.lang.String)"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinRule.ProjectToSemiJoinRule","l":"ProjectToSemiJoinRule(SemiJoinRule.ProjectToSemiJoinRule.ProjectToSemiJoinRuleConfig)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.SemiJoinRule.ProjectToSemiJoinRule.ProjectToSemiJoinRuleConfig)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectToWindowRule","l":"ProjectToWindowRule(ProjectToWindowRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.ProjectToWindowRule.Config)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"projectTypes(RelDataType, List<? extends Number>)","u":"projectTypes(org.apache.calcite.rel.type.RelDataType,java.util.List)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectWindowTransposeRule","l":"ProjectWindowTransposeRule(ProjectWindowTransposeRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.ProjectWindowTransposeRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectWindowTransposeRule","l":"ProjectWindowTransposeRule(RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"promoteToRowType(RelDataTypeFactory, RelDataType, String)","u":"promoteToRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,java.lang.String)"},{"p":"org.apache.calcite.plan","c":"RelHintsPropagator","l":"propagate(RelNode, RelNode)","u":"propagate(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"propagateRelHints(RelNode, boolean)","u":"propagateRelHints(org.apache.calcite.rel.RelNode,boolean)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"propagateRelHints(RelNode, RelNode)","u":"propagateRelHints(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"property(Expression, Expressions.PropertyInfo)","u":"property(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expressions.PropertyInfo)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"property(Expression, Expressions.PropertyInfo, Expression...)","u":"property(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expressions.PropertyInfo,org.apache.calcite.linq4j.tree.Expression...)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"property(Expression, Expressions.PropertyInfo, Iterable<? extends Expression>)","u":"property(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expressions.PropertyInfo,java.lang.Iterable)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"property(Expression, Method)","u":"property(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"property(Expression, String)","u":"property(org.apache.calcite.linq4j.tree.Expression,java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"property(Expression, String, Expression...)","u":"property(org.apache.calcite.linq4j.tree.Expression,java.lang.String,org.apache.calcite.linq4j.tree.Expression...)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"property(Expression, Type, String)","u":"property(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"Hook","l":"property(V)"},{"p":"org.apache.calcite.runtime","c":"Hook","l":"propertyJ(V)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"propertyOrField(Expression, String)","u":"propertyOrField(org.apache.calcite.linq4j.tree.Expression,java.lang.String)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"proto(Context)","u":"proto(org.apache.calcite.plan.Context)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"proto(Object...)","u":"proto(java.lang.Object...)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeImpl","l":"proto(RelDataType)","u":"proto(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.schema","c":"Schemas","l":"proto(ScalarFunction)","u":"proto(org.apache.calcite.schema.ScalarFunction)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeImpl","l":"proto(SqlTypeName, boolean)","u":"proto(org.apache.calcite.sql.type.SqlTypeName,boolean)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeImpl","l":"proto(SqlTypeName, int, boolean)","u":"proto(org.apache.calcite.sql.type.SqlTypeName,int,boolean)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeImpl","l":"proto(SqlTypeName, int, int, boolean)","u":"proto(org.apache.calcite.sql.type.SqlTypeName,int,int,boolean)"},{"p":"org.apache.calcite.schema","c":"Schemas","l":"proto(Table)","u":"proto(org.apache.calcite.schema.Table)"},{"p":"org.apache.calcite.util","c":"Source","l":"protocol()"},{"p":"org.apache.calcite.adapter.csv","c":"CsvTable","l":"protoRowType"},{"p":"org.apache.calcite.adapter.file","c":"CsvTable","l":"protoRowType"},{"p":"org.apache.calcite.test.schemata.orderstream","c":"BaseOrderStreamTable","l":"protoRowType"},{"p":"org.apache.calcite.sql.type","c":"ExplicitReturnTypeInference","l":"protoType"},{"p":"org.apache.calcite.util","c":"Glossary","l":"PROTOTYPE_PATTERN"},{"p":"org.apache.calcite.chinook","c":"CalciteConnectionProvider","l":"provideConnectionInfo()"},{"p":"org.apache.calcite.linq4j","c":"BaseQueryable","l":"provider"},{"p":"org.apache.calcite.materialize","c":"DelegatingLatticeStatisticProvider","l":"provider"},{"p":"org.apache.calcite.util","c":"Glossary","l":"PROXY_PATTERN"},{"p":"org.apache.calcite.rel.metadata","c":"ProxyingMetadataHandlerProvider","l":"ProxyingMetadataHandlerProvider(RelMetadataProvider)","u":"%3Cinit%3E(org.apache.calcite.rel.metadata.RelMetadataProvider)"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"prune(RelNode)","u":"prune(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan","c":"RelOptPlanner","l":"prune(RelNode)","u":"prune(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"prune(RelNode)","u":"prune(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules.PruneEmptyRule","l":"PruneEmptyRule(PruneEmptyRules.PruneEmptyRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.PruneEmptyRules.PruneEmptyRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules","l":"PruneEmptyRules()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql","c":"TableCharacteristic","l":"pruneIfEmpty"},{"p":"org.apache.calcite.sql","c":"TableCharacteristic.Builder","l":"pruneIfEmpty()"},{"p":"org.apache.calcite.tools","c":"RelBuilder.Config","l":"pruneInputOfAggregate()"},{"p":"org.apache.calcite.rel.rules","c":"SingleValuesOptimizationRules.PruneSingleValueRule","l":"PruneSingleValueRule(SingleValuesOptimizationRules.PruneSingleValueRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.SingleValuesOptimizationRules.PruneSingleValueRule.Config)"},{"p":"org.apache.calcite.test.schemata.tpch","c":"TpchSchema","l":"ps(int, int)","u":"ps(int,int)"},{"p":"org.apache.calcite.test.schemata.tpch","c":"TpchSchema.PartSupp","l":"psPartkey"},{"p":"org.apache.calcite.test.schemata.tpch","c":"TpchSchema.PartSupp","l":"psSupplyCost"},{"p":"org.apache.calcite.test.schemata.bookstore","c":"BookstoreSchema.Book","l":"publishYear"},{"p":"org.apache.calcite.adapter.redis","c":"RedisDataType","l":"PUBSUB"},{"p":"org.apache.calcite.plan","c":"RelOptPredicateList","l":"pulledUpPredicates"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"pullFactors(RexBuilder, RexNode)","u":"pullFactors(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.Dummy","l":"push(CalcitePrepare.Context)","u":"push(org.apache.calcite.jdbc.CalcitePrepare.Context)"},{"p":"org.apache.calcite.util","c":"Stacks","l":"push(List<T>, T)","u":"push(java.util.List,T)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"push(RelNode)","u":"push(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.util","c":"TryThreadLocal","l":"push(T)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"pushAll(Iterable<? extends RelNode>)","u":"pushAll(java.lang.Iterable)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"pushDownJoinConditions(Join)","u":"pushDownJoinConditions(org.apache.calcite.rel.core.Join)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"pushDownJoinConditions(Join, RelBuilder)","u":"pushDownJoinConditions(org.apache.calcite.rel.core.Join,org.apache.calcite.tools.RelBuilder)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"pushDownJoinConditions(Join, RelFactories.ProjectFactory)","u":"pushDownJoinConditions(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.core.RelFactories.ProjectFactory)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"pushFilterPastProject(RexNode, Project)","u":"pushFilterPastProject(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.Project)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewAggregateRule","l":"pushFilterToOriginalViewPlan(RelBuilder, RelNode, RelNode, RexNode)","u":"pushFilterToOriginalViewPlan(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewJoinRule","l":"pushFilterToOriginalViewPlan(RelBuilder, RelNode, RelNode, RexNode)","u":"pushFilterToOriginalViewPlan(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule","l":"pushFilterToOriginalViewPlan(RelBuilder, RelNode, RelNode, RexNode)","u":"pushFilterToOriginalViewPlan(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"pushFunctionCall()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"pushFunctionCall()"},{"p":"org.apache.calcite.tools","c":"RelBuilder.Config","l":"pushJoinCondition()"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"pushPastCalc(RexNode, Calc)","u":"pushPastCalc(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.Calc)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"pushPastProject(List<? extends RexNode>, Project)","u":"pushPastProject(java.util.List,org.apache.calcite.rel.core.Project)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"pushPastProject(RexNode, Project)","u":"pushPastProject(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.Project)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"pushPastProjectUnlessBloat(List<? extends RexNode>, Project, int)","u":"pushPastProjectUnlessBloat(java.util.List,org.apache.calcite.rel.core.Project,int)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"pushPastProjectUnlessBloat(RexNode, Project, int)","u":"pushPastProjectUnlessBloat(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.Project,int)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule","l":"pushPredicateIntoCase(RexCall)","u":"pushPredicateIntoCase(org.apache.calcite.rex.RexCall)"},{"p":"org.apache.calcite.rel.rules","c":"PushProjector","l":"PushProjector(Project, RexNode, RelNode, PushProjector.ExprCondition, RelBuilder)","u":"%3Cinit%3E(org.apache.calcite.rel.core.Project,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rules.PushProjector.ExprCondition,org.apache.calcite.tools.RelBuilder)"},{"p":"org.apache.calcite.util","c":"CompositeMap","l":"put(K, V)","u":"put(K,V)"},{"p":"org.apache.calcite.util","c":"JsonBuilder","l":"put(Map<String, Object>, String, Object)","u":"put(java.util.Map,java.lang.String,java.lang.Object)"},{"p":"org.apache.calcite.util","c":"NameMap","l":"put(String, V)","u":"put(java.lang.String,V)"},{"p":"org.apache.calcite.util","c":"NameMultimap","l":"put(String, V)","u":"put(java.lang.String,V)"},{"p":"org.apache.calcite.util","c":"CompositeMap","l":"putAll(Map<? extends K, ? extends V>)","u":"putAll(java.util.Map)"},{"p":"org.apache.calcite.util","c":"JsonBuilder","l":"putIf(Map<String, Object>, String, Object)","u":"putIf(java.util.Map,java.lang.String,java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"SortedMultiMap","l":"putMulti(K, V)","u":"putMulti(K,V)"},{"p":"org.apache.calcite.rel.externalize","c":"RelWriterImpl","l":"pw"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"Q"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Result","l":"qualifiedContext()"},{"p":"org.apache.calcite.plan","c":"RelOptMaterialization","l":"qualifiedTableName"},{"p":"org.apache.calcite.sql","c":"SqlSelect","l":"QUALIFY_OPERAND"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"qualifyExpressionMustContainWindowFunction(String)","u":"qualifyExpressionMustContainWindowFunction(java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingScope","l":"qualifyUsingAlias(SqlSelect, SqlIdentifier)","u":"qualifyUsingAlias(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"QUANTIFY_OPERATORS"},{"p":"org.apache.calcite.adapter.druid","c":"Granularity.Type","l":"QUARTER"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"QUARTER"},{"p":"org.apache.calcite.test","c":"SqlOperatorTest","l":"QUARTER_VARIANTS"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor.UnifyRuleCall","l":"query"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateMaterializedView","l":"query"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateTable","l":"query"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateView","l":"query"},{"p":"org.apache.calcite.sql","c":"SqlOrderBy","l":"query"},{"p":"org.apache.calcite.sql","c":"SqlPivot","l":"query"},{"p":"org.apache.calcite.sql","c":"SqlUnpivot","l":"query"},{"p":"org.apache.calcite.sql","c":"SqlWithItem","l":"query"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"QUERY"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule.MatchModality","l":"QUERY_PARTIAL"},{"p":"org.apache.calcite.runtime","c":"Hook","l":"QUERY_PLAN"},{"p":"org.apache.calcite.materialize","c":"MaterializationService","l":"query(CalciteSchema)","u":"query(org.apache.calcite.jdbc.CalciteSchema)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraTable","l":"query(CqlSession)","u":"query(com.datastax.oss.driver.api.core.CqlSession)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraTable","l":"query(CqlSession, List<Map.Entry<String, Class>>, List<Map.Entry<String, String>>, List<String>, List<String>, Integer, Integer)","u":"query(com.datastax.oss.driver.api.core.CqlSession,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer,java.lang.Integer)"},{"p":"org.apache.calcite.adapter.arrow","c":"ArrowTable","l":"query(DataContext, ImmutableIntList, List<String>)","u":"query(org.apache.calcite.DataContext,org.apache.calcite.util.ImmutableIntList,java.util.List)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeTable","l":"query(GemFireCache, List<Map.Entry<String, Class>>, List<Map.Entry<String, String>>, List<Map.Entry<String, String>>, List<String>, List<String>, List<String>, Long)","u":"query(org.apache.geode.cache.GemFireCache,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Long)"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor.AbstractUnifyRule","l":"query(int)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbTable.InnodbQueryable","l":"query(List<Map.Entry<String, Class>>, List<Map.Entry<String, String>>, IndexCondition, Boolean)","u":"query(java.util.List,java.util.List,org.apache.calcite.adapter.innodb.IndexCondition,java.lang.Boolean)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeTable.GeodeQueryable","l":"query(List<Map.Entry<String, Class>>, List<Map.Entry<String, String>>, List<Map.Entry<String, String>>, List<String>, List<String>, List<String>, Long)","u":"query(java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Long)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraTable.CassandraQueryable","l":"query(List<Map.Entry<String, Class>>, List<Map.Entry<String, String>>, List<String>, List<String>, Integer, Integer)","u":"query(java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer,java.lang.Integer)"},{"p":"org.apache.calcite.rel.metadata","c":"MetadataFactory","l":"query(RelNode, RelMetadataQuery, Class<M>)","u":"query(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery,java.lang.Class)"},{"p":"org.apache.calcite.rel.metadata","c":"MetadataFactoryImpl","l":"query(RelNode, RelMetadataQuery, Class<M>)","u":"query(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery,java.lang.Class)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertThat","l":"query(String)","u":"query(java.lang.String)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbTable","l":"query(TableReaderFactory)","u":"query(com.alibaba.innodb.java.reader.TableReaderFactory)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbTable","l":"query(TableReaderFactory, List<Map.Entry<String, Class>>, List<Map.Entry<String, String>>, IndexCondition, Boolean)","u":"query(com.alibaba.innodb.java.reader.TableReaderFactory,java.util.List,java.util.List,org.apache.calcite.adapter.innodb.IndexCondition,java.lang.Boolean)"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.Query","l":"queryable"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"QUERYABLE_AS_ENUMERABLE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"QUERYABLE_SELECT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"QUERYABLE_TABLE_AS_QUERYABLE"},{"p":"org.apache.calcite.schema","c":"Schemas","l":"queryable(DataContext, Class<E>, Iterable<? extends String>)","u":"queryable(org.apache.calcite.DataContext,java.lang.Class,java.lang.Iterable)"},{"p":"org.apache.calcite.schema","c":"Schemas","l":"queryable(DataContext, Class<E>, String...)","u":"queryable(org.apache.calcite.DataContext,java.lang.Class,java.lang.String...)"},{"p":"org.apache.calcite.schema","c":"Schemas","l":"queryable(DataContext, SchemaPlus, Class<E>, String)","u":"queryable(org.apache.calcite.DataContext,org.apache.calcite.schema.SchemaPlus,java.lang.Class,java.lang.String)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"QueryableDefaults()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.linq4j","c":"QueryProviderImpl.QueryableImpl","l":"QueryableImpl(QueryProviderImpl, Type, Expression)","u":"%3Cinit%3E(org.apache.calcite.linq4j.QueryProviderImpl,java.lang.reflect.Type,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"QueryableRecorder()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertQuery","l":"queryContains(Consumer<List>)","u":"queryContains(java.util.function.Consumer)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertQuery","l":"queryContains(Function<List, Void>)","u":"queryContains(com.google.common.base.Function)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"queryExecutionTimeoutReached(String, String)","u":"queryExecutionTimeoutReached(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor.UnifyRule","l":"queryOperand"},{"p":"org.apache.calcite.schema.impl","c":"AbstractTableQueryable","l":"queryProvider"},{"p":"org.apache.calcite.linq4j","c":"QueryProviderImpl","l":"QueryProviderImpl()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.plan","c":"RelOptMaterialization","l":"queryRel"},{"p":"org.apache.calcite.sql.validate.implicit","c":"TypeCoercion","l":"querySourceCoercion(SqlValidatorScope, RelDataType, RelDataType, SqlNode)","u":"querySourceCoercion(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate.implicit","c":"TypeCoercionImpl","l":"querySourceCoercion(SqlValidatorScope, RelDataType, RelDataType, SqlNode)","u":"querySourceCoercion(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery","l":"querySpec"},{"p":"org.apache.calcite.statistic","c":"QuerySqlStatisticProvider","l":"QuerySqlStatisticProvider(Consumer<String>)","u":"%3Cinit%3E(java.util.function.Consumer)"},{"p":"org.apache.calcite.test","c":"QuidemTest.QuidemConnectionFactory","l":"QuidemConnectionFactory()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.test","c":"QuidemTest","l":"QuidemTest()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"Quote"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"quote(Expression)","u":"quote(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"quoteAllIdentifiers()"},{"p":"org.apache.calcite.config","c":"CalciteConnectionProperty","l":"QUOTED_CASING"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserPos","l":"QUOTED_ZERO"},{"p":"org.apache.calcite.config","c":"Lex","l":"quotedCasing"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfig","l":"quotedCasing()"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfigImpl","l":"quotedCasing()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser.Config","l":"quotedCasing()"},{"p":"org.apache.calcite.sql","c":"SqlDialect.Context","l":"quotedCasing()"},{"p":"org.apache.calcite.util","c":"TestUtil","l":"quoteForJava(String)","u":"quoteForJava(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"quoteIdentifier(String)","u":"quoteIdentifier(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"quoteIdentifier(StringBuilder, List<String>)","u":"quoteIdentifier(java.lang.StringBuilder,java.util.List)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"quoteIdentifier(StringBuilder, String)","u":"quoteIdentifier(java.lang.StringBuilder,java.lang.String)"},{"p":"org.apache.calcite.util","c":"TestUtil","l":"quotePattern(String)","u":"quotePattern(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"quoteStringLiteral(String)","u":"quoteStringLiteral(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"quoteStringLiteral(StringBuilder, String, String)","u":"quoteStringLiteral(java.lang.StringBuilder,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"quoteStringLiteralUnicode(StringBuilder, String)","u":"quoteStringLiteralUnicode(java.lang.StringBuilder,java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"quoteTimestampLiteral(Timestamp)","u":"quoteTimestampLiteral(java.sql.Timestamp)"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"QUOTIENT_FORCE_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"QUOTIENT_NULLABLE"},{"p":"org.apache.calcite.util","c":"Util","l":"quotientList(List<E>, int, int)","u":"quotientList(java.util.List,int,int)"},{"p":"org.apache.calcite.config","c":"Lex","l":"quoting"},{"p":"org.apache.calcite.config","c":"CalciteConnectionProperty","l":"QUOTING"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfig","l":"quoting()"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfigImpl","l":"quoting()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser.Config","l":"quoting()"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.Exists","l":"r"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"RADIANS"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"RADIANS"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"radians(BigDecimal)","u":"radians(java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"radians(double)"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.RampFunction","l":"RampFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"RAND"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"RAND"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"RAND_INTEGER"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"RAND_INTEGER"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"RAND_INTEGER_SEED"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"RAND_SEED"},{"p":"org.apache.calcite.runtime","c":"RandomFunction","l":"rand()"},{"p":"org.apache.calcite.runtime","c":"RandomFunction","l":"randInteger(int)"},{"p":"org.apache.calcite.runtime","c":"RandomFunction","l":"randIntegerSeed(int, int)","u":"randIntegerSeed(int,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"RANDOM"},{"p":"org.apache.calcite.rel","c":"RelDistribution.Type","l":"RANDOM_DISTRIBUTED"},{"p":"org.apache.calcite.rel","c":"RelDistributions","l":"RANDOM_DISTRIBUTED"},{"p":"org.apache.calcite.runtime","c":"RandomFunction","l":"RandomFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.runtime","c":"RandomFunction","l":"randSeed(int)"},{"p":"org.apache.calcite.rel","c":"RelDistribution.Type","l":"RANGE_DISTRIBUTED"},{"p":"org.apache.calcite.rel","c":"RelDistributions","l":"range(Collection<? extends Number>)","u":"range(java.util.Collection)"},{"p":"org.apache.calcite.util","c":"BitSets","l":"range(int)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"range(int)"},{"p":"org.apache.calcite.util","c":"Util","l":"range(int)"},{"p":"org.apache.calcite.util","c":"BitSets","l":"range(int, int)","u":"range(int,int)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"range(int, int)","u":"range(int,int)"},{"p":"org.apache.calcite.util","c":"ImmutableIntList","l":"range(int, int)","u":"range(int,int)"},{"p":"org.apache.calcite.util","c":"Util","l":"range(int, int)","u":"range(int,int)"},{"p":"org.apache.calcite.util","c":"NameMap","l":"range(String, boolean)","u":"range(java.lang.String,boolean)"},{"p":"org.apache.calcite.util","c":"NameMultimap","l":"range(String, boolean)","u":"range(java.lang.String,boolean)"},{"p":"org.apache.calcite.util","c":"NameSet","l":"range(String, boolean)","u":"range(java.lang.String,boolean)"},{"p":"org.apache.calcite.tools","c":"RelBuilder.OverCall","l":"rangeBetween(RexWindowBound, RexWindowBound)","u":"rangeBetween(org.apache.calcite.rex.RexWindowBound,org.apache.calcite.rex.RexWindowBound)"},{"p":"org.apache.calcite.runtime","c":"SpaceFillingCurve2D.RangeComputeHints","l":"RangeComputeHints()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.tools","c":"RelBuilder.OverCall","l":"rangeFrom(RexWindowBound)","u":"rangeFrom(org.apache.calcite.rex.RexWindowBound)"},{"p":"org.apache.calcite.rel.externalize","c":"RelJson","l":"rangeFromJson(List<String>)","u":"rangeFromJson(java.util.List)"},{"p":"org.apache.calcite.rel.externalize","c":"RelJson","l":"rangeFromJson(List<String>, RelDataType)","u":"rangeFromJson(java.util.List,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.util","c":"Sarg","l":"rangeSet"},{"p":"org.apache.calcite.util","c":"RangeSets","l":"rangeSetAll()"},{"p":"org.apache.calcite.rel.externalize","c":"RelJson","l":"rangeSetFromJson(List<List<String>>)","u":"rangeSetFromJson(java.util.List)"},{"p":"org.apache.calcite.rel.externalize","c":"RelJson","l":"rangeSetFromJson(List<List<String>>, RelDataType)","u":"rangeSetFromJson(java.util.List,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.tools","c":"RelBuilder.OverCall","l":"rangeTo(RexWindowBound)","u":"rangeTo(org.apache.calcite.rex.RexWindowBound)"},{"p":"org.apache.calcite.tools","c":"RelBuilder.OverCall","l":"rangeUnbounded()"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"RANK"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"RANK"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"RANK"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"rankWithFrame()"},{"p":"org.apache.calcite.adapter.redis","c":"RedisDataFormat","l":"RAW"},{"p":"org.apache.calcite.chinook","c":"ConnectionFactory.DatabaseWrapper","l":"RAW"},{"p":"org.apache.calcite.chinook","c":"ChinookAvaticaServer.RawChinookMetaFactory","l":"RawChinookMetaFactory()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.spark","c":"SparkMethod","l":"RDD_FLAT_MAP"},{"p":"org.apache.calcite.util.graph","c":"DepthFirstIterator","l":"reachable(Collection<V>, DirectedGraph<V, E>, V)","u":"reachable(java.util.Collection,org.apache.calcite.util.graph.DirectedGraph,V)"},{"p":"org.apache.calcite.util.graph","c":"BreadthFirstIterator","l":"reachable(Set<V>, DirectedGraph<V, E>, V)","u":"reachable(java.util.Set,org.apache.calcite.util.graph.DirectedGraph,V)"},{"p":"org.apache.calcite.plan","c":"TableAccessMap.Mode","l":"READ_ACCESS"},{"p":"org.apache.calcite.sql.babel.postgres","c":"TransactionMode","l":"READ_ONLY"},{"p":"org.apache.calcite.sql","c":"SqlAccessType","l":"READ_ONLY"},{"p":"org.apache.calcite.sql.babel.postgres","c":"TransactionMode","l":"READ_WRITE"},{"p":"org.apache.calcite.adapter.redis","c":"RedisDataProcess","l":"read()"},{"p":"org.apache.calcite.rel.externalize","c":"RelJsonReader","l":"read(String)","u":"read(java.lang.String)"},{"p":"org.apache.calcite.util","c":"Util","l":"readAllAsString(Reader)","u":"readAllAsString(java.io.Reader)"},{"p":"org.apache.calcite.util","c":"Source","l":"reader()"},{"p":"org.apache.calcite.util","c":"Util","l":"reader(File)","u":"reader(java.io.File)"},{"p":"org.apache.calcite.util","c":"Util","l":"reader(InputStream)","u":"reader(java.io.InputStream)"},{"p":"org.apache.calcite.rel.externalize","c":"RelJson","l":"readExpression(RelOptCluster, RelJson.InputTranslator, Map<String, Object>)","u":"readExpression(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.externalize.RelJson.InputTranslator,java.util.Map)"},{"p":"org.apache.calcite.rel.externalize","c":"RelJsonReader","l":"readRex(RelOptCluster, String)","u":"readRex(org.apache.calcite.plan.RelOptCluster,java.lang.String)"},{"p":"org.apache.calcite.rel.core","c":"Spool","l":"readType"},{"p":"org.apache.calcite.rel.externalize","c":"RelJsonReader","l":"readType(RelDataTypeFactory, String)","u":"readType(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String)"},{"p":"org.apache.calcite.plan","c":"TableAccessMap.Mode","l":"READWRITE_ACCESS"},{"p":"org.apache.calcite.runtime.rtti","c":"RuntimeTypeInformation.RuntimeSqlTypeName","l":"REAL"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"REAL"},{"p":"org.apache.calcite.prepare","c":"RelOptTableImpl","l":"realOrdinal(RelOptTable, int)","u":"realOrdinal(org.apache.calcite.plan.RelOptTable,int)"},{"p":"org.apache.calcite.prepare","c":"RelOptTableImpl","l":"realRowType(RelOptTable)","u":"realRowType(org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"rebuild()"},{"p":"org.apache.calcite.interpreter","c":"Source","l":"receive()"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"recomputeDigest()"},{"p":"org.apache.calcite.rel","c":"RelNode","l":"recomputeDigest()"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"RECORD_COLLECTION"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"RECORD_TO_SCALAR"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"RECORD_TO_SCALAR"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysType","l":"record(List<Expression>)","u":"record(java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysTypeImpl","l":"record(List<Expression>)","u":"record(java.util.List)"},{"p":"org.apache.calcite.util","c":"Benchmark.Statistician","l":"record(long)"},{"p":"org.apache.calcite.adapter.enumerable","c":"JavaRowFormat","l":"record(Type, List<Expression>)","u":"record(java.lang.reflect.Type,java.util.List)"},{"p":"org.apache.calcite.runtime","c":"RecordEnumeratorCursor","l":"RecordEnumeratorCursor(Enumerator<E>, Class<E>)","u":"%3Cinit%3E(org.apache.calcite.linq4j.Enumerator,java.lang.Class)"},{"p":"org.apache.calcite.sql","c":"SqlWithItem","l":"recursive"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"recursiveWithMustHaveTwoChildUnionSetOp()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"recursiveWithMustHaveUnionSetOp()"},{"p":"org.apache.calcite.adapter.redis","c":"RedisConfig","l":"RedisConfig(String, int, int, String)","u":"%3Cinit%3E(java.lang.String,int,int,java.lang.String)"},{"p":"org.apache.calcite.adapter.redis","c":"RedisDataProcess","l":"RedisDataProcess(Jedis, RedisTableFieldInfo)","u":"%3Cinit%3E(redis.clients.jedis.Jedis,org.apache.calcite.adapter.redis.RedisTableFieldInfo)"},{"p":"org.apache.calcite.adapter.redis","c":"RedisJedisManager","l":"RedisJedisManager(String, int, int, String)","u":"%3Cinit%3E(java.lang.String,int,int,java.lang.String)"},{"p":"org.apache.calcite.adapter.redis","c":"RedisSchemaFactory","l":"RedisSchemaFactory()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.redis","c":"RedisTable","l":"RedisTable(RedisSchema, String, RelProtoDataType, Map<String, Object>, String, RedisConfig)","u":"%3Cinit%3E(org.apache.calcite.adapter.redis.RedisSchema,java.lang.String,org.apache.calcite.rel.type.RelProtoDataType,java.util.Map,java.lang.String,org.apache.calcite.adapter.redis.RedisConfig)"},{"p":"org.apache.calcite.adapter.redis","c":"RedisTableFieldInfo","l":"RedisTableFieldInfo()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibrary","l":"REDSHIFT"},{"p":"org.apache.calcite.sql","c":"SqlDialect.DatabaseProduct","l":"REDSHIFT"},{"p":"org.apache.calcite.sql.dialect","c":"RedshiftSqlDialect","l":"RedshiftSqlDialect(SqlDialect.Context)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect.Context)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"reduce(Expression)","u":"reduce(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.rex","c":"RexExecutable","l":"reduce(RexBuilder, List<RexNode>, List<RexNode>)","u":"reduce(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexExecutor","l":"reduce(RexBuilder, List<RexNode>, List<RexNode>)","u":"reduce(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexExecutorImpl","l":"reduce(RexBuilder, List<RexNode>, List<RexNode>)","u":"reduce(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"reduceAndCheck(Expression)","u":"reduceAndCheck(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceDecimalsRule","l":"ReduceDecimalsRule(ReduceDecimalsRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.ReduceDecimalsRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceDecimalsRule","l":"ReduceDecimalsRule(RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.sql.fun","c":"SqlBetweenOperator","l":"reduceExpr(int, SqlSpecialOperator.TokenSequence)","u":"reduceExpr(int,org.apache.calcite.sql.SqlSpecialOperator.TokenSequence)"},{"p":"org.apache.calcite.sql.fun","c":"SqlDotOperator","l":"reduceExpr(int, SqlSpecialOperator.TokenSequence)","u":"reduceExpr(int,org.apache.calcite.sql.SqlSpecialOperator.TokenSequence)"},{"p":"org.apache.calcite.sql.fun","c":"SqlItemOperator","l":"reduceExpr(int, SqlSpecialOperator.TokenSequence)","u":"reduceExpr(int,org.apache.calcite.sql.SqlSpecialOperator.TokenSequence)"},{"p":"org.apache.calcite.sql.fun","c":"SqlLikeOperator","l":"reduceExpr(int, SqlSpecialOperator.TokenSequence)","u":"reduceExpr(int,org.apache.calcite.sql.SqlSpecialOperator.TokenSequence)"},{"p":"org.apache.calcite.sql","c":"SqlSpecialOperator","l":"reduceExpr(int, SqlSpecialOperator.TokenSequence)","u":"reduceExpr(int,org.apache.calcite.sql.SqlSpecialOperator.TokenSequence)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule","l":"reduceExpressions(RelNode, List<RexNode>, RelOptPredicateList)","u":"reduceExpressions(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule","l":"reduceExpressions(RelNode, List<RexNode>, RelOptPredicateList, boolean)","u":"reduceExpressions(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList,boolean)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule","l":"reduceExpressions(RelNode, List<RexNode>, RelOptPredicateList, boolean, boolean, boolean)","u":"reduceExpressions(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList,boolean,boolean,boolean)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule","l":"reduceExpressionsInternal(RelNode, RexSimplify, RexUnknownAs, List<RexNode>, RelOptPredicateList, boolean)","u":"reduceExpressionsInternal(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rex.RexUnknownAs,java.util.List,org.apache.calcite.plan.RelOptPredicateList,boolean)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule","l":"ReduceExpressionsRule(C)","u":"%3Cinit%3E(C)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"reduceExtensions(Expression)","u":"reduceExtensions(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.sql","c":"SqlSpecialOperator.ReduceResult","l":"ReduceResult(int, int, SqlNode)","u":"%3Cinit%3E(int,int,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.type","c":"ExtraSqlTypes","l":"REF_CURSOR"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"ref(int, RelDataType)","u":"ref(int,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"referenceEqual(Expression, Expression)","u":"referenceEqual(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"referenceNotEqual(Expression, Expression)","u":"referenceNotEqual(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"referentialConstraints"},{"p":"org.apache.calcite.test","c":"DiffTestCase","l":"refFile"},{"p":"org.apache.calcite.linq4j.tree","c":"ReflectedPseudoField","l":"ReflectedPseudoField(Field)","u":"%3Cinit%3E(java.lang.reflect.Field)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.SchemaSpec","l":"REFLECTIVE_FOODMART"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"REFLECTIVE_SCHEMA_GET_TARGET"},{"p":"org.apache.calcite.adapter.enumerable","c":"ReflectiveCallNotNullImplementor","l":"ReflectiveCallNotNullImplementor(Method)","u":"%3Cinit%3E(java.lang.reflect.Method)"},{"p":"org.apache.calcite.sql2rel","c":"ReflectiveConvertletTable","l":"ReflectiveConvertletTable()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.schema.impl","c":"ReflectiveFunctionBase","l":"ReflectiveFunctionBase(Method)","u":"%3Cinit%3E(java.lang.reflect.Method)"},{"p":"org.apache.calcite.rel.metadata","c":"ReflectiveRelMetadataProvider","l":"ReflectiveRelMetadataProvider(ConcurrentMap<Class<RelNode>, UnboundMetadata>, Class<? extends Metadata>, Multimap<Method, MetadataHandler<?>>, Class<? extends MetadataHandler<?>>)","u":"%3Cinit%3E(java.util.concurrent.ConcurrentMap,java.lang.Class,com.google.common.collect.Multimap,java.lang.Class)"},{"p":"org.apache.calcite.adapter.java","c":"ReflectiveSchema","l":"ReflectiveSchema(Object)","u":"%3Cinit%3E(java.lang.Object)"},{"p":"org.apache.calcite.test","c":"ReflectiveSchemaWithoutRowCount","l":"ReflectiveSchemaWithoutRowCount(Object)","u":"%3Cinit%3E(java.lang.Object)"},{"p":"org.apache.calcite.rel.metadata","c":"ReflectiveRelMetadataProvider","l":"reflectiveSource(MetadataHandler, Method...)","u":"reflectiveSource(org.apache.calcite.rel.metadata.MetadataHandler,java.lang.reflect.Method...)"},{"p":"org.apache.calcite.rel.metadata","c":"ReflectiveRelMetadataProvider","l":"reflectiveSource(MetadataHandler<? extends M>, Class<? extends MetadataHandler<M>>)","u":"reflectiveSource(org.apache.calcite.rel.metadata.MetadataHandler,java.lang.Class)"},{"p":"org.apache.calcite.rel.metadata","c":"ReflectiveRelMetadataProvider","l":"reflectiveSource(Method, MetadataHandler)","u":"reflectiveSource(java.lang.reflect.Method,org.apache.calcite.rel.metadata.MetadataHandler)"},{"p":"org.apache.calcite.sql.util","c":"ReflectiveSqlOperatorTable","l":"ReflectiveSqlOperatorTable()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util","c":"ReflectUtil","l":"ReflectUtil()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"refWindowWithFrame()"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.RegexFunction","l":"RegexFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"REGEXP"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"REGEXP_CONTAINS"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"REGEXP_CONTAINS"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"REGEXP_EXTRACT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"REGEXP_EXTRACT_ALL"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"REGEXP_EXTRACT_ALL"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"REGEXP_EXTRACT2"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"REGEXP_EXTRACT3"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"REGEXP_EXTRACT4"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"REGEXP_INSTR"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"REGEXP_INSTR2"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"REGEXP_INSTR3"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"REGEXP_INSTR4"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"REGEXP_INSTR5"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"REGEXP_LIKE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"REGEXP_LIKE3"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"REGEXP_REPLACE_2"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"REGEXP_REPLACE_3"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"REGEXP_REPLACE_4"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"REGEXP_REPLACE_5"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"REGEXP_REPLACE_5_ORACLE"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"REGEXP_REPLACE_6"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"REGEXP_REPLACE_BIG_QUERY_3"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"REGEXP_REPLACE_BIG_QUERY_3"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"REGEXP_REPLACE_PG_3"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"REGEXP_REPLACE_PG_3"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"REGEXP_REPLACE_PG_4"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"REGEXP_REPLACE_PG_4"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"REGEXP_REPLACE2"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"REGEXP_REPLACE3"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"REGEXP_REPLACE4"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"REGEXP_REPLACE5_MATCHTYPE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"REGEXP_REPLACE5_OCCURRENCE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"REGEXP_REPLACE6"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"REGEXP_SUBSTR"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.RegexFunction","l":"regexpContains(String, String)","u":"regexpContains(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.RegexFunction","l":"regexpExtract(String, String)","u":"regexpExtract(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.RegexFunction","l":"regexpExtract(String, String, int)","u":"regexpExtract(java.lang.String,java.lang.String,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.RegexFunction","l":"regexpExtract(String, String, int, int)","u":"regexpExtract(java.lang.String,java.lang.String,int,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.RegexFunction","l":"regexpExtractAll(String, String)","u":"regexpExtractAll(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.RegexFunction","l":"regexpInstr(String, String)","u":"regexpInstr(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.RegexFunction","l":"regexpInstr(String, String, int)","u":"regexpInstr(java.lang.String,java.lang.String,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.RegexFunction","l":"regexpInstr(String, String, int, int)","u":"regexpInstr(java.lang.String,java.lang.String,int,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.RegexFunction","l":"regexpInstr(String, String, int, int, int)","u":"regexpInstr(java.lang.String,java.lang.String,int,int,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.RegexFunction","l":"regexpLike(String, String, String)","u":"regexpLike(java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.util","c":"Unsafe","l":"regexpReplace(String, Pattern, String, int, int)","u":"regexpReplace(java.lang.String,java.util.regex.Pattern,java.lang.String,int,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.RegexFunction","l":"regexpReplace(String, String)","u":"regexpReplace(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.RegexFunction","l":"regexpReplace(String, String, String)","u":"regexpReplace(java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.RegexFunction","l":"regexpReplace(String, String, String, int)","u":"regexpReplace(java.lang.String,java.lang.String,java.lang.String,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.RegexFunction","l":"regexpReplace(String, String, String, int, int)","u":"regexpReplace(java.lang.String,java.lang.String,java.lang.String,int,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.RegexFunction","l":"regexpReplace(String, String, String, int, int, String)","u":"regexpReplace(java.lang.String,java.lang.String,java.lang.String,int,int,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.RegexFunction","l":"regexpReplace(String, String, String, int, String)","u":"regexpReplace(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.RegexFunction","l":"regexpReplaceNonDollarIndexed(String, String, String)","u":"regexpReplaceNonDollarIndexed(java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.RegexFunction","l":"regexpReplacePg(String, String, String)","u":"regexpReplacePg(java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.RegexFunction","l":"regexpReplacePg(String, String, String, String)","u":"regexpReplacePg(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeSchemaFactory","l":"REGIONS"},{"p":"org.apache.calcite.adapter.geode.simple","c":"GeodeSimpleSchemaFactory","l":"REGIONS"},{"p":"org.apache.calcite.sql","c":"SqlSplittableAggFunction.Registry","l":"register(E)"},{"p":"org.apache.calcite.rel.metadata","c":"JaninoRelMetadataProvider","l":"register(Iterable<Class<? extends RelNode>>)","u":"register(java.lang.Iterable)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Blackboard","l":"register(RelNode, JoinRelType)","u":"register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Blackboard","l":"register(RelNode, JoinRelType, List<RexNode>)","u":"register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)"},{"p":"org.apache.calcite.plan.hep","c":"HepPlanner","l":"register(RelNode, RelNode)","u":"register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan","c":"RelOptPlanner","l":"register(RelNode, RelNode)","u":"register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"register(RelNode, RelNode)","u":"register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.test","c":"MockRelOptPlanner","l":"register(RelNode, RelNode)","u":"register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraTableScan","l":"register(RelOptPlanner)","u":"register(org.apache.calcite.plan.RelOptPlanner)"},{"p":"org.apache.calcite.adapter.csv","c":"CsvTableScan","l":"register(RelOptPlanner)","u":"register(org.apache.calcite.plan.RelOptPlanner)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery","l":"register(RelOptPlanner)","u":"register(org.apache.calcite.plan.RelOptPlanner)"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchTableScan","l":"register(RelOptPlanner)","u":"register(org.apache.calcite.plan.RelOptPlanner)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableConvention","l":"register(RelOptPlanner)","u":"register(org.apache.calcite.plan.RelOptPlanner)"},{"p":"org.apache.calcite.adapter.file","c":"CsvTableScan","l":"register(RelOptPlanner)","u":"register(org.apache.calcite.plan.RelOptPlanner)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeTableScan","l":"register(RelOptPlanner)","u":"register(org.apache.calcite.plan.RelOptPlanner)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbTableScan","l":"register(RelOptPlanner)","u":"register(org.apache.calcite.plan.RelOptPlanner)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcConvention","l":"register(RelOptPlanner)","u":"register(org.apache.calcite.plan.RelOptPlanner)"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoTableScan","l":"register(RelOptPlanner)","u":"register(org.apache.calcite.plan.RelOptPlanner)"},{"p":"org.apache.calcite.adapter.pig","c":"PigTableScan","l":"register(RelOptPlanner)","u":"register(org.apache.calcite.plan.RelOptPlanner)"},{"p":"org.apache.calcite.adapter.splunk","c":"SplunkTableScan","l":"register(RelOptPlanner)","u":"register(org.apache.calcite.plan.RelOptPlanner)"},{"p":"org.apache.calcite.interpreter","c":"BindableConvention","l":"register(RelOptPlanner)","u":"register(org.apache.calcite.plan.RelOptPlanner)"},{"p":"org.apache.calcite.interpreter","c":"InterpretableConvention","l":"register(RelOptPlanner)","u":"register(org.apache.calcite.plan.RelOptPlanner)"},{"p":"org.apache.calcite.plan","c":"Convention.Impl","l":"register(RelOptPlanner)","u":"register(org.apache.calcite.plan.RelOptPlanner)"},{"p":"org.apache.calcite.plan","c":"RelTrait","l":"register(RelOptPlanner)","u":"register(org.apache.calcite.plan.RelOptPlanner)"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"register(RelOptPlanner)","u":"register(org.apache.calcite.plan.RelOptPlanner)"},{"p":"org.apache.calcite.rel","c":"RelCollationImpl","l":"register(RelOptPlanner)","u":"register(org.apache.calcite.plan.RelOptPlanner)"},{"p":"org.apache.calcite.rel","c":"RelNode","l":"register(RelOptPlanner)","u":"register(org.apache.calcite.plan.RelOptPlanner)"},{"p":"org.apache.calcite.sql.util","c":"ReflectiveSqlOperatorTable","l":"register(SqlOperator)","u":"register(org.apache.calcite.sql.SqlOperator)"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"registerAbstractRelationalRules()"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"registerAbstractRelationalRules(RelOptPlanner)","u":"registerAbstractRelationalRules(org.apache.calcite.plan.RelOptPlanner)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"registerAbstractRels(RelOptPlanner)","u":"registerAbstractRels(org.apache.calcite.plan.RelOptPlanner)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"registerAbstractRules(RelOptPlanner)","u":"registerAbstractRules(org.apache.calcite.plan.RelOptPlanner)"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"registerClass(RelNode)","u":"registerClass(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan","c":"RelOptPlanner","l":"registerClass(RelNode)","u":"registerClass(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan","c":"ConventionTraitDef","l":"registerConverterRule(RelOptPlanner, ConverterRule)","u":"registerConverterRule(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.convert.ConverterRule)"},{"p":"org.apache.calcite.plan","c":"RelTraitDef","l":"registerConverterRule(RelOptPlanner, ConverterRule)","u":"registerConverterRule(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.convert.ConverterRule)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRelImplementor","l":"registerCorrelVariable(String, ParameterExpression, BlockBuilder, PhysType)","u":"registerCorrelVariable(java.lang.String,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"registerDefaultRules(RelOptPlanner, boolean, boolean)","u":"registerDefaultRules(org.apache.calcite.plan.RelOptPlanner,boolean,boolean)"},{"p":"org.apache.calcite.rex","c":"RexSqlStandardConvertletTable","l":"registerEquivOp(SqlOperator)","u":"registerEquivOp(org.apache.calcite.sql.SqlOperator)"},{"p":"org.apache.calcite.rex","c":"RexProgramBuilder","l":"registerInput(RexNode)","u":"registerInput(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"registerMaterializations()"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"registerMetadataProviders(List<RelMetadataProvider>)","u":"registerMetadataProviders(java.util.List)"},{"p":"org.apache.calcite.plan.hep","c":"HepPlanner","l":"registerMetadataProviders(List<RelMetadataProvider>)","u":"registerMetadataProviders(java.util.List)"},{"p":"org.apache.calcite.plan","c":"RelOptPlanner","l":"registerMetadataProviders(List<RelMetadataProvider>)","u":"registerMetadataProviders(java.util.List)"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"registerMetadataProviders(List<RelMetadataProvider>)","u":"registerMetadataProviders(java.util.List)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"registerNamespace(SqlValidatorScope, String, SqlValidatorNamespace, boolean)","u":"registerNamespace(org.apache.calcite.sql.validate.SqlValidatorScope,java.lang.String,org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean)"},{"p":"org.apache.calcite.rex","c":"RexSqlReflectiveConvertletTable","l":"registerOp(SqlOperator, RexSqlConvertlet)","u":"registerOp(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rex.RexSqlConvertlet)"},{"p":"org.apache.calcite.sql2rel","c":"ReflectiveConvertletTable","l":"registerOp(SqlOperator, SqlRexConvertlet)","u":"registerOp(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql2rel.SqlRexConvertlet)"},{"p":"org.apache.calcite.rex","c":"RexProgramBuilder","l":"registerOutput(RexNode)","u":"registerOutput(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"registerQuery(SqlValidatorScope, SqlValidatorScope, SqlNode, SqlNode, String, boolean)","u":"registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"registerRolledUpColumn(String)","u":"registerRolledUpColumn(java.lang.String)"},{"p":"org.apache.calcite.adapter.spark","c":"SparkHandlerImpl","l":"registerRules(CalcitePrepare.SparkHandler.RuleSetBuilder)","u":"registerRules(org.apache.calcite.jdbc.CalcitePrepare.SparkHandler.RuleSetBuilder)"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.SparkHandler","l":"registerRules(CalcitePrepare.SparkHandler.RuleSetBuilder)","u":"registerRules(org.apache.calcite.jdbc.CalcitePrepare.SparkHandler.RuleSetBuilder)"},{"p":"org.apache.calcite.plan","c":"RelOptSchema","l":"registerRules(RelOptPlanner)","u":"registerRules(org.apache.calcite.plan.RelOptPlanner)"},{"p":"org.apache.calcite.prepare","c":"CalciteCatalogReader","l":"registerRules(RelOptPlanner)","u":"registerRules(org.apache.calcite.plan.RelOptPlanner)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader","l":"registerSchema(MockCatalogReader.MockSchema)","u":"registerSchema(org.apache.calcite.test.catalog.MockCatalogReader.MockSchema)"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"registerSchema(RelOptSchema)","u":"registerSchema(org.apache.calcite.plan.RelOptSchema)"},{"p":"org.apache.calcite.plan","c":"RelOptPlanner","l":"registerSchema(RelOptSchema)","u":"registerSchema(org.apache.calcite.plan.RelOptSchema)"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"registerSchema(RelOptSchema)","u":"registerSchema(org.apache.calcite.plan.RelOptSchema)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader","l":"registerTable(MockCatalogReader.MockTable)","u":"registerTable(org.apache.calcite.test.catalog.MockCatalogReader.MockTable)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader","l":"registerTablesWithRollUp(MockCatalogReader.MockSchema, Fixture)","u":"registerTablesWithRollUp(org.apache.calcite.test.catalog.MockCatalogReader.MockSchema,org.apache.calcite.test.catalog.Fixture)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader","l":"registerType(List<String>, RelProtoDataType)","u":"registerType(java.util.List,org.apache.calcite.rel.type.RelProtoDataType)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"REGR_COUNT"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"REGR_COUNT"},{"p":"org.apache.calcite.sql.fun","c":"SqlCovarAggFunction.Subtype","l":"REGR_SXX"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"REGR_SXX"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"REGR_SXX"},{"p":"org.apache.calcite.sql.fun","c":"SqlCovarAggFunction.Subtype","l":"REGR_SYY"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"REGR_SYY"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"REGR_SYY"},{"p":"org.apache.calcite.test","c":"CalciteAssert.Config","l":"REGULAR"},{"p":"org.apache.calcite.test","c":"CalciteAssert.Config","l":"REGULAR_PLUS_METADATA"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"REINTERPRET"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"REINTERPRET"},{"p":"org.apache.calcite.interpreter","c":"MatchNode","l":"rel"},{"p":"org.apache.calcite.interpreter","c":"Nodes.CoreCompiler","l":"rel"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.Query","l":"rel"},{"p":"org.apache.calcite.rel.mutable","c":"MutableValues","l":"rel"},{"p":"org.apache.calcite.rel","c":"RelRoot","l":"rel"},{"p":"org.apache.calcite.rex","c":"RexSubQuery","l":"rel"},{"p":"org.apache.calcite.runtime","c":"Hook","l":"REL_BUILDER_SIMPLIFY"},{"p":"org.apache.calcite.rel.metadata","c":"Metadata","l":"rel()"},{"p":"org.apache.calcite.plan","c":"RelOptRuleCall","l":"rel(int)"},{"p":"org.apache.calcite.prepare","c":"PlannerImpl","l":"rel(SqlNode)","u":"rel(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.tools","c":"Planner","l":"rel(SqlNode)","u":"rel(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlModality","l":"RELATION"},{"p":"org.apache.calcite.util","c":"Source","l":"relative(Source)","u":"relative(org.apache.calcite.util.Source)"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor","l":"relBuilder"},{"p":"org.apache.calcite.rel.rules","c":"CalcRelSplitter","l":"relBuilder"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator","l":"relBuilder"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"RelBuilder(Context, RelOptCluster, RelOptSchema)","u":"%3Cinit%3E(org.apache.calcite.plan.Context,org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelOptSchema)"},{"p":"org.apache.calcite.plan","c":"RelOptRule","l":"relBuilderFactory"},{"p":"org.apache.calcite.plan","c":"RelRule.Config","l":"relBuilderFactory()"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator","l":"relBuilderFactory()"},{"p":"org.apache.calcite.plan","c":"MulticastRelOptListener","l":"relChosen(RelOptListener.RelChosenEvent)","u":"relChosen(org.apache.calcite.plan.RelOptListener.RelChosenEvent)"},{"p":"org.apache.calcite.plan","c":"RelOptListener","l":"relChosen(RelOptListener.RelChosenEvent)","u":"relChosen(org.apache.calcite.plan.RelOptListener.RelChosenEvent)"},{"p":"org.apache.calcite.plan","c":"RuleEventLogger","l":"relChosen(RelOptListener.RelChosenEvent)","u":"relChosen(org.apache.calcite.plan.RelOptListener.RelChosenEvent)"},{"p":"org.apache.calcite.plan.visualizer","c":"RuleMatchVisualizer","l":"relChosen(RelOptListener.RelChosenEvent)","u":"relChosen(org.apache.calcite.plan.RelOptListener.RelChosenEvent)"},{"p":"org.apache.calcite.plan","c":"RelOptListener.RelChosenEvent","l":"RelChosenEvent(Object, RelNode)","u":"%3Cinit%3E(java.lang.Object,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.metadata","c":"MetadataHandlerProvider.NoHandler","l":"relClass"},{"p":"org.apache.calcite.rel","c":"RelCollationImpl","l":"RelCollationImpl(ImmutableList<RelFieldCollation>)","u":"%3Cinit%3E(com.google.common.collect.ImmutableList)"},{"p":"org.apache.calcite.rel.metadata","c":"RelColumnMapping","l":"RelColumnMapping(int, int, int, boolean)","u":"%3Cinit%3E(int,int,int,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"RelColumnOrigin","l":"RelColumnOrigin(RelOptTable, int, boolean)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptTable,int,boolean)"},{"p":"org.apache.calcite.tools","c":"RelConversionException","l":"RelConversionException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.tools","c":"RelConversionException","l":"RelConversionException(String, Throwable)","u":"%3Cinit%3E(java.lang.String,java.lang.Throwable)"},{"p":"org.apache.calcite.tools","c":"RelConversionException","l":"RelConversionException(Throwable)","u":"%3Cinit%3E(java.lang.Throwable)"},{"p":"org.apache.calcite.rel.type","c":"RelCrossType","l":"RelCrossType(List<RelDataType>, List<RelDataTypeField>)","u":"%3Cinit%3E(java.util.List,java.util.List)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactoryImpl","l":"RelDataTypeFactoryImpl(RelDataTypeSystem)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataTypeSystem)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFieldImpl","l":"RelDataTypeFieldImpl(String, int, RelDataType)","u":"%3Cinit%3E(java.lang.String,int,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeImpl","l":"RelDataTypeImpl()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeImpl","l":"RelDataTypeImpl(List<? extends RelDataTypeField>)","u":"%3Cinit%3E(java.util.List)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystemImpl","l":"RelDataTypeSystemImpl()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator","l":"RelDecorrelator(RelDecorrelator.CorelMap, Context, RelBuilder)","u":"%3Cinit%3E(org.apache.calcite.sql2rel.RelDecorrelator.CorelMap,org.apache.calcite.plan.Context,org.apache.calcite.tools.RelBuilder)"},{"p":"org.apache.calcite.plan","c":"MulticastRelOptListener","l":"relDiscarded(RelOptListener.RelDiscardedEvent)","u":"relDiscarded(org.apache.calcite.plan.RelOptListener.RelDiscardedEvent)"},{"p":"org.apache.calcite.plan","c":"RelOptListener","l":"relDiscarded(RelOptListener.RelDiscardedEvent)","u":"relDiscarded(org.apache.calcite.plan.RelOptListener.RelDiscardedEvent)"},{"p":"org.apache.calcite.plan","c":"RuleEventLogger","l":"relDiscarded(RelOptListener.RelDiscardedEvent)","u":"relDiscarded(org.apache.calcite.plan.RelOptListener.RelDiscardedEvent)"},{"p":"org.apache.calcite.plan.visualizer","c":"RuleMatchVisualizer","l":"relDiscarded(RelOptListener.RelDiscardedEvent)","u":"relDiscarded(org.apache.calcite.plan.RelOptListener.RelDiscardedEvent)"},{"p":"org.apache.calcite.plan","c":"RelOptListener.RelDiscardedEvent","l":"RelDiscardedEvent(Object, RelNode)","u":"%3Cinit%3E(java.lang.Object,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.externalize","c":"RelDotWriter","l":"RelDotWriter(PrintWriter, SqlExplainLevel, boolean)","u":"%3Cinit%3E(java.io.PrintWriter,org.apache.calcite.sql.SqlExplainLevel,boolean)"},{"p":"org.apache.calcite.rel.externalize","c":"RelDotWriter","l":"RelDotWriter(PrintWriter, SqlExplainLevel, boolean, RelDotWriter.WriteOption)","u":"%3Cinit%3E(java.io.PrintWriter,org.apache.calcite.sql.SqlExplainLevel,boolean,org.apache.calcite.rel.externalize.RelDotWriter.WriteOption)"},{"p":"org.apache.calcite.plan","c":"RelOptListener.RelEquivalenceEvent","l":"RelEquivalenceEvent(Object, RelNode, Object, boolean)","u":"%3Cinit%3E(java.lang.Object,org.apache.calcite.rel.RelNode,java.lang.Object,boolean)"},{"p":"org.apache.calcite.plan","c":"MulticastRelOptListener","l":"relEquivalenceFound(RelOptListener.RelEquivalenceEvent)","u":"relEquivalenceFound(org.apache.calcite.plan.RelOptListener.RelEquivalenceEvent)"},{"p":"org.apache.calcite.plan","c":"RelOptListener","l":"relEquivalenceFound(RelOptListener.RelEquivalenceEvent)","u":"relEquivalenceFound(org.apache.calcite.plan.RelOptListener.RelEquivalenceEvent)"},{"p":"org.apache.calcite.plan","c":"RuleEventLogger","l":"relEquivalenceFound(RelOptListener.RelEquivalenceEvent)","u":"relEquivalenceFound(org.apache.calcite.plan.RelOptListener.RelEquivalenceEvent)"},{"p":"org.apache.calcite.plan.visualizer","c":"RuleMatchVisualizer","l":"relEquivalenceFound(RelOptListener.RelEquivalenceEvent)","u":"relEquivalenceFound(org.apache.calcite.plan.RelOptListener.RelEquivalenceEvent)"},{"p":"org.apache.calcite.plan","c":"RelOptListener.RelEvent","l":"RelEvent(Object, RelNode)","u":"%3Cinit%3E(java.lang.Object,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel","c":"RelFieldCollation","l":"RelFieldCollation(int)","u":"%3Cinit%3E(int)"},{"p":"org.apache.calcite.rel","c":"RelFieldCollation","l":"RelFieldCollation(int, RelFieldCollation.Direction)","u":"%3Cinit%3E(int,org.apache.calcite.rel.RelFieldCollation.Direction)"},{"p":"org.apache.calcite.rel","c":"RelFieldCollation","l":"RelFieldCollation(int, RelFieldCollation.Direction, RelFieldCollation.NullDirection)","u":"%3Cinit%3E(int,org.apache.calcite.rel.RelFieldCollation.Direction,org.apache.calcite.rel.RelFieldCollation.NullDirection)"},{"p":"org.apache.calcite.sql2rel","c":"RelFieldTrimmer","l":"RelFieldTrimmer(SqlValidator, RelBuilder)","u":"%3Cinit%3E(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.tools.RelBuilder)"},{"p":"org.apache.calcite.sql2rel","c":"RelFieldTrimmer","l":"RelFieldTrimmer(SqlValidator, RelOptCluster, RelFactories.ProjectFactory, RelFactories.FilterFactory, RelFactories.JoinFactory, RelFactories.SortFactory, RelFactories.AggregateFactory, RelFactories.SetOpFactory)","u":"%3Cinit%3E(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.core.RelFactories.ProjectFactory,org.apache.calcite.rel.core.RelFactories.FilterFactory,org.apache.calcite.rel.core.RelFactories.JoinFactory,org.apache.calcite.rel.core.RelFactories.SortFactory,org.apache.calcite.rel.core.RelFactories.AggregateFactory,org.apache.calcite.rel.core.RelFactories.SetOpFactory)"},{"p":"org.apache.calcite.rel","c":"RelHomogeneousShuttle","l":"RelHomogeneousShuttle()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.test","c":"Matchers","l":"relIsValid()"},{"p":"org.apache.calcite.rel.externalize","c":"RelJsonWriter","l":"relJson"},{"p":"org.apache.calcite.rel.externalize","c":"RelJson","l":"RelJson(JsonBuilder)","u":"%3Cinit%3E(org.apache.calcite.util.JsonBuilder)"},{"p":"org.apache.calcite.rel.externalize","c":"RelJsonReader","l":"RelJsonReader(RelOptCluster, RelOptSchema, Schema)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelOptSchema,org.apache.calcite.schema.Schema)"},{"p":"org.apache.calcite.rel.externalize","c":"RelJsonReader","l":"RelJsonReader(RelOptCluster, RelOptSchema, Schema, UnaryOperator<RelJson>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelOptSchema,org.apache.calcite.schema.Schema,java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.rel.externalize","c":"RelJsonWriter","l":"RelJsonWriter()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.externalize","c":"RelJsonWriter","l":"RelJsonWriter(JsonBuilder)","u":"%3Cinit%3E(org.apache.calcite.util.JsonBuilder)"},{"p":"org.apache.calcite.rel.externalize","c":"RelJsonWriter","l":"RelJsonWriter(JsonBuilder, UnaryOperator<RelJson>)","u":"%3Cinit%3E(org.apache.calcite.util.JsonBuilder,java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.rel.externalize","c":"RelJsonWriter","l":"relList"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdAllPredicates","l":"RelMdAllPredicates()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdDistinctRowCount","l":"RelMdDistinctRowCount()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdExpressionLineage","l":"RelMdExpressionLineage()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdLowerBoundCost","l":"RelMdLowerBoundCost()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMaxRowCount","l":"RelMdMaxRowCount()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMeasure","l":"RelMdMeasure()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMemory","l":"RelMdMemory()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMinRowCount","l":"RelMdMinRowCount()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdNodeTypes","l":"RelMdNodeTypes()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdParallelism","l":"RelMdParallelism()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPredicates","l":"RelMdPredicates()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdRowCount","l":"RelMdRowCount()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdSelectivity","l":"RelMdSelectivity()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdSize","l":"RelMdSize()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdTableReferences","l":"RelMdTableReferences()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUniqueKeys","l":"RelMdUniqueKeys()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUniqueKeys","l":"RelMdUniqueKeys(int)","u":"%3Cinit%3E(int)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"RelMetadataQuery()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"RelMetadataQuery(MetadataHandlerProvider)","u":"%3Cinit%3E(org.apache.calcite.rel.metadata.MetadataHandlerProvider)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQueryBase","l":"RelMetadataQueryBase(JaninoRelMetadataProvider)","u":"%3Cinit%3E(org.apache.calcite.rel.metadata.JaninoRelMetadataProvider)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQueryBase","l":"RelMetadataQueryBase(MetadataHandlerProvider)","u":"%3Cinit%3E(org.apache.calcite.rel.metadata.MetadataHandlerProvider)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectCorrelateTransposeRule.RelNodesExprsHandler","l":"RelNodesExprsHandler(RexShuttle)","u":"%3Cinit%3E(org.apache.calcite.rex.RexShuttle)"},{"p":"org.apache.calcite.plan","c":"RelOptAbstractTable","l":"RelOptAbstractTable(RelOptSchema, String, RelDataType)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptSchema,java.lang.String,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.plan","c":"RelOptCostImpl","l":"RelOptCostImpl(double)","u":"%3Cinit%3E(double)"},{"p":"org.apache.calcite.plan","c":"RelOptLattice","l":"RelOptLattice(Lattice, RelOptTable)","u":"%3Cinit%3E(org.apache.calcite.materialize.Lattice,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.plan","c":"RelOptMaterialization","l":"RelOptMaterialization(RelNode, RelNode, RelOptTable, List<String>)","u":"%3Cinit%3E(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptTable,java.util.List)"},{"p":"org.apache.calcite.plan","c":"RelOptMaterializations","l":"RelOptMaterializations()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.plan","c":"RelOptQuery","l":"RelOptQuery(RelOptPlanner)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptPlanner)"},{"p":"org.apache.calcite.plan","c":"RelOptRule","l":"RelOptRule(RelOptRuleOperand)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptRuleOperand)"},{"p":"org.apache.calcite.plan","c":"RelOptRule","l":"RelOptRule(RelOptRuleOperand, RelBuilderFactory, String)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.tools.RelBuilderFactory,java.lang.String)"},{"p":"org.apache.calcite.plan","c":"RelOptRule","l":"RelOptRule(RelOptRuleOperand, String)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptRuleOperand,java.lang.String)"},{"p":"org.apache.calcite.plan","c":"RelOptRuleCall","l":"RelOptRuleCall(RelOptPlanner, RelOptRuleOperand, RelNode[], Map<RelNode, List<RelNode>>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.rel.RelNode[],java.util.Map)"},{"p":"org.apache.calcite.plan","c":"RelOptRuleCall","l":"RelOptRuleCall(RelOptPlanner, RelOptRuleOperand, RelNode[], Map<RelNode, List<RelNode>>, List<RelNode>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.rel.RelNode[],java.util.Map,java.util.List)"},{"p":"org.apache.calcite.plan","c":"RelOptRuleOperand","l":"RelOptRuleOperand(Class<R>, RelTrait, Predicate<? super R>, RelOptRuleOperandChildren)","u":"%3Cinit%3E(java.lang.Class,org.apache.calcite.plan.RelTrait,java.util.function.Predicate,org.apache.calcite.plan.RelOptRuleOperandChildren)"},{"p":"org.apache.calcite.plan","c":"RelOptRuleOperandChildren","l":"RelOptRuleOperandChildren(RelOptRuleOperandChildPolicy, List<RelOptRuleOperand>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptRuleOperandChildPolicy,java.util.List)"},{"p":"org.apache.calcite.plan","c":"RelOptSamplingParameters","l":"RelOptSamplingParameters(boolean, BigDecimal, boolean, int)","u":"%3Cinit%3E(boolean,java.math.BigDecimal,boolean,int)"},{"p":"org.apache.calcite.plan","c":"RelOptSamplingParameters","l":"RelOptSamplingParameters(boolean, float, boolean, int)","u":"%3Cinit%3E(boolean,float,boolean,int)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"relOptSchema"},{"p":"org.apache.calcite.materialize","c":"LatticeNode","l":"relOptTable()"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"RelOptUtil()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.type","c":"RelRecordType","l":"RelRecordType(List<RelDataTypeField>)","u":"%3Cinit%3E(java.util.List)"},{"p":"org.apache.calcite.rel.type","c":"RelRecordType","l":"RelRecordType(StructKind, List<RelDataTypeField>)","u":"%3Cinit%3E(org.apache.calcite.rel.type.StructKind,java.util.List)"},{"p":"org.apache.calcite.rel.type","c":"RelRecordType","l":"RelRecordType(StructKind, List<RelDataTypeField>, boolean)","u":"%3Cinit%3E(org.apache.calcite.rel.type.StructKind,java.util.List,boolean)"},{"p":"org.apache.calcite.rel","c":"RelRoot","l":"RelRoot(RelNode, RelDataType, SqlKind, Iterable<? extends Map.Entry<Integer, String>>, RelCollation, List<RelHint>)","u":"%3Cinit%3E(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlKind,java.lang.Iterable,org.apache.calcite.rel.RelCollation,java.util.List)"},{"p":"org.apache.calcite.plan","c":"RelRule","l":"RelRule(C)","u":"%3Cinit%3E(C)"},{"p":"org.apache.calcite.plan","c":"RelOptRuleCall","l":"rels"},{"p":"org.apache.calcite.rel","c":"RelShuttleImpl","l":"RelShuttleImpl()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.interpreter","c":"InterpretableRel.InterpreterImplementor","l":"relSinks"},{"p":"org.apache.calcite.sql2rel","c":"RelStructuredTypeFlattener","l":"RelStructuredTypeFlattener(RelBuilder, RexBuilder, RelOptTable.ToRelContext, boolean)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.plan.RelOptTable.ToRelContext,boolean)"},{"p":"org.apache.calcite.sql2rel","c":"RelStructuredTypeFlattener","l":"RelStructuredTypeFlattener(RexBuilder, RelOptTable.ToRelContext, boolean)","u":"%3Cinit%3E(org.apache.calcite.rex.RexBuilder,org.apache.calcite.plan.RelOptTable.ToRelContext,boolean)"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture","l":"relSupplier"},{"p":"org.apache.calcite.rel.rel2sql","c":"RelToSqlConverter","l":"RelToSqlConverter(SqlDialect)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect)"},{"p":"org.apache.calcite.util","c":"RelToSqlConverterUtil","l":"RelToSqlConverterUtil()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.plan","c":"RelTraitDef","l":"RelTraitDef()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.plan","c":"RelTraitPropagationVisitor","l":"RelTraitPropagationVisitor(RelOptPlanner, RelTraitSet)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture","l":"relTransform"},{"p":"org.apache.calcite.rel.rules","c":"CalcRelSplitter.RelType","l":"RelType(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.rel","c":"RelValidityChecker","l":"RelValidityChecker()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel","c":"RelVisitor","l":"RelVisitor()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.externalize","c":"RelWriterImpl","l":"RelWriterImpl(PrintWriter)","u":"%3Cinit%3E(java.io.PrintWriter)"},{"p":"org.apache.calcite.rel.externalize","c":"RelWriterImpl","l":"RelWriterImpl(PrintWriter, SqlExplainLevel, boolean)","u":"%3Cinit%3E(java.io.PrintWriter,org.apache.calcite.sql.SqlExplainLevel,boolean)"},{"p":"org.apache.calcite.rel.externalize","c":"RelWriterImpl","l":"RelWriterImpl(PrintWriter, SqlExplainLevel, boolean, boolean)","u":"%3Cinit%3E(java.io.PrintWriter,org.apache.calcite.sql.SqlExplainLevel,boolean,boolean)"},{"p":"org.apache.calcite.rel.externalize","c":"RelXmlWriter","l":"RelXmlWriter(PrintWriter, SqlExplainLevel)","u":"%3Cinit%3E(java.io.PrintWriter,org.apache.calcite.sql.SqlExplainLevel)"},{"p":"org.apache.calcite.util","c":"Bug","l":"remark(T)"},{"p":"org.apache.calcite.sql.validate","c":"FilterRequirement","l":"remnantFilterFields"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.JsonModifyMode","l":"REMOVE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"REMOVE_ALL"},{"p":"org.apache.calcite.util","c":"Filterator","l":"remove()"},{"p":"org.apache.calcite.util.graph","c":"BreadthFirstIterator","l":"remove()"},{"p":"org.apache.calcite.util.graph","c":"DepthFirstIterator","l":"remove()"},{"p":"org.apache.calcite.util.graph","c":"TopologicalOrderIterator","l":"remove()"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"remove(Enumerable<T>, C)","u":"remove(org.apache.calcite.linq4j.Enumerable,C)"},{"p":"org.apache.calcite.runtime","c":"ImmutableIntList","l":"remove(int)"},{"p":"org.apache.calcite.runtime","c":"PairList","l":"remove(int)"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"remove(int)"},{"p":"org.apache.calcite.util","c":"CastingList","l":"remove(int)"},{"p":"org.apache.calcite.runtime","c":"ImmutableIntList","l":"remove(Object)","u":"remove(java.lang.Object)"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"remove(Object)","u":"remove(java.lang.Object)"},{"p":"org.apache.calcite.util","c":"CompositeMap","l":"remove(Object)","u":"remove(java.lang.Object)"},{"p":"org.apache.calcite.util","c":"ImmutableNullableSet","l":"remove(Object)","u":"remove(java.lang.Object)"},{"p":"org.apache.calcite.util","c":"PartiallyOrderedSet","l":"remove(Object)","u":"remove(java.lang.Object)"},{"p":"org.apache.calcite.util","c":"NameMap","l":"remove(String)","u":"remove(java.lang.String)"},{"p":"org.apache.calcite.util","c":"NameMultimap","l":"remove(String, V)","u":"remove(java.lang.String,V)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"removeAll(C)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"removeAll(C)"},{"p":"org.apache.calcite.runtime","c":"ImmutableIntList","l":"removeAll(Collection<?>)","u":"removeAll(java.util.Collection)"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"removeAll(Collection<?>)","u":"removeAll(java.util.Collection)"},{"p":"org.apache.calcite.util","c":"ImmutableNullableSet","l":"removeAll(Collection<?>)","u":"removeAll(java.util.Collection)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet.Builder","l":"removeAll(ImmutableBitSet)","u":"removeAll(org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"removeAll(List<RexNode>, RexNode)","u":"removeAll(java.util.List,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.util.graph","c":"DefaultDirectedGraph","l":"removeAllVertices(Collection<V>)","u":"removeAllVertices(java.util.Collection)"},{"p":"org.apache.calcite.util.graph","c":"DirectedGraph","l":"removeAllVertices(Collection<V>)","u":"removeAllVertices(java.util.Collection)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"removeCast(RexNode)","u":"removeCast(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator","l":"removeCorrelationExpr(RexNode, boolean)","u":"removeCorrelationExpr(org.apache.calcite.rex.RexNode,boolean)"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator","l":"removeCorrelationExpr(RexNode, boolean, RexInputRef)","u":"removeCorrelationExpr(org.apache.calcite.rex.RexNode,boolean,org.apache.calcite.rex.RexInputRef)"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator","l":"removeCorrelationExpr(RexNode, boolean, Set<Integer>)","u":"removeCorrelationExpr(org.apache.calcite.rex.RexNode,boolean,java.util.Set)"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator","l":"removeCorrelationViaRule(RelNode)","u":"removeCorrelationViaRule(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator","l":"removeCorrelationViaRule(RelNode, RuleSet)","u":"removeCorrelationViaRule(org.apache.calcite.rel.RelNode,org.apache.calcite.tools.RuleSet)"},{"p":"org.apache.calcite.util.graph","c":"AttributedDirectedGraph","l":"removeEdge(V, V)","u":"removeEdge(V,V)"},{"p":"org.apache.calcite.util.graph","c":"DefaultDirectedGraph","l":"removeEdge(V, V)","u":"removeEdge(V,V)"},{"p":"org.apache.calcite.util.graph","c":"DirectedGraph","l":"removeEdge(V, V)","u":"removeEdge(V,V)"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules.RemoveEmptySingleRule","l":"RemoveEmptySingleRule(Class<R>, Predicate<R>, RelBuilderFactory, String)","u":"%3Cinit%3E(java.lang.Class,com.google.common.base.Predicate,org.apache.calcite.tools.RelBuilderFactory,java.lang.String)"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules.RemoveEmptySingleRule","l":"RemoveEmptySingleRule(Class<R>, Predicate<R>, RelBuilderFactory, String)","u":"%3Cinit%3E(java.lang.Class,java.util.function.Predicate,org.apache.calcite.tools.RelBuilderFactory,java.lang.String)"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules.RemoveEmptySingleRule","l":"RemoveEmptySingleRule(Class<R>, String)","u":"%3Cinit%3E(java.lang.Class,java.lang.String)"},{"p":"org.apache.calcite.jdbc","c":"CalciteRootSchema","l":"removeFunction(String)","u":"removeFunction(java.lang.String)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"removeFunction(String)","u":"removeFunction(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"RemoveHoleTransformer","l":"RemoveHoleTransformer()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.materialize","c":"MaterializationService","l":"removeMaterialization(MaterializationKey)","u":"removeMaterialization(org.apache.calcite.materialize.MaterializationKey)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"removeNullabilityCast(RelDataTypeFactory, RexNode)","u":"removeNullabilityCast(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rex","c":"RexSimplify","l":"removeNullabilityCast(RexNode)","u":"removeNullabilityCast(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.runtime","c":"RemovePointOperation","l":"RemovePointOperation(int)","u":"%3Cinit%3E(int)"},{"p":"org.apache.calcite.tools","c":"RelBuilder.Config","l":"removeRedundantDistinct()"},{"p":"org.apache.calcite.runtime","c":"RemoveRepeatedPointsTransformer","l":"RemoveRepeatedPointsTransformer()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.runtime","c":"RemoveRepeatedPointsTransformer","l":"RemoveRepeatedPointsTransformer(double)","u":"%3Cinit%3E(double)"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.SparkHandler.RuleSetBuilder","l":"removeRule(RelOptRule)","u":"removeRule(org.apache.calcite.plan.RelOptRule)"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"removeRule(RelOptRule)","u":"removeRule(org.apache.calcite.plan.RelOptRule)"},{"p":"org.apache.calcite.plan","c":"RelOptPlanner","l":"removeRule(RelOptRule)","u":"removeRule(org.apache.calcite.plan.RelOptRule)"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"removeRule(RelOptRule)","u":"removeRule(org.apache.calcite.plan.RelOptRule)"},{"p":"org.apache.calcite.test","c":"MockRelOptPlanner","l":"removeRule(RelOptRule)","u":"removeRule(org.apache.calcite.plan.RelOptRule)"},{"p":"org.apache.calcite.server","c":"CalciteServer","l":"removeStatement(Meta.StatementHandle)","u":"removeStatement(org.apache.calcite.avatica.Meta.StatementHandle)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"removeSubSchema(String)","u":"removeSubSchema(java.lang.String)"},{"p":"org.apache.calcite.jdbc","c":"CalciteRootSchema","l":"removeTable(String)","u":"removeTable(java.lang.String)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"removeTable(String)","u":"removeTable(java.lang.String)"},{"p":"org.apache.calcite.schema","c":"SchemaPlus","l":"removeTable(String)","u":"removeTable(java.lang.String)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"removeType(String)","u":"removeType(java.lang.String)"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonQueryFunction","l":"removeTypeSpecOperands(SqlCall)","u":"removeTypeSpecOperands(org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonValueFunction","l":"removeTypeSpecOperands(SqlCall)","u":"removeTypeSpecOperands(org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"removeValidatedNodeType(SqlNode)","u":"removeValidatedNodeType(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"removeValidatedNodeType(SqlNode)","u":"removeValidatedNodeType(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"rename(List<? extends String>)","u":"rename(java.util.List)"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"rename(String)","u":"rename(java.lang.String)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"renameIfNecessary(RelNode, RelDataType)","u":"renameIfNecessary(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.runtime","c":"Pattern.Op","l":"REPEAT"},{"p":"org.apache.calcite.sql.type","c":"CompositeOperandTypeChecker.Composition","l":"REPEAT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"REPEAT"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"REPEAT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"REPEAT_UNION"},{"p":"org.apache.calcite.runtime","c":"Pattern.PatternBuilder","l":"repeat(int, int)","u":"repeat(int,int)"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"repeat(SqlOperandCountRange, SqlSingleOperandTypeChecker...)","u":"repeat(org.apache.calcite.sql.SqlOperandCountRange,org.apache.calcite.sql.type.SqlSingleOperandTypeChecker...)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"repeat(String, int)","u":"repeat(java.lang.String,int)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"repeatUnion(Enumerable<TSource>, Enumerable<TSource>, int, boolean, EqualityComparer<TSource>, Function0<Boolean>)","u":"repeatUnion(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.Enumerable,int,boolean,org.apache.calcite.linq4j.function.EqualityComparer,org.apache.calcite.linq4j.function.Function0)"},{"p":"org.apache.calcite.rel.core","c":"RepeatUnion","l":"RepeatUnion(RelOptCluster, RelTraitSet, RelNode, RelNode, boolean, int, RelOptTable)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,boolean,int,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"repeatUnion(String, boolean)","u":"repeatUnion(java.lang.String,boolean)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"repeatUnion(String, boolean, int)","u":"repeatUnion(java.lang.String,boolean,int)"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.Struct","l":"repeatUnionFactory"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.JsonModifyMode","l":"REPLACE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"REPLACE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"REPLACE"},{"p":"org.apache.calcite.plan","c":"RelTraitSet","l":"replace(int, RelTrait)","u":"replace(int,org.apache.calcite.plan.RelTrait)"},{"p":"org.apache.calcite.plan","c":"RelTraitSet","l":"replace(List<T>)","u":"replace(java.util.List)"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor","l":"replace(MutableRel, MutableRel, MutableRel)","u":"replace(org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.mutable.MutableRel)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"replace(RelNode, RelNode, RelNode)","u":"replace(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan","c":"RelTraitSet","l":"replace(RelTrait)","u":"replace(org.apache.calcite.plan.RelTrait)"},{"p":"org.apache.calcite.plan","c":"RelTraitSet","l":"replace(RelTraitDef<T>, List<T>)","u":"replace(org.apache.calcite.plan.RelTraitDef,java.util.List)"},{"p":"org.apache.calcite.sql","c":"SqlDialect.FakeUtil","l":"replace(String, String, String)","u":"replace(java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.util","c":"Util","l":"replace(String, String, String)","u":"replace(java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"replace(String, String, String, boolean)","u":"replace(java.lang.String,java.lang.String,java.lang.String,boolean)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"replaceEscapedChars(String)","u":"replaceEscapedChars(java.lang.String)"},{"p":"org.apache.calcite.plan","c":"RelTraitSet","l":"replaceIf(RelTraitDef<T>, Supplier<? extends T>)","u":"replaceIf(org.apache.calcite.plan.RelTraitDef,java.util.function.Supplier)"},{"p":"org.apache.calcite.plan","c":"RelTraitSet","l":"replaceIfs(RelTraitDef<T>, Supplier<? extends List<T>>)","u":"replaceIfs(org.apache.calcite.plan.RelTraitDef,java.util.function.Supplier)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableRel","l":"replaceInParent(MutableRel)","u":"replaceInParent(org.apache.calcite.rel.mutable.MutableRel)"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"replaceInput(int, RelNode)","u":"replaceInput(int,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel","c":"BiRel","l":"replaceInput(int, RelNode)","u":"replaceInput(int,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.core","c":"SetOp","l":"replaceInput(int, RelNode)","u":"replaceInput(int,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.core","c":"TableFunctionScan","l":"replaceInput(int, RelNode)","u":"replaceInput(int,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel","c":"RelNode","l":"replaceInput(int, RelNode)","u":"replaceInput(int,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.rules","c":"HyperGraph","l":"replaceInput(int, RelNode)","u":"replaceInput(int,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.rules","c":"MultiJoin","l":"replaceInput(int, RelNode)","u":"replaceInput(int,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel","c":"SingleRel","l":"replaceInput(int, RelNode)","u":"replaceInput(int,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"replaceInput(RelNode, int, RelNode)","u":"replaceInput(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisorHint2","l":"replacement"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.RegexFunction","l":"replaceNonDollarIndexedString(String)","u":"replaceNonDollarIndexedString(java.lang.String)"},{"p":"org.apache.calcite.rel","c":"RelVisitor","l":"replaceRoot(RelNode)","u":"replaceRoot(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.sql","c":"SqlSpecialOperator.TokenSequence","l":"replaceSublist(int, int, SqlNode)","u":"replaceSublist(int,int,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"replaceSublist(List<T>, int, int, T)","u":"replaceSublist(java.util.List,int,int,T)"},{"p":"org.apache.calcite.sql.fun","c":"SqlFloorFunction","l":"replaceTimeUnitOperand(SqlCall, String, SqlParserPos)","u":"replaceTimeUnitOperand(org.apache.calcite.sql.SqlCall,java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.rel.rules","c":"DateRangeRules","l":"replaceTimeUnits(RexBuilder, RexNode, String)","u":"replaceTimeUnits(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,java.lang.String)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule","l":"replaceWithOriginalReferences(RexBuilder, RelNode, MaterializedViewRule.NodeLineage, RexNode)","u":"replaceWithOriginalReferences(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rules.materialize.MaterializedViewRule.NodeLineage,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults.Replayable","l":"replay(QueryableFactory<T>)","u":"replay(org.apache.calcite.linq4j.QueryableFactory)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults.ReplayableQueryable","l":"replay(QueryableFactory<T>)","u":"replay(org.apache.calcite.linq4j.QueryableFactory)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults.ReplayableQueryable","l":"ReplayableQueryable()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.validate","c":"SqlMonikerType","l":"REPOSITORY"},{"p":"org.apache.calcite.util","c":"CancelFlag","l":"requestCancel()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"requireAtLeastOneArg()"},{"p":"org.apache.calcite.config","c":"CalciteConnectionProperty","l":"required()"},{"p":"org.apache.calcite.rel.core","c":"Correlate","l":"requiredColumns"},{"p":"org.apache.calcite.rel.mutable","c":"MutableCorrelate","l":"requiredColumns"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"requireDefaultConstructor(String)","u":"requireDefaultConstructor(java.lang.String)"},{"p":"org.apache.calcite.sql.dialect","c":"HiveSqlDialect","l":"requiresAliasForFromItems()"},{"p":"org.apache.calcite.sql.dialect","c":"MysqlSqlDialect","l":"requiresAliasForFromItems()"},{"p":"org.apache.calcite.sql.dialect","c":"PostgresqlSqlDialect","l":"requiresAliasForFromItems()"},{"p":"org.apache.calcite.sql.dialect","c":"PrestoSqlDialect","l":"requiresAliasForFromItems()"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"requiresAliasForFromItems()"},{"p":"org.apache.calcite.sql.fun","c":"SqlNewOperator","l":"requiresDecimalExpansion()"},{"p":"org.apache.calcite.sql.fun","c":"SqlRowOperator","l":"requiresDecimalExpansion()"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"requiresDecimalExpansion()"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"requiresDecimalExpansion(List<RexNode>, boolean)","u":"requiresDecimalExpansion(java.util.List,boolean)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"requiresDecimalExpansion(RexNode, boolean)","u":"requiresDecimalExpansion(org.apache.calcite.rex.RexNode,boolean)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"requiresDecimalExpansion(RexProgram, boolean)","u":"requiresDecimalExpansion(org.apache.calcite.rex.RexProgram,boolean)"},{"p":"org.apache.calcite.sql","c":"SqlAggFunction","l":"requiresGroupOrder()"},{"p":"org.apache.calcite.sql","c":"SqlAggFunction","l":"requiresOrder()"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"requiresOrder()"},{"p":"org.apache.calcite.sql","c":"SqlAggFunction","l":"requiresOver()"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"requiresOver()"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Blackboard","l":"reRegister(RelNode)","u":"reRegister(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.util","c":"NumberUtil","l":"rescaleBigDecimal(BigDecimal, int)","u":"rescaleBigDecimal(java.math.BigDecimal,int)"},{"p":"org.apache.calcite.adapter.file","c":"CsvEnumerator","l":"reset()"},{"p":"org.apache.calcite.adapter.file","c":"JsonEnumerator","l":"reset()"},{"p":"org.apache.calcite.adapter.geode.simple","c":"GeodeSimpleEnumerator","l":"reset()"},{"p":"org.apache.calcite.adapter.kafka","c":"KafkaMessageEnumerator","l":"reset()"},{"p":"org.apache.calcite.adapter.os","c":"OsQuery","l":"reset()"},{"p":"org.apache.calcite.adapter.splunk.search","c":"SplunkConnectionImpl.SplunkResultEnumerator","l":"reset()"},{"p":"org.apache.calcite.interpreter","c":"Row.RowBuilder","l":"reset()"},{"p":"org.apache.calcite.linq4j","c":"CartesianProductEnumerator","l":"reset()"},{"p":"org.apache.calcite.linq4j","c":"DelegatingEnumerator","l":"reset()"},{"p":"org.apache.calcite.linq4j","c":"Enumerator","l":"reset()"},{"p":"org.apache.calcite.linq4j","c":"MemoryEnumerator","l":"reset()"},{"p":"org.apache.calcite.linq4j","c":"TransformedEnumerator","l":"reset()"},{"p":"org.apache.calcite.prepare","c":"PlannerImpl","l":"reset()"},{"p":"org.apache.calcite.rel.rules","c":"LongBitmap.SubsetIterator","l":"reset()"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"reset()"},{"p":"org.apache.calcite.sql","c":"SqlWriter","l":"reset()"},{"p":"org.apache.calcite.tools","c":"Planner","l":"reset()"},{"p":"org.apache.calcite.util","c":"LazyReference","l":"reset()"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Result","l":"resetAlias()"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Result","l":"resetAlias(String, RelDataType)","u":"resetAlias(java.lang.String,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"resetSettings()"},{"p":"org.apache.calcite.sql","c":"SqlWriter","l":"resetSettings()"},{"p":"org.apache.calcite.sql.validate","c":"MatchRecognizeNamespace","l":"resolve()"},{"p":"org.apache.calcite.sql.validate","c":"IdentifierNamespace","l":"resolve()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorNamespace","l":"resolve()"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingScope","l":"resolve(List<String>, SqlNameMatcher, boolean, SqlValidatorScope.Resolved)","u":"resolve(java.util.List,org.apache.calcite.sql.validate.SqlNameMatcher,boolean,org.apache.calcite.sql.validate.SqlValidatorScope.Resolved)"},{"p":"org.apache.calcite.sql.validate","c":"ParameterScope","l":"resolve(List<String>, SqlNameMatcher, boolean, SqlValidatorScope.Resolved)","u":"resolve(java.util.List,org.apache.calcite.sql.validate.SqlNameMatcher,boolean,org.apache.calcite.sql.validate.SqlValidatorScope.Resolved)"},{"p":"org.apache.calcite.sql.validate","c":"ListScope","l":"resolve(List<String>, SqlNameMatcher, boolean, SqlValidatorScope.Resolved)","u":"resolve(java.util.List,org.apache.calcite.sql.validate.SqlNameMatcher,boolean,org.apache.calcite.sql.validate.SqlValidatorScope.Resolved)"},{"p":"org.apache.calcite.sql.validate","c":"MatchRecognizeScope","l":"resolve(List<String>, SqlNameMatcher, boolean, SqlValidatorScope.Resolved)","u":"resolve(java.util.List,org.apache.calcite.sql.validate.SqlNameMatcher,boolean,org.apache.calcite.sql.validate.SqlValidatorScope.Resolved)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope","l":"resolve(List<String>, SqlNameMatcher, boolean, SqlValidatorScope.Resolved)","u":"resolve(java.util.List,org.apache.calcite.sql.validate.SqlNameMatcher,boolean,org.apache.calcite.sql.validate.SqlValidatorScope.Resolved)"},{"p":"org.apache.calcite.schema","c":"Schemas","l":"resolve(RelDataTypeFactory, String, Collection<CalciteSchema.FunctionEntry>, List<RelDataType>)","u":"resolve(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String,java.util.Collection,java.util.List)"},{"p":"org.apache.calcite.sql","c":"SqlUnknownLiteral","l":"resolve(SqlTypeName)","u":"resolve(org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.materialize","c":"Lattice.Builder","l":"resolveArgs(Object)","u":"resolveArgs(java.lang.Object)"},{"p":"org.apache.calcite.materialize","c":"Lattice.Builder","l":"resolveColumn(Object)","u":"resolveColumn(java.lang.Object)"},{"p":"org.apache.calcite.schema","c":"CustomColumnResolvingTable","l":"resolveColumn(RelDataType, RelDataTypeFactory, List<String>)","u":"resolveColumn(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.ColumnResolver","l":"resolveColumn(RelDataType, RelDataTypeFactory, List<String>)","u":"resolveColumn(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List)"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingScope","l":"resolveColumn(String, SqlNode)","u":"resolveColumn(java.lang.String,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"ListScope","l":"resolveColumn(String, SqlNode)","u":"resolveColumn(java.lang.String,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"MeasureScope","l":"resolveColumn(String, SqlNode)","u":"resolveColumn(java.lang.String,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"OrderByScope","l":"resolveColumn(String, SqlNode)","u":"resolveColumn(java.lang.String,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"ParameterScope","l":"resolveColumn(String, SqlNode)","u":"resolveColumn(java.lang.String,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlLambdaScope","l":"resolveColumn(String, SqlNode)","u":"resolveColumn(java.lang.String,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope","l":"resolveColumn(String, SqlNode)","u":"resolveColumn(java.lang.String,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidTable","l":"resolveComplexMetric(String, AggregateCall)","u":"resolveComplexMetric(java.lang.String,org.apache.calcite.rel.core.AggregateCall)"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingScope","l":"resolved"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope.ResolvedImpl","l":"ResolvedImpl()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"resolveLiteral(SqlLiteral)","u":"resolveLiteral(org.apache.calcite.sql.SqlLiteral)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"resolveLiteral(SqlLiteral)","u":"resolveLiteral(org.apache.calcite.sql.SqlLiteral)"},{"p":"org.apache.calcite.materialize","c":"Lattice.Builder","l":"resolveMeasure(String, boolean, Object)","u":"resolveMeasure(java.lang.String,boolean,java.lang.Object)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"resolver"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingScope","l":"resolveTable(List<String>, SqlNameMatcher, SqlValidatorScope.Path, SqlValidatorScope.Resolved)","u":"resolveTable(java.util.List,org.apache.calcite.sql.validate.SqlNameMatcher,org.apache.calcite.sql.validate.SqlValidatorScope.Path,org.apache.calcite.sql.validate.SqlValidatorScope.Resolved)"},{"p":"org.apache.calcite.sql.validate","c":"ParameterScope","l":"resolveTable(List<String>, SqlNameMatcher, SqlValidatorScope.Path, SqlValidatorScope.Resolved)","u":"resolveTable(java.util.List,org.apache.calcite.sql.validate.SqlNameMatcher,org.apache.calcite.sql.validate.SqlValidatorScope.Path,org.apache.calcite.sql.validate.SqlValidatorScope.Resolved)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope","l":"resolveTable(List<String>, SqlNameMatcher, SqlValidatorScope.Path, SqlValidatorScope.Resolved)","u":"resolveTable(java.util.List,org.apache.calcite.sql.validate.SqlNameMatcher,org.apache.calcite.sql.validate.SqlValidatorScope.Path,org.apache.calcite.sql.validate.SqlValidatorScope.Resolved)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"resolveWindow(SqlNode, SqlValidatorScope)","u":"resolveWindow(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"resolveWindow(SqlNode, SqlValidatorScope)","u":"resolveWindow(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"resolveWindow(SqlNode, SqlValidatorScope, boolean)","u":"resolveWindow(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,boolean)"},{"p":"org.apache.calcite.util","c":"Static","l":"RESOURCE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"RESPECT_NULLS"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"RESPECT_NULLS"},{"p":"org.apache.calcite.util","c":"TryThreadLocal","l":"restoreTo(T)"},{"p":"org.apache.calcite.adapter.enumerable","c":"AggImpState","l":"result"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"RESULT_SET_ENUMERABLE_OF"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"RESULT_SET_ENUMERABLE_OF_PREPARED"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"RESULT_SET_ENUMERABLE_SET_TIMEOUT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"RESULT_SET_GET_DATE2"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"RESULT_SET_GET_TIME2"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"RESULT_SET_GET_TIMESTAMP2"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Builder","l":"result()"},{"p":"org.apache.calcite.sql.util","c":"SqlBasicVisitor.ArgHandler","l":"result()"},{"p":"org.apache.calcite.sql.util","c":"SqlBasicVisitor.ArgHandlerImpl","l":"result()"},{"p":"org.apache.calcite.sql.util","c":"SqlShuttle.CallCopyingArgHandler","l":"result()"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.BigDecimalSum","l":"result(BigDecimal)","u":"result(java.math.BigDecimal)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRel.Result","l":"Result(BlockStatement, PhysType, JavaRowFormat)","u":"%3Cinit%3E(org.apache.calcite.linq4j.tree.BlockStatement,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.JavaRowFormat)"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.MaxBoolean","l":"result(Boolean)","u":"result(java.lang.Boolean)"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.MinBoolean","l":"result(Boolean)","u":"result(java.lang.Boolean)"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.DoubleSum","l":"result(double)"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.IntSum","l":"result(int)"},{"p":"org.apache.calcite.util","c":"Smalls.MyTwoParamsSumFunctionFilter1","l":"result(int)"},{"p":"org.apache.calcite.util","c":"Smalls.MySum3","l":"result(Integer)","u":"result(java.lang.Integer)"},{"p":"org.apache.calcite.runtime","c":"AccumOperation","l":"result(List<Geometry>)","u":"result(java.util.List)"},{"p":"org.apache.calcite.runtime","c":"CollectOperation","l":"result(List<Geometry>)","u":"result(java.util.List)"},{"p":"org.apache.calcite.runtime","c":"UnionOperation","l":"result(List<Geometry>)","u":"result(java.util.List)"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.LongSum","l":"result(long)"},{"p":"org.apache.calcite.util","c":"Smalls.MyStaticSumFunction","l":"result(long)"},{"p":"org.apache.calcite.util","c":"Smalls.MySumFunction","l":"result(long)"},{"p":"org.apache.calcite.util","c":"Smalls.MyThreeParamsSumFunctionWithFilter1","l":"result(long)"},{"p":"org.apache.calcite.util","c":"Smalls.MyThreeParamsSumFunctionWithFilter2","l":"result(long)"},{"p":"org.apache.calcite.util","c":"Smalls.MyTwoParamsSumFunctionFilter2","l":"result(long)"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor.UnifyRuleCall","l":"result(MutableRel)","u":"result(org.apache.calcite.rel.mutable.MutableRel)"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor.UnifyRuleCall","l":"result(MutableRel, boolean)","u":"result(org.apache.calcite.rel.mutable.MutableRel,boolean)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexToLixTranslator.Result","l":"Result(ParameterExpression, ParameterExpression)","u":"%3Cinit%3E(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRelImplementor","l":"result(PhysType, BlockStatement)","u":"result(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockStatement)"},{"p":"org.apache.calcite.adapter.spark","c":"SparkRel.Result","l":"Result(PhysType, BlockStatement)","u":"%3Cinit%3E(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockStatement)"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser.Result","l":"Result(PrecedenceClimbingParser.Token, PrecedenceClimbingParser.Token, PrecedenceClimbingParser.Token)","u":"%3Cinit%3E(org.apache.calcite.util.PrecedenceClimbingParser.Token,org.apache.calcite.util.PrecedenceClimbingParser.Token,org.apache.calcite.util.PrecedenceClimbingParser.Token)"},{"p":"org.apache.calcite.sql2rel","c":"RelFieldTrimmer","l":"result(RelNode, Mapping)","u":"result(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping)"},{"p":"org.apache.calcite.sql2rel","c":"RelFieldTrimmer","l":"result(RelNode, Mapping, RelNode)","u":"result(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor","l":"result(SqlNode, Collection<SqlImplementor.Clause>, RelNode, Map<String, RelDataType>)","u":"result(org.apache.calcite.sql.SqlNode,java.util.Collection,org.apache.calcite.rel.RelNode,java.util.Map)"},{"p":"org.apache.calcite.rel.rel2sql","c":"RelToSqlConverter","l":"result(SqlNode, Collection<SqlImplementor.Clause>, String, RelDataType, Map<String, RelDataType>)","u":"result(org.apache.calcite.sql.SqlNode,java.util.Collection,java.lang.String,org.apache.calcite.rel.type.RelDataType,java.util.Map)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor","l":"result(SqlNode, Collection<SqlImplementor.Clause>, String, RelDataType, Map<String, RelDataType>)","u":"result(org.apache.calcite.sql.SqlNode,java.util.Collection,java.lang.String,org.apache.calcite.rel.type.RelDataType,java.util.Map)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Result","l":"Result(SqlNode, Collection<SqlImplementor.Clause>, String, RelDataType, Map<String, RelDataType>)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlNode,java.util.Collection,java.lang.String,org.apache.calcite.rel.type.RelDataType,java.util.Map)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor","l":"result(SqlNode, SqlImplementor.Result, SqlImplementor.Result)","u":"result(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.rel2sql.SqlImplementor.Result,org.apache.calcite.rel.rel2sql.SqlImplementor.Result)"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode.NumericComparison","l":"result(T)"},{"p":"org.apache.calcite.prepare","c":"Prepare","l":"resultConvention"},{"p":"org.apache.calcite.schema.impl","c":"AggregateFunctionImpl","l":"resultMethod"},{"p":"org.apache.calcite.adapter.enumerable","c":"BasicAggregateLambdaFactory","l":"resultSelector(Function2<TKey, TAccumulate, TResult>)","u":"resultSelector(org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.adapter.enumerable","c":"AggregateLambdaFactory","l":"resultSelector(Function2<TKey, TOrigAccumulate, TResult>)","u":"resultSelector(org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.adapter.enumerable","c":"LazyAggregateLambdaFactory","l":"resultSelector(Function2<TKey, TOrigAccumulate, TResult>)","u":"resultSelector(org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.adapter.enumerable","c":"AggResultContext","l":"resultTranslator()"},{"p":"org.apache.calcite.adapter.enumerable.impl","c":"AggResultContextImpl","l":"resultTranslator()"},{"p":"org.apache.calcite.linq4j.tree","c":"ConstructorDeclaration","l":"resultType"},{"p":"org.apache.calcite.linq4j.tree","c":"MethodDeclaration","l":"resultType"},{"p":"org.apache.calcite.schema.impl","c":"AggregateFunctionImpl","l":"resultType"},{"p":"org.apache.calcite.runtime","c":"ImmutableIntList","l":"retainAll(Collection<?>)","u":"retainAll(java.util.Collection)"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"retainAll(Collection<?>)","u":"retainAll(java.util.Collection)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"retainDeterministic(List<RexNode>)","u":"retainDeterministic(java.util.List)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"rethrow()"},{"p":"org.apache.calcite.util","c":"TestUtil","l":"rethrow(Throwable)","u":"rethrow(java.lang.Throwable)"},{"p":"org.apache.calcite.util","c":"TestUtil","l":"rethrow(Throwable, String)","u":"rethrow(java.lang.Throwable,java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"rethrow(Type)","u":"rethrow(java.lang.reflect.Type)"},{"p":"org.apache.calcite.linq4j.tree","c":"GotoExpressionKind","l":"Return"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"return_(LabelTarget)","u":"return_(org.apache.calcite.linq4j.tree.LabelTarget)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"return_(LabelTarget, Expression)","u":"return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"return_(LabelTarget, Expression, Type)","u":"return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"return_(LabelTarget, Type)","u":"return_(org.apache.calcite.linq4j.tree.LabelTarget,java.lang.reflect.Type)"},{"p":"org.apache.calcite.sql.type","c":"InferTypes","l":"RETURN_TYPE"},{"p":"org.apache.calcite.sql","c":"SqlJsonValueReturning","l":"RETURNING"},{"p":"org.apache.calcite.adapter.enumerable","c":"AggContext","l":"returnRelType()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableAggregateBase.AggContextImpl","l":"returnRelType()"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertMetaData","l":"returns(Consumer<ResultSet>)","u":"returns(java.util.function.Consumer)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertQuery","l":"returns(Consumer<ResultSet>)","u":"returns(java.util.function.Consumer)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertMetaData","l":"returns(String)","u":"returns(java.lang.String)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertQuery","l":"returns(String)","u":"returns(java.lang.String)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertQuery","l":"returns(String, Consumer<ResultSet>)","u":"returns(java.lang.String,java.util.function.Consumer)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertQuery","l":"returns2(String)","u":"returns2(java.lang.String)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertQuery","l":"returnsCount(int)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertQuery","l":"returnsOrdered(String...)","u":"returnsOrdered(java.lang.String...)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertQuery","l":"returnsStartingWith(String...)","u":"returnsStartingWith(java.lang.String...)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertQuery","l":"returnsUnordered(String...)","u":"returnsUnordered(java.lang.String...)"},{"p":"org.apache.calcite.test","c":"Matchers","l":"returnsUnordered(String...)","u":"returnsUnordered(java.lang.String...)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertQuery","l":"returnsValue(String)","u":"returnsValue(java.lang.String)"},{"p":"org.apache.calcite.adapter.enumerable","c":"AggContext","l":"returnType()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableAggregateBase.AggContextImpl","l":"returnType()"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"REVERSE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"REVERSE"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"REVERSE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"REVERSE_SPARK"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"REVERSE_SPARK"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"reverse()"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"reverse()"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"reverse()"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"reverse()"},{"p":"org.apache.calcite.rel","c":"RelFieldCollation.Direction","l":"reverse()"},{"p":"org.apache.calcite.runtime","c":"PairList","l":"reverse()"},{"p":"org.apache.calcite.sql","c":"SqlBasicFunction","l":"reverse()"},{"p":"org.apache.calcite.sql","c":"SqlBinaryOperator","l":"reverse()"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"reverse()"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"reverse()"},{"p":"org.apache.calcite.sql.validate","c":"SqlMonotonicity","l":"reverse()"},{"p":"org.apache.calcite.linq4j","c":"Ord","l":"reverse(E...)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"reverse(Enumerable<TSource>)","u":"reverse(org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"Ord","l":"reverse(Iterable<? extends E>)","u":"reverse(java.lang.Iterable)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"reverse(List)","u":"reverse(java.util.List)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"reverse(Queryable<T>)","u":"reverse(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"reverse(Queryable<T>)","u":"reverse(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"reverse(Queryable<T>)","u":"reverse(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"reverse(SqlOperator)","u":"reverse(org.apache.calcite.sql.SqlOperator)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"reverse(String)","u":"reverse(java.lang.String)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Context","l":"reverseCall(RexCall)","u":"reverseCall(org.apache.calcite.rex.RexCall)"},{"p":"org.apache.calcite.runtime","c":"PairList","l":"reversed()"},{"p":"org.apache.calcite.rel.rules","c":"LongBitmap.ReverseIterator","l":"ReverseIterator(long)","u":"%3Cinit%3E(long)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQueryBase","l":"revise(Class<? extends RelNode>, MetadataDef<M>)","u":"revise(java.lang.Class,org.apache.calcite.rel.metadata.MetadataDef)"},{"p":"org.apache.calcite.rel.metadata","c":"JaninoRelMetadataProvider","l":"revise(Class<H>)","u":"revise(java.lang.Class)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQueryBase","l":"revise(Class<H>)","u":"revise(java.lang.Class)"},{"p":"org.apache.calcite.rel.metadata","c":"MetadataHandlerProvider","l":"revise(Class<MH>)","u":"revise(java.lang.Class)"},{"p":"org.apache.calcite.interpreter","c":"Nodes.CoreCompiler","l":"rewrite(RelNode)","u":"rewrite(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan","c":"RelOptLattice","l":"rewrite(RelNode)","u":"rewrite(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.sql2rel","c":"RelStructuredTypeFlattener","l":"rewrite(RelNode)","u":"rewrite(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.sql.fun","c":"SqlCoalesceFunction","l":"rewriteCall(SqlValidator, SqlCall)","u":"rewriteCall(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.fun","c":"SqlDatePartFunction","l":"rewriteCall(SqlValidator, SqlCall)","u":"rewriteCall(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.fun","c":"SqlNewOperator","l":"rewriteCall(SqlValidator, SqlCall)","u":"rewriteCall(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.fun","c":"SqlNullifFunction","l":"rewriteCall(SqlValidator, SqlCall)","u":"rewriteCall(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql","c":"SqlBasicFunction","l":"rewriteCall(SqlValidator, SqlCall)","u":"rewriteCall(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql","c":"SqlJdbcFunctionCall","l":"rewriteCall(SqlValidator, SqlCall)","u":"rewriteCall(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"rewriteCall(SqlValidator, SqlCall)","u":"rewriteCall(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql","c":"SqlProcedureCallOperator","l":"rewriteCall(SqlValidator, SqlCall)","u":"rewriteCall(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.type","c":"SqlOperandHandler","l":"rewriteCall(SqlValidator, SqlCall)","u":"rewriteCall(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule","l":"rewriteExpression(RexBuilder, RelMetadataQuery, RelNode, RelNode, List<RexNode>, BiMap<RexTableInputRef.RelTableRef, RexTableInputRef.RelTableRef>, MaterializedViewRule.EquivalenceClasses, boolean, RexNode)","u":"rewriteExpression(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.materialize.MaterializedViewRule.EquivalenceClasses,boolean,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule","l":"rewriteExpressions(RexBuilder, RelMetadataQuery, RelNode, RelNode, List<RexNode>, BiMap<RexTableInputRef.RelTableRef, RexTableInputRef.RelTableRef>, MaterializedViewRule.EquivalenceClasses, boolean, List<RexNode>)","u":"rewriteExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.materialize.MaterializedViewRule.EquivalenceClasses,boolean,java.util.List)"},{"p":"org.apache.calcite.sql2rel","c":"RelStructuredTypeFlattener","l":"rewriteGeneric(RelNode)","u":"rewriteGeneric(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.sql.dialect","c":"SnowflakeSqlDialect","l":"rewriteMaxMin(SqlNode, RelDataType)","u":"rewriteMaxMin(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"rewriteMaxMin(SqlNode, RelDataType)","u":"rewriteMaxMin(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.dialect","c":"PostgresqlSqlDialect","l":"rewriteMaxMinExpr(SqlNode, RelDataType)","u":"rewriteMaxMinExpr(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.dialect","c":"RedshiftSqlDialect","l":"rewriteMaxMinExpr(SqlNode, RelDataType)","u":"rewriteMaxMinExpr(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.dialect","c":"SnowflakeSqlDialect","l":"rewriteMaxMinExpr(SqlNode, RelDataType)","u":"rewriteMaxMinExpr(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"rewriteMaxMinExpr(SqlNode, RelDataType)","u":"rewriteMaxMinExpr(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewAggregateRule","l":"rewriteQuery(RelBuilder, RexBuilder, RexSimplify, RelMetadataQuery, RexNode, RexNode, Project, RelNode, BiMap<RexTableInputRef.RelTableRef, RexTableInputRef.RelTableRef>, MaterializedViewRule.EquivalenceClasses, MaterializedViewRule.EquivalenceClasses)","u":"rewriteQuery(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.materialize.MaterializedViewRule.EquivalenceClasses,org.apache.calcite.rel.rules.materialize.MaterializedViewRule.EquivalenceClasses)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewJoinRule","l":"rewriteQuery(RelBuilder, RexBuilder, RexSimplify, RelMetadataQuery, RexNode, RexNode, Project, RelNode, BiMap<RexTableInputRef.RelTableRef, RexTableInputRef.RelTableRef>, MaterializedViewRule.EquivalenceClasses, MaterializedViewRule.EquivalenceClasses)","u":"rewriteQuery(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.materialize.MaterializedViewRule.EquivalenceClasses,org.apache.calcite.rel.rules.materialize.MaterializedViewRule.EquivalenceClasses)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule","l":"rewriteQuery(RelBuilder, RexBuilder, RexSimplify, RelMetadataQuery, RexNode, RexNode, Project, RelNode, BiMap<RexTableInputRef.RelTableRef, RexTableInputRef.RelTableRef>, MaterializedViewRule.EquivalenceClasses, MaterializedViewRule.EquivalenceClasses)","u":"rewriteQuery(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.materialize.MaterializedViewRule.EquivalenceClasses,org.apache.calcite.rel.rules.materialize.MaterializedViewRule.EquivalenceClasses)"},{"p":"org.apache.calcite.sql2rel","c":"RelStructuredTypeFlattener","l":"rewriteRel(Collect)","u":"rewriteRel(org.apache.calcite.rel.core.Collect)"},{"p":"org.apache.calcite.sql2rel","c":"RelStructuredTypeFlattener","l":"rewriteRel(LogicalAggregate)","u":"rewriteRel(org.apache.calcite.rel.logical.LogicalAggregate)"},{"p":"org.apache.calcite.sql2rel","c":"RelStructuredTypeFlattener","l":"rewriteRel(LogicalAsofJoin)","u":"rewriteRel(org.apache.calcite.rel.logical.LogicalAsofJoin)"},{"p":"org.apache.calcite.sql2rel","c":"RelStructuredTypeFlattener","l":"rewriteRel(LogicalCalc)","u":"rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)"},{"p":"org.apache.calcite.sql2rel","c":"RelStructuredTypeFlattener","l":"rewriteRel(LogicalChi)","u":"rewriteRel(org.apache.calcite.rel.stream.LogicalChi)"},{"p":"org.apache.calcite.sql2rel","c":"RelStructuredTypeFlattener","l":"rewriteRel(LogicalCorrelate)","u":"rewriteRel(org.apache.calcite.rel.logical.LogicalCorrelate)"},{"p":"org.apache.calcite.sql2rel","c":"RelStructuredTypeFlattener","l":"rewriteRel(LogicalDelta)","u":"rewriteRel(org.apache.calcite.rel.stream.LogicalDelta)"},{"p":"org.apache.calcite.sql2rel","c":"RelStructuredTypeFlattener","l":"rewriteRel(LogicalExchange)","u":"rewriteRel(org.apache.calcite.rel.logical.LogicalExchange)"},{"p":"org.apache.calcite.sql2rel","c":"RelStructuredTypeFlattener","l":"rewriteRel(LogicalFilter)","u":"rewriteRel(org.apache.calcite.rel.logical.LogicalFilter)"},{"p":"org.apache.calcite.sql2rel","c":"RelStructuredTypeFlattener","l":"rewriteRel(LogicalIntersect)","u":"rewriteRel(org.apache.calcite.rel.logical.LogicalIntersect)"},{"p":"org.apache.calcite.sql2rel","c":"RelStructuredTypeFlattener","l":"rewriteRel(LogicalJoin)","u":"rewriteRel(org.apache.calcite.rel.logical.LogicalJoin)"},{"p":"org.apache.calcite.sql2rel","c":"RelStructuredTypeFlattener","l":"rewriteRel(LogicalMatch)","u":"rewriteRel(org.apache.calcite.rel.logical.LogicalMatch)"},{"p":"org.apache.calcite.sql2rel","c":"RelStructuredTypeFlattener","l":"rewriteRel(LogicalMinus)","u":"rewriteRel(org.apache.calcite.rel.logical.LogicalMinus)"},{"p":"org.apache.calcite.sql2rel","c":"RelStructuredTypeFlattener","l":"rewriteRel(LogicalProject)","u":"rewriteRel(org.apache.calcite.rel.logical.LogicalProject)"},{"p":"org.apache.calcite.sql2rel","c":"RelStructuredTypeFlattener","l":"rewriteRel(LogicalRepeatUnion)","u":"rewriteRel(org.apache.calcite.rel.logical.LogicalRepeatUnion)"},{"p":"org.apache.calcite.sql2rel","c":"RelStructuredTypeFlattener","l":"rewriteRel(LogicalSnapshot)","u":"rewriteRel(org.apache.calcite.rel.logical.LogicalSnapshot)"},{"p":"org.apache.calcite.sql2rel","c":"RelStructuredTypeFlattener","l":"rewriteRel(LogicalSortExchange)","u":"rewriteRel(org.apache.calcite.rel.logical.LogicalSortExchange)"},{"p":"org.apache.calcite.sql2rel","c":"RelStructuredTypeFlattener","l":"rewriteRel(LogicalTableFunctionScan)","u":"rewriteRel(org.apache.calcite.rel.logical.LogicalTableFunctionScan)"},{"p":"org.apache.calcite.sql2rel","c":"RelStructuredTypeFlattener","l":"rewriteRel(LogicalTableModify)","u":"rewriteRel(org.apache.calcite.rel.logical.LogicalTableModify)"},{"p":"org.apache.calcite.sql2rel","c":"RelStructuredTypeFlattener","l":"rewriteRel(LogicalTableSpool)","u":"rewriteRel(org.apache.calcite.rel.logical.LogicalTableSpool)"},{"p":"org.apache.calcite.sql2rel","c":"RelStructuredTypeFlattener","l":"rewriteRel(LogicalUnion)","u":"rewriteRel(org.apache.calcite.rel.logical.LogicalUnion)"},{"p":"org.apache.calcite.sql2rel","c":"RelStructuredTypeFlattener","l":"rewriteRel(LogicalValues)","u":"rewriteRel(org.apache.calcite.rel.logical.LogicalValues)"},{"p":"org.apache.calcite.sql2rel","c":"RelStructuredTypeFlattener","l":"rewriteRel(RelStructuredTypeFlattener.SelfFlatteningRel)","u":"rewriteRel(org.apache.calcite.sql2rel.RelStructuredTypeFlattener.SelfFlatteningRel)"},{"p":"org.apache.calcite.sql2rel","c":"RelStructuredTypeFlattener","l":"rewriteRel(Sample)","u":"rewriteRel(org.apache.calcite.rel.core.Sample)"},{"p":"org.apache.calcite.sql2rel","c":"RelStructuredTypeFlattener","l":"rewriteRel(Sort)","u":"rewriteRel(org.apache.calcite.rel.core.Sort)"},{"p":"org.apache.calcite.sql2rel","c":"RelStructuredTypeFlattener","l":"rewriteRel(TableScan)","u":"rewriteRel(org.apache.calcite.rel.core.TableScan)"},{"p":"org.apache.calcite.sql2rel","c":"RelStructuredTypeFlattener","l":"rewriteRel(Uncollect)","u":"rewriteRel(org.apache.calcite.rel.core.Uncollect)"},{"p":"org.apache.calcite.sql.dialect","c":"HsqldbSqlDialect","l":"rewriteSingleValueExpr(SqlNode, RelDataType)","u":"rewriteSingleValueExpr(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.dialect","c":"MysqlSqlDialect","l":"rewriteSingleValueExpr(SqlNode, RelDataType)","u":"rewriteSingleValueExpr(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.dialect","c":"PostgresqlSqlDialect","l":"rewriteSingleValueExpr(SqlNode, RelDataType)","u":"rewriteSingleValueExpr(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"rewriteSingleValueExpr(SqlNode, RelDataType)","u":"rewriteSingleValueExpr(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"rewritesTo(String)","u":"rewritesTo(java.lang.String)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewAggregateRule","l":"rewriteView(RelBuilder, RexBuilder, RexSimplify, RelMetadataQuery, MaterializedViewRule.MatchModality, boolean, RelNode, Project, RelNode, Project, RelNode, BiMap<RexTableInputRef.RelTableRef, RexTableInputRef.RelTableRef>, MaterializedViewRule.EquivalenceClasses)","u":"rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.materialize.MaterializedViewRule.MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.materialize.MaterializedViewRule.EquivalenceClasses)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewJoinRule","l":"rewriteView(RelBuilder, RexBuilder, RexSimplify, RelMetadataQuery, MaterializedViewRule.MatchModality, boolean, RelNode, Project, RelNode, Project, RelNode, BiMap<RexTableInputRef.RelTableRef, RexTableInputRef.RelTableRef>, MaterializedViewRule.EquivalenceClasses)","u":"rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.materialize.MaterializedViewRule.MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.materialize.MaterializedViewRule.EquivalenceClasses)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule","l":"rewriteView(RelBuilder, RexBuilder, RexSimplify, RelMetadataQuery, MaterializedViewRule.MatchModality, boolean, RelNode, Project, RelNode, Project, RelNode, BiMap<RexTableInputRef.RelTableRef, RexTableInputRef.RelTableRef>, MaterializedViewRule.EquivalenceClasses)","u":"rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.materialize.MaterializedViewRule.MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.materialize.MaterializedViewRule.EquivalenceClasses)"},{"p":"org.apache.calcite.rex","c":"RexAnalyzer","l":"RexAnalyzer(RexNode, RelOptPredicateList)","u":"%3Cinit%3E(org.apache.calcite.rex.RexNode,org.apache.calcite.plan.RelOptPredicateList)"},{"p":"org.apache.calcite.adapter.enumerable","c":"AggAddContext","l":"rexArguments()"},{"p":"org.apache.calcite.adapter.enumerable","c":"WinAggResultContext","l":"rexArguments()"},{"p":"org.apache.calcite.rex","c":"RexBiVisitorImpl","l":"RexBiVisitorImpl(boolean)","u":"%3Cinit%3E(boolean)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.RexInputConverter","l":"rexBuilder"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl.CalcitePreparingStmt","l":"rexBuilder"},{"p":"org.apache.calcite.rex","c":"RexSimplify","l":"rexBuilder"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"rexBuilder"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"rexBuilder"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"RexBuilder(RelDataTypeFactory)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableTableFunctionScan","l":"rexCall"},{"p":"org.apache.calcite.rex","c":"RexCall","l":"RexCall(RelDataType, SqlOperator, List<? extends RexNode>)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlOperator,java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexCall","l":"RexCall(SqlParserPos, RelDataType, SqlOperator, List<? extends RexNode>)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlOperator,java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexCallBinding","l":"RexCallBinding(RelDataTypeFactory, SqlOperator, List<? extends RexNode>, List<RelCollation>)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.sql.SqlOperator,java.util.List,java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexChecker","l":"RexChecker(List<RelDataType>, RelNode.Context, Litmus)","u":"%3Cinit%3E(java.util.List,org.apache.calcite.rel.RelNode.Context,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.rex","c":"RexChecker","l":"RexChecker(RelDataType, RelNode.Context, Litmus)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode.Context,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.rex","c":"RexDynamicParam","l":"RexDynamicParam(RelDataType, int)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataType,int)"},{"p":"org.apache.calcite.rex","c":"RexExecutable","l":"RexExecutable(String, Object)","u":"%3Cinit%3E(java.lang.String,java.lang.Object)"},{"p":"org.apache.calcite.rex","c":"RexExecutorImpl","l":"RexExecutorImpl(DataContext)","u":"%3Cinit%3E(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectCorrelateTransposeRule.RexFieldAccessReplacer","l":"RexFieldAccessReplacer(CorrelationId, RexCorrelVariable, RexBuilder, Map<Integer, Integer>)","u":"%3Cinit%3E(org.apache.calcite.rel.core.CorrelationId,org.apache.calcite.rex.RexCorrelVariable,org.apache.calcite.rex.RexBuilder,java.util.Map)"},{"p":"org.apache.calcite.rex","c":"RexFieldCollation","l":"RexFieldCollation(RexNode, Set<SqlKind>)","u":"%3Cinit%3E(org.apache.calcite.rex.RexNode,java.util.Set)"},{"p":"org.apache.calcite.adapter.enumerable","c":"AggAddContext","l":"rexFilterArgument()"},{"p":"org.apache.calcite.plan","c":"RexImplicationChecker","l":"RexImplicationChecker(RexBuilder, RexExecutor, RelDataType)","u":"%3Cinit%3E(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexExecutor,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.RexInputConverter","l":"RexInputConverter(RexBuilder, List<RelDataTypeField>, int[])","u":"%3Cinit%3E(org.apache.calcite.rex.RexBuilder,java.util.List,int[])"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.RexInputConverter","l":"RexInputConverter(RexBuilder, List<RelDataTypeField>, List<RelDataTypeField>, int[])","u":"%3Cinit%3E(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List,int[])"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.RexInputConverter","l":"RexInputConverter(RexBuilder, List<RelDataTypeField>, List<RelDataTypeField>, List<RelDataTypeField>, int[])","u":"%3Cinit%3E(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List,java.util.List,int[])"},{"p":"org.apache.calcite.rex","c":"RexInputRef","l":"RexInputRef(int, RelDataType)","u":"%3Cinit%3E(int,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rex","c":"RexLambdaRef","l":"RexLambdaRef(int, String, RelDataType)","u":"%3Cinit%3E(int,java.lang.String,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"rexList"},{"p":"org.apache.calcite.rex","c":"RexLocalRef","l":"RexLocalRef(int, RelDataType)","u":"%3Cinit%3E(int,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rex","c":"RexNode","l":"RexNode()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rex","c":"RexPatternFieldRef","l":"RexPatternFieldRef(String, int, RelDataType)","u":"%3Cinit%3E(java.lang.String,int,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rex","c":"RexPermutationShuttle","l":"RexPermutationShuttle(Permutation)","u":"%3Cinit%3E(org.apache.calcite.util.Permutation)"},{"p":"org.apache.calcite.rex","c":"RexPermuteInputsShuttle","l":"RexPermuteInputsShuttle(Mappings.TargetMapping, RelNode...)","u":"%3Cinit%3E(org.apache.calcite.util.mapping.Mappings.TargetMapping,org.apache.calcite.rel.RelNode...)"},{"p":"org.apache.calcite.rex","c":"RexProgram","l":"RexProgram(RelDataType, List<? extends RexNode>, List<RexLocalRef>, RexLocalRef, RelDataType)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataType,java.util.List,java.util.List,org.apache.calcite.rex.RexLocalRef,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rex","c":"RexProgramBuilder","l":"RexProgramBuilder(RelDataType, RexBuilder)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexBuilder)"},{"p":"org.apache.calcite.rex","c":"RexShuttle","l":"RexShuttle()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rex","c":"RexSimplify","l":"RexSimplify(RexBuilder, boolean, RexExecutor)","u":"%3Cinit%3E(org.apache.calcite.rex.RexBuilder,boolean,org.apache.calcite.rex.RexExecutor)"},{"p":"org.apache.calcite.rex","c":"RexSimplify","l":"RexSimplify(RexBuilder, RelOptPredicateList, boolean, RexExecutor)","u":"%3Cinit%3E(org.apache.calcite.rex.RexBuilder,org.apache.calcite.plan.RelOptPredicateList,boolean,org.apache.calcite.rex.RexExecutor)"},{"p":"org.apache.calcite.rex","c":"RexSimplify","l":"RexSimplify(RexBuilder, RelOptPredicateList, RexExecutor)","u":"%3Cinit%3E(org.apache.calcite.rex.RexBuilder,org.apache.calcite.plan.RelOptPredicateList,org.apache.calcite.rex.RexExecutor)"},{"p":"org.apache.calcite.rex","c":"RexSlot","l":"RexSlot(String, int, RelDataType)","u":"%3Cinit%3E(java.lang.String,int,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rex","c":"RexSqlReflectiveConvertletTable","l":"RexSqlReflectiveConvertletTable()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rex","c":"RexSqlStandardConvertletTable","l":"RexSqlStandardConvertletTable()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rex","c":"RexToSqlNodeConverterImpl","l":"RexToSqlNodeConverterImpl(RexSqlConvertletTable)","u":"%3Cinit%3E(org.apache.calcite.rex.RexSqlConvertletTable)"},{"p":"org.apache.calcite.rex","c":"RexTransformer","l":"RexTransformer(RexNode, RexBuilder)","u":"%3Cinit%3E(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexBuilder)"},{"p":"org.apache.calcite.rex","c":"RexUnaryBiVisitor","l":"RexUnaryBiVisitor(boolean)","u":"%3Cinit%3E(boolean)"},{"p":"org.apache.calcite.rex","c":"RexVariable","l":"RexVariable(String, RelDataType)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rex","c":"RexVisitorImpl","l":"RexVisitorImpl(boolean)","u":"%3Cinit%3E(boolean)"},{"p":"org.apache.calcite.rel.core","c":"Window.RexWinAggCall","l":"RexWinAggCall(SqlAggFunction, RelDataType, List<RexNode>, int, boolean)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlAggFunction,org.apache.calcite.rel.type.RelDataType,java.util.List,int,boolean)"},{"p":"org.apache.calcite.rel.core","c":"Window.RexWinAggCall","l":"RexWinAggCall(SqlAggFunction, RelDataType, List<RexNode>, int, boolean, boolean)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlAggFunction,org.apache.calcite.rel.type.RelDataType,java.util.List,int,boolean,boolean)"},{"p":"org.apache.calcite.rex","c":"RexWindowBound","l":"RexWindowBound()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel","c":"BiRel","l":"right"},{"p":"org.apache.calcite.rel.mutable","c":"MutableJoin","l":"right"},{"p":"org.apache.calcite.util","c":"Pair","l":"right"},{"p":"org.apache.calcite.linq4j","c":"JoinType","l":"RIGHT"},{"p":"org.apache.calcite.rel.core","c":"JoinRelType","l":"RIGHT"},{"p":"org.apache.calcite.sql","c":"JoinType","l":"RIGHT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"RIGHT"},{"p":"org.apache.calcite.rel.rules","c":"JoinProjectTransposeRule.Config","l":"RIGHT"},{"p":"org.apache.calcite.rel.rules","c":"JoinPushThroughJoinRule.Config","l":"RIGHT"},{"p":"org.apache.calcite.rel.rules","c":"JoinPushThroughJoinRule","l":"RIGHT"},{"p":"org.apache.calcite.rel.rules","c":"JoinUnionTransposeRule.Config","l":"RIGHT"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"RIGHT"},{"p":"org.apache.calcite.util.mapping","c":"IntPair","l":"RIGHT"},{"p":"org.apache.calcite.plan","c":"DeriveMode","l":"RIGHT_FIRST"},{"p":"org.apache.calcite.rel.rules","c":"JoinProjectTransposeRule.Config","l":"RIGHT_OUTER"},{"p":"org.apache.calcite.rel.rules","c":"MultiJoinProjectTransposeRule.Config","l":"RIGHT_PROJECT"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"right(ByteString, int)","u":"right(org.apache.calcite.avatica.util.ByteString,int)"},{"p":"org.apache.calcite.runtime","c":"PairList","l":"right(int)"},{"p":"org.apache.calcite.util","c":"Pair","l":"right(Iterable<? extends Map.Entry<? extends L, ? extends R>>)","u":"right(java.lang.Iterable)"},{"p":"org.apache.calcite.util","c":"Pair","l":"right(List<? extends Map.Entry<? extends K, ? extends V>>)","u":"right(java.util.List)"},{"p":"org.apache.calcite.util.mapping","c":"IntPair","l":"right(List<IntPair>)","u":"right(java.util.List)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"right(String, int)","u":"right(java.lang.String,int)"},{"p":"org.apache.calcite.plan","c":"RelOptPredicateList","l":"rightInferredPredicates"},{"p":"org.apache.calcite.rel.core","c":"EquiJoin","l":"rightKeys"},{"p":"org.apache.calcite.rel.core","c":"JoinInfo","l":"rightKeys"},{"p":"org.apache.calcite.runtime","c":"PairList","l":"rightList()"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"rightPrec(int, boolean)","u":"rightPrec(int,boolean)"},{"p":"org.apache.calcite.rel.core","c":"JoinInfo","l":"rightSet()"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"RightShift"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"rightShift(Expression, Expression)","u":"rightShift(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"rightShift(Expression, Expression, Method)","u":"rightShift(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"RightShiftAssign"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"rightShiftAssign(Expression, Expression)","u":"rightShiftAssign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"rightShiftAssign(Expression, Expression, Method)","u":"rightShiftAssign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"rightShiftAssign(Expression, Expression, Method, LambdaExpression)","u":"rightShiftAssign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.LambdaExpression)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"rightTrim(String, char)","u":"rightTrim(java.lang.String,char)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"RLIKE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"RLIKE"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"RLIKE"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.RegexFunction","l":"rlike(String, String)","u":"rlike(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.sql.babel.postgres","c":"SqlSetOptions.Names","l":"ROLE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ROLLBACK"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaImpl","l":"rollback(Meta.ConnectionHandle)","u":"rollback(org.apache.calcite.avatica.Meta.ConnectionHandle)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"rolledUpColumns"},{"p":"org.apache.calcite.adapter.druid","c":"DruidTable","l":"rolledUpColumnValidInsideAgg(String, SqlCall, SqlNode, CalciteConnectionConfig)","u":"rolledUpColumnValidInsideAgg(java.lang.String,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.config.CalciteConnectionConfig)"},{"p":"org.apache.calcite.adapter.kafka","c":"KafkaStreamTable","l":"rolledUpColumnValidInsideAgg(String, SqlCall, SqlNode, CalciteConnectionConfig)","u":"rolledUpColumnValidInsideAgg(java.lang.String,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.config.CalciteConnectionConfig)"},{"p":"org.apache.calcite.schema.impl","c":"AbstractTable","l":"rolledUpColumnValidInsideAgg(String, SqlCall, SqlNode, CalciteConnectionConfig)","u":"rolledUpColumnValidInsideAgg(java.lang.String,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.config.CalciteConnectionConfig)"},{"p":"org.apache.calcite.schema","c":"Table","l":"rolledUpColumnValidInsideAgg(String, SqlCall, SqlNode, CalciteConnectionConfig)","u":"rolledUpColumnValidInsideAgg(java.lang.String,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.config.CalciteConnectionConfig)"},{"p":"org.apache.calcite.sql.fun","c":"SqlSpatialTypeFunctions.ExplodeTable","l":"rolledUpColumnValidInsideAgg(String, SqlCall, SqlNode, CalciteConnectionConfig)","u":"rolledUpColumnValidInsideAgg(java.lang.String,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.config.CalciteConnectionConfig)"},{"p":"org.apache.calcite.sql.fun","c":"SqlSpatialTypeFunctions.GridTable","l":"rolledUpColumnValidInsideAgg(String, SqlCall, SqlNode, CalciteConnectionConfig)","u":"rolledUpColumnValidInsideAgg(java.lang.String,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.config.CalciteConnectionConfig)"},{"p":"org.apache.calcite.test.schemata.orderstream","c":"BaseOrderStreamTable","l":"rolledUpColumnValidInsideAgg(String, SqlCall, SqlNode, CalciteConnectionConfig)","u":"rolledUpColumnValidInsideAgg(java.lang.String,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.config.CalciteConnectionConfig)"},{"p":"org.apache.calcite.test.schemata.orderstream","c":"OrdersTable","l":"rolledUpColumnValidInsideAgg(String, SqlCall, SqlNode, CalciteConnectionConfig)","u":"rolledUpColumnValidInsideAgg(java.lang.String,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.config.CalciteConnectionConfig)"},{"p":"org.apache.calcite.test.schemata.orderstream","c":"ProductsTable","l":"rolledUpColumnValidInsideAgg(String, SqlCall, SqlNode, CalciteConnectionConfig)","u":"rolledUpColumnValidInsideAgg(java.lang.String,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.config.CalciteConnectionConfig)"},{"p":"org.apache.calcite.test.schemata.orderstream","c":"ProductsTemporalTable","l":"rolledUpColumnValidInsideAgg(String, SqlCall, SqlNode, CalciteConnectionConfig)","u":"rolledUpColumnValidInsideAgg(java.lang.String,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.config.CalciteConnectionConfig)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"rolledUpNotAllowed(String, String)","u":"rolledUpNotAllowed(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.rel.core","c":"Aggregate.Group","l":"ROLLUP"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ROLLUP"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"ROLLUP"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"rollup(List<ImmutableBitSet>)","u":"rollup(java.util.List)"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"RomanNumeralsCompiledPattern","l":"RomanNumeralsCompiledPattern(Set<PatternModifier>, boolean)","u":"%3Cinit%3E(java.util.Set,boolean)"},{"p":"org.apache.calcite.util.format.postgresql.format","c":"RomanNumeralsFormatPattern","l":"RomanNumeralsFormatPattern(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.interpreter","c":"Context","l":"root"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.ConvertResult","l":"root"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"root"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Blackboard","l":"root"},{"p":"org.apache.calcite","c":"DataContext","l":"ROOT"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"root()"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Blackboard","l":"root()"},{"p":"org.apache.calcite.materialize","c":"Lattice","l":"rootNode"},{"p":"org.apache.calcite.interpreter","c":"Nodes.CoreCompiler","l":"rootRel"},{"p":"org.apache.calcite.prepare","c":"Prepare.PreparedResultImpl","l":"rootRel"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.CalciteSignature","l":"rootSchema"},{"p":"org.apache.calcite.materialize","c":"Lattice","l":"rootSchema"},{"p":"org.apache.calcite.prepare","c":"CalciteCatalogReader","l":"rootSchema"},{"p":"org.apache.calcite.plan","c":"RelOptLattice","l":"rootTable()"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"ROUND"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ROUND_INT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ROUND_LONG"},{"p":"org.apache.calcite.rel","c":"RelDistribution.Type","l":"ROUND_ROBIN_DISTRIBUTED"},{"p":"org.apache.calcite.rel","c":"RelDistributions","l":"ROUND_ROBIN_DISTRIBUTED"},{"p":"org.apache.calcite.util","c":"NumberUtil","l":"round(double)"},{"p":"org.apache.calcite.util","c":"TimestampString","l":"round(int)"},{"p":"org.apache.calcite.util","c":"TimestampWithTimeZoneString","l":"round(int)"},{"p":"org.apache.calcite.util","c":"TimeString","l":"round(int)"},{"p":"org.apache.calcite.util","c":"TimeWithTimeZoneString","l":"round(int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"round(int, int)","u":"round(int,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"round(long, long)","u":"round(long,long)"},{"p":"org.apache.calcite.test","c":"CustomTypeSystems","l":"ROUNDING_MODE_HALF_UP"},{"p":"org.apache.calcite.rel.type","c":"DelegatingTypeSystem","l":"roundingMode()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystem","l":"roundingMode()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystemImpl","l":"roundingMode()"},{"p":"org.apache.calcite.adapter.enumerable","c":"JavaRowFormat","l":"ROW"},{"p":"org.apache.calcite.runtime.rtti","c":"RuntimeTypeInformation.RuntimeSqlTypeName","l":"ROW"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ROW"},{"p":"org.apache.calcite.sql","c":"TableCharacteristic.Semantics","l":"ROW"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"ROW"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"ROW"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ROW_AS_COPY"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ROW_COPY_VALUES"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ROW_COUNT"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ROW_NUMBER"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"ROW_NUMBER"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ROW_VALUE"},{"p":"org.apache.calcite.profile","c":"Profiler.Profile","l":"rowCount"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"rowCount"},{"p":"org.apache.calcite.profile","c":"Profiler.RowCount","l":"RowCount(int)","u":"%3Cinit%3E(int)"},{"p":"org.apache.calcite.materialize","c":"Lattice","l":"rowCountEstimate"},{"p":"org.apache.calcite.model","c":"JsonLattice","l":"rowCountEstimate"},{"p":"org.apache.calcite.materialize","c":"Lattice.Builder","l":"rowCountEstimate(double)"},{"p":"org.apache.calcite.adapter.kafka","c":"KafkaRowConverter","l":"rowDataType(String)","u":"rowDataType(java.lang.String)"},{"p":"org.apache.calcite.adapter.kafka","c":"KafkaRowConverterImpl","l":"rowDataType(String)","u":"rowDataType(java.lang.String)"},{"p":"org.apache.calcite.sql.type","c":"ExtraSqlTypes","l":"ROWID"},{"p":"org.apache.calcite.adapter.enumerable.impl","c":"WinAggResultContextImpl","l":"rowInFrame(Expression)","u":"rowInFrame(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.adapter.enumerable","c":"WinAggFrameResultContext","l":"rowInFrame(Expression)","u":"rowInFrame(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.adapter.enumerable.impl","c":"WinAggResultContextImpl","l":"rowInPartition(Expression)","u":"rowInPartition(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.adapter.enumerable","c":"WinAggFrameResultContext","l":"rowInPartition(Expression)","u":"rowInPartition(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"rowMustBeNonNegativeIntegral()"},{"p":"org.apache.calcite.tools","c":"RelBuilder.OverCall","l":"rowsBetween(RexWindowBound, RexWindowBound)","u":"rowsBetween(org.apache.calcite.rex.RexWindowBound,org.apache.calcite.rex.RexWindowBound)"},{"p":"org.apache.calcite.tools","c":"RelBuilder.OverCall","l":"rowsFrom(RexWindowBound)","u":"rowsFrom(org.apache.calcite.rex.RexWindowBound)"},{"p":"org.apache.calcite.runtime.rtti","c":"RowSqlTypeRtti","l":"RowSqlTypeRtti(Map.Entry<String, RuntimeTypeInformation>...)","u":"%3Cinit%3E(java.util.Map.Entry...)"},{"p":"org.apache.calcite.tools","c":"RelBuilder.OverCall","l":"rowsTo(RexWindowBound)","u":"rowsTo(org.apache.calcite.rex.RexWindowBound)"},{"p":"org.apache.calcite.tools","c":"RelBuilder.OverCall","l":"rowsUnbounded()"},{"p":"org.apache.calcite.adapter.enumerable","c":"AggAddContext","l":"rowTranslator()"},{"p":"org.apache.calcite.adapter.enumerable.impl","c":"WinAggAddContextImpl","l":"rowTranslator()"},{"p":"org.apache.calcite.adapter.enumerable.impl","c":"WinAggResultContextImpl","l":"rowTranslator(Expression)","u":"rowTranslator(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.adapter.enumerable","c":"WinAggFrameResultContext","l":"rowTranslator(Expression)","u":"rowTranslator(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.CalciteSignature","l":"rowType"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.ParseResult","l":"rowType"},{"p":"org.apache.calcite.plan","c":"RelOptAbstractTable","l":"rowType"},{"p":"org.apache.calcite.prepare","c":"Prepare.PreparedResultImpl","l":"rowType"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"rowType"},{"p":"org.apache.calcite.rel.mutable","c":"MutableRel","l":"rowType"},{"p":"org.apache.calcite.sql.validate","c":"MatchRecognizeNamespace","l":"rowType"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"rowType"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"rowType"},{"p":"org.apache.calcite.rel.core","c":"Collect","l":"rowType()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope.Resolve","l":"rowType()"},{"p":"org.apache.calcite.sql.validate.implicit","c":"TypeCoercion","l":"rowTypeCoercion(SqlValidatorScope, SqlNode, int, RelDataType)","u":"rowTypeCoercion(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,int,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate.implicit","c":"TypeCoercionImpl","l":"rowTypeCoercion(SqlValidatorScope, SqlNode, int, RelDataType)","u":"rowTypeCoercion(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,int,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"RPAD"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"RPAD"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"rpad(ByteString, int)","u":"rpad(org.apache.calcite.avatica.util.ByteString,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"rpad(ByteString, int, ByteString)","u":"rpad(org.apache.calcite.avatica.util.ByteString,int,org.apache.calcite.avatica.util.ByteString)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"rpad(String, int)","u":"rpad(java.lang.String,int)"},{"p":"org.apache.calcite.util","c":"Util","l":"rpad(String, int)","u":"rpad(java.lang.String,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"rpad(String, int, String)","u":"rpad(java.lang.String,int,java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"RTRIM"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"RTRIM"},{"p":"org.apache.calcite.sql.fun","c":"OracleSqlOperatorTable","l":"RTRIM"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"RTRIM"},{"p":"org.apache.calcite.util","c":"NlsString","l":"rtrim()"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"rtrim(ByteString)","u":"rtrim(org.apache.calcite.avatica.util.ByteString)"},{"p":"org.apache.calcite.util","c":"NlsString","l":"rtrim(int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"rtrim(String)","u":"rtrim(java.lang.String)"},{"p":"org.apache.calcite.util","c":"Util","l":"rtrim(String)","u":"rtrim(java.lang.String)"},{"p":"org.apache.calcite.plan","c":"RelOptRuleCall","l":"rule"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor.UnifyRuleCall","l":"rule"},{"p":"org.apache.calcite.tools","c":"Programs","l":"RULE_SET"},{"p":"org.apache.calcite.plan","c":"MulticastRelOptListener","l":"ruleAttempted(RelOptListener.RuleAttemptedEvent)","u":"ruleAttempted(org.apache.calcite.plan.RelOptListener.RuleAttemptedEvent)"},{"p":"org.apache.calcite.plan","c":"RelOptListener","l":"ruleAttempted(RelOptListener.RuleAttemptedEvent)","u":"ruleAttempted(org.apache.calcite.plan.RelOptListener.RuleAttemptedEvent)"},{"p":"org.apache.calcite.plan","c":"RuleEventLogger","l":"ruleAttempted(RelOptListener.RuleAttemptedEvent)","u":"ruleAttempted(org.apache.calcite.plan.RelOptListener.RuleAttemptedEvent)"},{"p":"org.apache.calcite.plan.visualizer","c":"RuleMatchVisualizer","l":"ruleAttempted(RelOptListener.RuleAttemptedEvent)","u":"ruleAttempted(org.apache.calcite.plan.RelOptListener.RuleAttemptedEvent)"},{"p":"org.apache.calcite.plan","c":"RelOptListener.RuleAttemptedEvent","l":"RuleAttemptedEvent(Object, RelNode, RelOptRuleCall, boolean)","u":"%3Cinit%3E(java.lang.Object,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptRuleCall,boolean)"},{"p":"org.apache.calcite.plan","c":"RelOptListener.RuleEvent","l":"RuleEvent(Object, RelNode, RelOptRuleCall)","u":"%3Cinit%3E(java.lang.Object,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptRuleCall)"},{"p":"org.apache.calcite.plan","c":"RuleEventLogger","l":"RuleEventLogger()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.convert","c":"ConverterRule.Config","l":"ruleFactory()"},{"p":"org.apache.calcite.plan.visualizer","c":"RuleMatchVisualizer","l":"RuleMatchVisualizer()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.plan.visualizer","c":"RuleMatchVisualizer","l":"RuleMatchVisualizer(String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.plan","c":"RelOptListener.RuleProductionEvent","l":"RuleProductionEvent(Object, RelNode, RelOptRuleCall, boolean)","u":"%3Cinit%3E(java.lang.Object,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptRuleCall,boolean)"},{"p":"org.apache.calcite.plan","c":"MulticastRelOptListener","l":"ruleProductionSucceeded(RelOptListener.RuleProductionEvent)","u":"ruleProductionSucceeded(org.apache.calcite.plan.RelOptListener.RuleProductionEvent)"},{"p":"org.apache.calcite.plan","c":"RelOptListener","l":"ruleProductionSucceeded(RelOptListener.RuleProductionEvent)","u":"ruleProductionSucceeded(org.apache.calcite.plan.RelOptListener.RuleProductionEvent)"},{"p":"org.apache.calcite.plan","c":"RuleEventLogger","l":"ruleProductionSucceeded(RelOptListener.RuleProductionEvent)","u":"ruleProductionSucceeded(org.apache.calcite.plan.RelOptListener.RuleProductionEvent)"},{"p":"org.apache.calcite.plan.visualizer","c":"RuleMatchVisualizer","l":"ruleProductionSucceeded(RelOptListener.RuleProductionEvent)","u":"ruleProductionSucceeded(org.apache.calcite.plan.RelOptListener.RuleProductionEvent)"},{"p":"org.apache.calcite.plan.volcano","c":"RuleQueue","l":"RuleQueue(VolcanoPlanner)","u":"%3Cinit%3E(org.apache.calcite.plan.volcano.VolcanoPlanner)"},{"p":"org.apache.calcite.adapter.arrow","c":"ArrowRules","l":"RULES"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraRules","l":"RULES"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules","l":"RULES"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbRules","l":"RULES"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoRules","l":"RULES"},{"p":"org.apache.calcite.interpreter","c":"Bindables","l":"RULES"},{"p":"org.apache.calcite.rel.stream","c":"StreamRules","l":"RULES"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRules","l":"rules()"},{"p":"org.apache.calcite.adapter.spark","c":"SparkRules","l":"rules()"},{"p":"org.apache.calcite.rel.rules","c":"MeasureRules","l":"rules()"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules","l":"rules(JdbcConvention)","u":"rules(org.apache.calcite.adapter.jdbc.JdbcConvention)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules","l":"rules(JdbcConvention, RelBuilderFactory)","u":"rules(org.apache.calcite.adapter.jdbc.JdbcConvention,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.tools","c":"Frameworks.ConfigBuilder","l":"ruleSets(List<RuleSet>)","u":"ruleSets(java.util.List)"},{"p":"org.apache.calcite.tools","c":"Frameworks.ConfigBuilder","l":"ruleSets(RuleSet...)","u":"ruleSets(org.apache.calcite.tools.RuleSet...)"},{"p":"org.apache.calcite.interpreter","c":"AggregateNode","l":"run()"},{"p":"org.apache.calcite.interpreter","c":"CollectNode","l":"run()"},{"p":"org.apache.calcite.interpreter","c":"FilterNode","l":"run()"},{"p":"org.apache.calcite.interpreter","c":"JoinNode","l":"run()"},{"p":"org.apache.calcite.interpreter","c":"MatchNode","l":"run()"},{"p":"org.apache.calcite.interpreter","c":"Node","l":"run()"},{"p":"org.apache.calcite.interpreter","c":"ProjectNode","l":"run()"},{"p":"org.apache.calcite.interpreter","c":"SetOpNode","l":"run()"},{"p":"org.apache.calcite.interpreter","c":"SortNode","l":"run()"},{"p":"org.apache.calcite.interpreter","c":"TableFunctionScanNode","l":"run()"},{"p":"org.apache.calcite.interpreter","c":"TableScanNode","l":"run()"},{"p":"org.apache.calcite.interpreter","c":"UncollectNode","l":"run()"},{"p":"org.apache.calcite.interpreter","c":"UnionNode","l":"run()"},{"p":"org.apache.calcite.interpreter","c":"ValuesNode","l":"run()"},{"p":"org.apache.calcite.interpreter","c":"WindowNode","l":"run()"},{"p":"org.apache.calcite.util","c":"Benchmark","l":"run()"},{"p":"org.apache.calcite.runtime","c":"Hook","l":"run(Object)","u":"run(java.lang.Object)"},{"p":"org.apache.calcite.tools","c":"RelRunners","l":"run(RelNode)","u":"run(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.tools","c":"Program","l":"run(RelOptPlanner, RelNode, RelTraitSet, List<RelOptMaterialization>, List<RelOptLattice>)","u":"run(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet,java.util.List,java.util.List)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"RUNNING"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"RUNNING"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertQuery","l":"runs()"},{"p":"org.apache.calcite.sql.test","c":"SqlTests.Stage","l":"RUNTIME"},{"p":"org.apache.calcite.runtime.rtti","c":"RuntimeTypeInformation","l":"RuntimeTypeInformation(RuntimeTypeInformation.RuntimeSqlTypeName)","u":"%3Cinit%3E(org.apache.calcite.runtime.rtti.RuntimeTypeInformation.RuntimeSqlTypeName)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"RuntimeVariables"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"runtimeVariables(Iterable<? extends ParameterExpression>)","u":"runtimeVariables(java.lang.Iterable)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"runtimeVariables(ParameterExpression...)","u":"runtimeVariables(org.apache.calcite.linq4j.tree.ParameterExpression...)"},{"p":"org.apache.calcite.util","c":"Smalls.IntString","l":"s"},{"p":"org.apache.calcite.sql.fun","c":"SqlItemOperator","l":"safe"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SAFE_ADD"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"SAFE_ADD"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"SAFE_CAST"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture.CastType","l":"SAFE_CAST"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"SAFE_CAST"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SAFE_DIVIDE"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"SAFE_DIVIDE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SAFE_MULTIPLY"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"SAFE_MULTIPLY"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"SAFE_NEGATE"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"SAFE_OFFSET"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"SAFE_ORDINAL"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SAFE_SUBTRACT"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"SAFE_SUBTRACT"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"safeAdd(BigDecimal, BigDecimal)","u":"safeAdd(java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"safeAdd(BigDecimal, double)","u":"safeAdd(java.math.BigDecimal,double)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"safeAdd(BigDecimal, long)","u":"safeAdd(java.math.BigDecimal,long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"safeAdd(double, BigDecimal)","u":"safeAdd(double,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"safeAdd(double, double)","u":"safeAdd(double,double)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"safeAdd(double, long)","u":"safeAdd(double,long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"safeAdd(long, BigDecimal)","u":"safeAdd(long,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"safeAdd(long, double)","u":"safeAdd(long,double)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"safeAdd(long, long)","u":"safeAdd(long,long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"safeDivide(BigDecimal, BigDecimal)","u":"safeDivide(java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"safeDivide(BigDecimal, double)","u":"safeDivide(java.math.BigDecimal,double)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"safeDivide(BigDecimal, long)","u":"safeDivide(java.math.BigDecimal,long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"safeDivide(double, BigDecimal)","u":"safeDivide(double,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"safeDivide(double, double)","u":"safeDivide(double,double)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"safeDivide(double, long)","u":"safeDivide(double,long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"safeDivide(long, BigDecimal)","u":"safeDivide(long,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"safeDivide(long, double)","u":"safeDivide(long,double)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"safeDivide(long, long)","u":"safeDivide(long,long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"safeMultiply(BigDecimal, BigDecimal)","u":"safeMultiply(java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"safeMultiply(BigDecimal, double)","u":"safeMultiply(java.math.BigDecimal,double)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"safeMultiply(BigDecimal, long)","u":"safeMultiply(java.math.BigDecimal,long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"safeMultiply(double, BigDecimal)","u":"safeMultiply(double,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"safeMultiply(double, double)","u":"safeMultiply(double,double)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"safeMultiply(double, long)","u":"safeMultiply(double,long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"safeMultiply(long, BigDecimal)","u":"safeMultiply(long,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"safeMultiply(long, double)","u":"safeMultiply(long,double)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"safeMultiply(long, long)","u":"safeMultiply(long,long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"safeSubtract(BigDecimal, BigDecimal)","u":"safeSubtract(java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"safeSubtract(BigDecimal, double)","u":"safeSubtract(java.math.BigDecimal,double)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"safeSubtract(BigDecimal, long)","u":"safeSubtract(java.math.BigDecimal,long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"safeSubtract(double, BigDecimal)","u":"safeSubtract(double,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"safeSubtract(double, double)","u":"safeSubtract(double,double)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"safeSubtract(double, long)","u":"safeSubtract(double,long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"safeSubtract(long, BigDecimal)","u":"safeSubtract(long,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"safeSubtract(long, double)","u":"safeSubtract(long,double)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"safeSubtract(long, long)","u":"safeSubtract(long,long)"},{"p":"org.apache.calcite.test.schemata.hr","c":"Employee","l":"salary"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale0"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale1"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale10"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale100"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale101"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale102"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale103"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale104"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale105"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale106"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale107"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale108"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale109"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale11"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale110"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale111"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale112"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale113"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale114"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale115"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale116"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale117"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale118"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale119"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale12"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale120"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale121"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale122"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale123"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale124"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale125"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale126"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale127"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale128"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale129"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale13"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale130"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale131"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale132"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale133"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale134"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale135"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale136"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale137"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale138"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale139"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale14"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale140"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale141"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale142"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale143"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale144"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale145"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale146"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale147"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale148"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale149"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale15"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale150"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale151"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale152"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale153"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale154"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale155"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale156"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale157"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale158"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale159"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale16"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale160"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale161"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale162"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale163"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale164"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale165"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale166"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale167"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale168"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale169"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale17"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale170"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale171"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale172"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale173"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale174"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale175"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale176"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale177"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale178"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale179"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale18"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale180"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale181"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale182"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale183"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale184"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale185"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale186"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale187"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale188"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale189"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale19"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale190"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale191"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale192"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale193"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale194"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale195"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale196"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale197"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale198"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale199"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale2"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale20"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale21"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale22"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale23"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale24"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale25"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale26"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale27"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale28"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale29"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale3"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale30"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale31"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale32"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale33"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale34"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale35"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale36"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale37"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale38"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale39"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale4"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale40"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale41"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale42"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale43"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale44"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale45"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale46"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale47"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale48"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale49"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale5"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale50"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale51"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale52"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale53"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale54"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale55"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale56"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale57"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale58"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale59"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale6"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale60"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale61"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale62"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale63"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale64"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale65"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale66"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale67"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale68"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale69"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale7"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale70"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale71"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale72"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale73"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale74"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale75"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale76"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale77"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale78"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale79"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale8"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale80"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale81"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale82"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale83"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale84"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale85"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale86"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale87"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale88"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale89"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale9"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale90"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale91"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale92"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale93"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale94"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale95"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale96"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale97"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale98"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"sale99"},{"p":"org.apache.calcite.test.schemata.foodmart","c":"FoodmartSchema","l":"sales_fact_1997"},{"p":"org.apache.calcite.test.schemata.foodmart","c":"FoodmartSchema.SalesFact","l":"SalesFact(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"SAME_PARTITION"},{"p":"org.apache.calcite.sql.fun","c":"SqlInternalOperators","l":"SAME_PARTITION"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"SAME_SAME"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"SAME_SAME_INTEGER"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"SAME_SAME_SAME"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"SAME_VARIADIC"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserFixture","l":"same()"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"same(int, int...)","u":"same(int,int...)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"sameNamedType(RelDataType, RelDataType)","u":"sameNamedType(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.type","c":"SameOperandTypeChecker","l":"SameOperandTypeChecker(int)","u":"%3Cinit%3E(int)"},{"p":"org.apache.calcite.sql.type","c":"SameOperandTypeExceptLastOperandChecker","l":"SameOperandTypeExceptLastOperandChecker(int, String)","u":"%3Cinit%3E(int,java.lang.String)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertQuery","l":"sameResultWithMaterializationsDisabled()"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"SAMPLE_TO_FILTER"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"sample(boolean, BigDecimal, Integer)","u":"sample(boolean,java.math.BigDecimal,java.lang.Integer)"},{"p":"org.apache.calcite.rel.core","c":"Sample","l":"Sample(RelInput)","u":"%3Cinit%3E(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel.core","c":"Sample","l":"Sample(RelOptCluster, RelNode, RelOptSamplingParameters)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptSamplingParameters)"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.Struct","l":"sampleFactory"},{"p":"org.apache.calcite.plan","c":"RelOptSamplingParameters","l":"sampleRate"},{"p":"org.apache.calcite.sql","c":"SqlSampleSpec.SqlTableSampleSpec","l":"sampleRate"},{"p":"org.apache.calcite.rel.rules","c":"SampleToFilterRule","l":"SampleToFilterRule(SampleToFilterRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.SampleToFilterRule.Config)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"sampleValue(SqlNode)","u":"sampleValue(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.test","c":"Matchers","l":"sanitizeRangeSet(String)","u":"sanitizeRangeSet(java.lang.String)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserFixture","l":"sap"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"sap"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"SARG"},{"p":"org.apache.calcite.rel.externalize","c":"RelJson","l":"sargFromJson(Map<String, Object>)","u":"sargFromJson(java.util.Map)"},{"p":"org.apache.calcite.rel.externalize","c":"RelJson","l":"sargFromJson(Map<String, Object>, RelDataType)","u":"sargFromJson(java.util.Map,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"sargRef(RexBuilder, RexNode, Sarg<C>, RelDataType, RexUnknownAs)","u":"sargRef(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,org.apache.calcite.util.Sarg,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexUnknownAs)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableConvention","l":"satisfies(RelTrait)","u":"satisfies(org.apache.calcite.plan.RelTrait)"},{"p":"org.apache.calcite.interpreter","c":"BindableConvention","l":"satisfies(RelTrait)","u":"satisfies(org.apache.calcite.plan.RelTrait)"},{"p":"org.apache.calcite.interpreter","c":"InterpretableConvention","l":"satisfies(RelTrait)","u":"satisfies(org.apache.calcite.plan.RelTrait)"},{"p":"org.apache.calcite.plan","c":"Convention.Impl","l":"satisfies(RelTrait)","u":"satisfies(org.apache.calcite.plan.RelTrait)"},{"p":"org.apache.calcite.plan","c":"RelTrait","l":"satisfies(RelTrait)","u":"satisfies(org.apache.calcite.plan.RelTrait)"},{"p":"org.apache.calcite.rel","c":"RelCollationImpl","l":"satisfies(RelTrait)","u":"satisfies(org.apache.calcite.plan.RelTrait)"},{"p":"org.apache.calcite.plan","c":"RelTraitSet","l":"satisfies(RelTraitSet)","u":"satisfies(org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.adapter.enumerable","c":"JavaRowFormat","l":"SCALAR"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.SubQueryType","l":"SCALAR"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.FlatProductInputType","l":"SCALAR"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SCALAR_EXECUTE1"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SCALAR_EXECUTE2"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"SCALAR_OR_RECORD_COLLECTION"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"SCALAR_OR_RECORD_COLLECTION_OR_MAP"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"SCALAR_QUERY"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"SCALAR_QUERY"},{"p":"org.apache.calcite.piglet","c":"Ast.Op","l":"SCALAR_TYPE"},{"p":"org.apache.calcite.rex","c":"RexSubQuery","l":"scalar(RelNode)","u":"scalar(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"scalarQuery(Function<RelBuilder, RelNode>)","u":"scalarQuery(java.util.function.Function)"},{"p":"org.apache.calcite.piglet","c":"Ast.ScalarType","l":"ScalarType(SqlParserPos, String)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"scalarValueRequiredInStrictModeOfJsonValueFunc(String)","u":"scalarValueRequiredInStrictModeOfJsonValueFunc(java.lang.String)"},{"p":"org.apache.calcite.rel.type","c":"RelDataType","l":"SCALE_NOT_SPECIFIED"},{"p":"org.apache.calcite.rel.rules","c":"ReduceDecimalsRule.RexExpander","l":"scaleDown(SqlParserPos, RexNode, int)","u":"scaleDown(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.rex.RexNode,int)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceDecimalsRule.RexExpander","l":"scaleDownDouble(SqlParserPos, RexNode, int)","u":"scaleDownDouble(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.rex.RexNode,int)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceDecimalsRule.RexExpander","l":"scaleUp(SqlParserPos, RexNode, int)","u":"scaleUp(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.rex.RexNode,int)"},{"p":"org.apache.calcite.adapter.druid","c":"QueryType","l":"SCAN"},{"p":"org.apache.calcite.rel.rules","c":"AggregateExtractProjectRule","l":"SCAN"},{"p":"org.apache.calcite.adapter.csv","c":"CsvScannableTable","l":"scan(DataContext)","u":"scan(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.adapter.csv","c":"CsvStreamScannableTable","l":"scan(DataContext)","u":"scan(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.adapter.file","c":"JsonScannableTable","l":"scan(DataContext)","u":"scan(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.adapter.geode.simple","c":"GeodeSimpleScannableTable","l":"scan(DataContext)","u":"scan(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcTable","l":"scan(DataContext)","u":"scan(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.adapter.kafka","c":"KafkaStreamTable","l":"scan(DataContext)","u":"scan(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.adapter.redis","c":"RedisTable","l":"scan(DataContext)","u":"scan(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.example.maze","c":"MazeTable","l":"scan(DataContext)","u":"scan(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.piglet","c":"PigTable","l":"scan(DataContext)","u":"scan(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.schema.impl","c":"ListTransientTable","l":"scan(DataContext)","u":"scan(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.schema","c":"ScannableTable","l":"scan(DataContext)","u":"scan(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.sql.fun","c":"SqlSpatialTypeFunctions.ExplodeTable","l":"scan(DataContext)","u":"scan(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.sql.fun","c":"SqlSpatialTypeFunctions.GridTable","l":"scan(DataContext)","u":"scan(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.test.schemata.orderstream","c":"InfiniteOrdersTable","l":"scan(DataContext)","u":"scan(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.test.schemata.orderstream","c":"OrdersHistoryTable","l":"scan(DataContext)","u":"scan(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.test.schemata.orderstream","c":"OrdersTable","l":"scan(DataContext)","u":"scan(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.test.schemata.orderstream","c":"ProductsTable","l":"scan(DataContext)","u":"scan(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.util","c":"Smalls.MazeTable","l":"scan(DataContext)","u":"scan(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.adapter.csv","c":"CsvFilterableTable","l":"scan(DataContext, List<RexNode>)","u":"scan(org.apache.calcite.DataContext,java.util.List)"},{"p":"org.apache.calcite.schema","c":"FilterableTable","l":"scan(DataContext, List<RexNode>)","u":"scan(org.apache.calcite.DataContext,java.util.List)"},{"p":"org.apache.calcite.schema","c":"ProjectableFilterableTable","l":"scan(DataContext, List<RexNode>, int[])","u":"scan(org.apache.calcite.DataContext,java.util.List,int[])"},{"p":"org.apache.calcite.tools","c":"PigRelBuilder","l":"scan(Iterable<String>)","u":"scan(java.lang.Iterable)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"scan(Iterable<String>)","u":"scan(java.lang.Iterable)"},{"p":"org.apache.calcite.piglet","c":"PigRelBuilder","l":"scan(RelDataType, List<String>)","u":"scan(org.apache.calcite.rel.type.RelDataType,java.util.List)"},{"p":"org.apache.calcite.piglet","c":"PigRelBuilder","l":"scan(RelDataType, String...)","u":"scan(org.apache.calcite.rel.type.RelDataType,java.lang.String...)"},{"p":"org.apache.calcite.piglet","c":"PigRelBuilder","l":"scan(RelOptTable, String...)","u":"scan(org.apache.calcite.plan.RelOptTable,java.lang.String...)"},{"p":"org.apache.calcite.tools","c":"PigRelBuilder","l":"scan(String...)","u":"scan(java.lang.String...)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"scan(String...)","u":"scan(java.lang.String...)"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.Struct","l":"scanFactory"},{"p":"org.apache.calcite.adapter.csv","c":"CsvTable.Flavor","l":"SCANNABLE"},{"p":"org.apache.calcite.adapter.file","c":"CsvTable.Flavor","l":"SCANNABLE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SCANNABLE_TABLE_SCAN"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema.Entry","l":"schema"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"schema"},{"p":"org.apache.calcite.plan","c":"RelOptAbstractTable","l":"schema"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl.CalcitePreparingStmt","l":"schema"},{"p":"org.apache.calcite.schema.impl","c":"AbstractTableQueryable","l":"schema"},{"p":"org.apache.calcite.schema.impl","c":"DelegatingSchema","l":"schema"},{"p":"org.apache.calcite.schema.impl","c":"ViewTableMacro","l":"schema"},{"p":"org.apache.calcite.test","c":"ConnectionSpec","l":"schema"},{"p":"org.apache.calcite.config","c":"CalciteConnectionProperty","l":"SCHEMA"},{"p":"org.apache.calcite.piglet","c":"Ast.Op","l":"SCHEMA"},{"p":"org.apache.calcite.sql.validate","c":"SqlMonikerType","l":"SCHEMA"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaImpl","l":"SCHEMA_COLUMNS"},{"p":"org.apache.calcite.config","c":"CalciteConnectionProperty","l":"SCHEMA_FACTORY"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SCHEMA_GET_SUB_SCHEMA"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SCHEMA_GET_TABLE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SCHEMA_PLUS_ADD_TABLE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SCHEMA_PLUS_REMOVE_TABLE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SCHEMA_PLUS_UNWRAP"},{"p":"org.apache.calcite.config","c":"CalciteConnectionProperty","l":"SCHEMA_TYPE"},{"p":"org.apache.calcite.piglet","c":"Ast.Schema","l":"Schema(SqlParserPos, List<Ast.FieldSchema>)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,java.util.List)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"schemaExists(String)","u":"schemaExists(java.lang.String)"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfig","l":"schemaFactory(Class<T>, T)","u":"schemaFactory(java.lang.Class,T)"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfigImpl","l":"schemaFactory(Class<T>, T)","u":"schemaFactory(java.lang.Class,T)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"schemaInvalidType(String, String)","u":"schemaInvalidType(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.SchemaSpec","l":"schemaName"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"schemaNotFound(String)","u":"schemaNotFound(java.lang.String)"},{"p":"org.apache.calcite.schema.impl","c":"ViewTableMacro","l":"schemaPath"},{"p":"org.apache.calcite.model","c":"JsonRoot","l":"schemas"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SCHEMAS_ENUMERABLE_FILTERABLE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SCHEMAS_ENUMERABLE_PROJECTABLE_FILTERABLE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SCHEMAS_ENUMERABLE_SCANNABLE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SCHEMAS_QUERYABLE"},{"p":"org.apache.calcite.schema","c":"Path","l":"schemas()"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfig","l":"schemaType()"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfigImpl","l":"schemaType()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl.IdInfo","l":"scope"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope.Resolve","l":"scope"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Blackboard","l":"scope"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"SCOPE"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Blackboard","l":"scope()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"scopes"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.ScoreTableFunction","l":"ScoreTableFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.test","c":"CalciteAssert.DatabaseInstance","l":"scott"},{"p":"org.apache.calcite.test","c":"CalciteAssert.Config","l":"SCOTT"},{"p":"org.apache.calcite.test","c":"CalciteAssert.SchemaSpec","l":"SCOTT"},{"p":"org.apache.calcite.test","c":"CalciteAssert.SchemaSpec","l":"SCOTT_WITH_TEMPORAL"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"SEARCH"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"SEARCH"},{"p":"org.apache.calcite.adapter.splunk","c":"SplunkPushDownRule","l":"searchEscape(String)","u":"searchEscape(java.lang.String)"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchSearchResult","l":"searchHits()"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"searchShuttle(RexBuilder, RexProgram, int)","u":"searchShuttle(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexProgram,int)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SEC"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"SEC"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"sec(BigDecimal)","u":"sec(java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"sec(double)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SECH"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"SECH"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"sech(BigDecimal)","u":"sech(java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"sech(double)"},{"p":"org.apache.calcite.adapter.druid","c":"Granularity.Type","l":"SECOND"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"SECOND"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"SECOND_THIRD_SAME"},{"p":"org.apache.calcite.test","c":"SqlOperatorTest","l":"SECOND_VARIANTS"},{"p":"org.apache.calcite.util.format.postgresql","c":"ChronoUnitEnum","l":"SECONDS_IN_DAY"},{"p":"org.apache.calcite.util.format.postgresql","c":"ChronoUnitEnum","l":"SECONDS_IN_MINUTE"},{"p":"org.apache.calcite.adapter.druid","c":"QueryType","l":"SELECT"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Clause","l":"SELECT"},{"p":"org.apache.calcite.sql","c":"SqlAccessEnum","l":"SELECT"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"SELECT"},{"p":"org.apache.calcite.sql","c":"SqlWriter.FrameTypeEnum","l":"SELECT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SELECT"},{"p":"org.apache.calcite.sql","c":"SqlWriter.FrameTypeEnum","l":"SELECT_LIST"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SELECT_MANY"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"select(Enumerable<TSource>, Function1<TSource, TResult>)","u":"select(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"select(Enumerable<TSource>, Function2<TSource, Integer, TResult>)","u":"select(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"select(Function1<T, TResult>)","u":"select(org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"select(Function1<TSource, TResult>)","u":"select(org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"select(Function2<T, Integer, TResult>)","u":"select(org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"select(Function2<TSource, Integer, TResult>)","u":"select(org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"select(FunctionExpression<Function1<T, TResult>>)","u":"select(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"select(FunctionExpression<Function1<T, TResult>>)","u":"select(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"select(FunctionExpression<Function1<TSource, TResult>>)"},{"p":"","c":"","l":"select(FunctionExpression<Function1<TSource, TResult>>)"},{"p":"org.apache.calcite.util","c":"Util","l":"select(List<E>, List<Integer>)","u":"select(java.util.List,java.util.List)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"select(Queryable<T>, FunctionExpression<Function1<T, TResult>>)","u":"select(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"select(Queryable<T>, FunctionExpression<Function1<T, TResult>>)","u":"select(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"select(Queryable<T>, FunctionExpression<Function1<T, TResult>>)","u":"select(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SELECT2"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"selectFolding()"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SELECTIVITY"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"selectListExtraIndentFlag()"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"selectListItemsOnSeparateLines()"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"selectMany(Enumerable<TSource>, Function1<TSource, Enumerable<TCollection>>, Function2<TSource, TCollection, TResult>)","u":"selectMany(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"selectMany(Enumerable<TSource>, Function1<TSource, Enumerable<TResult>>)","u":"selectMany(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"selectMany(Enumerable<TSource>, Function2<TSource, Integer, Enumerable<TCollection>>, Function2<TSource, TCollection, TResult>)","u":"selectMany(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"selectMany(Enumerable<TSource>, Function2<TSource, Integer, Enumerable<TResult>>)","u":"selectMany(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"selectMany(Function1<T, Enumerable<TCollection>>, Function2<T, TCollection, TResult>)","u":"selectMany(org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"selectMany(Function1<T, Enumerable<TResult>>)","u":"selectMany(org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"selectMany(Function1<TSource, Enumerable<TCollection>>, Function2<TSource, TCollection, TResult>)","u":"selectMany(org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"selectMany(Function1<TSource, Enumerable<TResult>>)","u":"selectMany(org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"selectMany(Function2<T, Integer, Enumerable<TCollection>>, Function2<T, TCollection, TResult>)","u":"selectMany(org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"selectMany(Function2<T, Integer, Enumerable<TResult>>)","u":"selectMany(org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"selectMany(Function2<TSource, Integer, Enumerable<TCollection>>, Function2<TSource, TCollection, TResult>)","u":"selectMany(org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"selectMany(Function2<TSource, Integer, Enumerable<TResult>>)","u":"selectMany(org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"selectMany(FunctionExpression<Function1<T, Enumerable<TResult>>>)","u":"selectMany(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"selectMany(FunctionExpression<Function1<T, Enumerable<TResult>>>)","u":"selectMany(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"selectMany(FunctionExpression<Function1<TSource, Enumerable<TResult>>>)"},{"p":"","c":"","l":"selectMany(FunctionExpression<Function1<TSource, Enumerable<TResult>>>)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"selectMany(FunctionExpression<Function2<T, Integer, Enumerable<TCollection>>>, FunctionExpression<Function2<T, TCollection, TResult>>)","u":"selectMany(org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"selectMany(FunctionExpression<Function2<T, Integer, Enumerable<TCollection>>>, FunctionExpression<Function2<T, TCollection, TResult>>)","u":"selectMany(org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"selectMany(FunctionExpression<Function2<TSource, Integer, Enumerable<TCollection>>>, FunctionExpression<Function2<TSource, TCollection, TResult>>)"},{"p":"","c":"","l":"selectMany(FunctionExpression<Function2<TSource, Integer, Enumerable<TCollection>>>, FunctionExpression<Function2<TSource, TCollection, TResult>>)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"selectMany(Queryable<T>, FunctionExpression<Function1<T, Enumerable<TResult>>>)","u":"selectMany(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"selectMany(Queryable<T>, FunctionExpression<Function1<T, Enumerable<TResult>>>)","u":"selectMany(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"selectMany(Queryable<T>, FunctionExpression<Function1<T, Enumerable<TResult>>>)","u":"selectMany(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"selectMany(Queryable<T>, FunctionExpression<Function2<T, Integer, Enumerable<TCollection>>>, FunctionExpression<Function2<T, TCollection, TResult>>)","u":"selectMany(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"selectMany(Queryable<T>, FunctionExpression<Function2<T, Integer, Enumerable<TCollection>>>, FunctionExpression<Function2<T, TCollection, TResult>>)","u":"selectMany(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"selectMany(Queryable<T>, FunctionExpression<Function2<T, Integer, Enumerable<TCollection>>>, FunctionExpression<Function2<T, TCollection, TResult>>)","u":"selectMany(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"selectManyN(FunctionExpression<Function1<T, Enumerable<TCollection>>>, FunctionExpression<Function2<T, TCollection, TResult>>)","u":"selectManyN(org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"selectManyN(FunctionExpression<Function1<T, Enumerable<TCollection>>>, FunctionExpression<Function2<T, TCollection, TResult>>)","u":"selectManyN(org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"selectManyN(FunctionExpression<Function1<TSource, Enumerable<TCollection>>>, FunctionExpression<Function2<TSource, TCollection, TResult>>)"},{"p":"","c":"","l":"selectManyN(FunctionExpression<Function1<TSource, Enumerable<TCollection>>>, FunctionExpression<Function2<TSource, TCollection, TResult>>)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"selectManyN(FunctionExpression<Function2<T, Integer, Enumerable<TResult>>>)","u":"selectManyN(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"selectManyN(FunctionExpression<Function2<T, Integer, Enumerable<TResult>>>)","u":"selectManyN(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"selectManyN(FunctionExpression<Function2<TSource, Integer, Enumerable<TResult>>>)"},{"p":"","c":"","l":"selectManyN(FunctionExpression<Function2<TSource, Integer, Enumerable<TResult>>>)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"selectManyN(Queryable<T>, FunctionExpression<Function1<T, Enumerable<TCollection>>>, FunctionExpression<Function2<T, TCollection, TResult>>)","u":"selectManyN(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"selectManyN(Queryable<T>, FunctionExpression<Function1<T, Enumerable<TCollection>>>, FunctionExpression<Function2<T, TCollection, TResult>>)","u":"selectManyN(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"selectManyN(Queryable<T>, FunctionExpression<Function1<T, Enumerable<TCollection>>>, FunctionExpression<Function2<T, TCollection, TResult>>)","u":"selectManyN(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"selectManyN(Queryable<T>, FunctionExpression<Function2<T, Integer, Enumerable<TResult>>>)","u":"selectManyN(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"selectManyN(Queryable<T>, FunctionExpression<Function2<T, Integer, Enumerable<TResult>>>)","u":"selectManyN(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"selectManyN(Queryable<T>, FunctionExpression<Function2<T, Integer, Enumerable<TResult>>>)","u":"selectManyN(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"selectMissingFrom()"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"selectN(FunctionExpression<Function2<T, Integer, TResult>>)","u":"selectN(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"selectN(FunctionExpression<Function2<T, Integer, TResult>>)","u":"selectN(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"selectN(FunctionExpression<Function2<TSource, Integer, TResult>>)"},{"p":"","c":"","l":"selectN(FunctionExpression<Function2<TSource, Integer, TResult>>)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"selectN(Queryable<T>, FunctionExpression<Function2<T, Integer, TResult>>)","u":"selectN(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"selectN(Queryable<T>, FunctionExpression<Function2<T, Integer, TResult>>)","u":"selectN(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"selectN(Queryable<T>, FunctionExpression<Function2<T, Integer, TResult>>)","u":"selectN(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.sql.validate","c":"SelectNamespace","l":"SelectNamespace(SqlValidatorImpl, SqlSelect, SqlNode)","u":"%3Cinit%3E(org.apache.calcite.sql.validate.SqlValidatorImpl,org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysType","l":"selector(ParameterExpression, List<Integer>, JavaRowFormat)","u":"selector(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)"},{"p":"org.apache.calcite.adapter.enumerable","c":"PhysTypeImpl","l":"selector(ParameterExpression, List<Integer>, JavaRowFormat)","u":"selector(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)"},{"p":"org.apache.calcite.linq4j.function","c":"Functions","l":"selectorComparer(Function1<T, T2>)","u":"selectorComparer(org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"selectStarRequiresFrom()"},{"p":"org.apache.calcite.sql","c":"SqlSplittableAggFunction.SelfSplitter","l":"SelfSplitter()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql","c":"TableCharacteristic","l":"semantics"},{"p":"org.apache.calcite.sql.validate","c":"SqlAbstractConformance","l":"semantics()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformance","l":"semantics()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"semantics()"},{"p":"org.apache.calcite.sql.validate","c":"SqlDelegatingConformance","l":"semantics()"},{"p":"org.apache.calcite.linq4j","c":"JoinType","l":"SEMI"},{"p":"org.apache.calcite.rel.core","c":"JoinRelType","l":"SEMI"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SEMI_JOIN"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"SEMI_JOIN_FILTER_TRANSPOSE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"SEMI_JOIN_JOIN_TRANSPOSE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"SEMI_JOIN_PROJECT_TRANSPOSE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"SEMI_JOIN_REMOVE"},{"p":"org.apache.calcite.adapter.enumerable","c":"NullPolicy","l":"SEMI_STRICT"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"semiJoin(Enumerable<TSource>, Enumerable<TInner>, Function1<TSource, TKey>, Function1<TInner, TKey>)","u":"semiJoin(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"semiJoin(Enumerable<TSource>, Enumerable<TInner>, Function1<TSource, TKey>, Function1<TInner, TKey>, EqualityComparer<TKey>)","u":"semiJoin(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"semiJoin(Enumerable<TSource>, Enumerable<TInner>, Function1<TSource, TKey>, Function1<TInner, TKey>, EqualityComparer<TKey>, boolean, Predicate2<TSource, TInner>)","u":"semiJoin(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.EqualityComparer,boolean,org.apache.calcite.linq4j.function.Predicate2)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"semiJoin(Enumerable<TSource>, Enumerable<TInner>, Function1<TSource, TKey>, Function1<TInner, TKey>, EqualityComparer<TKey>, Predicate2<TSource, TInner>)","u":"semiJoin(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.EqualityComparer,org.apache.calcite.linq4j.function.Predicate2)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"semiJoin(Iterable<? extends RexNode>)","u":"semiJoin(java.lang.Iterable)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"semiJoin(RexNode...)","u":"semiJoin(org.apache.calcite.rex.RexNode...)"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinFilterTransposeRule","l":"SemiJoinFilterTransposeRule(RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinFilterTransposeRule","l":"SemiJoinFilterTransposeRule(SemiJoinFilterTransposeRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.SemiJoinFilterTransposeRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinJoinTransposeRule","l":"SemiJoinJoinTransposeRule(RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinJoinTransposeRule","l":"SemiJoinJoinTransposeRule(SemiJoinJoinTransposeRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.SemiJoinJoinTransposeRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinProjectTransposeRule","l":"SemiJoinProjectTransposeRule(SemiJoinProjectTransposeRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.SemiJoinProjectTransposeRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinRemoveRule","l":"SemiJoinRemoveRule(RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinRemoveRule","l":"SemiJoinRemoveRule(SemiJoinRemoveRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.SemiJoinRemoveRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinRule","l":"SemiJoinRule(SemiJoinRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.SemiJoinRule.Config)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"send(Field, Object, Primitive.Sink)","u":"send(java.lang.reflect.Field,java.lang.Object,org.apache.calcite.linq4j.tree.Primitive.Sink)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"send(Primitive.Source, Primitive.Sink)","u":"send(org.apache.calcite.linq4j.tree.Primitive.Source,org.apache.calcite.linq4j.tree.Primitive.Sink)"},{"p":"org.apache.calcite.interpreter","c":"Sink","l":"send(Row)","u":"send(org.apache.calcite.interpreter.Row)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter.FrameImpl","l":"sep(boolean, String)","u":"sep(boolean,java.lang.String)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"sep(String)","u":"sep(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlWriter","l":"sep(String)","u":"sep(java.lang.String)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"sep(String, boolean)","u":"sep(java.lang.String,boolean)"},{"p":"org.apache.calcite.sql","c":"SqlWriter","l":"sep(String, boolean)","u":"sep(java.lang.String,boolean)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"SEPARATOR"},{"p":"org.apache.calcite.sql.fun","c":"SqlInternalOperators","l":"SEPARATOR"},{"p":"org.apache.calcite.util","c":"Util","l":"sepList(List<T>, String)","u":"sepList(java.util.List,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"Pattern.Op","l":"SEQ"},{"p":"org.apache.calcite.runtime","c":"Pattern.PatternBuilder","l":"seq()"},{"p":"org.apache.calcite.linq4j.tree","c":"GotoExpressionKind","l":"Sequence"},{"p":"org.apache.calcite.schema","c":"Schema.TableType","l":"SEQUENCE"},{"p":"org.apache.calcite.sql.type","c":"CompositeOperandTypeChecker.Composition","l":"SEQUENCE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SEQUENCE_CURRENT_VALUE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SEQUENCE_NEXT_VALUE"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"sequence(BiFunction<SqlOperator, String, String>, SqlSingleOperandTypeChecker...)","u":"sequence(java.util.function.BiFunction,org.apache.calcite.sql.type.SqlSingleOperandTypeChecker...)"},{"p":"org.apache.calcite.tools","c":"Programs","l":"sequence(Program...)","u":"sequence(org.apache.calcite.tools.Program...)"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"sequence(String, SqlSingleOperandTypeChecker...)","u":"sequence(java.lang.String,org.apache.calcite.sql.type.SqlSingleOperandTypeChecker...)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"sequenceCurrentValue(String)","u":"sequenceCurrentValue(java.lang.String)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"sequenceEqual(Enumerable<T>)","u":"sequenceEqual(org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"sequenceEqual(Enumerable<T>, EqualityComparer<T>)","u":"sequenceEqual(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"sequenceEqual(Enumerable<TSource>)","u":"sequenceEqual(org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"sequenceEqual(Enumerable<TSource>, Enumerable<TSource>)","u":"sequenceEqual(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"sequenceEqual(Enumerable<TSource>, Enumerable<TSource>, EqualityComparer<TSource>)","u":"sequenceEqual(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"sequenceEqual(Enumerable<TSource>, EqualityComparer<TSource>)","u":"sequenceEqual(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"sequenceEqual(Queryable<T>, Enumerable<T>)","u":"sequenceEqual(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"sequenceEqual(Queryable<T>, Enumerable<T>)","u":"sequenceEqual(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"sequenceEqual(Queryable<T>, Enumerable<T>)","u":"sequenceEqual(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"sequenceEqual(Queryable<T>, Enumerable<T>, EqualityComparer<T>)","u":"sequenceEqual(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"sequenceEqual(Queryable<T>, Enumerable<T>, EqualityComparer<T>)","u":"sequenceEqual(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"sequenceEqual(Queryable<T>, Enumerable<T>, EqualityComparer<T>)","u":"sequenceEqual(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"sequenceNextValue(String)","u":"sequenceNextValue(java.lang.String)"},{"p":"org.apache.calcite.server","c":"ServerDdlExecutor","l":"ServerDdlExecutor()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"SESSION"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"SESSION"},{"p":"org.apache.calcite.sql.babel.postgres","c":"SqlSetOptions.Names","l":"SESSION_CHARACTERISTICS_AS_TRANSACTION"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"SESSION_END"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"SESSION_END"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"SESSION_OLD"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"SESSION_START"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"SESSION_START"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"SESSION_USER"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SESSIONIZATION"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumUtils","l":"sessionize(Enumerator<Object[]>, int, int, long)","u":"sessionize(org.apache.calcite.linq4j.Enumerator,int,int,long)"},{"p":"org.apache.calcite.adapter.enumerable","c":"WinAggImplementor.SeekType","l":"SET"},{"p":"org.apache.calcite.adapter.redis","c":"RedisDataType","l":"SET"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.JsonModifyMode","l":"SET"},{"p":"org.apache.calcite.sql.babel","c":"TableCollectionType","l":"SET"},{"p":"org.apache.calcite.sql","c":"TableCharacteristic.Semantics","l":"SET"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Clause","l":"SET_OP"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"SET_OP"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules","l":"SET_OP_FACTORY"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"SET_OPTION"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"SET_QUERY"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"SET_SEMANTICS_TABLE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"SET_SEMANTICS_TABLE"},{"p":"org.apache.calcite.rel.hint","c":"HintPredicates","l":"SET_VAR"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive.Sink","l":"set(boolean)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive.Sink","l":"set(byte)"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfigImpl","l":"set(CalciteConnectionProperty, String)","u":"set(org.apache.calcite.config.CalciteConnectionProperty,java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive.Sink","l":"set(char)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive.Sink","l":"set(double)"},{"p":"org.apache.calcite.util","c":"Holder","l":"set(E)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive.Sink","l":"set(float)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive.Sink","l":"set(int)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet.Builder","l":"set(int)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"set(int)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"set(int, boolean)","u":"set(int,boolean)"},{"p":"","c":"","l":"set(int, E)"},{"p":"org.apache.calcite.util","c":"CastingList","l":"set(int, E)","u":"set(int,E)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet.Builder","l":"set(int, int)","u":"set(int,int)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.AbstractMapping","l":"set(int, int)","u":"set(int,int)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.IdentityMapping","l":"set(int, int)","u":"set(int,int)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.OverridingTargetMapping","l":"set(int, int)","u":"set(int,int)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.PartialMapping","l":"set(int, int)","u":"set(int,int)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.TargetMapping","l":"set(int, int)","u":"set(int,int)"},{"p":"org.apache.calcite.util","c":"Permutation","l":"set(int, int)","u":"set(int,int)"},{"p":"org.apache.calcite.util","c":"Permutation","l":"set(int, int, boolean)","u":"set(int,int,boolean)"},{"p":"org.apache.calcite.runtime","c":"ImmutableIntList","l":"set(int, Integer)","u":"set(int,E)"},{"p":"org.apache.calcite.interpreter","c":"Row.RowBuilder","l":"set(int, Object)","u":"set(int,java.lang.Object)"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"set(int, SqlNode)","u":"set(int,org.apache.calcite.sql.SqlNode)"},{"p":"","c":"","l":"set(int, T)"},{"p":"org.apache.calcite.runtime","c":"PairList","l":"set(int, T, U)","u":"set(int,T,U)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive.Sink","l":"set(long)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive.Sink","l":"set(Object)","u":"set(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive.Sink","l":"set(short)"},{"p":"org.apache.calcite.test","c":"DiffRepository","l":"set(String, String)","u":"set(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUtil","l":"setAggChildKeys(ImmutableBitSet, Aggregate, ImmutableBitSet.Builder)","u":"setAggChildKeys(org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet.Builder)"},{"p":"org.apache.calcite.sql","c":"SqlUpdate","l":"setAlias(SqlIdentifier)","u":"setAlias(org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.util","c":"BitSets","l":"setAll(BitSet, Iterable<? extends Number>)","u":"setAll(java.util.BitSet,java.lang.Iterable)"},{"p":"org.apache.calcite.util","c":"Permutation","l":"setAll(Mapping)","u":"setAll(org.apache.calcite.util.mapping.Mapping)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser.ConfigBuilder","l":"setAllowBangEqual(boolean)"},{"p":"org.apache.calcite.util","c":"XmlOutput","l":"setAlwaysQuoteCData(boolean)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlFormatOptions","l":"setAlwaysUseParentheses(boolean)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"setAlwaysUseParentheses(boolean)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbRel.Implementor","l":"setAscOrder(boolean)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexToLixTranslator","l":"setBlock(BlockBuilder)","u":"setBlock(org.apache.calcite.linq4j.tree.BlockBuilder)"},{"p":"org.apache.calcite.adapter.kafka","c":"KafkaTableOptions","l":"setBootstrapServers(String)","u":"setBootstrapServers(java.lang.String)"},{"p":"org.apache.calcite.jdbc","c":"CalciteRootSchema","l":"setCache(boolean)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"setCache(boolean)"},{"p":"org.apache.calcite.schema","c":"SchemaPlus","l":"setCacheEnabled(boolean)"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"setCancelFlag(CancelFlag)","u":"setCancelFlag(org.apache.calcite.util.CancelFlag)"},{"p":"org.apache.calcite.plan","c":"RelOptPlanner","l":"setCancelFlag(CancelFlag)","u":"setCancelFlag(org.apache.calcite.util.CancelFlag)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlFormatOptions","l":"setCaseClausesOnNewLines(boolean)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"setCaseClausesOnNewLines(boolean)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser.ConfigBuilder","l":"setCaseSensitive(boolean)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser.ConfigBuilder","l":"setCharLiteralStyles(Set<CharLiteralStyle>)","u":"setCharLiteralStyles(java.util.Set)"},{"p":"org.apache.calcite.plan","c":"RelOptRuleCall","l":"setChildRels(RelNode, List<RelNode>)","u":"setChildRels(org.apache.calcite.rel.RelNode,java.util.List)"},{"p":"org.apache.calcite.util.javac","c":"JavaCompilerArgs","l":"setClassLoader(ClassLoader)","u":"setClassLoader(java.lang.ClassLoader)"},{"p":"org.apache.calcite.util.javac","c":"JavaCompilerArgs","l":"setClasspath(String)","u":"setClasspath(java.lang.String)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlFormatOptions","l":"setClauseStartsLine(boolean)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"setClauseStartsLine(boolean)"},{"p":"org.apache.calcite.util","c":"XmlOutput","l":"setCompact(boolean)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser.ConfigBuilder","l":"setConfig(SqlParser.Config)","u":"setConfig(org.apache.calcite.sql.parser.SqlParser.Config)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser.ConfigBuilder","l":"setConformance(SqlConformance)","u":"setConformance(org.apache.calcite.sql.validate.SqlConformance)"},{"p":"org.apache.calcite.adapter.kafka","c":"KafkaTableOptions","l":"setConsumer(Consumer)","u":"setConsumer(org.apache.kafka.clients.consumer.Consumer)"},{"p":"org.apache.calcite.adapter.kafka","c":"KafkaTableOptions","l":"setConsumerParams(Map<String, String>)","u":"setConsumerParams(java.util.Map)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexToLixTranslator","l":"setCorrelates(Function1<String, RexToLixTranslator.InputGetter>)","u":"setCorrelates(org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.rex","c":"RexExecutable","l":"setDataContext(DataContext)","u":"setDataContext(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.adapter.redis","c":"RedisTableFieldInfo","l":"setDataFormat(String)","u":"setDataFormat(java.lang.String)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Blackboard","l":"setDataset(String)","u":"setDataset(java.lang.String)"},{"p":"org.apache.calcite.util.javac","c":"JavaCompilerArgs","l":"setDebugInfo(int)"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"setDeclName(SqlIdentifier)","u":"setDeclName(org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"setDecorrelator(RelDecorrelator)","u":"setDecorrelator(org.apache.calcite.sql2rel.RelDecorrelator)"},{"p":"org.apache.calcite.plan","c":"RelOptPlanner","l":"setDecorrelator(RelDecorrelator)","u":"setDecorrelator(org.apache.calcite.sql2rel.RelDecorrelator)"},{"p":"org.apache.calcite.test","c":"ConnectionFactories","l":"setDefault(String)","u":"setDefault(java.lang.String)"},{"p":"org.apache.calcite.test","c":"Unsafe","l":"setDefaultLocale(Locale)","u":"setDefaultLocale(java.util.Locale)"},{"p":"org.apache.calcite.util.javac","c":"JaninoCompiler.JaninoCompilerArgs","l":"setDestdir(String)","u":"setDestdir(java.lang.String)"},{"p":"org.apache.calcite.util.javac","c":"JavaCompilerArgs","l":"setDestdir(String)","u":"setDestdir(java.lang.String)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"setDynamicParamCountInExplain(int)"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"setExecutor(RexExecutor)","u":"setExecutor(org.apache.calcite.rex.RexExecutor)"},{"p":"org.apache.calcite.plan","c":"RelOptPlanner","l":"setExecutor(RexExecutor)","u":"setExecutor(org.apache.calcite.rex.RexExecutor)"},{"p":"org.apache.calcite.sql.validate","c":"SelectScope","l":"setExpandedSelectList(List<SqlNode>)","u":"setExpandedSelectList(java.util.List)"},{"p":"org.apache.calcite.rel.rules","c":"LoptMultiJoin","l":"setFactorWeights()"},{"p":"org.apache.calcite.sql.type","c":"ObjectSqlType","l":"setFamily(RelDataTypeFamily)","u":"setFamily(org.apache.calcite.rel.type.RelDataTypeFamily)"},{"p":"org.apache.calcite.sql","c":"SqlSelect","l":"setFetch(SqlNode)","u":"setFetch(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Builder","l":"setFetch(SqlNode)","u":"setFetch(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.adapter.splunk.search","c":"SearchResultListener","l":"setFieldNames(String[])","u":"setFieldNames(java.lang.String[])"},{"p":"org.apache.calcite.adapter.splunk.search","c":"SplunkConnectionImpl.CountingSearchResultListener","l":"setFieldNames(String[])","u":"setFieldNames(java.lang.String[])"},{"p":"org.apache.calcite.adapter.redis","c":"RedisTableFieldInfo","l":"setFields(List<LinkedHashMap<String, Object>>)","u":"setFields(java.util.List)"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"setFor(SqlOperator)","u":"setFor(org.apache.calcite.sql.SqlOperator)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"setFor(SqlOperator, SqlOperatorFixture.VmName...)","u":"setFor(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.test.SqlOperatorFixture.VmName...)"},{"p":"org.apache.calcite.sql.test","c":"AbstractSqlTester","l":"setFor(SqlOperator, SqlTester.VmName...)","u":"setFor(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.test.SqlTester.VmName...)"},{"p":"org.apache.calcite.sql.test","c":"SqlTester","l":"setFor(SqlOperator, SqlTester.VmName...)","u":"setFor(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.test.SqlTester.VmName...)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"setFormatOptions(SqlFormatOptions)","u":"setFormatOptions(org.apache.calcite.sql.pretty.SqlFormatOptions)"},{"p":"org.apache.calcite.sql","c":"SqlSelect","l":"setFrom(SqlNode)","u":"setFrom(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.util.javac","c":"JaninoCompiler.JaninoCompilerArgs","l":"setFullClassName(String)","u":"setFullClassName(java.lang.String)"},{"p":"org.apache.calcite.util.javac","c":"JavaCompilerArgs","l":"setFullClassName(String)","u":"setFullClassName(java.lang.String)"},{"p":"org.apache.calcite.util","c":"XmlOutput","l":"setGlob(boolean)"},{"p":"org.apache.calcite.sql","c":"SqlSelect","l":"setGroupBy(SqlNodeList)","u":"setGroupBy(org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Builder","l":"setGroupBy(SqlNodeList)","u":"setGroupBy(org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.sql","c":"SqlSelect","l":"setHaving(SqlNode)","u":"setHaving(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Builder","l":"setHaving(SqlNode)","u":"setHaving(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlSelect","l":"setHints(SqlNodeList)","u":"setHints(org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.plan","c":"RelOptCluster","l":"setHintStrategies(HintStrategyTable)","u":"setHintStrategies(org.apache.calcite.rel.hint.HintStrategyTable)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser.ConfigBuilder","l":"setIdentifierMaxLength(int)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser.ConfigBuilder","l":"setIdentifierTimeUnitMap(ImmutableMap<String, TimeUnit>)","u":"setIdentifierTimeUnitMap(com.google.common.collect.ImmutableMap)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"setIf(int, boolean)","u":"setIf(int,boolean)"},{"p":"org.apache.calcite.util","c":"XmlOutput","l":"setIgnorePcdata(boolean)"},{"p":"org.apache.calcite.plan.visualizer","c":"RuleMatchVisualizer","l":"setIncludeIntermediateCosts(boolean)"},{"p":"org.apache.calcite.plan.visualizer","c":"RuleMatchVisualizer","l":"setIncludeTransitiveEdges(boolean)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlFormatOptions","l":"setIndentation(int)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"setIndentation(int)"},{"p":"org.apache.calcite.util","c":"XmlOutput","l":"setIndentString(String)","u":"setIndentString(java.lang.String)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbRel.Implementor","l":"setIndexCondition(IndexCondition)","u":"setIndexCondition(org.apache.calcite.adapter.innodb.IndexCondition)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableJoin","l":"setInput(int, MutableRel)","u":"setInput(int,org.apache.calcite.rel.mutable.MutableRel)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableValues","l":"setInput(int, MutableRel)","u":"setInput(int,org.apache.calcite.rel.mutable.MutableRel)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableSetOp","l":"setInput(int, MutableRel)","u":"setInput(int,org.apache.calcite.rel.mutable.MutableRel)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableRel","l":"setInput(int, MutableRel)","u":"setInput(int,org.apache.calcite.rel.mutable.MutableRel)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableSort","l":"setInput(int, MutableRel)","u":"setInput(int,org.apache.calcite.rel.mutable.MutableRel)"},{"p":"org.apache.calcite.rel.rules","c":"LoptMultiJoin","l":"setJoinRemovalFactor(int, int)","u":"setJoinRemovalFactor(int,int)"},{"p":"org.apache.calcite.rel.rules","c":"LoptMultiJoin","l":"setJoinRemovalSemiJoin(int, LogicalJoin)","u":"setJoinRemovalSemiJoin(int,org.apache.calcite.rel.logical.LogicalJoin)"},{"p":"org.apache.calcite.adapter.redis","c":"RedisTableFieldInfo","l":"setKeyDelimiter(String)","u":"setKeyDelimiter(java.lang.String)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlFormatOptions","l":"setKeywordsLowercase(boolean)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"setKeywordsLowerCase(boolean)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"setKind(StructKind)","u":"setKind(org.apache.calcite.rel.type.StructKind)"},{"p":"org.apache.calcite.sql","c":"SqlJoin","l":"setLeft(SqlNode)","u":"setLeft(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUtil","l":"setLeftRightBitmaps(ImmutableBitSet, ImmutableBitSet.Builder, ImmutableBitSet.Builder, int)","u":"setLeftRightBitmaps(org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.util.ImmutableBitSet.Builder,org.apache.calcite.util.ImmutableBitSet.Builder,int)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser.ConfigBuilder","l":"setLex(Lex)","u":"setLex(org.apache.calcite.config.Lex)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeRel.GeodeImplementContext","l":"setLimit(long)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlFormatOptions","l":"setLineLength(int)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"setLineLength(int)"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"setLocked(boolean)"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"setLowerBound(SqlNode)","u":"setLowerBound(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.plan","c":"RelOptCluster","l":"setMetadataProvider(RelMetadataProvider)","u":"setMetadataProvider(org.apache.calcite.rel.metadata.RelMetadataProvider)"},{"p":"org.apache.calcite.plan","c":"RelOptCluster","l":"setMetadataQuerySupplier(Supplier<RelMetadataQuery>)","u":"setMetadataQuerySupplier(java.util.function.Supplier)"},{"p":"org.apache.calcite.sql","c":"SqlIdentifier","l":"setName(int, String)","u":"setName(int,java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlSetOption","l":"setName(SqlIdentifier)","u":"setName(org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.sql","c":"SqlSetOption","l":"setName(SqlNode)","u":"setName(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery.JsonPostAggregation","l":"setName(String)","u":"setName(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlIdentifier","l":"setNames(List<String>, List<SqlParserPos>)","u":"setNames(java.util.List,java.util.List)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"setNeedWhitespace(boolean)"},{"p":"org.apache.calcite.sql","c":"SqlWriter","l":"setNeedWhitespace(boolean)"},{"p":"org.apache.calcite.sql2rel","c":"RelStructuredTypeFlattener","l":"setNewForOldRel(RelNode, RelNode)","u":"setNewForOldRel(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"setNoneConventionHasInfiniteCost(boolean)"},{"p":"org.apache.calcite.rel.core","c":"CorrelationId","l":"setOf(Set<String>)","u":"setOf(java.util.Set)"},{"p":"org.apache.calcite.sql","c":"SqlSelect","l":"setOffset(SqlNode)","u":"setOffset(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Builder","l":"setOffset(SqlNode)","u":"setOffset(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlWriter.FrameTypeEnum","l":"SETOP"},{"p":"org.apache.calcite.rel.hint","c":"HintPredicates","l":"SETOP"},{"p":"org.apache.calcite.rel.core","c":"SetOp","l":"SetOp(RelInput)","u":"%3Cinit%3E(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel.core","c":"SetOp","l":"SetOp(RelOptCluster, RelTraitSet, List<RelHint>, List<RelNode>, SqlKind, boolean)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,java.util.List,org.apache.calcite.sql.SqlKind,boolean)"},{"p":"org.apache.calcite.rel.core","c":"SetOp","l":"SetOp(RelOptCluster, RelTraitSet, List<RelNode>, SqlKind, boolean)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,org.apache.calcite.sql.SqlKind,boolean)"},{"p":"org.apache.calcite.sql.fun","c":"SqlCase","l":"setOperand(int, SqlNode)","u":"setOperand(int,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlAsofJoin","l":"setOperand(int, SqlNode)","u":"setOperand(int,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlBasicCall","l":"setOperand(int, SqlNode)","u":"setOperand(int,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlCall","l":"setOperand(int, SqlNode)","u":"setOperand(int,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlDelete","l":"setOperand(int, SqlNode)","u":"setOperand(int,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlDescribeSchema","l":"setOperand(int, SqlNode)","u":"setOperand(int,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlDescribeTable","l":"setOperand(int, SqlNode)","u":"setOperand(int,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlExplain","l":"setOperand(int, SqlNode)","u":"setOperand(int,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlInsert","l":"setOperand(int, SqlNode)","u":"setOperand(int,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlJoin","l":"setOperand(int, SqlNode)","u":"setOperand(int,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlLambda","l":"setOperand(int, SqlNode)","u":"setOperand(int,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize","l":"setOperand(int, SqlNode)","u":"setOperand(int,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlMerge","l":"setOperand(int, SqlNode)","u":"setOperand(int,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlPivot","l":"setOperand(int, SqlNode)","u":"setOperand(int,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlSelect","l":"setOperand(int, SqlNode)","u":"setOperand(int,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlSetOption","l":"setOperand(int, SqlNode)","u":"setOperand(int,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlSnapshot","l":"setOperand(int, SqlNode)","u":"setOperand(int,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlUnpivot","l":"setOperand(int, SqlNode)","u":"setOperand(int,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlUpdate","l":"setOperand(int, SqlNode)","u":"setOperand(int,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"setOperand(int, SqlNode)","u":"setOperand(int,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlWith","l":"setOperand(int, SqlNode)","u":"setOperand(int,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlWithItem","l":"setOperand(int, SqlNode)","u":"setOperand(int,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlBasicCall","l":"setOperator(SqlOperator)","u":"setOperator(org.apache.calcite.sql.SqlOperator)"},{"p":"org.apache.calcite.sql.util","c":"ReflectiveSqlOperatorTable","l":"setOperators(Multimap<String, SqlOperator>)","u":"setOperators(com.google.common.collect.Multimap)"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.Struct","l":"setOpFactory"},{"p":"org.apache.calcite.sql.validate","c":"SetopNamespace","l":"SetopNamespace(SqlValidatorImpl, SqlCall, SqlNode)","u":"%3Cinit%3E(org.apache.calcite.sql.validate.SqlValidatorImpl,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.interpreter","c":"SetOpNode","l":"SetOpNode(Compiler, SetOp)","u":"%3Cinit%3E(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.SetOp)"},{"p":"org.apache.calcite.sql.type","c":"SetopOperandTypeChecker","l":"SetopOperandTypeChecker()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor","l":"setOpToSql(SqlSetOperator, RelNode)","u":"setOpToSql(org.apache.calcite.sql.SqlSetOperator,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.sql","c":"SqlSelect","l":"setOrderBy(SqlNodeList)","u":"setOrderBy(org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Builder","l":"setOrderBy(SqlNodeList)","u":"setOrderBy(org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"setOrderList(SqlNodeList)","u":"setOrderList(org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"setOriginal(SqlNode, SqlNode)","u":"setOriginal(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.plan","c":"RelOptCluster","l":"setOriginalExpression(RexNode)","u":"setOriginalExpression(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.runtime","c":"CalciteContextException","l":"setOriginalStatement(String)","u":"setOriginalStatement(java.lang.String)"},{"p":"org.apache.calcite.plan","c":"RelOptRuleOperand","l":"setParent(RelOptRuleOperand)","u":"setParent(org.apache.calcite.plan.RelOptRuleOperand)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser.ConfigBuilder","l":"setParserFactory(SqlParserImplFactory)","u":"setParserFactory(org.apache.calcite.sql.parser.SqlParserImplFactory)"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"setPartitionList(SqlNodeList)","u":"setPartitionList(org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.schema","c":"SchemaPlus","l":"setPath(ImmutableList<ImmutableList<String>>)","u":"setPath(com.google.common.collect.ImmutableList)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Blackboard","l":"setPatternVarRef(boolean)"},{"p":"org.apache.calcite.runtime","c":"CalciteContextException","l":"setPosition(int, int)","u":"setPosition(int,int)"},{"p":"org.apache.calcite.runtime","c":"CalciteContextException","l":"setPosition(int, int, int, int)","u":"setPosition(int,int,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlSelect","l":"setQualify(SqlNode)","u":"setQualify(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlFormatOptions","l":"setQuoteAllIdentifiers(boolean)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"setQuoteAllIdentifiers(boolean)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser.ConfigBuilder","l":"setQuotedCasing(Casing)","u":"setQuotedCasing(org.apache.calcite.avatica.util.Casing)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser.ConfigBuilder","l":"setQuoting(Quoting)","u":"setQuoting(org.apache.calcite.avatica.util.Quoting)"},{"p":"org.apache.calcite.test","c":"DiffTestCase","l":"setRefFileDiffMasks()"},{"p":"org.apache.calcite.test","c":"MockRelOptPlanner","l":"setRelMetadataTimestamp(long)"},{"p":"org.apache.calcite.sql","c":"SqlCreate","l":"setReplace(boolean)"},{"p":"org.apache.calcite.server","c":"CalciteServerStatement","l":"setResultSet(Iterator<Object>)","u":"setResultSet(java.util.Iterator)"},{"p":"org.apache.calcite.sql","c":"SqlJoin","l":"setRight(SqlNode)","u":"setRight(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.plan.hep","c":"HepPlanner","l":"setRoot(RelNode)","u":"setRoot(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan","c":"RelOptPlanner","l":"setRoot(RelNode)","u":"setRoot(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"setRoot(RelNode)","u":"setRoot(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.test","c":"MockRelOptPlanner","l":"setRoot(RelNode)","u":"setRoot(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Blackboard","l":"setRoot(RelNode, boolean)","u":"setRoot(org.apache.calcite.rel.RelNode,boolean)"},{"p":"org.apache.calcite.adapter.kafka","c":"KafkaTableOptions","l":"setRowConverter(KafkaRowConverter)","u":"setRowConverter(org.apache.calcite.adapter.kafka.KafkaRowConverter)"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"setRows(SqlLiteral)","u":"setRows(org.apache.calcite.sql.SqlLiteral)"},{"p":"org.apache.calcite.plan","c":"RelOptRuleOperand","l":"setRule(RelOptRule)","u":"setRule(org.apache.calcite.plan.RelOptRule)"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"setRuleDescExclusionFilter(Pattern)","u":"setRuleDescExclusionFilter(java.util.regex.Pattern)"},{"p":"org.apache.calcite.plan","c":"RelOptPlanner","l":"setRuleDescExclusionFilter(Pattern)","u":"setRuleDescExclusionFilter(java.util.regex.Pattern)"},{"p":"org.apache.calcite.jdbc","c":"CalciteConnection","l":"setSchema(String)","u":"setSchema(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlAlter","l":"setScope(String)","u":"setScope(java.lang.String)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Builder","l":"setSelect(SqlNodeList)","u":"setSelect(org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.sql","c":"SqlSelect","l":"setSelectList(SqlNodeList)","u":"setSelectList(org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"setSelectListExtraIndentFlag(boolean)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlFormatOptions","l":"setSelectListItemsOnSeparateLines(boolean)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"setSelectListItemsOnSeparateLines(boolean)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"setSettings(Properties)","u":"setSettings(java.util.Properties)"},{"p":"org.apache.calcite.server","c":"CalciteServerStatement","l":"setSignature(Meta.Signature)","u":"setSignature(org.apache.calcite.avatica.Meta.Signature)"},{"p":"org.apache.calcite.sql","c":"SqlInsert","l":"setSource(SqlSelect)","u":"setSource(org.apache.calcite.sql.SqlSelect)"},{"p":"org.apache.calcite.util.javac","c":"JaninoCompiler.JaninoCompilerArgs","l":"setSource(String, String)","u":"setSource(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.util.javac","c":"JavaCompilerArgs","l":"setSource(String, String)","u":"setSource(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.interpreter","c":"Sink","l":"setSourceEnumerable(Enumerable<Row>)","u":"setSourceEnumerable(org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.sql","c":"SqlDelete","l":"setSourceSelect(SqlSelect)","u":"setSourceSelect(org.apache.calcite.sql.SqlSelect)"},{"p":"org.apache.calcite.sql","c":"SqlMerge","l":"setSourceSelect(SqlSelect)","u":"setSourceSelect(org.apache.calcite.sql.SqlSelect)"},{"p":"org.apache.calcite.sql","c":"SqlUpdate","l":"setSourceSelect(SqlSelect)","u":"setSourceSelect(org.apache.calcite.sql.SqlSelect)"},{"p":"org.apache.calcite.sql","c":"SqlMerge","l":"setSourceTableRef(SqlNode)","u":"setSourceTableRef(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.util.javac","c":"JavaCompilerArgs","l":"setString(String)","u":"setString(java.lang.String)"},{"p":"org.apache.calcite.util.javac","c":"JavaCompilerArgs","l":"setStringArray(String[])","u":"setStringArray(java.lang.String[])"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"setSubQueryConverter(SubQueryConverter)","u":"setSubQueryConverter(org.apache.calcite.sql2rel.SubQueryConverter)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"setSubQueryStyle(SqlWriter.SubQueryStyle)","u":"setSubQueryStyle(org.apache.calcite.sql.SqlWriter.SubQueryStyle)"},{"p":"org.apache.calcite.adapter.redis","c":"RedisTableFieldInfo","l":"setTableName(String)","u":"setTableName(java.lang.String)"},{"p":"org.apache.calcite.materialize","c":"MaterializationService","l":"setThreadLocal()"},{"p":"org.apache.calcite.runtime","c":"ResultSetEnumerable","l":"setTimeout(DataContext)","u":"setTimeout(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"setTopDownOpt(boolean)"},{"p":"org.apache.calcite.adapter.kafka","c":"KafkaTableOptions","l":"setTopicName(String)","u":"setTopicName(java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"MatchRecognizeNamespace","l":"setType(RelDataType)","u":"setType(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingNamespace","l":"setType(RelDataType)","u":"setType(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorNamespace","l":"setType(RelDataType)","u":"setType(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser.ConfigBuilder","l":"setUnquotedCasing(Casing)","u":"setUnquotedCasing(org.apache.calcite.avatica.util.Casing)"},{"p":"org.apache.calcite.test","c":"DiffTestCase","l":"setUp()"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"setUpperBound(SqlNode)","u":"setUpperBound(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"setValidatedNodeType(SqlNode, RelDataType)","u":"setValidatedNodeType(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"setValidatedNodeType(SqlNode, RelDataType)","u":"setValidatedNodeType(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.linq4j","c":"Ord","l":"setValue(E)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFieldImpl","l":"setValue(RelDataType)","u":"setValue(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql","c":"SqlSetOption","l":"setValue(SqlNode)","u":"setValue(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.util","c":"Pair","l":"setValue(T2)"},{"p":"org.apache.calcite.runtime","c":"MapEntry","l":"setValue(U)"},{"p":"org.apache.calcite.test","c":"DiffTestCase","l":"setVerbose(boolean)"},{"p":"org.apache.calcite.util.javac","c":"JavaCompilerArgs","l":"setVerbose(boolean)"},{"p":"org.apache.calcite.sql","c":"SqlSelect","l":"setWhere(SqlNode)","u":"setWhere(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Builder","l":"setWhere(SqlNode)","u":"setWhere(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlFormatOptions","l":"setWhereListItemsOnSeparateLines(boolean)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"setWhereListItemsOnSeparateLines(boolean)"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"setWindowCall(SqlCall)","u":"setWindowCall(org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlFormatOptions","l":"setWindowDeclarationStartsLine(boolean)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"setWindowDeclListNewline(boolean)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlFormatOptions","l":"setWindowListItemsOnSeparateLines(boolean)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"setWindowNewline(boolean)"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"sh"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SHA1"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"SHA1"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"sha1(ByteString)","u":"sha1(org.apache.calcite.avatica.util.ByteString)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"sha1(String)","u":"sha1(java.lang.String)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SHA256"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"SHA256"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"sha256(ByteString)","u":"sha256(org.apache.calcite.avatica.util.ByteString)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"sha256(String)","u":"sha256(java.lang.String)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SHA512"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"SHA512"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"sha512(ByteString)","u":"sha512(org.apache.calcite.avatica.util.ByteString)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"sha512(String)","u":"sha512(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"sharedStatementPlans()"},{"p":"org.apache.calcite.sql","c":"SqlDialect.CalendarPolicy","l":"SHIFT"},{"p":"org.apache.calcite.rel","c":"RelFieldCollation","l":"shift(int)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"shift(int)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"shift(Iterable<RexNode>, int)","u":"shift(java.lang.Iterable,int)"},{"p":"org.apache.calcite.rel","c":"RelCollations","l":"shift(RelCollation, int)","u":"shift(org.apache.calcite.rel.RelCollation,int)"},{"p":"org.apache.calcite.plan","c":"RelOptPredicateList","l":"shift(RexBuilder, int)","u":"shift(org.apache.calcite.rex.RexBuilder,int)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"shift(RexNode, int)","u":"shift(org.apache.calcite.rex.RexNode,int)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"shift(RexNode, int, int)","u":"shift(org.apache.calcite.rex.RexNode,int,int)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"SHORT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SHORT_INTERVAL_DECIMAL_CAST"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SHORT_INTERVAL_DECIMAL_CAST_ROUNDING_MODE"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"shortDataType"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"shortIntervalToDecimalCast(Long, int, int, BigDecimal)","u":"shortIntervalToDecimalCast(java.lang.Long,int,int,java.math.BigDecimal)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"shortIntervalToDecimalCast(Long, int, int, BigDecimal, RoundingMode)","u":"shortIntervalToDecimalCast(java.lang.Long,int,int,java.math.BigDecimal,java.math.RoundingMode)"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"shortLiteral(short)"},{"p":"org.apache.calcite.rel","c":"RelDistribution.Type","l":"shortName"},{"p":"org.apache.calcite.rel","c":"RelFieldCollation.Direction","l":"shortString"},{"p":"org.apache.calcite.rel","c":"RelFieldCollation","l":"shortString()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"shouldAllowIntermediateOrderBy()"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisorValidator","l":"shouldAllowOverRelation()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"shouldAllowOverRelation()"},{"p":"org.apache.calcite.rel.type","c":"DelegatingTypeSystem","l":"shouldConvertRaggedUnionTypesToVarying()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystem","l":"shouldConvertRaggedUnionTypesToVarying()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystemImpl","l":"shouldConvertRaggedUnionTypesToVarying()"},{"p":"org.apache.calcite.sql.validate","c":"SqlAbstractConformance","l":"shouldConvertRaggedUnionTypesToVarying()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformance","l":"shouldConvertRaggedUnionTypesToVarying()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"shouldConvertRaggedUnionTypesToVarying()"},{"p":"org.apache.calcite.sql.validate","c":"SqlDelegatingConformance","l":"shouldConvertRaggedUnionTypesToVarying()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeSystem","l":"shouldUseDoubleMultiplication(RelDataTypeFactory, RelDataType, RelDataType)","u":"shouldUseDoubleMultiplication(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"Shuttle()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule","l":"shuttleReferences(RexBuilder, RexNode, Mapping)","u":"shuttleReferences(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,org.apache.calcite.util.mapping.Mapping)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule","l":"shuttleReferences(RexBuilder, RexNode, Multimap<RexNode, Integer>)","u":"shuttleReferences(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,com.google.common.collect.Multimap)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule","l":"shuttleReferences(RexBuilder, RexNode, Multimap<RexNode, Integer>, RelNode, Multimap<Integer, Integer>)","u":"shuttleReferences(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,com.google.common.collect.Multimap,org.apache.calcite.rel.RelNode,com.google.common.collect.Multimap)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SIGN"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"SIGN"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"sign(BigDecimal)","u":"sign(java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"sign(double)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"sign(int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"sign(long)"},{"p":"org.apache.calcite.sql","c":"SqlIntervalLiteral.IntervalValue","l":"signum()"},{"p":"org.apache.calcite.sql","c":"SqlIntervalLiteral","l":"signum()"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"signum()"},{"p":"org.apache.calcite.statistic","c":"QuerySqlStatisticProvider","l":"SILENT_CACHING_INSTANCE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"SIMILAR"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SIMILAR"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SIMILAR_ESCAPE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"SIMILAR_TO"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.SimilarFunction","l":"similar(String, String)","u":"similar(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.SimilarEscapeFunction","l":"similar(String, String, String)","u":"similar(java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.SimilarEscapeFunction","l":"SimilarEscapeFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.SimilarFunction","l":"SimilarFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.SimilarlityTableFunction","l":"SimilarlityTableFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.core","c":"Aggregate.Group","l":"SIMPLE"},{"p":"org.apache.calcite.sql","c":"SqlWriter.FrameTypeEnum","l":"SIMPLE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"SIMPLE_BINARY_OPS"},{"p":"org.apache.calcite.rel.externalize","c":"RelWriterImpl","l":"simple()"},{"p":"org.apache.calcite.linq4j.tree","c":"Blocks","l":"simple(BlockStatement)","u":"simple(org.apache.calcite.linq4j.tree.BlockStatement)"},{"p":"org.apache.calcite.plan","c":"ViewExpanders","l":"simpleContext(RelOptCluster)","u":"simpleContext(org.apache.calcite.plan.RelOptCluster)"},{"p":"org.apache.calcite.plan","c":"ViewExpanders","l":"simpleContext(RelOptCluster, List<RelHint>)","u":"simpleContext(org.apache.calcite.plan.RelOptCluster,java.util.List)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.SimpleContext","l":"SimpleContext(SqlDialect, IntFunction<SqlNode>)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect,java.util.function.IntFunction)"},{"p":"org.apache.calcite.sql","c":"SqlJdbcFunctionCall.SimpleMakeCall","l":"SimpleMakeCall(SqlOperator)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlOperator)"},{"p":"org.apache.calcite.sql","c":"SqlIdentifier","l":"simpleNames(Iterable<? extends SqlNode>)","u":"simpleNames(java.lang.Iterable)"},{"p":"org.apache.calcite.sql","c":"SqlIdentifier","l":"simpleNames(List<? extends SqlNode>)","u":"simpleNames(java.util.List)"},{"p":"org.apache.calcite.util","c":"SimpleNamespaceContext","l":"SimpleNamespaceContext(Map<String, String>)","u":"%3Cinit%3E(java.util.Map)"},{"p":"org.apache.calcite.profile","c":"SimpleProfiler","l":"SimpleProfiler()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"simpleSarg(RexBuilder, RexNode, Sarg<C>, RexUnknownAs)","u":"simpleSarg(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,org.apache.calcite.util.Sarg,org.apache.calcite.rex.RexUnknownAs)"},{"p":"org.apache.calcite.util","c":"Smalls.SimpleTable","l":"SimpleTable()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util","c":"Smalls.SimpleTableFunction","l":"SimpleTableFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util","c":"Smalls.SimpleTableMacro","l":"SimpleTableMacro()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"simplify"},{"p":"org.apache.calcite.plan","c":"RelTraitSet","l":"simplify()"},{"p":"org.apache.calcite.tools","c":"RelBuilder.Config","l":"simplify()"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"simplify(RexBuilder, RexNode)","u":"simplify(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"simplify(RexBuilder, RexNode, boolean)","u":"simplify(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,boolean)"},{"p":"org.apache.calcite.rex","c":"RexSimplify","l":"simplify(RexNode)","u":"simplify(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"simplifyAnd(RexBuilder, RexCall, boolean)","u":"simplifyAnd(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall,boolean)"},{"p":"org.apache.calcite.rex","c":"RexSimplify","l":"simplifyAnd(RexCall)","u":"simplifyAnd(org.apache.calcite.rex.RexCall)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"simplifyAnd2(RexBuilder, List<RexNode>, List<RexNode>)","u":"simplifyAnd2(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"simplifyAnd2ForUnknownAsFalse(RexBuilder, List<RexNode>, List<RexNode>)","u":"simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexSimplify","l":"simplifyAnds(Iterable<? extends RexNode>)","u":"simplifyAnds(java.lang.Iterable)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"simplifyAnds(RexBuilder, Iterable<? extends RexNode>)","u":"simplifyAnds(org.apache.calcite.rex.RexBuilder,java.lang.Iterable)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"simplifyAnds(RexBuilder, Iterable<? extends RexNode>, boolean)","u":"simplifyAnds(org.apache.calcite.rex.RexBuilder,java.lang.Iterable,boolean)"},{"p":"org.apache.calcite.rel.rules","c":"ExchangeRemoveConstantKeysRule","l":"simplifyDistributionKeys(RelDistribution, Set<Integer>)","u":"simplifyDistributionKeys(org.apache.calcite.rel.RelDistribution,java.util.Set)"},{"p":"org.apache.calcite.rex","c":"RexSimplify","l":"simplifyFilterPredicates(Iterable<? extends RexNode>)","u":"simplifyFilterPredicates(java.lang.Iterable)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"simplifyJoin(RelNode, ImmutableList<RexNode>, JoinRelType)","u":"simplifyJoin(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.tools","c":"RelBuilder.Config","l":"simplifyLimit()"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"simplifyOr(RexBuilder, RexCall)","u":"simplifyOr(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall)"},{"p":"org.apache.calcite.rex","c":"RexSimplify","l":"simplifyOr(RexCall)","u":"simplifyOr(org.apache.calcite.rex.RexCall)"},{"p":"org.apache.calcite.rex","c":"RexSimplify","l":"simplifyOrs(List<RexNode>)","u":"simplifyOrs(java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"simplifyOrs(RexBuilder, List<RexNode>)","u":"simplifyOrs(org.apache.calcite.rex.RexBuilder,java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"simplifyPreservingType(RexBuilder, RexNode)","u":"simplifyPreservingType(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rex","c":"RexSimplify","l":"simplifyPreservingType(RexNode)","u":"simplifyPreservingType(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rex","c":"RexSimplify","l":"simplifyPreservingType(RexNode, RexUnknownAs, boolean)","u":"simplifyPreservingType(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexUnknownAs,boolean)"},{"p":"org.apache.calcite.sql.advise","c":"SqlSimpleParser","l":"simplifySql(String)","u":"simplifySql(java.lang.String)"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisor","l":"simplifySql(String, int)","u":"simplifySql(java.lang.String,int)"},{"p":"org.apache.calcite.sql.advise","c":"SqlSimpleParser","l":"simplifySql(String, int)","u":"simplifySql(java.lang.String,int)"},{"p":"org.apache.calcite.rex","c":"RexSimplify","l":"simplifyUnknownAs(RexNode, RexUnknownAs)","u":"simplifyUnknownAs(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexUnknownAs)"},{"p":"org.apache.calcite.rex","c":"RexSimplify","l":"simplifyUnknownAsFalse(RexNode)","u":"simplifyUnknownAsFalse(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.tools","c":"RelBuilder.Config","l":"simplifyValues()"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SIN"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"SIN"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"sin(BigDecimal)","u":"sin(java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"sin(double)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SIND"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"SIND"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"sind(BigDecimal)","u":"sind(java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"sind(double)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"SINGLE_VALUE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"SINGLE_VALUE"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"single()"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"single()"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"single(Enumerable<TSource>)","u":"single(org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"single(Enumerable<TSource>, Predicate1<TSource>)","u":"single(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"single(FunctionExpression<Predicate1<T>>)","u":"single(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"single(FunctionExpression<Predicate1<T>>)","u":"single(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"single(FunctionExpression<Predicate1<TSource>>)"},{"p":"","c":"","l":"single(FunctionExpression<Predicate1<TSource>>)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"single(Predicate1<T>)","u":"single(org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"single(Predicate1<TSource>)","u":"single(org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"single(Queryable<T>)","u":"single(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"single(Queryable<T>)","u":"single(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"single(Queryable<T>)","u":"single(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"single(Queryable<T>, FunctionExpression<Predicate1<T>>)","u":"single(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"single(Queryable<T>, FunctionExpression<Predicate1<T>>)","u":"single(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"single(Queryable<T>, FunctionExpression<Predicate1<T>>)","u":"single(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.rel.type","c":"SingleColumnAliasRelDataType","l":"SingleColumnAliasRelDataType(RelDataType, RelDataType)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.adapter.enumerable","c":"BasicAggregateLambdaFactory","l":"singleGroupResultSelector(Function1<TAccumulate, TResult>)","u":"singleGroupResultSelector(org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.adapter.enumerable","c":"AggregateLambdaFactory","l":"singleGroupResultSelector(Function1<TOrigAccumulate, TResult>)","u":"singleGroupResultSelector(org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.adapter.enumerable","c":"LazyAggregateLambdaFactory","l":"singleGroupResultSelector(Function1<TOrigAccumulate, TResult>)","u":"singleGroupResultSelector(org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"singleOrDefault()"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"singleOrDefault()"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"singleOrDefault()"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"singleOrDefault(Enumerable<TSource>)","u":"singleOrDefault(org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"singleOrDefault(Enumerable<TSource>, Predicate1<TSource>)","u":"singleOrDefault(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"singleOrDefault(FunctionExpression<Predicate1<T>>)","u":"singleOrDefault(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"singleOrDefault(FunctionExpression<Predicate1<T>>)","u":"singleOrDefault(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"singleOrDefault(FunctionExpression<Predicate1<TSource>>)"},{"p":"","c":"","l":"singleOrDefault(FunctionExpression<Predicate1<TSource>>)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"singleOrDefault(Predicate1<T>)","u":"singleOrDefault(org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"singleOrDefault(Predicate1<TSource>)","u":"singleOrDefault(org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"singleOrDefault(Queryable<T>)","u":"singleOrDefault(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"singleOrDefault(Queryable<T>)","u":"singleOrDefault(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"singleOrDefault(Queryable<T>)","u":"singleOrDefault(org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"singleOrDefault(Queryable<T>, FunctionExpression<Predicate1<T>>)","u":"singleOrDefault(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"singleOrDefault(Queryable<T>, FunctionExpression<Predicate1<T>>)","u":"singleOrDefault(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"singleOrDefault(Queryable<T>, FunctionExpression<Predicate1<T>>)","u":"singleOrDefault(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.rel","c":"SingleRel","l":"SingleRel(RelOptCluster, RelTraitSet, RelNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel","c":"RelDistribution.Type","l":"SINGLETON"},{"p":"org.apache.calcite.rel","c":"RelDistributions","l":"SINGLETON"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"SINGLETON_EMPTY"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SINGLETON_ENUMERABLE"},{"p":"org.apache.calcite.util","c":"Glossary","l":"SINGLETON_PATTERN"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"SINGLETON_STAR"},{"p":"org.apache.calcite.sql","c":"SqlSingletonAggFunction","l":"singleton(RexBuilder, RelDataType, AggregateCall)","u":"singleton(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall)"},{"p":"org.apache.calcite.sql","c":"SqlSplittableAggFunction.AbstractSumSplitter","l":"singleton(RexBuilder, RelDataType, AggregateCall)","u":"singleton(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall)"},{"p":"org.apache.calcite.sql","c":"SqlSplittableAggFunction.CountSplitter","l":"singleton(RexBuilder, RelDataType, AggregateCall)","u":"singleton(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall)"},{"p":"org.apache.calcite.sql","c":"SqlSplittableAggFunction.SelfSplitter","l":"singleton(RexBuilder, RelDataType, AggregateCall)","u":"singleton(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall)"},{"p":"org.apache.calcite.sql","c":"SqlSplittableAggFunction.Sum0Splitter","l":"singleton(RexBuilder, RelDataType, AggregateCall)","u":"singleton(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall)"},{"p":"org.apache.calcite.util","c":"RangeSets.Consumer","l":"singleton(V)"},{"p":"org.apache.calcite.util","c":"RangeSets.Handler","l":"singleton(V)"},{"p":"org.apache.calcite.runtime","c":"SortedMultiMap","l":"singletonArrayIterator(Comparator<V>, List<V>)","u":"singletonArrayIterator(java.util.Comparator,java.util.List)"},{"p":"org.apache.calcite.linq4j","c":"Linq4j","l":"singletonEnumerable(T)"},{"p":"org.apache.calcite.linq4j","c":"Linq4j","l":"singletonEnumerator(T)"},{"p":"org.apache.calcite.linq4j","c":"Linq4j","l":"singletonNullEnumerator()"},{"p":"org.apache.calcite.rel.rules","c":"SingleValuesOptimizationRules","l":"SingleValuesOptimizationRules()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SINH"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"SINH"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"sinh(BigDecimal)","u":"sinh(java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"sinh(double)"},{"p":"org.apache.calcite.interpreter","c":"MatchNode","l":"sink"},{"p":"org.apache.calcite.interpreter","c":"Compiler","l":"sink(RelNode)","u":"sink(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.interpreter","c":"Nodes.CoreCompiler","l":"sink(RelNode)","u":"sink(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"size"},{"p":"org.apache.calcite.interpreter","c":"Row.RowBuilder","l":"size()"},{"p":"org.apache.calcite.interpreter","c":"Row","l":"size()"},{"p":"org.apache.calcite.plan","c":"RelTraitSet","l":"size()"},{"p":"org.apache.calcite.runtime","c":"ConsList","l":"size()"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat1List","l":"size()"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat2List","l":"size()"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat3List","l":"size()"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat4List","l":"size()"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat5List","l":"size()"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat6List","l":"size()"},{"p":"org.apache.calcite.runtime.rtti","c":"RowSqlTypeRtti","l":"size()"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"size()"},{"p":"org.apache.calcite.sql","c":"SqlSpecialOperator.TokenSequence","l":"size()"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"size()"},{"p":"org.apache.calcite.util","c":"CastingList","l":"size()"},{"p":"org.apache.calcite.util","c":"ChunkList","l":"size()"},{"p":"org.apache.calcite.util","c":"CompositeList","l":"size()"},{"p":"org.apache.calcite.util","c":"CompositeMap","l":"size()"},{"p":"org.apache.calcite.util","c":"EquivalenceSet","l":"size()"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"size()"},{"p":"org.apache.calcite.util","c":"ImmutableIntList","l":"size()"},{"p":"org.apache.calcite.util","c":"ImmutableNullableList","l":"size()"},{"p":"org.apache.calcite.util","c":"ImmutableNullableSet","l":"size()"},{"p":"org.apache.calcite.util","c":"IntegerIntervalSet","l":"size()"},{"p":"org.apache.calcite.util.mapping","c":"AbstractSourceMapping","l":"size()"},{"p":"org.apache.calcite.util.mapping","c":"AbstractTargetMapping","l":"size()"},{"p":"org.apache.calcite.util.mapping","c":"Mapping","l":"size()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.CoreMapping","l":"size()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.IdentityMapping","l":"size()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.OverridingSourceMapping","l":"size()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.OverridingTargetMapping","l":"size()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.PartialMapping","l":"size()"},{"p":"org.apache.calcite.util","c":"PartiallyOrderedSet","l":"size()"},{"p":"org.apache.calcite.util","c":"Permutation","l":"size()"},{"p":"org.apache.calcite.util","c":"UnmodifiableArrayList","l":"size()"},{"p":"org.apache.calcite.adapter.innodb","c":"QueryType","l":"SK_FULL_SCAN"},{"p":"org.apache.calcite.adapter.innodb","c":"QueryType","l":"SK_POINT_QUERY"},{"p":"org.apache.calcite.adapter.innodb","c":"QueryType","l":"SK_RANGE_QUERY"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SKIP"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize.AfterOption","l":"SKIP_PAST_LAST_ROW"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"SKIP_TO_FIRST"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize","l":"SKIP_TO_FIRST"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"SKIP_TO_LAST"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize","l":"SKIP_TO_LAST"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize.AfterOption","l":"SKIP_TO_NEXT_ROW"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"skip(Enumerable<TSource>, int)","u":"skip(org.apache.calcite.linq4j.Enumerable,int)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"skip(int)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"skip(int)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"skip(int)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"skip(int)"},{"p":"org.apache.calcite.util","c":"Util","l":"skip(List<E>)","u":"skip(java.util.List)"},{"p":"org.apache.calcite.util","c":"Util","l":"skip(List<E>, int)","u":"skip(java.util.List,int)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"skip(Queryable<T>, int)","u":"skip(org.apache.calcite.linq4j.Queryable,int)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"skip(Queryable<T>, int)","u":"skip(org.apache.calcite.linq4j.Queryable,int)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"skip(Queryable<T>, int)","u":"skip(org.apache.calcite.linq4j.Queryable,int)"},{"p":"org.apache.calcite.sql","c":"SqlIdentifier","l":"skipLast(int)"},{"p":"org.apache.calcite.util","c":"Util","l":"skipLast(List<E>)","u":"skipLast(java.util.List)"},{"p":"org.apache.calcite.util","c":"Util","l":"skipLast(List<E>, int)","u":"skipLast(java.util.List,int)"},{"p":"org.apache.calcite.plan.volcano","c":"RuleQueue","l":"skipMatch(VolcanoRuleMatch)","u":"skipMatch(org.apache.calcite.plan.volcano.VolcanoRuleMatch)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"skipWhile(Enumerable<TSource>, Predicate1<TSource>)","u":"skipWhile(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"skipWhile(Enumerable<TSource>, Predicate2<TSource, Integer>)","u":"skipWhile(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Predicate2)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"skipWhile(FunctionExpression<Predicate1<T>>)","u":"skipWhile(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"skipWhile(FunctionExpression<Predicate1<T>>)","u":"skipWhile(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"skipWhile(FunctionExpression<Predicate1<TSource>>)"},{"p":"","c":"","l":"skipWhile(FunctionExpression<Predicate1<TSource>>)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"skipWhile(Predicate1<T>)","u":"skipWhile(org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"skipWhile(Predicate1<TSource>)","u":"skipWhile(org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"skipWhile(Predicate2<T, Integer>)","u":"skipWhile(org.apache.calcite.linq4j.function.Predicate2)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"skipWhile(Predicate2<TSource, Integer>)","u":"skipWhile(org.apache.calcite.linq4j.function.Predicate2)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"skipWhile(Queryable<T>, FunctionExpression<Predicate1<T>>)","u":"skipWhile(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"skipWhile(Queryable<T>, FunctionExpression<Predicate1<T>>)","u":"skipWhile(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"skipWhile(Queryable<T>, FunctionExpression<Predicate1<T>>)","u":"skipWhile(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"skipWhileN(FunctionExpression<Predicate2<T, Integer>>)","u":"skipWhileN(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"skipWhileN(FunctionExpression<Predicate2<T, Integer>>)","u":"skipWhileN(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"skipWhileN(FunctionExpression<Predicate2<TSource, Integer>>)"},{"p":"","c":"","l":"skipWhileN(FunctionExpression<Predicate2<TSource, Integer>>)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"skipWhileN(Queryable<T>, FunctionExpression<Predicate2<T, Integer>>)","u":"skipWhileN(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"skipWhileN(Queryable<T>, FunctionExpression<Predicate2<T, Integer>>)","u":"skipWhileN(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"skipWhileN(Queryable<T>, FunctionExpression<Predicate2<T, Integer>>)","u":"skipWhileN(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SLICE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"SLICE"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"slice(List)","u":"slice(java.util.List)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SLICE0"},{"p":"org.apache.calcite.runtime","c":"Enumerables","l":"slice0(Enumerable<E[]>)","u":"slice0(org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor.UnifyRule","l":"slotCount"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor","l":"slots"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor.UnifyRuleCall","l":"slots"},{"p":"org.apache.calcite.runtime.rtti","c":"RuntimeTypeInformation.RuntimeSqlTypeName","l":"SMALLINT"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"SMALLINT"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"SNAPSHOT"},{"p":"org.apache.calcite.rel.hint","c":"HintPredicates","l":"SNAPSHOT"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules","l":"SNAPSHOT_FACTORY"},{"p":"org.apache.calcite.jdbc","c":"CalciteRootSchema","l":"snapshot(CalciteSchema, SchemaVersion)","u":"snapshot(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.schema.SchemaVersion)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"snapshot(CalciteSchema, SchemaVersion)","u":"snapshot(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.schema.SchemaVersion)"},{"p":"org.apache.calcite.rel.core","c":"Snapshot","l":"Snapshot(RelInput)","u":"%3Cinit%3E(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdCollation","l":"snapshot(RelMetadataQuery, RelNode)","u":"snapshot(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdDistribution","l":"snapshot(RelMetadataQuery, RelNode)","u":"snapshot(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.core","c":"Snapshot","l":"Snapshot(RelOptCluster, RelTraitSet, List<RelHint>, RelNode, RexNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.core","c":"Snapshot","l":"Snapshot(RelOptCluster, RelTraitSet, RelNode, RexNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"snapshot(RexNode)","u":"snapshot(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcBaseSchema","l":"snapshot(SchemaVersion)","u":"snapshot(org.apache.calcite.schema.SchemaVersion)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcSchema","l":"snapshot(SchemaVersion)","u":"snapshot(org.apache.calcite.schema.SchemaVersion)"},{"p":"org.apache.calcite.schema.impl","c":"AbstractSchema","l":"snapshot(SchemaVersion)","u":"snapshot(org.apache.calcite.schema.SchemaVersion)"},{"p":"org.apache.calcite.schema.impl","c":"DelegatingSchema","l":"snapshot(SchemaVersion)","u":"snapshot(org.apache.calcite.schema.SchemaVersion)"},{"p":"org.apache.calcite.schema","c":"Schema","l":"snapshot(SchemaVersion)","u":"snapshot(org.apache.calcite.schema.SchemaVersion)"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.Struct","l":"snapshotFactory"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.SnapshotFactoryImpl","l":"SnapshotFactoryImpl()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.schema.lookup","c":"SnapshotLookup","l":"SnapshotLookup(Lookup<T>)","u":"%3Cinit%3E(org.apache.calcite.schema.lookup.Lookup)"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibrary","l":"SNOWFLAKE"},{"p":"org.apache.calcite.sql","c":"SqlDialect.DatabaseProduct","l":"SNOWFLAKE"},{"p":"org.apache.calcite.sql.dialect","c":"SnowflakeSqlDialect","l":"SnowflakeSqlDialect(SqlDialect.Context)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect.Context)"},{"p":"org.apache.calcite.runtime","c":"SocketFactoryImpl","l":"SO_CONNECT_TIMEOUT"},{"p":"org.apache.calcite.runtime","c":"SocketFactoryImpl","l":"SO_KEEPALIVE"},{"p":"org.apache.calcite.runtime","c":"SocketFactoryImpl","l":"SO_LINGER"},{"p":"org.apache.calcite.runtime","c":"SocketFactoryImpl","l":"SO_RCVBUF"},{"p":"org.apache.calcite.runtime","c":"SocketFactoryImpl","l":"SO_REUSEADDR"},{"p":"org.apache.calcite.runtime","c":"SocketFactoryImpl","l":"SO_SNDBUF"},{"p":"org.apache.calcite.runtime","c":"SocketFactoryImpl","l":"SO_TIMEOUT"},{"p":"org.apache.calcite.runtime","c":"SocketFactoryImpl","l":"SocketFactoryImpl()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"sole(List<T>)","u":"sole(java.util.List)"},{"p":"org.apache.calcite.example.maze","c":"MazeTable","l":"solve(int, int, int)","u":"solve(int,int,int)"},{"p":"org.apache.calcite.plan","c":"RelOptRuleOperand","l":"solveOrder"},{"p":"org.apache.calcite.plan","c":"RelOptRuleOperandChildPolicy","l":"SOME"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"SOME"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"SOME"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"SOME_EQ"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"SOME_GE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"SOME_GT"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"SOME_LE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"SOME_LT"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"SOME_NE"},{"p":"org.apache.calcite.rex","c":"RexSubQuery","l":"some(RelNode, ImmutableList<RexNode>, SqlQuantifyOperator)","u":"some(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList,org.apache.calcite.sql.fun.SqlQuantifyOperator)"},{"p":"org.apache.calcite.plan","c":"RelOptRule","l":"some(RelOptRuleOperand, RelOptRuleOperand...)","u":"some(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.plan.RelOptRuleOperand...)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"some(RexNode, SqlOperator, Function<RelBuilder, RelNode>)","u":"some(org.apache.calcite.rex.RexNode,org.apache.calcite.sql.SqlOperator,java.util.function.Function)"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"some(SqlKind)","u":"some(org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"someButNotAllArgumentsAreNamed()"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraRules","l":"SORT"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules","l":"SORT"},{"p":"org.apache.calcite.rel.hint","c":"HintPredicates","l":"SORT"},{"p":"org.apache.calcite.rel.rules","c":"ExchangeRemoveConstantKeysRule.Config","l":"SORT"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules.RemoveEmptySingleRule.RemoveEmptySingleRuleConfig","l":"SORT"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"SORT_ARRAY"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SORT_ARRAY"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"SORT_ARRAY"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules","l":"SORT_EXCHANGE_FACTORY"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"SORT_EXCHANGE_REMOVE_CONSTANT_KEYS"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules","l":"SORT_FACTORY"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules","l":"SORT_FETCH_ZERO_INSTANCE"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbRules","l":"SORT_FILTER"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules","l":"SORT_INSTANCE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"SORT_JOIN_COPY"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"SORT_JOIN_TRANSPOSE"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules","l":"SORT_PROJECT_TRANSPOSE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"SORT_PROJECT_TRANSPOSE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"SORT_REMOVE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"SORT_REMOVE_CONSTANT_KEYS"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"SORT_REMOVE_REDUNDANT"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbRules","l":"SORT_SCAN"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"SORT_UNION_TRANSPOSE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"SORT_UNION_TRANSPOSE_MATCH_NULL_FETCH"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"sort(int...)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"sort(Iterable<? extends RexNode>)","u":"sort(java.lang.Iterable)"},{"p":"org.apache.calcite.tools","c":"RelBuilder.AggCall","l":"sort(Iterable<RexNode>)","u":"sort(java.lang.Iterable)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdCollation","l":"sort(RelCollation)","u":"sort(org.apache.calcite.rel.RelCollation)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"sort(RelCollation)","u":"sort(org.apache.calcite.rel.RelCollation)"},{"p":"org.apache.calcite.rel.core","c":"Sort","l":"Sort(RelInput)","u":"%3Cinit%3E(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdDistribution","l":"sort(RelMetadataQuery, RelNode)","u":"sort(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.core","c":"Sort","l":"Sort(RelOptCluster, RelTraitSet, List<RelHint>, RelNode, RelCollation, RexNode, RexNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.core","c":"Sort","l":"Sort(RelOptCluster, RelTraitSet, RelNode, RelCollation)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation)"},{"p":"org.apache.calcite.rel.core","c":"Sort","l":"Sort(RelOptCluster, RelTraitSet, RelNode, RelCollation, RexNode, RexNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.tools","c":"RelBuilder.AggCall","l":"sort(RexNode...)","u":"sort(org.apache.calcite.rex.RexNode...)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"sort(RexNode...)","u":"sort(org.apache.calcite.rex.RexNode...)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"sortArray(List, boolean)","u":"sortArray(java.util.List,boolean)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"sortArray(Object)","u":"sortArray(java.lang.Object)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"sortArray(Object, int, int)","u":"sortArray(java.lang.Object,int,int)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SORTED_GROUP_BY"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SORTED_MULTI_MAP_ARRAYS"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SORTED_MULTI_MAP_PUT_MULTI"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SORTED_MULTI_MAP_SINGLETON"},{"p":"org.apache.calcite.adapter.redis","c":"RedisDataType","l":"SORTED_SET"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"sortedGroupBy(Enumerable<TSource>, Function1<TSource, TKey>, Function0<TAccumulate>, Function2<TAccumulate, TSource, TAccumulate>, Function2<TKey, TAccumulate, TResult>, Comparator<TKey>)","u":"sortedGroupBy(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function0,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.Function2,java.util.Comparator)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"sortedGroupBy(Function1<T, TKey>, Function0<TAccumulate>, Function2<TAccumulate, T, TAccumulate>, Function2<TKey, TAccumulate, TResult>, Comparator<TKey>)","u":"sortedGroupBy(org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function0,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.Function2,java.util.Comparator)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"sortedGroupBy(Function1<TSource, TKey>, Function0<TAccumulate>, Function2<TAccumulate, TSource, TAccumulate>, Function2<TKey, TAccumulate, TResult>, Comparator<TKey>)","u":"sortedGroupBy(org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function0,org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.Function2,java.util.Comparator)"},{"p":"org.apache.calcite.runtime","c":"SortedMultiMap","l":"SortedMultiMap()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"sortExchange(RelDistribution, RelCollation)","u":"sortExchange(org.apache.calcite.rel.RelDistribution,org.apache.calcite.rel.RelCollation)"},{"p":"org.apache.calcite.rel.core","c":"SortExchange","l":"SortExchange(RelInput)","u":"%3Cinit%3E(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel.core","c":"SortExchange","l":"SortExchange(RelOptCluster, RelTraitSet, RelNode, RelDistribution, RelCollation)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelDistribution,org.apache.calcite.rel.RelCollation)"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.Struct","l":"sortExchangeFactory"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.Struct","l":"sortFactory"},{"p":"org.apache.calcite.rel.rules","c":"SortJoinCopyRule","l":"SortJoinCopyRule(Class<? extends Sort>, Class<? extends Join>, RelBuilderFactory)","u":"%3Cinit%3E(java.lang.Class,java.lang.Class,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"SortJoinCopyRule","l":"SortJoinCopyRule(SortJoinCopyRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.SortJoinCopyRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"SortJoinTransposeRule","l":"SortJoinTransposeRule(Class<? extends Sort>, Class<? extends Join>)","u":"%3Cinit%3E(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"SortJoinTransposeRule","l":"SortJoinTransposeRule(Class<? extends Sort>, Class<? extends Join>, RelBuilderFactory)","u":"%3Cinit%3E(java.lang.Class,java.lang.Class,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"SortJoinTransposeRule","l":"SortJoinTransposeRule(SortJoinTransposeRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.SortJoinTransposeRule.Config)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"sortLimit(int, int, Iterable<? extends RexNode>)","u":"sortLimit(int,int,java.lang.Iterable)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"sortLimit(int, int, RexNode...)","u":"sortLimit(int,int,org.apache.calcite.rex.RexNode...)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"sortLimit(RexNode, RexNode, Iterable<? extends RexNode>)","u":"sortLimit(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.lang.Iterable)"},{"p":"org.apache.calcite.rel.rules","c":"SortMergeRule","l":"SortMergeRule(SortMergeRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.SortMergeRule.Config)"},{"p":"org.apache.calcite.interpreter","c":"SortNode","l":"SortNode(Compiler, Sort)","u":"%3Cinit%3E(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.Sort)"},{"p":"org.apache.calcite.rel.rules","c":"SortProjectTransposeRule","l":"SortProjectTransposeRule(Class<? extends Sort>, Class<? extends Project>)","u":"%3Cinit%3E(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"SortProjectTransposeRule","l":"SortProjectTransposeRule(Class<? extends Sort>, Class<? extends Project>, RelBuilderFactory, String)","u":"%3Cinit%3E(java.lang.Class,java.lang.Class,org.apache.calcite.tools.RelBuilderFactory,java.lang.String)"},{"p":"org.apache.calcite.rel.rules","c":"SortProjectTransposeRule","l":"SortProjectTransposeRule(Class<? extends Sort>, Class<? extends Project>, String)","u":"%3Cinit%3E(java.lang.Class,java.lang.Class,java.lang.String)"},{"p":"org.apache.calcite.rel.rules","c":"SortProjectTransposeRule","l":"SortProjectTransposeRule(RelOptRuleOperand)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptRuleOperand)"},{"p":"org.apache.calcite.rel.rules","c":"SortProjectTransposeRule","l":"SortProjectTransposeRule(RelOptRuleOperand, RelBuilderFactory, String)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.tools.RelBuilderFactory,java.lang.String)"},{"p":"org.apache.calcite.rel.rules","c":"SortProjectTransposeRule","l":"SortProjectTransposeRule(SortProjectTransposeRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.SortProjectTransposeRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"SortRemoveConstantKeysRule","l":"SortRemoveConstantKeysRule(SortRemoveConstantKeysRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.SortRemoveConstantKeysRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"SortRemoveRedundantRule","l":"SortRemoveRedundantRule(SortRemoveRedundantRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.SortRemoveRedundantRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"SortRemoveRule","l":"SortRemoveRule(RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"SortRemoveRule","l":"SortRemoveRule(SortRemoveRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.SortRemoveRule.Config)"},{"p":"org.apache.calcite.test","c":"Matchers","l":"sortsAs(String)","u":"sortsAs(java.lang.String)"},{"p":"org.apache.calcite.rel.rules","c":"SortUnionTransposeRule","l":"SortUnionTransposeRule(Class<? extends Sort>, Class<? extends Union>, boolean, RelBuilderFactory, String)","u":"%3Cinit%3E(java.lang.Class,java.lang.Class,boolean,org.apache.calcite.tools.RelBuilderFactory,java.lang.String)"},{"p":"org.apache.calcite.rel.rules","c":"SortUnionTransposeRule","l":"SortUnionTransposeRule(SortUnionTransposeRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.SortUnionTransposeRule.Config)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SOUNDEX"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"SOUNDEX"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"SOUNDEX_SPARK"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SOUNDEX_SPARK"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"SOUNDEX_SPARK"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"soundex(String)","u":"soundex(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"soundexSpark(String)","u":"soundexSpark(java.lang.String)"},{"p":"org.apache.calcite.adapter.csv","c":"CsvTable","l":"source"},{"p":"org.apache.calcite.adapter.file","c":"CsvTable","l":"source"},{"p":"org.apache.calcite.interpreter","c":"MatchNode","l":"source"},{"p":"org.apache.calcite.util.graph","c":"DefaultEdge","l":"source"},{"p":"org.apache.calcite.util.mapping","c":"IntPair","l":"source"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdAllPredicates","l":"SOURCE"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdCollation","l":"SOURCE"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdColumnOrigins","l":"SOURCE"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdColumnUniqueness","l":"SOURCE"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdDistinctRowCount","l":"SOURCE"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdDistribution","l":"SOURCE"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdExplainVisibility","l":"SOURCE"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdExpressionLineage","l":"SOURCE"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdLowerBoundCost","l":"SOURCE"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMaxRowCount","l":"SOURCE"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMeasure","l":"SOURCE"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMemory","l":"SOURCE"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdMinRowCount","l":"SOURCE"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdNodeTypes","l":"SOURCE"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdParallelism","l":"SOURCE"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPercentageOriginalRows","l":"SOURCE"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPopulationSize","l":"SOURCE"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdPredicates","l":"SOURCE"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdRowCount","l":"SOURCE"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdSelectivity","l":"SOURCE"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdSize","l":"SOURCE"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdTableReferences","l":"SOURCE"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUniqueKeys","l":"SOURCE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SOURCE_SORTER"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchSearchResult.SearchHit","l":"source()"},{"p":"org.apache.calcite.util","c":"Puffin.Line","l":"source()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings","l":"source(List<Integer>, int)","u":"source(java.util.List,int)"},{"p":"org.apache.calcite.interpreter","c":"Compiler","l":"source(RelNode, int)","u":"source(org.apache.calcite.rel.RelNode,int)"},{"p":"org.apache.calcite.interpreter","c":"Nodes.CoreCompiler","l":"source(RelNode, int)","u":"source(org.apache.calcite.rel.RelNode,int)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableTableModify","l":"sourceExpressionList"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchSearchResult.SearchHit","l":"sourceOrFields()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.PartialMapping","l":"sources"},{"p":"org.apache.calcite.adapter.enumerable","c":"SourceSorter","l":"SourceSorter(Function2<TAccumulate, TSource, TAccumulate>, Function1<TSource, TSortKey>, Comparator<TSortKey>)","u":"%3Cinit%3E(org.apache.calcite.linq4j.function.Function2,org.apache.calcite.linq4j.function.Function1,java.util.Comparator)"},{"p":"org.apache.calcite.util","c":"SourceStringReader","l":"SourceStringReader(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateTableLike","l":"sourceTable"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SPACE"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"SPACE"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"space(int)"},{"p":"org.apache.calcite.rel.externalize","c":"RelWriterImpl","l":"spacer"},{"p":"org.apache.calcite.interpreter","c":"InterpretableRel.InterpreterImplementor","l":"spark"},{"p":"org.apache.calcite.config","c":"CalciteConnectionProperty","l":"SPARK"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibrary","l":"SPARK"},{"p":"org.apache.calcite.sql","c":"SqlDialect.DatabaseProduct","l":"SPARK"},{"p":"org.apache.calcite.test","c":"CalciteAssert.Config","l":"SPARK"},{"p":"org.apache.calcite.adapter.spark","c":"SparkRules","l":"SPARK_CALC_RULE"},{"p":"org.apache.calcite","c":"DataContext.Variable","l":"SPARK_CONTEXT"},{"p":"org.apache.calcite.adapter.spark","c":"SparkRules","l":"SPARK_TO_ENUMERABLE"},{"p":"org.apache.calcite.test","c":"CustomTypeSystems","l":"SPARK_TYPE_SYSTEM"},{"p":"org.apache.calcite.adapter.spark","c":"SparkRules","l":"SPARK_VALUES_RULE"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfig","l":"spark()"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfigImpl","l":"spark()"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.Context","l":"spark()"},{"p":"org.apache.calcite.adapter.spark","c":"SparkRules.SparkCalc","l":"SparkCalc(RelOptCluster, RelTraitSet, RelNode, RexProgram)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)"},{"p":"org.apache.calcite.adapter.spark","c":"SparkRules.SparkCalc","l":"SparkCalc(RelOptCluster, RelTraitSet, RelNode, RexProgram, int)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram,int)"},{"p":"org.apache.calcite.adapter.spark","c":"SparkHandlerImpl","l":"sparkContext()"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.SparkHandler","l":"sparkContext()"},{"p":"org.apache.calcite.sql.dialect","c":"SparkSqlDialect","l":"SparkSqlDialect(SqlDialect.Context)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect.Context)"},{"p":"org.apache.calcite.adapter.spark","c":"SparkToEnumerableConverter","l":"SparkToEnumerableConverter(RelOptCluster, RelTraitSet, RelNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibrary","l":"SPATIAL"},{"p":"org.apache.calcite.sql.util","c":"SqlOperatorTables","l":"spatialInstance()"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser.SpecialOp","l":"special"},{"p":"org.apache.calcite.sql","c":"SqlSyntax","l":"SPECIAL"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser.Type","l":"SPECIAL"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser.Builder","l":"special(Object, int, int, PrecedenceClimbingParser.Special)","u":"special(java.lang.Object,int,int,org.apache.calcite.util.PrecedenceClimbingParser.Special)"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser","l":"special(Object, int, int, PrecedenceClimbingParser.Special)","u":"special(java.lang.Object,int,int,org.apache.calcite.util.PrecedenceClimbingParser.Special)"},{"p":"org.apache.calcite.piglet","c":"Ast.SpecialIdentifier","l":"SpecialIdentifier(SqlParserPos)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.util","c":"RelToSqlConverterUtil","l":"specialOperatorByName(String)","u":"specialOperatorByName(java.lang.String)"},{"p":"org.apache.calcite.chinook","c":"EnvironmentFairy.User","l":"SPECIFIC_USER"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SPLIT"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"SPLIT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SPLIT_COUNT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SPLIT_PART"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"SPLIT_PART"},{"p":"org.apache.calcite.rex","c":"RexProgram","l":"split()"},{"p":"org.apache.calcite.runtime","c":"SplitOperation","l":"split()"},{"p":"org.apache.calcite.sql","c":"SqlSplittableAggFunction.AbstractSumSplitter","l":"split(AggregateCall, Mappings.TargetMapping)","u":"split(org.apache.calcite.rel.core.AggregateCall,org.apache.calcite.util.mapping.Mappings.TargetMapping)"},{"p":"org.apache.calcite.sql","c":"SqlSplittableAggFunction.CountSplitter","l":"split(AggregateCall, Mappings.TargetMapping)","u":"split(org.apache.calcite.rel.core.AggregateCall,org.apache.calcite.util.mapping.Mappings.TargetMapping)"},{"p":"org.apache.calcite.sql","c":"SqlSplittableAggFunction.SelfSplitter","l":"split(AggregateCall, Mappings.TargetMapping)","u":"split(org.apache.calcite.rel.core.AggregateCall,org.apache.calcite.util.mapping.Mappings.TargetMapping)"},{"p":"org.apache.calcite.sql","c":"SqlSplittableAggFunction","l":"split(AggregateCall, Mappings.TargetMapping)","u":"split(org.apache.calcite.rel.core.AggregateCall,org.apache.calcite.util.mapping.Mappings.TargetMapping)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"split(ByteString, ByteString)","u":"split(org.apache.calcite.avatica.util.ByteString,org.apache.calcite.avatica.util.ByteString)"},{"p":"org.apache.calcite.sql.validate","c":"IdentifierNamespace","l":"split(SqlNode)","u":"split(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"split(String)","u":"split(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"split(String, String)","u":"split(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUtil","l":"splitCols(List<RexNode>, ImmutableBitSet, ImmutableBitSet.Builder, ImmutableBitSet.Builder)","u":"splitCols(java.util.List,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.util.ImmutableBitSet.Builder,org.apache.calcite.util.ImmutableBitSet.Builder)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"splitCorrelatedFilterCondition(Filter, List<RexNode>, List<RexNode>, boolean)","u":"splitCorrelatedFilterCondition(org.apache.calcite.rel.core.Filter,java.util.List,java.util.List,boolean)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"splitCorrelatedFilterCondition(LogicalFilter, List<RexInputRef>, List<RexNode>)","u":"splitCorrelatedFilterCondition(org.apache.calcite.rel.logical.LogicalFilter,java.util.List,java.util.List)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"splitCorrelatedFilterCondition(LogicalFilter, List<RexNode>, List<RexNode>, boolean)","u":"splitCorrelatedFilterCondition(org.apache.calcite.rel.logical.LogicalFilter,java.util.List,java.util.List,boolean)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Parallelism","l":"splitCount()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQuery","l":"splitCount(RelNode)","u":"splitCount(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.metadata","c":"BuiltInMetadata.Parallelism.Handler","l":"splitCount(RelNode, RelMetadataQuery)","u":"splitCount(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdParallelism","l":"splitCount(RelNode, RelMetadataQuery)","u":"splitCount(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor","l":"splitFilter(RexSimplify, RexNode, RexNode)","u":"splitFilter(org.apache.calcite.rex.RexSimplify,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"splitFilters(ImmutableBitSet, RexNode, List<RexNode>, List<RexNode>)","u":"splitFilters(org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode,java.util.List,java.util.List)"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.SplitFunction","l":"SplitFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"splitJoinCondition(List<RelDataTypeField>, List<RelNode>, RexNode, List<List<RexNode>>, List<Integer>, List<SqlOperator>)","u":"splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"splitJoinCondition(List<RelDataTypeField>, RelNode, RelNode, RexNode, List<RexNode>, List<RexNode>, List<Integer>, List<SqlOperator>)","u":"splitJoinCondition(java.util.List,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"splitJoinCondition(RelNode, RelNode, RexNode, List<Integer>, List<Integer>, List<Boolean>)","u":"splitJoinCondition(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"splitJoinCondition(RelNode, RelNode, RexNode, List<Integer>, List<Integer>, List<Boolean>, List<RexNode>)","u":"splitJoinCondition(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)"},{"p":"org.apache.calcite.runtime","c":"SplitOperation","l":"SplitOperation(Geometry, Geometry)","u":"%3Cinit%3E(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"splitPart(String, String, int)","u":"splitPart(java.lang.String,java.lang.String,int)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule","l":"splitPredicates(RexBuilder, RexNode)","u":"splitPredicates(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlAbstractConformance","l":"splitQuotedTableName()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformance","l":"splitQuotedTableName()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"splitQuotedTableName()"},{"p":"org.apache.calcite.sql.validate","c":"SqlDelegatingConformance","l":"splitQuotedTableName()"},{"p":"org.apache.calcite.adapter.splunk","c":"SplunkSchema","l":"SPLUNK_TABLE_NAME"},{"p":"org.apache.calcite.adapter.splunk","c":"SplunkSchema","l":"splunkConnection"},{"p":"org.apache.calcite.adapter.splunk.search","c":"SplunkConnectionImpl","l":"SplunkConnectionImpl(String, String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.adapter.splunk.search","c":"SplunkConnectionImpl","l":"SplunkConnectionImpl(URL, String, String)","u":"%3Cinit%3E(java.net.URL,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.adapter.splunk","c":"SplunkDriver","l":"SplunkDriver()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.splunk","c":"SplunkPushDownRule","l":"SplunkPushDownRule(RelOptRuleOperand, RelBuilderFactory, String)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.tools.RelBuilderFactory,java.lang.String)"},{"p":"org.apache.calcite.adapter.splunk","c":"SplunkPushDownRule","l":"SplunkPushDownRule(RelOptRuleOperand, String)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptRuleOperand,java.lang.String)"},{"p":"org.apache.calcite.adapter.splunk","c":"SplunkPushDownRule","l":"SplunkPushDownRule(SplunkPushDownRule.Config)","u":"%3Cinit%3E(org.apache.calcite.adapter.splunk.SplunkPushDownRule.Config)"},{"p":"org.apache.calcite.adapter.splunk","c":"SplunkQuery","l":"SplunkQuery(SplunkConnection, String, String, String, List<String>)","u":"%3Cinit%3E(org.apache.calcite.adapter.splunk.search.SplunkConnection,java.lang.String,java.lang.String,java.lang.String,java.util.List)"},{"p":"org.apache.calcite.adapter.splunk.search","c":"SplunkConnectionImpl.SplunkResultEnumerator","l":"SplunkResultEnumerator(InputStream, List<String>)","u":"%3Cinit%3E(java.io.InputStream,java.util.List)"},{"p":"org.apache.calcite.adapter.splunk","c":"SplunkSchema","l":"SplunkSchema(SplunkConnection)","u":"%3Cinit%3E(org.apache.calcite.adapter.splunk.search.SplunkConnection)"},{"p":"org.apache.calcite.adapter.splunk","c":"SplunkTableScan","l":"SplunkTableScan(RelOptCluster, RelOptTable, SplunkTable, String, String, String, List<String>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelOptTable,org.apache.calcite.adapter.splunk.SplunkTable,java.lang.String,java.lang.String,java.lang.String,java.util.List)"},{"p":"org.apache.calcite.rel.core","c":"Spool","l":"Spool(RelOptCluster, RelTraitSet, RelNode, Spool.Type, Spool.Type)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Spool.Type,org.apache.calcite.rel.core.Spool.Type)"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.Struct","l":"spoolFactory"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.ParseResult","l":"sql"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.Query","l":"sql"},{"p":"org.apache.calcite.model","c":"JsonLattice","l":"sql"},{"p":"org.apache.calcite.model","c":"JsonMaterialization","l":"sql"},{"p":"org.apache.calcite.model","c":"JsonView","l":"sql"},{"p":"org.apache.calcite.sql.parser","c":"StringAndPos","l":"sql"},{"p":"org.apache.calcite.sql","c":"SqlJsonConstructorNullClause","l":"sql"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"sql"},{"p":"org.apache.calcite.materialize","c":"Lattices","l":"SQL"},{"p":"org.apache.calcite","c":"DataContext.Variable","l":"SQL_ADVISOR"},{"p":"org.apache.calcite.sql.fun","c":"SqlCallFactories","l":"SQL_BASIC_CALL_FACTORY"},{"p":"org.apache.calcite.sql","c":"SqlJdbcDataTypeName","l":"SQL_BIGINT"},{"p":"org.apache.calcite.sql","c":"SqlJdbcDataTypeName","l":"SQL_BINARY"},{"p":"org.apache.calcite.sql","c":"SqlJdbcDataTypeName","l":"SQL_BOOLEAN"},{"p":"org.apache.calcite.sql","c":"SqlJdbcDataTypeName","l":"SQL_CHAR"},{"p":"org.apache.calcite.sql","c":"SqlJdbcDataTypeName","l":"SQL_DATE"},{"p":"org.apache.calcite.sql","c":"SqlJdbcDataTypeName","l":"SQL_DECIMAL"},{"p":"org.apache.calcite.sql","c":"SqlJdbcDataTypeName","l":"SQL_DOUBLE"},{"p":"org.apache.calcite.sql","c":"SqlJdbcDataTypeName","l":"SQL_FLOAT"},{"p":"org.apache.calcite.sql","c":"SqlJdbcDataTypeName","l":"SQL_INTEGER"},{"p":"org.apache.calcite.sql","c":"SqlJdbcDataTypeName","l":"SQL_INTERVAL_DAY"},{"p":"org.apache.calcite.sql","c":"SqlJdbcDataTypeName","l":"SQL_INTERVAL_DAY_TO_HOUR"},{"p":"org.apache.calcite.sql","c":"SqlJdbcDataTypeName","l":"SQL_INTERVAL_DAY_TO_MINUTE"},{"p":"org.apache.calcite.sql","c":"SqlJdbcDataTypeName","l":"SQL_INTERVAL_DAY_TO_SECOND"},{"p":"org.apache.calcite.sql","c":"SqlJdbcDataTypeName","l":"SQL_INTERVAL_HOUR"},{"p":"org.apache.calcite.sql","c":"SqlJdbcDataTypeName","l":"SQL_INTERVAL_HOUR_TO_MINUTE"},{"p":"org.apache.calcite.sql","c":"SqlJdbcDataTypeName","l":"SQL_INTERVAL_HOUR_TO_SECOND"},{"p":"org.apache.calcite.sql","c":"SqlJdbcDataTypeName","l":"SQL_INTERVAL_MINUTE"},{"p":"org.apache.calcite.sql","c":"SqlJdbcDataTypeName","l":"SQL_INTERVAL_MINUTE_TO_SECOND"},{"p":"org.apache.calcite.sql","c":"SqlJdbcDataTypeName","l":"SQL_INTERVAL_MONTH"},{"p":"org.apache.calcite.sql","c":"SqlJdbcDataTypeName","l":"SQL_INTERVAL_SECOND"},{"p":"org.apache.calcite.sql","c":"SqlJdbcDataTypeName","l":"SQL_INTERVAL_YEAR"},{"p":"org.apache.calcite.sql","c":"SqlJdbcDataTypeName","l":"SQL_INTERVAL_YEAR_TO_MONTH"},{"p":"org.apache.calcite.sql","c":"SqlJdbcDataTypeName","l":"SQL_NUMERIC"},{"p":"org.apache.calcite.sql","c":"SqlJdbcDataTypeName","l":"SQL_REAL"},{"p":"org.apache.calcite.config","c":"Lex","l":"SQL_SERVER"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"SQL_SERVER_2008"},{"p":"org.apache.calcite.sql","c":"SqlJdbcDataTypeName","l":"SQL_SMALLINT"},{"p":"org.apache.calcite.sql","c":"SqlJdbcDataTypeName","l":"SQL_TIME"},{"p":"org.apache.calcite.sql","c":"SqlJdbcDataTypeName","l":"SQL_TIME_WITH_LOCAL_TIME_ZONE"},{"p":"org.apache.calcite.sql","c":"SqlJdbcDataTypeName","l":"SQL_TIME_WITH_TIME_ZONE"},{"p":"org.apache.calcite.sql","c":"SqlJdbcDataTypeName","l":"SQL_TIMESTAMP"},{"p":"org.apache.calcite.sql","c":"SqlJdbcDataTypeName","l":"SQL_TIMESTAMP_WITH_LOCAL_TIME_ZONE"},{"p":"org.apache.calcite.sql","c":"SqlJdbcDataTypeName","l":"SQL_TIMESTAMP_WITH_TIME_ZONE"},{"p":"org.apache.calcite.sql","c":"SqlJdbcDataTypeName","l":"SQL_TINYINT"},{"p":"org.apache.calcite.sql","c":"SqlJdbcDataTypeName","l":"SQL_VARBINARY"},{"p":"org.apache.calcite.sql","c":"SqlJdbcDataTypeName","l":"SQL_VARCHAR"},{"p":"org.apache.calcite.tools","c":"Hoist.Variable","l":"sql()"},{"p":"org.apache.calcite.materialize","c":"Lattice","l":"sql(ImmutableBitSet, boolean, List<Lattice.Measure>)","u":"sql(org.apache.calcite.util.ImmutableBitSet,boolean,java.util.List)"},{"p":"org.apache.calcite.materialize","c":"Lattice","l":"sql(ImmutableBitSet, boolean, List<Lattice.Measure>, SqlDialect)","u":"sql(org.apache.calcite.util.ImmutableBitSet,boolean,java.util.List,org.apache.calcite.sql.SqlDialect)"},{"p":"org.apache.calcite.materialize","c":"Lattice","l":"sql(ImmutableBitSet, List<Lattice.Measure>)","u":"sql(org.apache.calcite.util.ImmutableBitSet,java.util.List)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserFixture","l":"sql(String)","u":"sql(java.lang.String)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest","l":"sql(String)","u":"sql(java.lang.String)"},{"p":"org.apache.calcite.test","c":"RelOptFixture","l":"sql(String)","u":"sql(java.lang.String)"},{"p":"org.apache.calcite.test","c":"SqlToRelTestBase","l":"sql(String)","u":"sql(java.lang.String)"},{"p":"org.apache.calcite.test","c":"SqlValidatorTestCase","l":"sql(String)","u":"sql(java.lang.String)"},{"p":"org.apache.calcite.util","c":"Glossary","l":"SQL2003"},{"p":"org.apache.calcite.runtime","c":"Hook","l":"SQL2REL_CONVERTER_CONFIG_BUILDER"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"SQL2REL_LOGGER"},{"p":"org.apache.calcite.util","c":"Glossary","l":"SQL92"},{"p":"org.apache.calcite.util","c":"Glossary","l":"SQL99"},{"p":"org.apache.calcite.sql.validate","c":"SqlAbstractConformance","l":"SqlAbstractConformance()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql","c":"SqlAbstractDateTimeLiteral","l":"SqlAbstractDateTimeLiteral(Object, boolean, SqlTypeName, int, SqlParserPos)","u":"%3Cinit%3E(java.lang.Object,boolean,org.apache.calcite.sql.type.SqlTypeName,int,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql.fun","c":"SqlAbstractGroupFunction","l":"SqlAbstractGroupFunction(String, SqlKind, SqlReturnTypeInference, SqlOperandTypeInference, SqlOperandTypeChecker, SqlFunctionCategory)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.SqlKind,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker,org.apache.calcite.sql.SqlFunctionCategory)"},{"p":"org.apache.calcite.sql.fun","c":"SqlAbstractTimeFunction","l":"SqlAbstractTimeFunction(String, SqlTypeName)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.sql","c":"SqlAccessType","l":"SqlAccessType(EnumSet<SqlAccessEnum>)","u":"%3Cinit%3E(java.util.EnumSet)"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisor","l":"SqlAdvisor(SqlValidatorWithHints)","u":"%3Cinit%3E(org.apache.calcite.sql.validate.SqlValidatorWithHints)"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisor","l":"SqlAdvisor(SqlValidatorWithHints, SqlParser.Config)","u":"%3Cinit%3E(org.apache.calcite.sql.validate.SqlValidatorWithHints,org.apache.calcite.sql.parser.SqlParser.Config)"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisorGetHintsFunction","l":"SqlAdvisorGetHintsFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisorGetHintsFunction2","l":"SqlAdvisorGetHintsFunction2()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisorHint","l":"SqlAdvisorHint(SqlMoniker)","u":"%3Cinit%3E(org.apache.calcite.sql.validate.SqlMoniker)"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisorHint","l":"SqlAdvisorHint(String, String[], String)","u":"%3Cinit%3E(java.lang.String,java.lang.String[],java.lang.String)"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisorHint2","l":"SqlAdvisorHint2(SqlMoniker, String)","u":"%3Cinit%3E(org.apache.calcite.sql.validate.SqlMoniker,java.lang.String)"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisorHint2","l":"SqlAdvisorHint2(String, String[], String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String[],java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisorValidator","l":"SqlAdvisorValidator(SqlOperatorTable, SqlValidatorCatalogReader, RelDataTypeFactory, SqlValidator.Config)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlOperatorTable,org.apache.calcite.sql.validate.SqlValidatorCatalogReader,org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.sql.validate.SqlValidator.Config)"},{"p":"org.apache.calcite.sql","c":"SqlAggFunction","l":"SqlAggFunction(String, SqlIdentifier, SqlKind, SqlReturnTypeInference, SqlOperandTypeInference, SqlOperandTypeChecker, SqlFunctionCategory)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlKind,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker,org.apache.calcite.sql.SqlFunctionCategory)"},{"p":"org.apache.calcite.sql","c":"SqlAggFunction","l":"SqlAggFunction(String, SqlIdentifier, SqlKind, SqlReturnTypeInference, SqlOperandTypeInference, SqlOperandTypeChecker, SqlFunctionCategory, boolean, boolean)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlKind,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker,org.apache.calcite.sql.SqlFunctionCategory,boolean,boolean)"},{"p":"org.apache.calcite.sql","c":"SqlAggFunction","l":"SqlAggFunction(String, SqlIdentifier, SqlKind, SqlReturnTypeInference, SqlOperandTypeInference, SqlOperandTypeChecker, SqlFunctionCategory, boolean, boolean, Optionality)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlKind,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker,org.apache.calcite.sql.SqlFunctionCategory,boolean,boolean,org.apache.calcite.util.Optionality)"},{"p":"org.apache.calcite.sql","c":"SqlAggFunction","l":"SqlAggFunction(String, SqlKind, SqlReturnTypeInference, SqlOperandTypeInference, SqlOperandTypeChecker, SqlFunctionCategory)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.SqlKind,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker,org.apache.calcite.sql.SqlFunctionCategory)"},{"p":"org.apache.calcite.sql","c":"SqlAlienSystemTypeNameSpec","l":"SqlAlienSystemTypeNameSpec(String, SqlTypeName, int, SqlParserPos)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.type.SqlTypeName,int,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlAlienSystemTypeNameSpec","l":"SqlAlienSystemTypeNameSpec(String, SqlTypeName, SqlParserPos)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.type.SqlTypeName,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlAlter","l":"SqlAlter(SqlParserPos)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlAlter","l":"SqlAlter(SqlParserPos, String)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,java.lang.String)"},{"p":"org.apache.calcite.sql.fun","c":"SqlAnyValueAggFunction","l":"SqlAnyValueAggFunction(SqlKind)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.sql.fun","c":"SqlArrayQueryConstructor","l":"SqlArrayQueryConstructor()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.fun","c":"SqlArrayValueConstructor","l":"SqlArrayValueConstructor()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql","c":"SqlAsofJoin","l":"SqlAsofJoin(SqlParserPos, SqlNode, SqlLiteral, SqlLiteral, SqlNode, SqlLiteral, SqlNode, SqlNode)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlAsOperator","l":"SqlAsOperator()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql","c":"SqlAsOperator","l":"SqlAsOperator(String, SqlKind, int, boolean, SqlReturnTypeInference, SqlOperandTypeInference, SqlOperandTypeChecker)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.SqlKind,int,boolean,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker)"},{"p":"org.apache.calcite.sql.fun","c":"SqlAvgAggFunction","l":"SqlAvgAggFunction(RelDataType, SqlAvgAggFunction.Subtype)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.fun.SqlAvgAggFunction.Subtype)"},{"p":"org.apache.calcite.sql.fun","c":"SqlAvgAggFunction","l":"SqlAvgAggFunction(SqlKind)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.sql.babel","c":"SqlBabelCreateTable","l":"SqlBabelCreateTable(SqlParserPos, boolean, TableCollectionType, boolean, boolean, SqlIdentifier, SqlNodeList, SqlNode)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,boolean,org.apache.calcite.sql.babel.TableCollectionType,boolean,boolean,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.fun","c":"SqlBaseContextVariable","l":"SqlBaseContextVariable(String, SqlReturnTypeInference, SqlFunctionCategory)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.SqlFunctionCategory)"},{"p":"org.apache.calcite.sql","c":"SqlBasicCall","l":"SqlBasicCall(SqlOperator, List<? extends SqlNode>, SqlParserPos)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlOperator,java.util.List,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlBasicCall","l":"SqlBasicCall(SqlOperator, List<? extends SqlNode>, SqlParserPos, SqlLiteral)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlOperator,java.util.List,org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlLiteral)"},{"p":"org.apache.calcite.sql","c":"SqlBasicCall","l":"SqlBasicCall(SqlOperator, SqlNode[], SqlParserPos)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlNode[],org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlBasicCall","l":"SqlBasicCall(SqlOperator, SqlNode[], SqlParserPos, SqlLiteral)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlNode[],org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlLiteral)"},{"p":"org.apache.calcite.sql","c":"SqlBasicTypeNameSpec","l":"SqlBasicTypeNameSpec(SqlTypeName, int, int, SqlParserPos)","u":"%3Cinit%3E(org.apache.calcite.sql.type.SqlTypeName,int,int,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlBasicTypeNameSpec","l":"SqlBasicTypeNameSpec(SqlTypeName, int, int, String, SqlParserPos)","u":"%3Cinit%3E(org.apache.calcite.sql.type.SqlTypeName,int,int,java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlBasicTypeNameSpec","l":"SqlBasicTypeNameSpec(SqlTypeName, int, SqlParserPos)","u":"%3Cinit%3E(org.apache.calcite.sql.type.SqlTypeName,int,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlBasicTypeNameSpec","l":"SqlBasicTypeNameSpec(SqlTypeName, int, String, SqlParserPos)","u":"%3Cinit%3E(org.apache.calcite.sql.type.SqlTypeName,int,java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlBasicTypeNameSpec","l":"SqlBasicTypeNameSpec(SqlTypeName, SqlParserPos)","u":"%3Cinit%3E(org.apache.calcite.sql.type.SqlTypeName,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql.util","c":"SqlBasicVisitor","l":"SqlBasicVisitor()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.babel.postgres","c":"SqlBegin","l":"SqlBegin(SqlParserPos, SqlNodeList)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.sql.fun","c":"SqlBetweenOperator","l":"SqlBetweenOperator(SqlBetweenOperator.Flag, boolean)","u":"%3Cinit%3E(org.apache.calcite.sql.fun.SqlBetweenOperator.Flag,boolean)"},{"p":"org.apache.calcite.sql","c":"SqlBinaryOperator","l":"SqlBinaryOperator(String, SqlKind, int, boolean, SqlReturnTypeInference, SqlOperandTypeInference, SqlOperandTypeChecker)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.SqlKind,int,boolean,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker)"},{"p":"org.apache.calcite.sql","c":"SqlBinaryStringLiteral","l":"SqlBinaryStringLiteral(BitString, SqlParserPos)","u":"%3Cinit%3E(org.apache.calcite.util.BitString,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql.fun","c":"SqlBitOpAggFunction","l":"SqlBitOpAggFunction(SqlKind)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.sql.fun","c":"SqlBitOpAggFunction","l":"SqlBitOpAggFunction(String, SqlKind)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.sql.util","c":"SqlBuilder","l":"SqlBuilder(SqlDialect)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect)"},{"p":"org.apache.calcite.sql.util","c":"SqlBuilder","l":"SqlBuilder(SqlDialect, String)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect,java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlCall","l":"SqlCall(SqlParserPos)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlCallBinding","l":"SqlCallBinding(SqlValidator, SqlValidatorScope, SqlCall)","u":"%3Cinit%3E(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.fun","c":"SqlCase","l":"SqlCase(SqlParserPos, SqlNode, SqlNodeList, SqlNodeList, SqlNode)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.fun","c":"SqlCastFunction","l":"SqlCastFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.fun","c":"SqlCastFunction","l":"SqlCastFunction(String, SqlKind)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.sql","c":"SqlCharStringLiteral","l":"SqlCharStringLiteral(NlsString, SqlParserPos)","u":"%3Cinit%3E(org.apache.calcite.util.NlsString,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql.fun","c":"SqlCoalesceFunction","l":"SqlCoalesceFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql","c":"SqlCollation","l":"SqlCollation(SqlCollation.Coercibility)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlCollation.Coercibility)"},{"p":"org.apache.calcite.sql","c":"SqlCollation","l":"SqlCollation(SqlCollation.Coercibility, Locale, Charset, String)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlCollation.Coercibility,java.util.Locale,java.nio.charset.Charset,java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlCollation","l":"SqlCollation(String, SqlCollation.Coercibility)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.SqlCollation.Coercibility)"},{"p":"org.apache.calcite.sql.fun","c":"SqlCollectionTableOperator","l":"SqlCollectionTableOperator(String, SqlModality)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.validate.SqlModality)"},{"p":"org.apache.calcite.sql","c":"SqlCollectionTypeNameSpec","l":"SqlCollectionTypeNameSpec(SqlTypeNameSpec, SqlTypeName, SqlParserPos)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlTypeNameSpec,org.apache.calcite.sql.type.SqlTypeName,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql.fun","c":"SqlColumnListConstructor","l":"SqlColumnListConstructor()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.babel.postgres","c":"SqlCommit","l":"SqlCommit(SqlParserPos, SqlLiteral)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlLiteral)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"sQLConformance_MultipleActiveAutocommitStatements()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"sQLConformance_OrderByDesc()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator.Config","l":"sqlConformance()"},{"p":"org.apache.calcite.sql.fun","c":"SqlConvertFunction","l":"SqlConvertFunction(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.sql.fun","c":"SqlConvertFunction","l":"SqlConvertFunction(String, SqlKind, SqlReturnTypeInference, SqlOperandTypeInference, SqlOperandTypeChecker, SqlFunctionCategory)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.SqlKind,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker,org.apache.calcite.sql.SqlFunctionCategory)"},{"p":"org.apache.calcite.sql.fun","c":"SqlCountAggFunction","l":"SqlCountAggFunction(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.sql.fun","c":"SqlCountAggFunction","l":"SqlCountAggFunction(String, SqlOperandTypeChecker)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.type.SqlOperandTypeChecker)"},{"p":"org.apache.calcite.sql.fun","c":"SqlCovarAggFunction","l":"SqlCovarAggFunction(RelDataType, SqlCovarAggFunction.Subtype)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.fun.SqlCovarAggFunction.Subtype)"},{"p":"org.apache.calcite.sql.fun","c":"SqlCovarAggFunction","l":"SqlCovarAggFunction(SqlKind)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.sql","c":"SqlCreate","l":"SqlCreate(SqlOperator, SqlParserPos, boolean, boolean)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.parser.SqlParserPos,boolean,boolean)"},{"p":"org.apache.calcite.sql","c":"SqlCreate","l":"SqlCreate(SqlParserPos, boolean)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,boolean)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateFunction","l":"SqlCreateFunction(SqlParserPos, boolean, boolean, SqlIdentifier, SqlNode, SqlNodeList)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,boolean,boolean,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateTable","l":"SqlCreateTable(SqlParserPos, boolean, boolean, SqlIdentifier, SqlNodeList, SqlNode)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,boolean,boolean,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateTableLike","l":"SqlCreateTableLike(SqlParserPos, boolean, boolean, SqlIdentifier, SqlIdentifier, SqlNodeList, SqlNodeList)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,boolean,boolean,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.sql.fun","c":"SqlCurrentDateFunction","l":"SqlCurrentDateFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.fun","c":"SqlCursorConstructor","l":"SqlCursorConstructor()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql","c":"SqlDataTypeSpec","l":"SqlDataTypeSpec(SqlTypeNameSpec, SqlParserPos)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlTypeNameSpec,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlDataTypeSpec","l":"SqlDataTypeSpec(SqlTypeNameSpec, TimeZone, Boolean, SqlParserPos)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlTypeNameSpec,java.util.TimeZone,java.lang.Boolean,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlDataTypeSpec","l":"SqlDataTypeSpec(SqlTypeNameSpec, TimeZone, SqlParserPos)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlTypeNameSpec,java.util.TimeZone,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema.EveryType","l":"sqlDate"},{"p":"org.apache.calcite.sql.fun","c":"SqlDatePartFunction","l":"SqlDatePartFunction(String, TimeUnit)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.avatica.util.TimeUnit)"},{"p":"org.apache.calcite.sql.fun","c":"SqlDatetimeSubtractionOperator","l":"SqlDatetimeSubtractionOperator(String, SqlReturnTypeInference)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.type.SqlReturnTypeInference)"},{"p":"org.apache.calcite.sql","c":"SqlDdl","l":"SqlDdl(SqlOperator, SqlParserPos)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql.validate","c":"SqlDelegatingConformance","l":"SqlDelegatingConformance(SqlConformance)","u":"%3Cinit%3E(org.apache.calcite.sql.validate.SqlConformance)"},{"p":"org.apache.calcite.sql","c":"SqlDelete","l":"SqlDelete(SqlParserPos, SqlNode, SqlNode, SqlSelect, SqlIdentifier)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.sql","c":"SqlDescribeSchema","l":"SqlDescribeSchema(SqlParserPos, SqlIdentifier)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.sql","c":"SqlDescribeTable","l":"SqlDescribeTable(SqlParserPos, SqlIdentifier, SqlIdentifier)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.sql","c":"SqlDescriptorOperator","l":"SqlDescriptorOperator()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"SqlDialect(SqlDialect.Context)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect.Context)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"SqlDialect(SqlDialect.DatabaseProduct, String, String)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect.DatabaseProduct,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"SqlDialect(SqlDialect.DatabaseProduct, String, String, NullCollation)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect.DatabaseProduct,java.lang.String,java.lang.String,org.apache.calcite.config.NullCollation)"},{"p":"org.apache.calcite.model","c":"JsonJdbcSchema","l":"sqlDialectFactory"},{"p":"org.apache.calcite.sql","c":"SqlDialectFactoryImpl","l":"SqlDialectFactoryImpl()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.babel.postgres","c":"SqlDiscard","l":"SqlDiscard(SqlParserPos, SqlIdentifier)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.sql","c":"SqlDrop","l":"SqlDrop(SqlOperator, SqlParserPos, boolean)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.parser.SqlParserPos,boolean)"},{"p":"org.apache.calcite.sql","c":"SqlDrop","l":"SqlDrop(SqlParserPos)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlDropFunction","l":"SqlDropFunction(SqlParserPos, boolean, SqlIdentifier)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,boolean,org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.sql","c":"SqlDynamicParam","l":"SqlDynamicParam(int, SqlParserPos)","u":"%3Cinit%3E(int,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlExplain","l":"SqlExplain(SqlParserPos, SqlNode, SqlLiteral, SqlLiteral, SqlLiteral, int)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.SqlLiteral,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlExtractFunction","l":"SqlExtractFunction(String, boolean)","u":"%3Cinit%3E(java.lang.String,boolean)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"sQLFeature_E051_01()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"sQLFeature_E071_03()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"sQLFeature_E101_03()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"sQLFeature_E151()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"sQLFeature_F302()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"sQLFeature_F312()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"sQLFeature_S271()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"sQLFeature_T613()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"sQLFeatureExt_T613_Substitution()"},{"p":"org.apache.calcite.sql","c":"SqlFilterOperator","l":"SqlFilterOperator()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.fun","c":"SqlFirstLastValueAggFunction","l":"SqlFirstLastValueAggFunction(boolean)","u":"%3Cinit%3E(boolean)"},{"p":"org.apache.calcite.sql.fun","c":"SqlFirstLastValueAggFunction","l":"SqlFirstLastValueAggFunction(SqlKind)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.sql.fun","c":"SqlFloorFunction","l":"SqlFloorFunction(SqlKind)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlFormatOptions","l":"SqlFormatOptions()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.pretty","c":"SqlFormatOptions","l":"SqlFormatOptions(boolean, boolean, boolean, boolean, boolean, boolean, boolean, boolean, boolean, int, int)","u":"%3Cinit%3E(boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlFunction","l":"SqlFunction(SqlIdentifier, SqlReturnTypeInference, SqlOperandTypeInference, SqlOperandTypeChecker, List<RelDataType>, SqlFunctionCategory)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker,java.util.List,org.apache.calcite.sql.SqlFunctionCategory)"},{"p":"org.apache.calcite.sql","c":"SqlFunction","l":"SqlFunction(String, SqlIdentifier, SqlKind, SqlReturnTypeInference, SqlOperandTypeInference, SqlOperandTypeChecker, List<RelDataType>, SqlFunctionCategory)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlKind,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker,java.util.List,org.apache.calcite.sql.SqlFunctionCategory)"},{"p":"org.apache.calcite.sql","c":"SqlFunction","l":"SqlFunction(String, SqlIdentifier, SqlKind, SqlReturnTypeInference, SqlOperandTypeInference, SqlOperandTypeChecker, SqlFunctionCategory)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlKind,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker,org.apache.calcite.sql.SqlFunctionCategory)"},{"p":"org.apache.calcite.sql","c":"SqlFunction","l":"SqlFunction(String, SqlKind, SqlReturnTypeInference, SqlOperandTypeInference, SqlOperandTypeChecker, SqlFunctionCategory)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.SqlKind,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker,org.apache.calcite.sql.SqlFunctionCategory)"},{"p":"org.apache.calcite.sql","c":"SqlFunctionalOperator","l":"SqlFunctionalOperator(String, SqlKind, int, boolean, SqlReturnTypeInference, SqlOperandTypeInference, SqlOperandTypeChecker)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.SqlKind,int,boolean,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker)"},{"p":"org.apache.calcite.sql","c":"SqlGroupedWindowFunction","l":"SqlGroupedWindowFunction(SqlKind, SqlGroupedWindowFunction, SqlOperandTypeChecker)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlKind,org.apache.calcite.sql.SqlGroupedWindowFunction,org.apache.calcite.sql.type.SqlOperandTypeChecker)"},{"p":"org.apache.calcite.sql","c":"SqlGroupedWindowFunction","l":"SqlGroupedWindowFunction(String, SqlKind, SqlGroupedWindowFunction, SqlOperandTypeChecker)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.SqlKind,org.apache.calcite.sql.SqlGroupedWindowFunction,org.apache.calcite.sql.type.SqlOperandTypeChecker)"},{"p":"org.apache.calcite.sql","c":"SqlGroupedWindowFunction","l":"SqlGroupedWindowFunction(String, SqlKind, SqlGroupedWindowFunction, SqlReturnTypeInference, SqlOperandTypeInference, SqlOperandTypeChecker, SqlFunctionCategory)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.SqlKind,org.apache.calcite.sql.SqlGroupedWindowFunction,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker,org.apache.calcite.sql.SqlFunctionCategory)"},{"p":"org.apache.calcite.sql","c":"SqlHint","l":"SqlHint(SqlParserPos, SqlIdentifier, SqlNodeList, SqlHint.HintOptionFormat)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlHint.HintOptionFormat)"},{"p":"org.apache.calcite.sql.fun","c":"SqlHistogramAggFunction","l":"SqlHistogramAggFunction(RelDataType)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql","c":"SqlHopTableFunction","l":"SqlHopTableFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql","c":"SqlIdentifier","l":"SqlIdentifier(List<String>, SqlCollation, SqlParserPos, List<SqlParserPos>)","u":"%3Cinit%3E(java.util.List,org.apache.calcite.sql.SqlCollation,org.apache.calcite.sql.parser.SqlParserPos,java.util.List)"},{"p":"org.apache.calcite.sql","c":"SqlIdentifier","l":"SqlIdentifier(List<String>, SqlParserPos)","u":"%3Cinit%3E(java.util.List,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlIdentifier","l":"SqlIdentifier(String, SqlCollation, SqlParserPos)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.SqlCollation,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlIdentifier","l":"SqlIdentifier(String, SqlParserPos)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.SqlIdentifierFinder","l":"SqlIdentifierFinder()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.validate","c":"SqlIdentifierMoniker","l":"SqlIdentifierMoniker(SqlIdentifier)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor","l":"SqlImplementor(SqlDialect)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect)"},{"p":"org.apache.calcite.sql","c":"SqlInfixOperator","l":"SqlInfixOperator(String[], SqlKind, int, SqlReturnTypeInference, SqlOperandTypeInference, SqlOperandTypeChecker)","u":"%3Cinit%3E(java.lang.String[],org.apache.calcite.sql.SqlKind,int,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker)"},{"p":"org.apache.calcite.sql.fun","c":"SqlInOperator","l":"SqlInOperator(String, SqlKind)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.sql","c":"SqlInsert","l":"SqlInsert(SqlParserPos, SqlNodeList, SqlNode, SqlNode, SqlNodeList)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.sql","c":"SqlInternalOperator","l":"SqlInternalOperator(String, SqlKind)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.sql","c":"SqlInternalOperator","l":"SqlInternalOperator(String, SqlKind, int)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.SqlKind,int)"},{"p":"org.apache.calcite.sql","c":"SqlInternalOperator","l":"SqlInternalOperator(String, SqlKind, int, boolean, SqlReturnTypeInference, SqlOperandTypeInference, SqlOperandTypeChecker)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.SqlKind,int,boolean,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker)"},{"p":"org.apache.calcite.sql","c":"SqlIntervalLiteral","l":"SqlIntervalLiteral(int, String, SqlIntervalQualifier, SqlTypeName, SqlParserPos)","u":"%3Cinit%3E(int,java.lang.String,org.apache.calcite.sql.SqlIntervalQualifier,org.apache.calcite.sql.type.SqlTypeName,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlIntervalQualifier","l":"SqlIntervalQualifier(String, SqlParserPos)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlIntervalQualifier","l":"SqlIntervalQualifier(TimeUnit, int, TimeUnit, int, SqlParserPos)","u":"%3Cinit%3E(org.apache.calcite.avatica.util.TimeUnit,int,org.apache.calcite.avatica.util.TimeUnit,int,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlIntervalQualifier","l":"SqlIntervalQualifier(TimeUnit, TimeUnit, SqlParserPos)","u":"%3Cinit%3E(org.apache.calcite.avatica.util.TimeUnit,org.apache.calcite.avatica.util.TimeUnit,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql.fun","c":"SqlItemOperator","l":"SqlItemOperator(String, SqlSingleOperandTypeChecker, int, boolean)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.type.SqlSingleOperandTypeChecker,int,boolean)"},{"p":"org.apache.calcite.sql","c":"SqlJdbcFunctionCall","l":"SqlJdbcFunctionCall(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlJoin","l":"SqlJoin(SqlParserPos, SqlNode, SqlLiteral, SqlLiteral, SqlNode, SqlLiteral, SqlNode)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonArrayAggAggFunction","l":"SqlJsonArrayAggAggFunction(SqlKind, SqlJsonConstructorNullClause)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlKind,org.apache.calcite.sql.SqlJsonConstructorNullClause)"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonArrayFunction","l":"SqlJsonArrayFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonDepthFunction","l":"SqlJsonDepthFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonExistsFunction","l":"SqlJsonExistsFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonKeysFunction","l":"SqlJsonKeysFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonLengthFunction","l":"SqlJsonLengthFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonModifyFunction","l":"SqlJsonModifyFunction(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonObjectAggAggFunction","l":"SqlJsonObjectAggAggFunction(SqlKind, SqlJsonConstructorNullClause)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlKind,org.apache.calcite.sql.SqlJsonConstructorNullClause)"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonObjectFunction","l":"SqlJsonObjectFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonPrettyFunction","l":"SqlJsonPrettyFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonQueryFunction","l":"SqlJsonQueryFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonRemoveFunction","l":"SqlJsonRemoveFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonStorageSizeFunction","l":"SqlJsonStorageSizeFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonTypeFunction","l":"SqlJsonTypeFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonValueExpressionOperator","l":"SqlJsonValueExpressionOperator()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonValueFunction","l":"SqlJsonValueFunction(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlLambda","l":"SqlLambda(SqlParserPos, SqlNodeList, SqlNode)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlLambdaScope","l":"SqlLambdaScope(SqlValidatorScope, SqlLambda)","u":"%3Cinit%3E(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlLambda)"},{"p":"org.apache.calcite.sql","c":"SqlLateralOperator","l":"SqlLateralOperator(SqlKind)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.sql.fun","c":"SqlLeadLagAggFunction","l":"SqlLeadLagAggFunction(boolean)","u":"%3Cinit%3E(boolean)"},{"p":"org.apache.calcite.sql.fun","c":"SqlLeadLagAggFunction","l":"SqlLeadLagAggFunction(SqlKind)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"SqlLiteral(Object, SqlTypeName, SqlParserPos)","u":"%3Cinit%3E(java.lang.Object,org.apache.calcite.sql.type.SqlTypeName,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql.fun","c":"SqlMapQueryConstructor","l":"SqlMapQueryConstructor()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql","c":"SqlMapTypeNameSpec","l":"SqlMapTypeNameSpec(SqlDataTypeSpec, SqlDataTypeSpec, SqlParserPos)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDataTypeSpec,org.apache.calcite.sql.SqlDataTypeSpec,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql.fun","c":"SqlMapValueConstructor","l":"SqlMapValueConstructor()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql","c":"SqlMatchFunction","l":"SqlMatchFunction(String, SqlKind, SqlReturnTypeInference, SqlOperandTypeInference, SqlOperandTypeChecker, SqlFunctionCategory)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.SqlKind,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker,org.apache.calcite.sql.SqlFunctionCategory)"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize","l":"SqlMatchRecognize(SqlParserPos, SqlNode, SqlNode, SqlLiteral, SqlLiteral, SqlNodeList, SqlNodeList, SqlNode, SqlNodeList, SqlLiteral, SqlNodeList, SqlNodeList, SqlLiteral)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlLiteral)"},{"p":"org.apache.calcite.sql","c":"SqlMeasureOperator","l":"SqlMeasureOperator()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql","c":"SqlMerge","l":"SqlMerge(SqlParserPos, SqlNode, SqlNode, SqlNode, SqlUpdate, SqlInsert, SqlSelect, SqlIdentifier)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlInsert,org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.sql.fun","c":"SqlMinMaxAggFunction","l":"SqlMinMaxAggFunction(List<RelDataType>, boolean, int)","u":"%3Cinit%3E(java.util.List,boolean,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlMinMaxAggFunction","l":"SqlMinMaxAggFunction(SqlKind)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.sql.fun","c":"SqlMinMaxAggFunction","l":"SqlMinMaxAggFunction(String, SqlKind, SqlOperandTypeChecker)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.SqlKind,org.apache.calcite.sql.type.SqlOperandTypeChecker)"},{"p":"org.apache.calcite.sql.validate","c":"SqlMonikerImpl","l":"SqlMonikerImpl(List<String>, SqlMonikerType)","u":"%3Cinit%3E(java.util.List,org.apache.calcite.sql.validate.SqlMonikerType)"},{"p":"org.apache.calcite.sql.validate","c":"SqlMonikerImpl","l":"SqlMonikerImpl(String, SqlMonikerType)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.validate.SqlMonikerType)"},{"p":"org.apache.calcite.sql.fun","c":"SqlMonotonicBinaryOperator","l":"SqlMonotonicBinaryOperator(String, SqlKind, int, boolean, SqlReturnTypeInference, SqlOperandTypeInference, SqlOperandTypeChecker)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.SqlKind,int,boolean,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker)"},{"p":"org.apache.calcite.sql.fun","c":"SqlMonotonicUnaryFunction","l":"SqlMonotonicUnaryFunction(String, SqlKind, SqlReturnTypeInference, SqlOperandTypeInference, SqlOperandTypeChecker, SqlFunctionCategory)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.SqlKind,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker,org.apache.calcite.sql.SqlFunctionCategory)"},{"p":"org.apache.calcite.sql.fun","c":"SqlMultisetMemberOfOperator","l":"SqlMultisetMemberOfOperator()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.fun","c":"SqlMultisetQueryConstructor","l":"SqlMultisetQueryConstructor()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.fun","c":"SqlMultisetQueryConstructor","l":"SqlMultisetQueryConstructor(String, SqlKind, SqlTypeTransform)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.SqlKind,org.apache.calcite.sql.type.SqlTypeTransform)"},{"p":"org.apache.calcite.sql.fun","c":"SqlMultisetSetOperator","l":"SqlMultisetSetOperator(String, int, boolean)","u":"%3Cinit%3E(java.lang.String,int,boolean)"},{"p":"org.apache.calcite.sql.fun","c":"SqlMultisetValueConstructor","l":"SqlMultisetValueConstructor()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.fun","c":"SqlMultisetValueConstructor","l":"SqlMultisetValueConstructor(String, SqlKind)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.sql.fun","c":"SqlMultisetValueConstructor","l":"SqlMultisetValueConstructor(String, SqlKind, SqlOperandTypeInference)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.SqlKind,org.apache.calcite.sql.type.SqlOperandTypeInference)"},{"p":"org.apache.calcite.sql.fun","c":"SqlNewOperator","l":"SqlNewOperator()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.ParseResult","l":"sqlNode"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"SqlNodeList(Collection<? extends SqlNode>, SqlParserPos)","u":"%3Cinit%3E(java.util.Collection,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"SqlNodeList(SqlParserPos)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql.fun","c":"SqlNthValueAggFunction","l":"SqlNthValueAggFunction(SqlKind)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.sql.fun","c":"SqlNtileAggFunction","l":"SqlNtileAggFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.fun","c":"SqlNullifFunction","l":"SqlNullifFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql","c":"SqlNullTreatmentOperator","l":"SqlNullTreatmentOperator(SqlKind)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.sql","c":"SqlNumericLiteral","l":"SqlNumericLiteral(BigDecimal, Integer, Integer, boolean, SqlParserPos)","u":"%3Cinit%3E(java.math.BigDecimal,java.lang.Integer,java.lang.Integer,boolean,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql.type","c":"SqlOperandCountRanges","l":"SqlOperandCountRanges()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"SqlOperator(String, SqlKind, int, boolean, SqlReturnTypeInference, SqlOperandTypeInference, SqlOperandTypeChecker)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.SqlKind,int,boolean,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker)"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"SqlOperator(String, SqlKind, int, int, SqlReturnTypeInference, SqlOperandTypeInference, SqlOperandTypeChecker)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.SqlKind,int,int,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker)"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"SqlOperator(String, SqlKind, int, int, SqlReturnTypeInference, SqlOperandTypeInference, SqlOperandTypeChecker, SqlCallFactory)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.SqlKind,int,int,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker,org.apache.calcite.sql.fun.SqlCallFactory)"},{"p":"org.apache.calcite.sql","c":"SqlOperatorBinding","l":"SqlOperatorBinding(RelDataTypeFactory, SqlOperator)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.sql.SqlOperator)"},{"p":"org.apache.calcite.test","c":"SqlOperatorTest","l":"SqlOperatorTest()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.fun","c":"SqlOracleConvertFunction","l":"SqlOracleConvertFunction(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlOrderBy","l":"SqlOrderBy(SqlParserPos, SqlNode, SqlNodeList, SqlNode, SqlNode)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.fun","c":"SqlOverlayFunction","l":"SqlOverlayFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql","c":"SqlOverOperator","l":"SqlOverOperator()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParseException","l":"SqlParseException(String, SqlParserPos, int[][], String[], Throwable)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos,int[][],java.lang.String[],java.lang.Throwable)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest","l":"sqlParser(Reader, UnaryOperator<SqlParser.Config>)","u":"sqlParser(java.io.Reader,java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserPos","l":"SqlParserPos(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserPos","l":"SqlParserPos(int, int, int, int)","u":"%3Cinit%3E(int,int,int,int)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest","l":"SqlParserTest()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql","c":"SqlPivot","l":"SqlPivot(SqlParserPos, SqlNode, SqlNodeList, SqlNodeList, SqlNodeList)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.sql.fun","c":"SqlPositionFunction","l":"SqlPositionFunction(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlPostfixOperator","l":"SqlPostfixOperator(String, SqlKind, int, SqlReturnTypeInference, SqlOperandTypeInference, SqlOperandTypeChecker)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.SqlKind,int,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker)"},{"p":"org.apache.calcite.sql","c":"SqlPrefixOperator","l":"SqlPrefixOperator(String, SqlKind, int, SqlReturnTypeInference, SqlOperandTypeInference, SqlOperandTypeChecker)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.SqlKind,int,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"SqlPrettyWriter()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"SqlPrettyWriter(SqlDialect)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"SqlPrettyWriter(SqlDialect, boolean)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect,boolean)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"SqlPrettyWriter(SqlDialect, boolean, PrintWriter)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect,boolean,java.io.PrintWriter)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"SqlPrettyWriter(SqlDialect, SqlWriterConfig)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect,org.apache.calcite.sql.SqlWriterConfig)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"SqlPrettyWriter(SqlDialect, SqlWriterConfig, StringBuilder)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect,org.apache.calcite.sql.SqlWriterConfig,java.lang.StringBuilder)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"SqlPrettyWriter(SqlWriterConfig)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlWriterConfig)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"SqlPrettyWriter(SqlWriterConfig, StringBuilder)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlWriterConfig,java.lang.StringBuilder)"},{"p":"org.apache.calcite.sql","c":"SqlProcedureCallOperator","l":"SqlProcedureCallOperator()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.fun","c":"SqlRandIntegerFunction","l":"SqlRandIntegerFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql","c":"SqlRankFunction","l":"SqlRankFunction(boolean, SqlKind)","u":"%3Cinit%3E(boolean,org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.sql","c":"SqlRankFunction","l":"SqlRankFunction(SqlKind, SqlReturnTypeInference, boolean)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlKind,org.apache.calcite.sql.type.SqlReturnTypeInference,boolean)"},{"p":"org.apache.calcite.sql.fun","c":"SqlRegrCountAggFunction","l":"SqlRegrCountAggFunction(SqlKind)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.sql.babel.postgres","c":"SqlRollback","l":"SqlRollback(SqlParserPos, SqlLiteral)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlLiteral)"},{"p":"org.apache.calcite.sql.fun","c":"SqlRowOperator","l":"SqlRowOperator(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlRowTypeNameSpec","l":"SqlRowTypeNameSpec(SqlParserPos, List<SqlIdentifier>, List<SqlDataTypeSpec>)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,java.util.List,java.util.List)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema.TableEntry","l":"sqls"},{"p":"org.apache.calcite.sql","c":"SqlSampleSpec","l":"SqlSampleSpec()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.validate","c":"SqlScopedShuttle","l":"SqlScopedShuttle(SqlValidatorScope)","u":"%3Cinit%3E(org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql","c":"SqlSelect","l":"SqlSelect(SqlParserPos, SqlNodeList, SqlNodeList, SqlNode, SqlNode, SqlNodeList, SqlNode, SqlNodeList, SqlNode, SqlNodeList, SqlNode, SqlNode, SqlNodeList)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.sql","c":"SqlSelect","l":"SqlSelect(SqlParserPos, SqlNodeList, SqlNodeList, SqlNode, SqlNode, SqlNodeList, SqlNode, SqlNodeList, SqlNodeList, SqlNode, SqlNode, SqlNodeList)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.sql","c":"SqlSessionTableFunction","l":"SqlSessionTableFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql","c":"SqlSetOperator","l":"SqlSetOperator(String, SqlKind, int, boolean)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.SqlKind,int,boolean)"},{"p":"org.apache.calcite.sql","c":"SqlSetOperator","l":"SqlSetOperator(String, SqlKind, int, boolean, SqlReturnTypeInference, SqlOperandTypeInference, SqlOperandTypeChecker)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.SqlKind,int,boolean,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker)"},{"p":"org.apache.calcite.sql","c":"SqlSetOption","l":"SqlSetOption(SqlParserPos, String, SqlIdentifier, SqlNode)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,java.lang.String,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlSetOption","l":"SqlSetOption(SqlParserPos, String, SqlNode, SqlNode)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlSetSemanticsTableOperator","l":"SqlSetSemanticsTableOperator()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.babel.postgres","c":"SqlShow","l":"SqlShow(SqlParserPos, SqlIdentifier)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.sql.util","c":"SqlShuttle","l":"SqlShuttle()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.advise","c":"SqlSimpleParser","l":"SqlSimpleParser(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.sql.advise","c":"SqlSimpleParser","l":"SqlSimpleParser(String, SqlParser.Config)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.parser.SqlParser.Config)"},{"p":"org.apache.calcite.sql.fun","c":"SqlSingleValueAggFunction","l":"SqlSingleValueAggFunction(RelDataType)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql","c":"SqlSnapshot","l":"SqlSnapshot(SqlParserPos, SqlNode, SqlNode)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlSpatialTypeOperatorTable","l":"SqlSpatialTypeOperatorTable()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql","c":"SqlSpecialOperator","l":"SqlSpecialOperator(String, SqlKind)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.sql","c":"SqlSpecialOperator","l":"SqlSpecialOperator(String, SqlKind, int)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.SqlKind,int)"},{"p":"org.apache.calcite.sql","c":"SqlSpecialOperator","l":"SqlSpecialOperator(String, SqlKind, int, boolean, SqlReturnTypeInference, SqlOperandTypeInference, SqlOperandTypeChecker)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.SqlKind,int,boolean,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker)"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"SqlStdOperatorTable()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql","c":"SqlDialect.DatabaseProduct","l":"SQLSTREAM"},{"p":"org.apache.calcite.sql.util","c":"SqlString","l":"SqlString(SqlDialect, String)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect,java.lang.String)"},{"p":"org.apache.calcite.sql.util","c":"SqlString","l":"SqlString(SqlDialect, String, ImmutableList<Integer>)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect,java.lang.String,com.google.common.collect.ImmutableList)"},{"p":"org.apache.calcite.sql.fun","c":"SqlStringContextVariable","l":"SqlStringContextVariable(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.sql.fun","c":"SqlSumAggFunction","l":"SqlSumAggFunction(RelDataType)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.fun","c":"SqlSumEmptyIsZeroAggFunction","l":"SqlSumEmptyIsZeroAggFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql","c":"SqlTableRef","l":"SqlTableRef(SqlParserPos, SqlIdentifier, SqlNodeList)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.sql.test","c":"SqlTestFactory","l":"SqlTestFactory(SqlTestFactory.CatalogReaderFactory, SqlTestFactory.TypeFactoryFactory, SqlTestFactory.PlannerFactory, Context, UnaryOperator<RelOptCluster>, SqlTestFactory.ValidatorFactory, ConnectionFactory, SqlParser.Config, SqlValidator.Config, SqlToRelConverter.Config, SqlOperatorTable, UnaryOperator<RelDataTypeSystem>)","u":"%3Cinit%3E(org.apache.calcite.sql.test.SqlTestFactory.CatalogReaderFactory,org.apache.calcite.sql.test.SqlTestFactory.TypeFactoryFactory,org.apache.calcite.sql.test.SqlTestFactory.PlannerFactory,org.apache.calcite.plan.Context,java.util.function.UnaryOperator,org.apache.calcite.sql.test.SqlTestFactory.ValidatorFactory,org.apache.calcite.test.ConnectionFactory,org.apache.calcite.sql.parser.SqlParser.Config,org.apache.calcite.sql.validate.SqlValidator.Config,org.apache.calcite.sql2rel.SqlToRelConverter.Config,org.apache.calcite.sql.SqlOperatorTable,java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.sql.test","c":"SqlTests","l":"SqlTests()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.fun","c":"SqlThrowOperator","l":"SqlThrowOperator()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema.EveryType","l":"sqlTime"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema.EveryType","l":"sqlTimestamp"},{"p":"org.apache.calcite.sql.test","c":"SqlTestFactory","l":"sqlToRelConfig"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"SqlToRelConverter(RelOptTable.ViewExpander, SqlValidator, Prepare.CatalogReader, RelOptCluster, SqlRexConvertletTable)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptTable.ViewExpander,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.prepare.Prepare.CatalogReader,org.apache.calcite.plan.RelOptCluster,org.apache.calcite.sql2rel.SqlRexConvertletTable)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"SqlToRelConverter(RelOptTable.ViewExpander, SqlValidator, Prepare.CatalogReader, RelOptCluster, SqlRexConvertletTable, SqlToRelConverter.Config)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptTable.ViewExpander,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.prepare.Prepare.CatalogReader,org.apache.calcite.plan.RelOptCluster,org.apache.calcite.sql2rel.SqlRexConvertletTable,org.apache.calcite.sql2rel.SqlToRelConverter.Config)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"SqlToRelConverter(RelOptTable.ViewExpander, SqlValidator, Prepare.CatalogReader, RelOptPlanner, RexBuilder, SqlRexConvertletTable)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptTable.ViewExpander,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.prepare.Prepare.CatalogReader,org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql2rel.SqlRexConvertletTable)"},{"p":"org.apache.calcite.tools","c":"Frameworks.ConfigBuilder","l":"sqlToRelConverterConfig(SqlToRelConverter.Config)","u":"sqlToRelConverterConfig(org.apache.calcite.sql2rel.SqlToRelConverter.Config)"},{"p":"org.apache.calcite.test","c":"SqlToRelTestBase","l":"SqlToRelTestBase()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.fun","c":"SqlTranslateFunction","l":"SqlTranslateFunction(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.sql.fun","c":"SqlTrimFunction","l":"SqlTrimFunction(String, SqlKind, SqlReturnTypeInference, SqlSingleOperandTypeChecker)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.SqlKind,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlSingleOperandTypeChecker)"},{"p":"org.apache.calcite.sql","c":"SqlTruncate","l":"SqlTruncate(SqlOperator, SqlParserPos)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlTruncateTable","l":"SqlTruncateTable(SqlParserPos, SqlIdentifier, boolean)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlIdentifier,boolean)"},{"p":"org.apache.calcite.sql","c":"SqlTumbleTableFunction","l":"SqlTumbleTableFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.druid","c":"DruidType","l":"sqlType"},{"p":"org.apache.calcite.sql","c":"SqlTypeConstructorFunction","l":"SqlTypeConstructorFunction(SqlIdentifier, RelDataType)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeExplicitPrecedenceList","l":"SqlTypeExplicitPrecedenceList(Iterable<SqlTypeName>)","u":"%3Cinit%3E(java.lang.Iterable)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFactoryImpl","l":"SqlTypeFactoryImpl(RelDataTypeSystem)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataTypeSystem)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeMappingRules","l":"SqlTypeMappingRules()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql","c":"SqlTypeNameSpec","l":"SqlTypeNameSpec(SqlIdentifier, SqlParserPos)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeTransformCascade","l":"SqlTypeTransformCascade(SqlReturnTypeInference, SqlTypeTransform...)","u":"%3Cinit%3E(org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlTypeTransform...)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeTransforms","l":"SqlTypeTransforms()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeUtil","l":"SqlTypeUtil()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql","c":"SqlUnnestOperator","l":"SqlUnnestOperator(boolean)","u":"%3Cinit%3E(boolean)"},{"p":"org.apache.calcite.sql","c":"SqlUnpivot","l":"SqlUnpivot(SqlParserPos, SqlNode, boolean, SqlNodeList, SqlNodeList, SqlNodeList)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode,boolean,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.sql","c":"SqlUnresolvedFunction","l":"SqlUnresolvedFunction(SqlIdentifier, SqlReturnTypeInference, SqlOperandTypeInference, SqlOperandTypeChecker, List<RelDataType>, SqlFunctionCategory)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker,java.util.List,org.apache.calcite.sql.SqlFunctionCategory)"},{"p":"org.apache.calcite.sql","c":"SqlUpdate","l":"SqlUpdate(SqlParserPos, SqlNode, SqlNodeList, SqlNodeList, SqlNode, SqlSelect, SqlIdentifier)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.sql.validate","c":"SqlUserDefinedAggFunction","l":"SqlUserDefinedAggFunction(SqlIdentifier, SqlKind, SqlReturnTypeInference, SqlOperandTypeInference, SqlOperandMetadata, AggregateFunction, boolean, boolean, Optionality)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlKind,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandMetadata,org.apache.calcite.schema.AggregateFunction,boolean,boolean,org.apache.calcite.util.Optionality)"},{"p":"org.apache.calcite.sql.validate","c":"SqlUserDefinedAggFunction","l":"SqlUserDefinedAggFunction(SqlIdentifier, SqlReturnTypeInference, SqlOperandTypeInference, SqlOperandTypeChecker, AggregateFunction, boolean, boolean, Optionality, RelDataTypeFactory)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker,org.apache.calcite.schema.AggregateFunction,boolean,boolean,org.apache.calcite.util.Optionality,org.apache.calcite.rel.type.RelDataTypeFactory)"},{"p":"org.apache.calcite.sql.validate","c":"SqlUserDefinedFunction","l":"SqlUserDefinedFunction(SqlIdentifier, SqlKind, SqlReturnTypeInference, SqlOperandTypeInference, SqlOperandMetadata, Function)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlKind,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandMetadata,org.apache.calcite.schema.Function)"},{"p":"org.apache.calcite.sql.validate","c":"SqlUserDefinedFunction","l":"SqlUserDefinedFunction(SqlIdentifier, SqlKind, SqlReturnTypeInference, SqlOperandTypeInference, SqlOperandMetadata, Function, SqlFunctionCategory, SqlSyntax)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlKind,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandMetadata,org.apache.calcite.schema.Function,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.SqlSyntax)"},{"p":"org.apache.calcite.sql.validate","c":"SqlUserDefinedFunction","l":"SqlUserDefinedFunction(SqlIdentifier, SqlKind, SqlReturnTypeInference, SqlOperandTypeInference, SqlOperandMetadata, Function, SqlSyntax)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlKind,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandMetadata,org.apache.calcite.schema.Function,org.apache.calcite.sql.SqlSyntax)"},{"p":"org.apache.calcite.sql.validate","c":"SqlUserDefinedFunction","l":"SqlUserDefinedFunction(SqlIdentifier, SqlReturnTypeInference, SqlOperandTypeInference, SqlOperandTypeChecker, List<RelDataType>, Function)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker,java.util.List,org.apache.calcite.schema.Function)"},{"p":"org.apache.calcite.sql.validate","c":"SqlUserDefinedTableFunction","l":"SqlUserDefinedTableFunction(SqlIdentifier, SqlKind, SqlReturnTypeInference, SqlOperandTypeInference, SqlOperandMetadata, TableFunction)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlKind,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandMetadata,org.apache.calcite.schema.TableFunction)"},{"p":"org.apache.calcite.sql.validate","c":"SqlUserDefinedTableFunction","l":"SqlUserDefinedTableFunction(SqlIdentifier, SqlReturnTypeInference, SqlOperandTypeInference, SqlOperandTypeChecker, List<RelDataType>, TableFunction)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker,java.util.List,org.apache.calcite.schema.TableFunction)"},{"p":"org.apache.calcite.sql.validate","c":"SqlUserDefinedTableMacro","l":"SqlUserDefinedTableMacro(SqlIdentifier, SqlKind, SqlReturnTypeInference, SqlOperandTypeInference, SqlOperandMetadata, TableMacro)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlKind,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandMetadata,org.apache.calcite.schema.TableMacro)"},{"p":"org.apache.calcite.sql.validate","c":"SqlUserDefinedTableMacro","l":"SqlUserDefinedTableMacro(SqlIdentifier, SqlReturnTypeInference, SqlOperandTypeInference, SqlOperandTypeChecker, List<RelDataType>, TableMacro)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker,java.util.List,org.apache.calcite.schema.TableMacro)"},{"p":"org.apache.calcite.sql","c":"SqlUserDefinedTypeNameSpec","l":"SqlUserDefinedTypeNameSpec(SqlIdentifier, SqlParserPos)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlUserDefinedTypeNameSpec","l":"SqlUserDefinedTypeNameSpec(String, SqlParserPos)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"SqlUtil()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql","c":"SqlUuidLiteral","l":"SqlUuidLiteral(UUID, SqlParserPos)","u":"%3Cinit%3E(java.util.UUID,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.tools","c":"Frameworks.ConfigBuilder","l":"sqlValidatorConfig(SqlValidator.Config)","u":"sqlValidatorConfig(org.apache.calcite.sql.validate.SqlValidator.Config)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorException","l":"SqlValidatorException(String, Throwable)","u":"%3Cinit%3E(java.lang.String,java.lang.Throwable)"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"SqlValidatorFixture(SqlTester, SqlTestFactory, StringAndPos, boolean, boolean)","u":"%3Cinit%3E(org.apache.calcite.sql.test.SqlTester,org.apache.calcite.sql.test.SqlTestFactory,org.apache.calcite.sql.parser.StringAndPos,boolean,boolean)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"SqlValidatorImpl(SqlOperatorTable, SqlValidatorCatalogReader, RelDataTypeFactory, SqlValidator.Config)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlOperatorTable,org.apache.calcite.sql.validate.SqlValidatorCatalogReader,org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.sql.validate.SqlValidator.Config)"},{"p":"org.apache.calcite.test","c":"SqlValidatorTestCase","l":"SqlValidatorTestCase()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.test","c":"SqlValidatorTester","l":"SqlValidatorTester()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql","c":"SqlValuesOperator","l":"SqlValuesOperator()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"SqlWindow(SqlParserPos, SqlIdentifier, SqlIdentifier, SqlNodeList, SqlNodeList, SqlLiteral, SqlNode, SqlNode, SqlLiteral)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlLiteral)"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"SqlWindow(SqlParserPos, SqlIdentifier, SqlIdentifier, SqlNodeList, SqlNodeList, SqlLiteral, SqlNode, SqlNode, SqlLiteral, SqlLiteral)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.SqlLiteral)"},{"p":"org.apache.calcite.sql","c":"SqlWindowTableFunction","l":"SqlWindowTableFunction(String, SqlOperandMetadata)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.sql.type.SqlOperandMetadata)"},{"p":"org.apache.calcite.sql","c":"SqlWith","l":"SqlWith(SqlParserPos, SqlNodeList, SqlNode)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlWithinDistinctOperator","l":"SqlWithinDistinctOperator()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql","c":"SqlWithinGroupOperator","l":"SqlWithinGroupOperator()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql","c":"SqlWithItem","l":"SqlWithItem(SqlParserPos, SqlIdentifier, SqlNodeList, SqlNode)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlWithItem","l":"SqlWithItem(SqlParserPos, SqlIdentifier, SqlNodeList, SqlNode, SqlLiteral)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlLiteral)"},{"p":"org.apache.calcite.sql.validate","c":"SqlWithItemTableRef","l":"SqlWithItemTableRef(SqlParserPos, SqlWithItem)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlWithItem)"},{"p":"org.apache.calcite.sql.type","c":"ExtraSqlTypes","l":"SQLXML"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"SQRT"},{"p":"org.apache.calcite.util","c":"Util","l":"squelchConnection(Connection)","u":"squelchConnection(java.sql.Connection)"},{"p":"org.apache.calcite.util","c":"Util","l":"squelchJar(JarFile)","u":"squelchJar(java.util.jar.JarFile)"},{"p":"org.apache.calcite.util","c":"Util","l":"squelchReader(Reader)","u":"squelchReader(java.io.Reader)"},{"p":"org.apache.calcite.util","c":"Util","l":"squelchStmt(Statement)","u":"squelchStmt(java.sql.Statement)"},{"p":"org.apache.calcite.util","c":"Util","l":"squelchStream(InputStream)","u":"squelchStream(java.io.InputStream)"},{"p":"org.apache.calcite.util","c":"Util","l":"squelchStream(OutputStream)","u":"squelchStream(java.io.OutputStream)"},{"p":"org.apache.calcite.util","c":"Util","l":"squelchWriter(Writer)","u":"squelchWriter(java.io.Writer)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SROUND"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"sround(BigDecimal)","u":"sround(java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"sround(BigDecimal, int)","u":"sround(java.math.BigDecimal,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"sround(double)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"sround(double, int)","u":"sround(double,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"sround(int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"sround(int, int)","u":"sround(int,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"sround(long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"sround(long, int)","u":"sround(long,int)"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"SS"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"SSSSS"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_AddPoint(Geometry, Geometry)","u":"ST_AddPoint(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_AddPoint(Geometry, Geometry, int)","u":"ST_AddPoint(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,int)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_AddZ(Geometry, BigDecimal)","u":"ST_AddZ(org.locationtech.jts.geom.Geometry,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Area(Geometry)","u":"ST_Area(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_AsBinary(Geometry)","u":"ST_AsBinary(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_AsEWKB(Geometry)","u":"ST_AsEWKB(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_AsEWKT(Geometry)","u":"ST_AsEWKT(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_AsGeoJSON(Geometry)","u":"ST_AsGeoJSON(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_AsGML(Geometry)","u":"ST_AsGML(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_AsText(Geometry)","u":"ST_AsText(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_AsWKB(Geometry)","u":"ST_AsWKB(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_AsWKT(Geometry)","u":"ST_AsWKT(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Boundary(Geometry)","u":"ST_Boundary(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_BoundingCircle(Geometry)","u":"ST_BoundingCircle(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Buffer(Geometry, double)","u":"ST_Buffer(org.locationtech.jts.geom.Geometry,double)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Buffer(Geometry, double, int)","u":"ST_Buffer(org.locationtech.jts.geom.Geometry,double,int)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Buffer(Geometry, double, int, int)","u":"ST_Buffer(org.locationtech.jts.geom.Geometry,double,int,int)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Buffer(Geometry, double, String)","u":"ST_Buffer(org.locationtech.jts.geom.Geometry,double,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Centroid(Geometry)","u":"ST_Centroid(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_ClosestCoordinate(Geometry, Geometry)","u":"ST_ClosestCoordinate(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_ClosestPoint(Geometry, Geometry)","u":"ST_ClosestPoint(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_ConstrainedDelaunay(Geometry)","u":"ST_ConstrainedDelaunay(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_ConstrainedDelaunay(Geometry, int)","u":"ST_ConstrainedDelaunay(org.locationtech.jts.geom.Geometry,int)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ST_CONTAINS"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Contains(Geometry, Geometry)","u":"ST_Contains(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_ContainsProperly(Geometry, Geometry)","u":"ST_ContainsProperly(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_ConvexHull(Geometry)","u":"ST_ConvexHull(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_CoordDim(Geometry)","u":"ST_CoordDim(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_CoveredBy(Geometry, Geometry)","u":"ST_CoveredBy(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Covers(Geometry, Geometry)","u":"ST_Covers(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Crosses(Geometry, Geometry)","u":"ST_Crosses(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Delaunay(Geometry)","u":"ST_Delaunay(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Delaunay(Geometry, int)","u":"ST_Delaunay(org.locationtech.jts.geom.Geometry,int)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Densify(Geometry, BigDecimal)","u":"ST_Densify(org.locationtech.jts.geom.Geometry,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Difference(Geometry, Geometry)","u":"ST_Difference(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Dimension(Geometry)","u":"ST_Dimension(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Disjoint(Geometry, Geometry)","u":"ST_Disjoint(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Distance(Geometry, Geometry)","u":"ST_Distance(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ST_DWITHIN"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_DWithin(Geometry, Geometry, double)","u":"ST_DWithin(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,double)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_EndPoint(Geometry)","u":"ST_EndPoint(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Envelope(Geometry)","u":"ST_Envelope(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_EnvelopesIntersect(Geometry, Geometry)","u":"ST_EnvelopesIntersect(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Equals(Geometry, Geometry)","u":"ST_Equals(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Expand(Geometry, BigDecimal)","u":"ST_Expand(org.locationtech.jts.geom.Geometry,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Expand(Geometry, BigDecimal, BigDecimal)","u":"ST_Expand(org.locationtech.jts.geom.Geometry,java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.sql.fun","c":"SqlSpatialTypeFunctions","l":"ST_Explode(Geometry)","u":"ST_Explode(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Extent(Geometry)","u":"ST_Extent(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_ExteriorRing(Geometry)","u":"ST_ExteriorRing(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_FlipCoordinates(Geometry)","u":"ST_FlipCoordinates(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Force2D(Geometry)","u":"ST_Force2D(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Force3D(Geometry)","u":"ST_Force3D(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_FurthestCoordinate(Geometry, Geometry)","u":"ST_FurthestCoordinate(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"ST_GEOM_FROM_EWKT"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_GeometryN(Geometry, int)","u":"ST_GeometryN(org.locationtech.jts.geom.Geometry,int)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_GeometryType(Geometry)","u":"ST_GeometryType(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_GeometryTypeCode(Geometry)","u":"ST_GeometryTypeCode(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_GeomFromEWKB(ByteString)","u":"ST_GeomFromEWKB(org.apache.calcite.avatica.util.ByteString)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_GeomFromEWKT(String)","u":"ST_GeomFromEWKT(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_GeomFromGeoJSON(String)","u":"ST_GeomFromGeoJSON(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_GeomFromGML(String)","u":"ST_GeomFromGML(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_GeomFromGML(String, int)","u":"ST_GeomFromGML(java.lang.String,int)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_GeomFromText(String)","u":"ST_GeomFromText(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_GeomFromText(String, int)","u":"ST_GeomFromText(java.lang.String,int)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_GeomFromWKB(ByteString)","u":"ST_GeomFromWKB(org.apache.calcite.avatica.util.ByteString)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_GeomFromWKB(ByteString, int)","u":"ST_GeomFromWKB(org.apache.calcite.avatica.util.ByteString,int)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_GeomFromWKT(String)","u":"ST_GeomFromWKT(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_GeomFromWKT(String, int)","u":"ST_GeomFromWKT(java.lang.String,int)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Holes(Geometry)","u":"ST_Holes(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_InteriorRing(Geometry, int)","u":"ST_InteriorRing(org.locationtech.jts.geom.Geometry,int)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Intersection(Geometry, Geometry)","u":"ST_Intersection(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Intersects(Geometry, Geometry)","u":"ST_Intersects(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Is3D(Geometry)","u":"ST_Is3D(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_IsClosed(Geometry)","u":"ST_IsClosed(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_IsEmpty(Geometry)","u":"ST_IsEmpty(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_IsRectangle(Geometry)","u":"ST_IsRectangle(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_IsRing(Geometry)","u":"ST_IsRing(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_IsSimple(Geometry)","u":"ST_IsSimple(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_IsValid(Geometry)","u":"ST_IsValid(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Length(Geometry)","u":"ST_Length(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_LineFromText(String)","u":"ST_LineFromText(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_LineFromText(String, int)","u":"ST_LineFromText(java.lang.String,int)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_LineFromWKB(ByteString)","u":"ST_LineFromWKB(org.apache.calcite.avatica.util.ByteString)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_LineFromWKB(ByteString, int)","u":"ST_LineFromWKB(org.apache.calcite.avatica.util.ByteString,int)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_LineMerge(Geometry)","u":"ST_LineMerge(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_LocateAlong(Geometry, BigDecimal, BigDecimal)","u":"ST_LocateAlong(org.locationtech.jts.geom.Geometry,java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_LongestLine(Geometry, Geometry)","u":"ST_LongestLine(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ST_MAKE_LINE"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_MakeEllipse(Geometry, BigDecimal, BigDecimal)","u":"ST_MakeEllipse(org.locationtech.jts.geom.Geometry,java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_MakeEnvelope(BigDecimal, BigDecimal, BigDecimal, BigDecimal)","u":"ST_MakeEnvelope(java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_MakeEnvelope(BigDecimal, BigDecimal, BigDecimal, BigDecimal, int)","u":"ST_MakeEnvelope(java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlSpatialTypeFunctions","l":"ST_MakeGrid(Geometry, BigDecimal, BigDecimal)","u":"ST_MakeGrid(org.locationtech.jts.geom.Geometry,java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.sql.fun","c":"SqlSpatialTypeFunctions","l":"ST_MakeGridPoints(Geometry, BigDecimal, BigDecimal)","u":"ST_MakeGridPoints(org.locationtech.jts.geom.Geometry,java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_MakeLine(Geometry, Geometry)","u":"ST_MakeLine(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_MakeLine(Geometry, Geometry, Geometry)","u":"ST_MakeLine(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_MakeLine(Geometry, Geometry, Geometry, Geometry)","u":"ST_MakeLine(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_MakeLine(Geometry, Geometry, Geometry, Geometry, Geometry)","u":"ST_MakeLine(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_MakeLine(Geometry, Geometry, Geometry, Geometry, Geometry, Geometry)","u":"ST_MakeLine(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_MakePoint(BigDecimal, BigDecimal)","u":"ST_MakePoint(java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_MakePoint(BigDecimal, BigDecimal, BigDecimal)","u":"ST_MakePoint(java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_MakePolygon(Geometry)","u":"ST_MakePolygon(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_MakePolygon(Geometry, Geometry)","u":"ST_MakePolygon(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_MakePolygon(Geometry, Geometry, Geometry)","u":"ST_MakePolygon(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_MakePolygon(Geometry, Geometry, Geometry, Geometry)","u":"ST_MakePolygon(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_MakePolygon(Geometry, Geometry, Geometry, Geometry, Geometry)","u":"ST_MakePolygon(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_MakePolygon(Geometry, Geometry, Geometry, Geometry, Geometry, Geometry)","u":"ST_MakePolygon(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_MakePolygon(Geometry, Geometry, Geometry, Geometry, Geometry, Geometry, Geometry)","u":"ST_MakePolygon(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_MakePolygon(Geometry, Geometry, Geometry, Geometry, Geometry, Geometry, Geometry, Geometry)","u":"ST_MakePolygon(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_MakePolygon(Geometry, Geometry, Geometry, Geometry, Geometry, Geometry, Geometry, Geometry, Geometry)","u":"ST_MakePolygon(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_MakePolygon(Geometry, Geometry, Geometry, Geometry, Geometry, Geometry, Geometry, Geometry, Geometry, Geometry)","u":"ST_MakePolygon(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_MakePolygon(Geometry, Geometry, Geometry, Geometry, Geometry, Geometry, Geometry, Geometry, Geometry, Geometry, Geometry)","u":"ST_MakePolygon(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_MakeValid(Geometry)","u":"ST_MakeValid(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_MaxDistance(Geometry, Geometry)","u":"ST_MaxDistance(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_MinimumDiameter(Geometry)","u":"ST_MinimumDiameter(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_MinimumRectangle(Geometry)","u":"ST_MinimumRectangle(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_MLineFromText(String)","u":"ST_MLineFromText(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_MLineFromText(String, int)","u":"ST_MLineFromText(java.lang.String,int)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_MPointFromText(String)","u":"ST_MPointFromText(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_MPointFromText(String, int)","u":"ST_MPointFromText(java.lang.String,int)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_MPolyFromText(String)","u":"ST_MPolyFromText(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_MPolyFromText(String, int)","u":"ST_MPolyFromText(java.lang.String,int)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Normalize(Geometry)","u":"ST_Normalize(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_NPoints(Geometry)","u":"ST_NPoints(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_NumGeometries(Geometry)","u":"ST_NumGeometries(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_NumInteriorRing(Geometry)","u":"ST_NumInteriorRing(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_NumInteriorRings(Geometry)","u":"ST_NumInteriorRings(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_NumPoints(Geometry)","u":"ST_NumPoints(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_OctagonalEnvelope(Geometry)","u":"ST_OctagonalEnvelope(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_OffsetCurve(Geometry, double, String)","u":"ST_OffsetCurve(org.locationtech.jts.geom.Geometry,double,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_OrderingEquals(Geometry, Geometry)","u":"ST_OrderingEquals(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Overlaps(Geometry, Geometry)","u":"ST_Overlaps(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Perimeter(Geometry)","u":"ST_Perimeter(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ST_POINT"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Point(BigDecimal, BigDecimal)","u":"ST_Point(java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Point(BigDecimal, BigDecimal, BigDecimal)","u":"ST_Point(java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"ST_POINT3"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_PointFromText(String)","u":"ST_PointFromText(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_PointFromText(String, int)","u":"ST_PointFromText(java.lang.String,int)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_PointFromWKB(ByteString)","u":"ST_PointFromWKB(org.apache.calcite.avatica.util.ByteString)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_PointFromWKB(ByteString, int)","u":"ST_PointFromWKB(org.apache.calcite.avatica.util.ByteString,int)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_PointN(Geometry, int)","u":"ST_PointN(org.locationtech.jts.geom.Geometry,int)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_PointOnSurface(Geometry)","u":"ST_PointOnSurface(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_PolyFromText(String)","u":"ST_PolyFromText(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_PolyFromText(String, int)","u":"ST_PolyFromText(java.lang.String,int)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_PolyFromWKB(ByteString)","u":"ST_PolyFromWKB(org.apache.calcite.avatica.util.ByteString)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_PolyFromWKB(ByteString, int)","u":"ST_PolyFromWKB(org.apache.calcite.avatica.util.ByteString,int)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Polygonize(Geometry)","u":"ST_Polygonize(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_PrecisionReducer(Geometry, BigDecimal)","u":"ST_PrecisionReducer(org.locationtech.jts.geom.Geometry,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_ProjectPoint(Geometry, Geometry)","u":"ST_ProjectPoint(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_ReducePrecision(Geometry, BigDecimal)","u":"ST_ReducePrecision(org.locationtech.jts.geom.Geometry,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Relate(Geometry, Geometry)","u":"ST_Relate(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Relate(Geometry, Geometry, String)","u":"ST_Relate(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_RemoveHoles(Geometry)","u":"ST_RemoveHoles(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_RemovePoint(Geometry, int)","u":"ST_RemovePoint(org.locationtech.jts.geom.Geometry,int)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_RemoveRepeatedPoints(Geometry)","u":"ST_RemoveRepeatedPoints(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_RemoveRepeatedPoints(Geometry, BigDecimal)","u":"ST_RemoveRepeatedPoints(org.locationtech.jts.geom.Geometry,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Reverse(Geometry)","u":"ST_Reverse(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Rotate(Geometry, BigDecimal)","u":"ST_Rotate(org.locationtech.jts.geom.Geometry,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Rotate(Geometry, BigDecimal, BigDecimal, BigDecimal)","u":"ST_Rotate(org.locationtech.jts.geom.Geometry,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Rotate(Geometry, BigDecimal, Geometry)","u":"ST_Rotate(org.locationtech.jts.geom.Geometry,java.math.BigDecimal,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Scale(Geometry, BigDecimal, BigDecimal)","u":"ST_Scale(org.locationtech.jts.geom.Geometry,java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_SetSRID(Geometry, int)","u":"ST_SetSRID(org.locationtech.jts.geom.Geometry,int)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Simplify(Geometry, BigDecimal)","u":"ST_Simplify(org.locationtech.jts.geom.Geometry,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_SimplifyPreserveTopology(Geometry, BigDecimal)","u":"ST_SimplifyPreserveTopology(org.locationtech.jts.geom.Geometry,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Snap(Geometry, Geometry, BigDecimal)","u":"ST_Snap(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Split(Geometry, Geometry)","u":"ST_Split(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_SRID(Geometry)","u":"ST_SRID(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_StartPoint(Geometry)","u":"ST_StartPoint(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_SymDifference(Geometry, Geometry)","u":"ST_SymDifference(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_ToMultiLine(Geometry)","u":"ST_ToMultiLine(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_ToMultiPoint(Geometry)","u":"ST_ToMultiPoint(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_ToMultiSegments(Geometry)","u":"ST_ToMultiSegments(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Touches(Geometry, Geometry)","u":"ST_Touches(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Transform(Geometry, int)","u":"ST_Transform(org.locationtech.jts.geom.Geometry,int)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Translate(Geometry, BigDecimal, BigDecimal)","u":"ST_Translate(org.locationtech.jts.geom.Geometry,java.math.BigDecimal,java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_UnaryUnion(Geometry)","u":"ST_UnaryUnion(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_UnaryUnion(Geometry, Geometry)","u":"ST_UnaryUnion(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Within(Geometry, Geometry)","u":"ST_Within(org.locationtech.jts.geom.Geometry,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_X(Geometry)","u":"ST_X(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_XMax(Geometry)","u":"ST_XMax(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_XMin(Geometry)","u":"ST_XMin(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Y(Geometry)","u":"ST_Y(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_YMax(Geometry)","u":"ST_YMax(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_YMin(Geometry)","u":"ST_YMin(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_Z(Geometry)","u":"ST_Z(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_ZMax(Geometry)","u":"ST_ZMax(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeFunctions","l":"ST_ZMin(Geometry)","u":"ST_ZMin(org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.rel","c":"RelShuttleImpl","l":"stack"},{"p":"org.apache.calcite.util","c":"StackWriter","l":"StackWriter(Writer, String)","u":"%3Cinit%3E(java.io.Writer,java.lang.String)"},{"p":"org.apache.calcite.config","c":"CharLiteralStyle","l":"STANDARD"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibrary","l":"STANDARD"},{"p":"org.apache.calcite.runtime","c":"Hook","l":"STANDARD_STREAMS"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable","l":"standard()"},{"p":"org.apache.calcite.tools","c":"Programs","l":"standard()"},{"p":"org.apache.calcite.tools","c":"Programs","l":"standard(RelMetadataProvider)","u":"standard(org.apache.calcite.rel.metadata.RelMetadataProvider)"},{"p":"org.apache.calcite.tools","c":"Programs","l":"standard(RelMetadataProvider, boolean)","u":"standard(org.apache.calcite.rel.metadata.RelMetadataProvider,boolean)"},{"p":"org.apache.calcite.runtime","c":"Pattern.Op","l":"STAR"},{"p":"org.apache.calcite.schema","c":"Schema.TableType","l":"STAR"},{"p":"org.apache.calcite.sql","c":"SqlIdentifier","l":"STAR"},{"p":"org.apache.calcite.runtime","c":"Pattern.PatternBuilder","l":"star()"},{"p":"org.apache.calcite.sql","c":"SqlIdentifier","l":"star(List<String>, SqlParserPos, List<SqlParserPos>)","u":"star(java.util.List,org.apache.calcite.sql.parser.SqlParserPos,java.util.List)"},{"p":"org.apache.calcite.sql","c":"SqlIdentifier","l":"star(SqlParserPos)","u":"star(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.plan","c":"RelOptLattice","l":"starRelOptTable"},{"p":"org.apache.calcite.plan","c":"RelOptMaterialization","l":"starRelOptTable"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"starRequiresRecordType()"},{"p":"org.apache.calcite.sql","c":"SqlDialect.DatabaseProduct","l":"STARROCKS"},{"p":"org.apache.calcite.sql.dialect","c":"StarRocksSqlDialect","l":"STARROCKS_TYPE_SYSTEM"},{"p":"org.apache.calcite.sql.dialect","c":"StarRocksSqlDialect","l":"StarRocksSqlDialect(SqlDialect.Context)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect.Context)"},{"p":"org.apache.calcite.tools","c":"Hoist.Variable","l":"start"},{"p":"org.apache.calcite.adapter.enumerable","c":"WinAggImplementor.SeekType","l":"START"},{"p":"org.apache.calcite.plan","c":"RelOptMaterialization","l":"starTable"},{"p":"org.apache.calcite.schema.impl","c":"StarTable.StarTableScan","l":"StarTableScan(RelOptCluster, RelOptTable)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.rel.rules","c":"DpHyp","l":"startEnumerateJoin()"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"startFunCall(String)","u":"startFunCall(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlWriter","l":"startFunCall(String)","u":"startFunCall(java.lang.String)"},{"p":"org.apache.calcite.adapter.enumerable.impl","c":"WinAggResetContextImpl","l":"startIndex()"},{"p":"org.apache.calcite.adapter.enumerable.impl","c":"WinAggResultContextImpl","l":"startIndex()"},{"p":"org.apache.calcite.adapter.enumerable","c":"WinAggFrameContext","l":"startIndex()"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"startList(SqlWriter.FrameType, String, String)","u":"startList(org.apache.calcite.sql.SqlWriter.FrameType,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlWriter","l":"startList(SqlWriter.FrameType, String, String)","u":"startList(org.apache.calcite.sql.SqlWriter.FrameType,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"startList(SqlWriter.FrameType, String, String, String)","u":"startList(org.apache.calcite.sql.SqlWriter.FrameType,java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"startList(SqlWriter.FrameTypeEnum)","u":"startList(org.apache.calcite.sql.SqlWriter.FrameTypeEnum)"},{"p":"org.apache.calcite.sql","c":"SqlWriter","l":"startList(SqlWriter.FrameTypeEnum)","u":"startList(org.apache.calcite.sql.SqlWriter.FrameTypeEnum)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"startList(String, String)","u":"startList(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlWriter","l":"startList(String, String)","u":"startList(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlSpecialOperator.ReduceResult","l":"startOrdinal"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"STARTS_WITH"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"STARTS_WITH"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"STARTS_WITH"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserPos","l":"startsAt(SqlParserPos)","u":"startsAt(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"STARTSWITH"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"startsWith(ByteString, ByteString)","u":"startsWith(org.apache.calcite.avatica.util.ByteString,org.apache.calcite.avatica.util.ByteString)"},{"p":"org.apache.calcite.util","c":"Util","l":"startsWith(List<E>, List<E>)","u":"startsWith(java.util.List,java.util.List)"},{"p":"org.apache.calcite.util","c":"Puffin.Line","l":"startsWith(String)","u":"startsWith(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"startsWith(String, String)","u":"startsWith(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.chinook","c":"ChinookAvaticaServer","l":"startWithCalcite()"},{"p":"org.apache.calcite.chinook","c":"ChinookAvaticaServer","l":"startWithRaw()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRelImplementor","l":"stash(T, Class<? super T>)","u":"stash(T,java.lang.Class)"},{"p":"org.apache.calcite.adapter.enumerable","c":"AggImpState","l":"state"},{"p":"org.apache.calcite.util","c":"Glossary","l":"STATE_PATTERN"},{"p":"org.apache.calcite.util","c":"Puffin.Context","l":"state()"},{"p":"org.apache.calcite.util","c":"Puffin.Line","l":"state()"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.StatefulFunction","l":"StatefulFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"statement(Expression)","u":"statement(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Statement","l":"Statement(ExpressionType, Type)","u":"%3Cinit%3E(org.apache.calcite.linq4j.tree.ExpressionType,java.lang.reflect.Type)"},{"p":"org.apache.calcite.linq4j.tree","c":"BlockStatement","l":"statements"},{"p":"org.apache.calcite.test.schemata.countries","c":"StatesTableFunction","l":"states(boolean)"},{"p":"org.apache.calcite.util","c":"Smalls.StaticTableMacroFunction","l":"StaticTableMacroFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util","c":"Benchmark.Statistician","l":"Statistician(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.materialize","c":"Lattice","l":"statisticProvider"},{"p":"org.apache.calcite.model","c":"JsonLattice","l":"statisticProvider"},{"p":"org.apache.calcite.tools","c":"Frameworks.ConfigBuilder","l":"statisticProvider(SqlStatisticProvider)","u":"statisticProvider(org.apache.calcite.materialize.SqlStatisticProvider)"},{"p":"org.apache.calcite.materialize","c":"Lattice.Builder","l":"statisticProvider(String)","u":"statisticProvider(java.lang.String)"},{"p":"org.apache.calcite.profile","c":"Profiler.Profile","l":"statistics()"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"STDDEV"},{"p":"org.apache.calcite.sql.fun","c":"SqlAvgAggFunction.Subtype","l":"STDDEV_POP"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"STDDEV_POP"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"STDDEV_POP"},{"p":"org.apache.calcite.sql.fun","c":"SqlAvgAggFunction.Subtype","l":"STDDEV_SAMP"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"STDDEV_SAMP"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"STDDEV_SAMP"},{"p":"org.apache.calcite","c":"DataContext.Variable","l":"STDERR"},{"p":"org.apache.calcite","c":"DataContext.Variable","l":"STDIN"},{"p":"org.apache.calcite","c":"DataContext.Variable","l":"STDOUT"},{"p":"org.apache.calcite.test","c":"CalciteAssert.DatabaseInstance","l":"steelwheels"},{"p":"org.apache.calcite.test","c":"CalciteAssert.SchemaSpec","l":"STEELWHEELS"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig.LineFolding","l":"STEP"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope.Path","l":"stepCount()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope.Step","l":"stepCount()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope.Path","l":"steps()"},{"p":"org.apache.calcite.piglet","c":"Ast.Stmt","l":"Stmt(SqlParserPos, Ast.Op)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.piglet.Ast.Op)"},{"p":"org.apache.calcite.piglet","c":"Ast.Program","l":"stmtList"},{"p":"org.apache.calcite.chinook","c":"ChinookAvaticaServer","l":"stop()"},{"p":"org.apache.calcite.schema","c":"ColumnStrategy","l":"STORED"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"str"},{"p":"org.apache.calcite.util","c":"Smalls","l":"STR_METHOD"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"STR_TO_MAP"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"STR_TO_MAP"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"STR_TO_MAP"},{"p":"org.apache.calcite.util","c":"Smalls","l":"str(Object, Object)","u":"str(java.lang.Object,java.lang.Object)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlColumnDeclaration","l":"strategy"},{"p":"org.apache.calcite.util","c":"Glossary","l":"STRATEGY_PATTERN"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"STRCMP"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"STRCMP"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"strcmp(String, String)","u":"strcmp(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.model","c":"JsonStream","l":"stream"},{"p":"org.apache.calcite.model","c":"JsonTable","l":"stream"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"stream"},{"p":"org.apache.calcite.schema","c":"Schema.TableType","l":"STREAM"},{"p":"org.apache.calcite.sql","c":"SqlSelectKeyword","l":"STREAM"},{"p":"org.apache.calcite.sql.validate","c":"SqlModality","l":"STREAM"},{"p":"org.apache.calcite.adapter.csv","c":"CsvStreamScannableTable","l":"stream()"},{"p":"org.apache.calcite.adapter.kafka","c":"KafkaStreamTable","l":"stream()"},{"p":"org.apache.calcite.schema","c":"StreamableTable","l":"stream()"},{"p":"org.apache.calcite.test.schemata.orderstream","c":"InfiniteOrdersTable","l":"stream()"},{"p":"org.apache.calcite.test.schemata.orderstream","c":"OrdersTable","l":"stream()"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"stream()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"streamMustGroupByMonotonic()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"streamMustOrderByMonotonic()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"streamSetOpInconsistentInputs()"},{"p":"org.apache.calcite.sql","c":"SqlCollation","l":"strength"},{"p":"org.apache.calcite.adapter.enumerable","c":"NullPolicy","l":"STRICT"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.PathMode","l":"STRICT"},{"p":"org.apache.calcite.config","c":"CalciteSystemProperty","l":"STRICT"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"STRICT_2003"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformance","l":"STRICT_2003"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"STRICT_92"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformance","l":"STRICT_92"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"STRICT_99"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformance","l":"STRICT_99"},{"p":"org.apache.calcite.adapter.enumerable","c":"StrictAggImplementor","l":"StrictAggImplementor()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.core","c":"Match","l":"strictEnd"},{"p":"org.apache.calcite.rel.mutable","c":"MutableMatch","l":"strictEnd"},{"p":"org.apache.calcite.rel","c":"RelFieldCollation.Direction","l":"STRICTLY_ASCENDING"},{"p":"org.apache.calcite.sql.validate","c":"SqlMonotonicity","l":"STRICTLY_DECREASING"},{"p":"org.apache.calcite.rel","c":"RelFieldCollation.Direction","l":"STRICTLY_DESCENDING"},{"p":"org.apache.calcite.sql.validate","c":"SqlMonotonicity","l":"STRICTLY_INCREASING"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"strictPathModeRequiresNonEmptyValue()"},{"p":"org.apache.calcite.rel.core","c":"Match","l":"strictStart"},{"p":"org.apache.calcite.rel.mutable","c":"MutableMatch","l":"strictStart"},{"p":"org.apache.calcite.rex","c":"RexLiteral","l":"strictTypeName(RelDataType)","u":"strictTypeName(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.adapter.enumerable","c":"StrictWinAggImplementor","l":"StrictWinAggImplementor()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema.EveryType","l":"string"},{"p":"org.apache.calcite.util","c":"Version","l":"string"},{"p":"org.apache.calcite.adapter.druid","c":"DruidType","l":"STRING"},{"p":"org.apache.calcite.adapter.redis","c":"RedisDataType","l":"STRING"},{"p":"org.apache.calcite.sql","c":"SqlFunctionCategory","l":"STRING"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFamily","l":"STRING"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"STRING"},{"p":"org.apache.calcite.util","c":"JdbcType","l":"STRING"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"STRING_AGG"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"STRING_AGG"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"STRING_ARRAY_CHARACTER_OPTIONAL_CHARACTER"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"STRING_CONCAT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"STRING_CONCAT_WITH_NULL"},{"p":"org.apache.calcite.rel.mutable","c":"MutableRel","l":"STRING_EQUIVALENCE"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"STRING_FIRST_OBJECT_REPEAT"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"STRING_FIRST_STRING_ARRAY_REPEAT"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"STRING_INTEGER"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"STRING_INTEGER_INTEGER"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"STRING_INTEGER_OPTIONAL_INTEGER"},{"p":"org.apache.calcite.util","c":"JdbcType","l":"STRING_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"STRING_NUMERIC"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"STRING_NUMERIC_NUMERIC"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"STRING_NUMERIC_OPTIONAL_STRING"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"STRING_OPTIONAL_STRING"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"STRING_OPTIONAL_STRING_OPTIONAL_STRING"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"STRING_SAME_SAME"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"STRING_SAME_SAME_INTEGER"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"STRING_SAME_SAME_OR_ARRAY_SAME_SAME"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"STRING_SAME_SAME_SAME"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"STRING_STRING"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"STRING_STRING_INTEGER"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"STRING_STRING_INTEGER_INTEGER"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"STRING_STRING_OPTIONAL_INTEGER_OPTIONAL_INTEGER"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"STRING_STRING_OPTIONAL_INTEGER_OPTIONAL_INTEGER_OPTIONAL_INTEGER"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"STRING_STRING_OPTIONAL_STRING"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"STRING_STRING_STRING"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"STRING_STRING_STRING_STRING"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"STRING_TO_BINARY"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"STRING_TO_BOOLEAN"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"STRING_TO_DATE"},{"p":"org.apache.calcite.runtime","c":"Hook","l":"STRING_TO_QUERY"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"STRING_TO_TIME"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"STRING_TO_TIME_WITH_LOCAL_TIME_ZONE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"STRING_TO_TIMESTAMP"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"STRING_TO_TIMESTAMP_WITH_LOCAL_TIME_ZONE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"STRING_TO_UPPER"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"STRING_TRUNC_MESSAGE"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"STRING_TYPES"},{"p":"org.apache.calcite.util","c":"Smalls","l":"STRING_UNION_METHOD"},{"p":"org.apache.calcite.chinook","c":"StringConcatFunction","l":"StringConcatFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"stringDataType"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"stringFragsOnSameLine()"},{"p":"org.apache.calcite.adapter.druid","c":"DruidExpressions","l":"stringLiteral(String)","u":"stringLiteral(java.lang.String)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"strings(List<RexNode>)","u":"strings(java.util.List)"},{"p":"org.apache.calcite.util","c":"XmlOutput","l":"stringTag(String, String)","u":"stringTag(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"stringToBinary(String, Charset)","u":"stringToBinary(java.lang.String,java.nio.charset.Charset)"},{"p":"org.apache.calcite.sql","c":"SqlIntervalQualifier","l":"stringToDatePartTimeUnit(String)","u":"stringToDatePartTimeUnit(java.lang.String)"},{"p":"org.apache.calcite.util","c":"Util","l":"stringToList(String)","u":"stringToList(java.lang.String)"},{"p":"org.apache.calcite.sql.test","c":"SqlTests.StringTypeChecker","l":"StringTypeChecker(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.util","c":"Smalls","l":"stringUnion(Queryable<T>, Queryable<T>)","u":"stringUnion(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Queryable)"},{"p":"org.apache.calcite.rex","c":"RexLiteral","l":"stringValue(RexNode)","u":"stringValue(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"stringValue(SqlNode)","u":"stringValue(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.util","c":"PartiallyOrderedSet","l":"strip(List<PartiallyOrderedSet.Node<E>>)","u":"strip(java.util.List)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableRels","l":"strip(MutableProject)","u":"strip(org.apache.calcite.rel.mutable.MutableProject)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectRemoveRule","l":"strip(Project)","u":"strip(org.apache.calcite.rel.core.Project)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"strip(String, String, String, String, Casing)","u":"strip(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.calcite.avatica.util.Casing)"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"stripAs(SqlNode)","u":"stripAs(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.util","c":"Util","l":"stripDoubleQuotes(String)","u":"stripDoubleQuotes(java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"Types","l":"stripGenerics(Type)","u":"stripGenerics(java.lang.reflect.Type)"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"stripListAs(SqlNodeList)","u":"stripListAs(org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"stripOrderBy(SqlCall)","u":"stripOrderBy(org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"stripOrderBy(SqlOperatorBinding)","u":"stripOrderBy(org.apache.calcite.sql.SqlOperatorBinding)"},{"p":"org.apache.calcite.plan.hep","c":"HepRelVertex","l":"stripped()"},{"p":"org.apache.calcite.plan.volcano","c":"RelSubset","l":"stripped()"},{"p":"org.apache.calcite.rel","c":"RelNode","l":"stripped()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"stripQuotes(String, String, String, String, Casing)","u":"stripQuotes(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.calcite.avatica.util.Casing)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"stripRow(SqlNode)","u":"stripRow(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"stripSeparator(SqlCall)","u":"stripSeparator(org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Result","l":"stripTrivialAliases(SqlNode)","u":"stripTrivialAliases(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.plan","c":"Strong","l":"Strong()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"STRPOS"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"strToMap(String, String, String)","u":"strToMap(java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"STRUCT_ACCESS"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"STRUCT_ACCESS"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"structAccess(Object, int, String)","u":"structAccess(java.lang.Object,int,java.lang.String)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"STRUCTURED"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"STRUNCATE"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"struncate(BigDecimal)","u":"struncate(java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"struncate(BigDecimal, int)","u":"struncate(java.math.BigDecimal,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"struncate(double)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"struncate(double, int)","u":"struncate(double,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"struncate(int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"struncate(int, int)","u":"struncate(int,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"struncate(long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"struncate(long, int)","u":"struncate(long,int)"},{"p":"org.apache.calcite.util","c":"Smalls","l":"strView(String)","u":"strView(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"Hook","l":"SUB"},{"p":"org.apache.calcite.sql","c":"SqlWriter.FrameTypeEnum","l":"SUB_QUERY"},{"p":"org.apache.calcite.tools","c":"Programs","l":"SUB_QUERY_PROGRAM"},{"p":"org.apache.calcite.plan","c":"AbstractRelOptPlanner","l":"subClasses(Class<? extends RelNode>)","u":"subClasses(java.lang.Class)"},{"p":"org.apache.calcite.runtime","c":"ImmutableIntList","l":"subList(int, int)","u":"subList(int,int)"},{"p":"org.apache.calcite.runtime","c":"ImmutablePairList","l":"subList(int, int)","u":"subList(int,int)"},{"p":"org.apache.calcite.runtime","c":"PairList","l":"subList(int, int)","u":"subList(int,int)"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"subList(int, int)","u":"subList(int,int)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SUBMULTISET_OF"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"SUBMULTISET_OF"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"submultisetOf(Collection, Collection)","u":"submultisetOf(java.util.Collection,java.util.Collection)"},{"p":"org.apache.calcite.test.schemata.hr","c":"HierarchySchema.Hierarchy","l":"subordinateid"},{"p":"org.apache.calcite.tools","c":"Programs","l":"subquery(RelMetadataProvider)","u":"subquery(org.apache.calcite.rel.metadata.RelMetadataProvider)"},{"p":"org.apache.calcite.tools","c":"Programs","l":"subQuery(RelMetadataProvider)","u":"subQuery(org.apache.calcite.rel.metadata.RelMetadataProvider)"},{"p":"org.apache.calcite.rel.rules","c":"SubQueryRemoveRule","l":"SubQueryRemoveRule(SubQueryRemoveRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.SubQueryRemoveRule.Config)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"subQueryStyle()"},{"p":"org.apache.calcite.schema","c":"Schemas","l":"subSchema(CalciteSchema, Iterable<String>)","u":"subSchema(org.apache.calcite.jdbc.CalciteSchema,java.lang.Iterable)"},{"p":"org.apache.calcite.schema","c":"Schemas","l":"subSchemaExpression(SchemaPlus, String, Class)","u":"subSchemaExpression(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.lang.Class)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"subSchemaMap"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcBaseSchema","l":"subSchemas()"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcCatalogSchema","l":"subSchemas()"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcSchema","l":"subSchemas()"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"subSchemas()"},{"p":"org.apache.calcite.schema.impl","c":"AbstractSchema","l":"subSchemas()"},{"p":"org.apache.calcite.schema.impl","c":"DelegatingSchema","l":"subSchemas()"},{"p":"org.apache.calcite.schema","c":"Schema","l":"subSchemas()"},{"p":"org.apache.calcite.schema","c":"SchemaPlus","l":"subSchemas()"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Result","l":"subSelect()"},{"p":"org.apache.calcite.rel.rules","c":"LongBitmap.SubsetIterator","l":"SubsetIterator(long)","u":"%3Cinit%3E(long)"},{"p":"org.apache.calcite.rel.core","c":"Match","l":"subsets"},{"p":"org.apache.calcite.rel.mutable","c":"MutableMatch","l":"subsets"},{"p":"org.apache.calcite.tools","c":"Hoist.Hoisted","l":"substitute(Function<Hoist.Variable, String>)","u":"substitute(java.util.function.Function)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule","l":"substitute(RexCall, int, RexNode)","u":"substitute(org.apache.calcite.rex.RexCall,int,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertQuery","l":"substitutionMatches(Consumer<RelNode>)","u":"substitutionMatches(java.util.function.Consumer)"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor","l":"SubstitutionVisitor(RelNode, RelNode)","u":"%3Cinit%3E(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor","l":"SubstitutionVisitor(RelNode, RelNode, ImmutableList<SubstitutionVisitor.UnifyRule>)","u":"%3Cinit%3E(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList)"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor","l":"SubstitutionVisitor(RelNode, RelNode, ImmutableList<SubstitutionVisitor.UnifyRule>, RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.sql.fun","c":"OracleSqlOperatorTable","l":"SUBSTR"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"SUBSTR_BIG_QUERY"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"SUBSTR_BIG_QUERY"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"SUBSTR_MYSQL"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"SUBSTR_MYSQL"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"SUBSTR_ORACLE"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"SUBSTR_ORACLE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"SUBSTR_POSTGRESQL"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"SUBSTR_POSTGRESQL"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SUBSTRING"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"SUBSTRING"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"SUBSTRING_INDEX"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SUBSTRING_INDEX"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"SUBSTRING_INDEX"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"substring(ByteString, int)","u":"substring(org.apache.calcite.avatica.util.ByteString,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"substring(ByteString, int, int)","u":"substring(org.apache.calcite.avatica.util.ByteString,int,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"substring(String, int)","u":"substring(java.lang.String,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"substring(String, int, int)","u":"substring(java.lang.String,int,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"substring(String, int, long)","u":"substring(java.lang.String,int,long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"substring(String, long)","u":"substring(java.lang.String,long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"substring(String, long, int)","u":"substring(java.lang.String,long,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"substring(String, long, long)","u":"substring(java.lang.String,long,long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"substringIndex(String, String, int)","u":"substringIndex(java.lang.String,java.lang.String,int)"},{"p":"org.apache.calcite.adapter.druid","c":"SubstringOperatorConversion","l":"SubstringOperatorConversion()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.test","c":"IntervalTest","l":"subTestIntervalDayNegative()"},{"p":"org.apache.calcite.test","c":"IntervalTest","l":"subTestIntervalDayPositive()"},{"p":"org.apache.calcite.test","c":"IntervalTest","l":"subTestIntervalDayToHourNegative()"},{"p":"org.apache.calcite.test","c":"IntervalTest","l":"subTestIntervalDayToHourPositive()"},{"p":"org.apache.calcite.test","c":"IntervalTest","l":"subTestIntervalDayToMinuteNegative()"},{"p":"org.apache.calcite.test","c":"IntervalTest","l":"subTestIntervalDayToMinutePositive()"},{"p":"org.apache.calcite.test","c":"IntervalTest","l":"subTestIntervalDayToSecondNegative()"},{"p":"org.apache.calcite.test","c":"IntervalTest","l":"subTestIntervalDayToSecondPositive()"},{"p":"org.apache.calcite.test","c":"IntervalTest","l":"subTestIntervalHourNegative()"},{"p":"org.apache.calcite.test","c":"IntervalTest","l":"subTestIntervalHourPositive()"},{"p":"org.apache.calcite.test","c":"IntervalTest","l":"subTestIntervalHourToMinuteNegative()"},{"p":"org.apache.calcite.test","c":"IntervalTest","l":"subTestIntervalHourToMinutePositive()"},{"p":"org.apache.calcite.test","c":"IntervalTest","l":"subTestIntervalHourToSecondNegative()"},{"p":"org.apache.calcite.test","c":"IntervalTest","l":"subTestIntervalHourToSecondPositive()"},{"p":"org.apache.calcite.test","c":"IntervalTest","l":"subTestIntervalMinuteNegative()"},{"p":"org.apache.calcite.test","c":"IntervalTest","l":"subTestIntervalMinutePositive()"},{"p":"org.apache.calcite.test","c":"IntervalTest","l":"subTestIntervalMinuteToSecondNegative()"},{"p":"org.apache.calcite.test","c":"IntervalTest","l":"subTestIntervalMinuteToSecondPositive()"},{"p":"org.apache.calcite.test","c":"IntervalTest","l":"subTestIntervalMonthNegative()"},{"p":"org.apache.calcite.test","c":"IntervalTest","l":"subTestIntervalMonthPositive()"},{"p":"org.apache.calcite.test","c":"IntervalTest","l":"subTestIntervalPlural()"},{"p":"org.apache.calcite.test","c":"IntervalTest","l":"subTestIntervalQuarterPositive()"},{"p":"org.apache.calcite.test","c":"IntervalTest","l":"subTestIntervalSecondNegative()"},{"p":"org.apache.calcite.test","c":"IntervalTest","l":"subTestIntervalSecondPositive()"},{"p":"org.apache.calcite.test","c":"IntervalTest","l":"subTestIntervalWeekPositive()"},{"p":"org.apache.calcite.test","c":"IntervalTest","l":"subTestIntervalYearNegative()"},{"p":"org.apache.calcite.test","c":"IntervalTest","l":"subTestIntervalYearPositive()"},{"p":"org.apache.calcite.test","c":"IntervalTest","l":"subTestIntervalYearToMonthNegative()"},{"p":"org.apache.calcite.test","c":"IntervalTest","l":"subTestIntervalYearToMonthPositive()"},{"p":"org.apache.calcite.test","c":"IntervalTest","l":"subTestMisc()"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"Subtract"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SUBTRACT_MONTHS"},{"p":"org.apache.calcite.util","c":"NumberUtil","l":"subtract(Double, Double)","u":"subtract(java.lang.Double,java.lang.Double)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"subtract(Expression, Expression)","u":"subtract(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"subtract(Expression, Expression, Method)","u":"subtract(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"SubtractAssign"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"subtractAssign(Expression, Expression)","u":"subtractAssign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"subtractAssign(Expression, Expression, Method)","u":"subtractAssign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"subtractAssign(Expression, Expression, Method, LambdaExpression)","u":"subtractAssign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.LambdaExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"SubtractAssignChecked"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"subtractAssignChecked(Expression, Expression)","u":"subtractAssignChecked(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"subtractAssignChecked(Expression, Expression, Method)","u":"subtractAssignChecked(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"subtractAssignChecked(Expression, Expression, Method, LambdaExpression)","u":"subtractAssignChecked(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.LambdaExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"SubtractChecked"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"subtractChecked(Expression, Expression)","u":"subtractChecked(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"subtractChecked(Expression, Expression, Method)","u":"subtractChecked(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.util","c":"Litmus","l":"succeed()"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"SUCCEEDS"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"SUCCEEDS"},{"p":"org.apache.calcite.sql.validate","c":"SqlQualified","l":"suffix()"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"SUM"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"SUM"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"SUM_FORCE_NULLABLE"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"sum(BigDecimalFunction1<T>)","u":"sum(org.apache.calcite.linq4j.function.BigDecimalFunction1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"sum(BigDecimalFunction1<TSource>)","u":"sum(org.apache.calcite.linq4j.function.BigDecimalFunction1)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"sum(boolean, String, RexNode)","u":"sum(boolean,java.lang.String,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"sum(DoubleFunction1<T>)","u":"sum(org.apache.calcite.linq4j.function.DoubleFunction1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"sum(DoubleFunction1<TSource>)","u":"sum(org.apache.calcite.linq4j.function.DoubleFunction1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"sum(Enumerable<TSource>, BigDecimalFunction1<TSource>)","u":"sum(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.BigDecimalFunction1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"sum(Enumerable<TSource>, DoubleFunction1<TSource>)","u":"sum(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.DoubleFunction1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"sum(Enumerable<TSource>, FloatFunction1<TSource>)","u":"sum(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.FloatFunction1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"sum(Enumerable<TSource>, IntegerFunction1<TSource>)","u":"sum(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.IntegerFunction1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"sum(Enumerable<TSource>, LongFunction1<TSource>)","u":"sum(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.LongFunction1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"sum(Enumerable<TSource>, NullableBigDecimalFunction1<TSource>)","u":"sum(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.NullableBigDecimalFunction1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"sum(Enumerable<TSource>, NullableDoubleFunction1<TSource>)","u":"sum(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.NullableDoubleFunction1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"sum(Enumerable<TSource>, NullableFloatFunction1<TSource>)","u":"sum(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.NullableFloatFunction1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"sum(Enumerable<TSource>, NullableIntegerFunction1<TSource>)","u":"sum(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.NullableIntegerFunction1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"sum(Enumerable<TSource>, NullableLongFunction1<TSource>)","u":"sum(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.NullableLongFunction1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"sum(FloatFunction1<T>)","u":"sum(org.apache.calcite.linq4j.function.FloatFunction1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"sum(FloatFunction1<TSource>)","u":"sum(org.apache.calcite.linq4j.function.FloatFunction1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"sum(IntegerFunction1<T>)","u":"sum(org.apache.calcite.linq4j.function.IntegerFunction1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"sum(IntegerFunction1<TSource>)","u":"sum(org.apache.calcite.linq4j.function.IntegerFunction1)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserPos","l":"sum(Iterable<SqlParserPos>)","u":"sum(java.lang.Iterable)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserPos","l":"sum(List<? extends SqlNode>)","u":"sum(java.util.List)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"sum(LongFunction1<T>)","u":"sum(org.apache.calcite.linq4j.function.LongFunction1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"sum(LongFunction1<TSource>)","u":"sum(org.apache.calcite.linq4j.function.LongFunction1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"sum(NullableBigDecimalFunction1<T>)","u":"sum(org.apache.calcite.linq4j.function.NullableBigDecimalFunction1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"sum(NullableBigDecimalFunction1<TSource>)","u":"sum(org.apache.calcite.linq4j.function.NullableBigDecimalFunction1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"sum(NullableDoubleFunction1<T>)","u":"sum(org.apache.calcite.linq4j.function.NullableDoubleFunction1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"sum(NullableDoubleFunction1<TSource>)","u":"sum(org.apache.calcite.linq4j.function.NullableDoubleFunction1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"sum(NullableFloatFunction1<T>)","u":"sum(org.apache.calcite.linq4j.function.NullableFloatFunction1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"sum(NullableFloatFunction1<TSource>)","u":"sum(org.apache.calcite.linq4j.function.NullableFloatFunction1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"sum(NullableIntegerFunction1<T>)","u":"sum(org.apache.calcite.linq4j.function.NullableIntegerFunction1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"sum(NullableIntegerFunction1<TSource>)","u":"sum(org.apache.calcite.linq4j.function.NullableIntegerFunction1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"sum(NullableLongFunction1<T>)","u":"sum(org.apache.calcite.linq4j.function.NullableLongFunction1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"sum(NullableLongFunction1<TSource>)","u":"sum(org.apache.calcite.linq4j.function.NullableLongFunction1)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"sum(RexNode)","u":"sum(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserPos","l":"sum(SqlNode[])","u":"sum(org.apache.calcite.sql.SqlNode[])"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"sum(SqlParserPos, boolean, String, RexNode)","u":"sum(org.apache.calcite.sql.parser.SqlParserPos,boolean,java.lang.String,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"sum(SqlParserPos, RexNode)","u":"sum(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"SUM0"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"SUM0"},{"p":"org.apache.calcite.sql","c":"SqlSplittableAggFunction.Sum0Splitter","l":"Sum0Splitter()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"sumBigDecimal(FunctionExpression<BigDecimalFunction1<T>>)","u":"sumBigDecimal(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"sumBigDecimal(FunctionExpression<BigDecimalFunction1<T>>)","u":"sumBigDecimal(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"sumBigDecimal(FunctionExpression<BigDecimalFunction1<TSource>>)"},{"p":"","c":"","l":"sumBigDecimal(FunctionExpression<BigDecimalFunction1<TSource>>)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"sumBigDecimal(Queryable<T>, FunctionExpression<BigDecimalFunction1<T>>)","u":"sumBigDecimal(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"sumBigDecimal(Queryable<T>, FunctionExpression<BigDecimalFunction1<T>>)","u":"sumBigDecimal(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"sumBigDecimal(Queryable<T>, FunctionExpression<BigDecimalFunction1<T>>)","u":"sumBigDecimal(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"sumDouble(FunctionExpression<DoubleFunction1<T>>)","u":"sumDouble(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"sumDouble(FunctionExpression<DoubleFunction1<T>>)","u":"sumDouble(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"sumDouble(FunctionExpression<DoubleFunction1<TSource>>)"},{"p":"","c":"","l":"sumDouble(FunctionExpression<DoubleFunction1<TSource>>)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"sumDouble(Queryable<T>, FunctionExpression<DoubleFunction1<T>>)","u":"sumDouble(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"sumDouble(Queryable<T>, FunctionExpression<DoubleFunction1<T>>)","u":"sumDouble(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"sumDouble(Queryable<T>, FunctionExpression<DoubleFunction1<T>>)","u":"sumDouble(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"sumFloat(FunctionExpression<FloatFunction1<T>>)","u":"sumFloat(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"sumFloat(FunctionExpression<FloatFunction1<T>>)","u":"sumFloat(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"sumFloat(FunctionExpression<FloatFunction1<TSource>>)"},{"p":"","c":"","l":"sumFloat(FunctionExpression<FloatFunction1<TSource>>)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"sumFloat(Queryable<T>, FunctionExpression<FloatFunction1<T>>)","u":"sumFloat(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"sumFloat(Queryable<T>, FunctionExpression<FloatFunction1<T>>)","u":"sumFloat(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"sumFloat(Queryable<T>, FunctionExpression<FloatFunction1<T>>)","u":"sumFloat(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.util","c":"Smalls.SumFunctionBadIAdd","l":"SumFunctionBadIAdd()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"sumInteger(FunctionExpression<IntegerFunction1<T>>)","u":"sumInteger(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"sumInteger(FunctionExpression<IntegerFunction1<T>>)","u":"sumInteger(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"sumInteger(FunctionExpression<IntegerFunction1<TSource>>)"},{"p":"","c":"","l":"sumInteger(FunctionExpression<IntegerFunction1<TSource>>)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"sumInteger(Queryable<T>, FunctionExpression<IntegerFunction1<T>>)","u":"sumInteger(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"sumInteger(Queryable<T>, FunctionExpression<IntegerFunction1<T>>)","u":"sumInteger(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"sumInteger(Queryable<T>, FunctionExpression<IntegerFunction1<T>>)","u":"sumInteger(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"sumLong(FunctionExpression<LongFunction1<T>>)","u":"sumLong(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"sumLong(FunctionExpression<LongFunction1<T>>)","u":"sumLong(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"sumLong(FunctionExpression<LongFunction1<TSource>>)"},{"p":"","c":"","l":"sumLong(FunctionExpression<LongFunction1<TSource>>)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"sumLong(Queryable<T>, FunctionExpression<LongFunction1<T>>)","u":"sumLong(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"sumLong(Queryable<T>, FunctionExpression<LongFunction1<T>>)","u":"sumLong(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"sumLong(Queryable<T>, FunctionExpression<LongFunction1<T>>)","u":"sumLong(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"sumNullableBigDecimal(FunctionExpression<NullableBigDecimalFunction1<T>>)","u":"sumNullableBigDecimal(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"sumNullableBigDecimal(FunctionExpression<NullableBigDecimalFunction1<T>>)","u":"sumNullableBigDecimal(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"sumNullableBigDecimal(FunctionExpression<NullableBigDecimalFunction1<TSource>>)"},{"p":"","c":"","l":"sumNullableBigDecimal(FunctionExpression<NullableBigDecimalFunction1<TSource>>)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"sumNullableBigDecimal(Queryable<T>, FunctionExpression<NullableBigDecimalFunction1<T>>)","u":"sumNullableBigDecimal(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"sumNullableBigDecimal(Queryable<T>, FunctionExpression<NullableBigDecimalFunction1<T>>)","u":"sumNullableBigDecimal(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"sumNullableBigDecimal(Queryable<T>, FunctionExpression<NullableBigDecimalFunction1<T>>)","u":"sumNullableBigDecimal(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"sumNullableDouble(FunctionExpression<NullableDoubleFunction1<T>>)","u":"sumNullableDouble(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"sumNullableDouble(FunctionExpression<NullableDoubleFunction1<T>>)","u":"sumNullableDouble(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"sumNullableDouble(FunctionExpression<NullableDoubleFunction1<TSource>>)"},{"p":"","c":"","l":"sumNullableDouble(FunctionExpression<NullableDoubleFunction1<TSource>>)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"sumNullableDouble(Queryable<T>, FunctionExpression<NullableDoubleFunction1<T>>)","u":"sumNullableDouble(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"sumNullableDouble(Queryable<T>, FunctionExpression<NullableDoubleFunction1<T>>)","u":"sumNullableDouble(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"sumNullableDouble(Queryable<T>, FunctionExpression<NullableDoubleFunction1<T>>)","u":"sumNullableDouble(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"sumNullableFloat(FunctionExpression<NullableFloatFunction1<T>>)","u":"sumNullableFloat(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"sumNullableFloat(FunctionExpression<NullableFloatFunction1<T>>)","u":"sumNullableFloat(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"sumNullableFloat(FunctionExpression<NullableFloatFunction1<TSource>>)"},{"p":"","c":"","l":"sumNullableFloat(FunctionExpression<NullableFloatFunction1<TSource>>)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"sumNullableFloat(Queryable<T>, FunctionExpression<NullableFloatFunction1<T>>)","u":"sumNullableFloat(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"sumNullableFloat(Queryable<T>, FunctionExpression<NullableFloatFunction1<T>>)","u":"sumNullableFloat(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"sumNullableFloat(Queryable<T>, FunctionExpression<NullableFloatFunction1<T>>)","u":"sumNullableFloat(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"sumNullableInteger(FunctionExpression<NullableIntegerFunction1<T>>)","u":"sumNullableInteger(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"sumNullableInteger(FunctionExpression<NullableIntegerFunction1<T>>)","u":"sumNullableInteger(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"sumNullableInteger(FunctionExpression<NullableIntegerFunction1<TSource>>)"},{"p":"","c":"","l":"sumNullableInteger(FunctionExpression<NullableIntegerFunction1<TSource>>)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"sumNullableInteger(Queryable<T>, FunctionExpression<NullableIntegerFunction1<T>>)","u":"sumNullableInteger(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"sumNullableInteger(Queryable<T>, FunctionExpression<NullableIntegerFunction1<T>>)","u":"sumNullableInteger(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"sumNullableInteger(Queryable<T>, FunctionExpression<NullableIntegerFunction1<T>>)","u":"sumNullableInteger(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"sumNullableLong(FunctionExpression<NullableLongFunction1<T>>)","u":"sumNullableLong(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"sumNullableLong(FunctionExpression<NullableLongFunction1<T>>)","u":"sumNullableLong(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"sumNullableLong(FunctionExpression<NullableLongFunction1<TSource>>)"},{"p":"","c":"","l":"sumNullableLong(FunctionExpression<NullableLongFunction1<TSource>>)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"sumNullableLong(Queryable<T>, FunctionExpression<NullableLongFunction1<T>>)","u":"sumNullableLong(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"sumNullableLong(Queryable<T>, FunctionExpression<NullableLongFunction1<T>>)","u":"sumNullableLong(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"sumNullableLong(Queryable<T>, FunctionExpression<NullableLongFunction1<T>>)","u":"sumNullableLong(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.sql","c":"SqlSplittableAggFunction.SumSplitter","l":"SumSplitter()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.dialect","c":"OracleSqlDialect","l":"supportBooleanCaseWhen()"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"supportBooleanCaseWhen()"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewAggregateRule","l":"SUPPORTED_DATE_TIME_ROLLUP_UNITS"},{"p":"org.apache.calcite.rex","c":"RexInterpreter","l":"SUPPORTED_SQL_KIND"},{"p":"org.apache.calcite.sql.dialect","c":"ExasolSqlDialect","l":"supportsAggregateFunction(SqlKind)","u":"supportsAggregateFunction(org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.sql.dialect","c":"FireboltSqlDialect","l":"supportsAggregateFunction(SqlKind)","u":"supportsAggregateFunction(org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.sql.dialect","c":"JethroDataSqlDialect","l":"supportsAggregateFunction(SqlKind)","u":"supportsAggregateFunction(org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.sql.dialect","c":"MysqlSqlDialect","l":"supportsAggregateFunction(SqlKind)","u":"supportsAggregateFunction(org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.sql.dialect","c":"PrestoSqlDialect","l":"supportsAggregateFunction(SqlKind)","u":"supportsAggregateFunction(org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.sql.dialect","c":"SparkSqlDialect","l":"supportsAggregateFunction(SqlKind)","u":"supportsAggregateFunction(org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"supportsAggregateFunction(SqlKind)","u":"supportsAggregateFunction(org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.sql.dialect","c":"BigQuerySqlDialect","l":"supportsAggregateFunctionFilter()"},{"p":"org.apache.calcite.sql.dialect","c":"ExasolSqlDialect","l":"supportsAggregateFunctionFilter()"},{"p":"org.apache.calcite.sql.dialect","c":"FireboltSqlDialect","l":"supportsAggregateFunctionFilter()"},{"p":"org.apache.calcite.sql.dialect","c":"HsqldbSqlDialect","l":"supportsAggregateFunctionFilter()"},{"p":"org.apache.calcite.sql.dialect","c":"MysqlSqlDialect","l":"supportsAggregateFunctionFilter()"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"supportsAggregateFunctionFilter()"},{"p":"org.apache.calcite.sql.dialect","c":"BigQuerySqlDialect","l":"supportsAliasedValues()"},{"p":"org.apache.calcite.sql.dialect","c":"ClickHouseSqlDialect","l":"supportsAliasedValues()"},{"p":"org.apache.calcite.sql.dialect","c":"HiveSqlDialect","l":"supportsAliasedValues()"},{"p":"org.apache.calcite.sql.dialect","c":"InformixSqlDialect","l":"supportsAliasedValues()"},{"p":"org.apache.calcite.sql.dialect","c":"MysqlSqlDialect","l":"supportsAliasedValues()"},{"p":"org.apache.calcite.sql.dialect","c":"OracleSqlDialect","l":"supportsAliasedValues()"},{"p":"org.apache.calcite.sql.dialect","c":"RedshiftSqlDialect","l":"supportsAliasedValues()"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"supportsAliasedValues()"},{"p":"org.apache.calcite.sql.dialect","c":"BigQuerySqlDialect","l":"supportsApproxCountDistinct()"},{"p":"org.apache.calcite.sql.dialect","c":"ClickHouseSqlDialect","l":"supportsApproxCountDistinct()"},{"p":"org.apache.calcite.sql.dialect","c":"HiveSqlDialect","l":"supportsApproxCountDistinct()"},{"p":"org.apache.calcite.sql.dialect","c":"MssqlSqlDialect","l":"supportsApproxCountDistinct()"},{"p":"org.apache.calcite.sql.dialect","c":"OracleSqlDialect","l":"supportsApproxCountDistinct()"},{"p":"org.apache.calcite.sql.dialect","c":"PhoenixSqlDialect","l":"supportsApproxCountDistinct()"},{"p":"org.apache.calcite.sql.dialect","c":"PrestoSqlDialect","l":"supportsApproxCountDistinct()"},{"p":"org.apache.calcite.sql.dialect","c":"SnowflakeSqlDialect","l":"supportsApproxCountDistinct()"},{"p":"org.apache.calcite.sql.dialect","c":"SparkSqlDialect","l":"supportsApproxCountDistinct()"},{"p":"org.apache.calcite.sql.dialect","c":"StarRocksSqlDialect","l":"supportsApproxCountDistinct()"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"supportsApproxCountDistinct()"},{"p":"org.apache.calcite.sql.dialect","c":"ClickHouseSqlDialect","l":"supportsCharSet()"},{"p":"org.apache.calcite.sql.dialect","c":"Db2SqlDialect","l":"supportsCharSet()"},{"p":"org.apache.calcite.sql.dialect","c":"ExasolSqlDialect","l":"supportsCharSet()"},{"p":"org.apache.calcite.sql.dialect","c":"FireboltSqlDialect","l":"supportsCharSet()"},{"p":"org.apache.calcite.sql.dialect","c":"H2SqlDialect","l":"supportsCharSet()"},{"p":"org.apache.calcite.sql.dialect","c":"HiveSqlDialect","l":"supportsCharSet()"},{"p":"org.apache.calcite.sql.dialect","c":"HsqldbSqlDialect","l":"supportsCharSet()"},{"p":"org.apache.calcite.sql.dialect","c":"JethroDataSqlDialect","l":"supportsCharSet()"},{"p":"org.apache.calcite.sql.dialect","c":"MssqlSqlDialect","l":"supportsCharSet()"},{"p":"org.apache.calcite.sql.dialect","c":"MysqlSqlDialect","l":"supportsCharSet()"},{"p":"org.apache.calcite.sql.dialect","c":"OracleSqlDialect","l":"supportsCharSet()"},{"p":"org.apache.calcite.sql.dialect","c":"PhoenixSqlDialect","l":"supportsCharSet()"},{"p":"org.apache.calcite.sql.dialect","c":"PostgresqlSqlDialect","l":"supportsCharSet()"},{"p":"org.apache.calcite.sql.dialect","c":"PrestoSqlDialect","l":"supportsCharSet()"},{"p":"org.apache.calcite.sql.dialect","c":"RedshiftSqlDialect","l":"supportsCharSet()"},{"p":"org.apache.calcite.sql.dialect","c":"SparkSqlDialect","l":"supportsCharSet()"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"supportsCharSet()"},{"p":"org.apache.calcite.rel.rules","c":"CalcRelSplitter.RelType","l":"supportsCondition()"},{"p":"org.apache.calcite.sql.dialect","c":"OracleSqlDialect","l":"supportsDataType(RelDataType)","u":"supportsDataType(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"supportsDataType(RelDataType)","u":"supportsDataType(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.dialect","c":"FireboltSqlDialect","l":"supportsFunction(SqlOperator, RelDataType, List<RelDataType>)","u":"supportsFunction(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rel.type.RelDataType,java.util.List)"},{"p":"org.apache.calcite.sql.dialect","c":"JethroDataSqlDialect","l":"supportsFunction(SqlOperator, RelDataType, List<RelDataType>)","u":"supportsFunction(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rel.type.RelDataType,java.util.List)"},{"p":"org.apache.calcite.sql.dialect","c":"PostgresqlSqlDialect","l":"supportsFunction(SqlOperator, RelDataType, List<RelDataType>)","u":"supportsFunction(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rel.type.RelDataType,java.util.List)"},{"p":"org.apache.calcite.sql.dialect","c":"VerticaSqlDialect","l":"supportsFunction(SqlOperator, RelDataType, List<RelDataType>)","u":"supportsFunction(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rel.type.RelDataType,java.util.List)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"supportsFunction(SqlOperator, RelDataType, List<RelDataType>)","u":"supportsFunction(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rel.type.RelDataType,java.util.List)"},{"p":"org.apache.calcite.sql.dialect","c":"InformixSqlDialect","l":"supportsGroupByLiteral()"},{"p":"org.apache.calcite.sql.dialect","c":"PostgresqlSqlDialect","l":"supportsGroupByLiteral()"},{"p":"org.apache.calcite.sql.dialect","c":"RedshiftSqlDialect","l":"supportsGroupByLiteral()"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"supportsGroupByLiteral()"},{"p":"org.apache.calcite.sql.dialect","c":"HiveSqlDialect","l":"supportsGroupByWithCube()"},{"p":"org.apache.calcite.sql.dialect","c":"MssqlSqlDialect","l":"supportsGroupByWithCube()"},{"p":"org.apache.calcite.sql.dialect","c":"PrestoSqlDialect","l":"supportsGroupByWithCube()"},{"p":"org.apache.calcite.sql.dialect","c":"SparkSqlDialect","l":"supportsGroupByWithCube()"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"supportsGroupByWithCube()"},{"p":"org.apache.calcite.sql.dialect","c":"HiveSqlDialect","l":"supportsGroupByWithRollup()"},{"p":"org.apache.calcite.sql.dialect","c":"MssqlSqlDialect","l":"supportsGroupByWithRollup()"},{"p":"org.apache.calcite.sql.dialect","c":"MysqlSqlDialect","l":"supportsGroupByWithRollup()"},{"p":"org.apache.calcite.sql.dialect","c":"PrestoSqlDialect","l":"supportsGroupByWithRollup()"},{"p":"org.apache.calcite.sql.dialect","c":"SparkSqlDialect","l":"supportsGroupByWithRollup()"},{"p":"org.apache.calcite.sql.dialect","c":"StarRocksSqlDialect","l":"supportsGroupByWithRollup()"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"supportsGroupByWithRollup()"},{"p":"org.apache.calcite.sql.dialect","c":"BigQuerySqlDialect","l":"supportsImplicitTypeCoercion(RexCall)","u":"supportsImplicitTypeCoercion(org.apache.calcite.rex.RexCall)"},{"p":"org.apache.calcite.sql.dialect","c":"PostgresqlSqlDialect","l":"supportsImplicitTypeCoercion(RexCall)","u":"supportsImplicitTypeCoercion(org.apache.calcite.rex.RexCall)"},{"p":"org.apache.calcite.sql.dialect","c":"PrestoSqlDialect","l":"supportsImplicitTypeCoercion(RexCall)","u":"supportsImplicitTypeCoercion(org.apache.calcite.rex.RexCall)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"supportsImplicitTypeCoercion(RexCall)","u":"supportsImplicitTypeCoercion(org.apache.calcite.rex.RexCall)"},{"p":"org.apache.calcite.sql.dialect","c":"H2SqlDialect","l":"supportsJoinType(JoinRelType)","u":"supportsJoinType(org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.sql.dialect","c":"MysqlSqlDialect","l":"supportsJoinType(JoinRelType)","u":"supportsJoinType(org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"supportsJoinType(JoinRelType)","u":"supportsJoinType(org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.prepare","c":"RelOptTableImpl","l":"supportsModality(SqlModality)","u":"supportsModality(org.apache.calcite.sql.validate.SqlModality)"},{"p":"org.apache.calcite.sql.validate","c":"MatchRecognizeNamespace","l":"supportsModality(SqlModality)","u":"supportsModality(org.apache.calcite.sql.validate.SqlModality)"},{"p":"org.apache.calcite.sql.validate","c":"AliasNamespace","l":"supportsModality(SqlModality)","u":"supportsModality(org.apache.calcite.sql.validate.SqlModality)"},{"p":"org.apache.calcite.sql.validate","c":"IdentifierNamespace","l":"supportsModality(SqlModality)","u":"supportsModality(org.apache.calcite.sql.validate.SqlModality)"},{"p":"org.apache.calcite.sql.validate","c":"SelectNamespace","l":"supportsModality(SqlModality)","u":"supportsModality(org.apache.calcite.sql.validate.SqlModality)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorNamespace","l":"supportsModality(SqlModality)","u":"supportsModality(org.apache.calcite.sql.validate.SqlModality)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorTable","l":"supportsModality(SqlModality)","u":"supportsModality(org.apache.calcite.sql.validate.SqlModality)"},{"p":"org.apache.calcite.sql.validate","c":"TableConstructorNamespace","l":"supportsModality(SqlModality)","u":"supportsModality(org.apache.calcite.sql.validate.SqlModality)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"supportsModality(SqlModality)","u":"supportsModality(org.apache.calcite.sql.validate.SqlModality)"},{"p":"org.apache.calcite.sql.dialect","c":"BigQuerySqlDialect","l":"supportsNestedAggregations()"},{"p":"org.apache.calcite.sql.dialect","c":"ClickHouseSqlDialect","l":"supportsNestedAggregations()"},{"p":"org.apache.calcite.sql.dialect","c":"ExasolSqlDialect","l":"supportsNestedAggregations()"},{"p":"org.apache.calcite.sql.dialect","c":"HiveSqlDialect","l":"supportsNestedAggregations()"},{"p":"org.apache.calcite.sql.dialect","c":"JethroDataSqlDialect","l":"supportsNestedAggregations()"},{"p":"org.apache.calcite.sql.dialect","c":"MysqlSqlDialect","l":"supportsNestedAggregations()"},{"p":"org.apache.calcite.sql.dialect","c":"PostgresqlSqlDialect","l":"supportsNestedAggregations()"},{"p":"org.apache.calcite.sql.dialect","c":"PrestoSqlDialect","l":"supportsNestedAggregations()"},{"p":"org.apache.calcite.sql.dialect","c":"SparkSqlDialect","l":"supportsNestedAggregations()"},{"p":"org.apache.calcite.sql.dialect","c":"VerticaSqlDialect","l":"supportsNestedAggregations()"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"supportsNestedAggregations()"},{"p":"org.apache.calcite.sql.dialect","c":"JethroDataSqlDialect","l":"supportsOffsetFetch()"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"supportsOffsetFetch()"},{"p":"org.apache.calcite.util.javac","c":"JaninoCompiler.JaninoCompilerArgs","l":"supportsSetSource()"},{"p":"org.apache.calcite.util.javac","c":"JavaCompilerArgs","l":"supportsSetSource()"},{"p":"org.apache.calcite.sql.dialect","c":"ExasolSqlDialect","l":"supportsTimestampPrecision()"},{"p":"org.apache.calcite.sql.dialect","c":"HiveSqlDialect","l":"supportsTimestampPrecision()"},{"p":"org.apache.calcite.sql.dialect","c":"PrestoSqlDialect","l":"supportsTimestampPrecision()"},{"p":"org.apache.calcite.sql.dialect","c":"SparkSqlDialect","l":"supportsTimestampPrecision()"},{"p":"org.apache.calcite.sql.dialect","c":"StarRocksSqlDialect","l":"supportsTimestampPrecision()"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"supportsTimestampPrecision()"},{"p":"org.apache.calcite.sql.dialect","c":"AccessSqlDialect","l":"supportsWindowFunctions()"},{"p":"org.apache.calcite.sql.dialect","c":"ClickHouseSqlDialect","l":"supportsWindowFunctions()"},{"p":"org.apache.calcite.sql.dialect","c":"H2SqlDialect","l":"supportsWindowFunctions()"},{"p":"org.apache.calcite.sql.dialect","c":"HsqldbSqlDialect","l":"supportsWindowFunctions()"},{"p":"org.apache.calcite.sql.dialect","c":"InfobrightSqlDialect","l":"supportsWindowFunctions()"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"supportsWindowFunctions()"},{"p":"org.apache.calcite.util.mapping","c":"MappingType","l":"SURJECTION"},{"p":"org.apache.calcite.profile","c":"SimpleProfiler","l":"surprise(double, double)","u":"surprise(double,double)"},{"p":"org.apache.calcite.util","c":"Util","l":"swallow(Throwable, Logger)","u":"swallow(java.lang.Throwable,org.slf4j.Logger)"},{"p":"org.apache.calcite.util.mapping","c":"IntPair","l":"SWAP"},{"p":"org.apache.calcite.rel.core","c":"JoinRelType","l":"swap()"},{"p":"org.apache.calcite.rel.rules","c":"JoinCommuteRule","l":"swap(Join)","u":"swap(org.apache.calcite.rel.core.Join)"},{"p":"org.apache.calcite.rel.rules","c":"JoinCommuteRule","l":"swap(Join, boolean)","u":"swap(org.apache.calcite.rel.core.Join,boolean)"},{"p":"org.apache.calcite.rel.rules","c":"JoinCommuteRule","l":"swap(Join, boolean, RelBuilder)","u":"swap(org.apache.calcite.rel.core.Join,boolean,org.apache.calcite.tools.RelBuilder)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"swapColumnReferences(RexBuilder, RexNode, Map<RexTableInputRef, Set<RexTableInputRef>>)","u":"swapColumnReferences(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,java.util.Map)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"swapColumnTableReferences(RexBuilder, RexNode, Map<RexTableInputRef, ? extends Set<RexTableInputRef>>, Map<RexTableInputRef.RelTableRef, RexTableInputRef.RelTableRef>)","u":"swapColumnTableReferences(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,java.util.Map,java.util.Map)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"swapTableColumnReferences(RexBuilder, RexNode, Map<RexTableInputRef.RelTableRef, RexTableInputRef.RelTableRef>, Map<RexTableInputRef, Set<RexTableInputRef>>)","u":"swapTableColumnReferences(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,java.util.Map,java.util.Map)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"swapTableReferences(RexBuilder, RexNode, Map<RexTableInputRef.RelTableRef, RexTableInputRef.RelTableRef>)","u":"swapTableReferences(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,java.util.Map)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"Switch"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"switch_(Expression, Expression, Method, Iterable<? extends SwitchCase>)","u":"switch_(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,java.lang.Iterable)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"switch_(Expression, Expression, Method, SwitchCase...)","u":"switch_(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.SwitchCase...)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"switch_(Expression, Expression, SwitchCase...)","u":"switch_(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.SwitchCase...)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"switch_(Expression, SwitchCase...)","u":"switch_(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.SwitchCase...)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"switch_(Type, Expression, Expression, Method, Iterable<? extends SwitchCase>)","u":"switch_(java.lang.reflect.Type,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,java.lang.Iterable)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"switch_(Type, Expression, Expression, Method, SwitchCase...)","u":"switch_(java.lang.reflect.Type,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.SwitchCase...)"},{"p":"org.apache.calcite.linq4j.tree","c":"SwitchCase","l":"SwitchCase()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"switchCase(Expression, Expression...)","u":"switchCase(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression...)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"switchCase(Expression, Iterable<? extends Expression>)","u":"switchCase(org.apache.calcite.linq4j.tree.Expression,java.lang.Iterable)"},{"p":"org.apache.calcite.linq4j.tree","c":"SwitchStatement","l":"SwitchStatement(ExpressionType)","u":"%3Cinit%3E(org.apache.calcite.linq4j.tree.ExpressionType)"},{"p":"org.apache.calcite.sql","c":"SqlDialect.DatabaseProduct","l":"SYBASE"},{"p":"org.apache.calcite.sql.dialect","c":"SybaseSqlDialect","l":"SybaseSqlDialect(SqlDialect.Context)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect.Context)"},{"p":"org.apache.calcite.runtime","c":"Pattern.Op","l":"SYMBOL"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"SYMBOL"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize.RowsPerMatchOption","l":"symbol(SqlParserPos)","u":"symbol(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"Symbolizable","l":"symbol(SqlParserPos)","u":"symbol(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.runtime","c":"Pattern.PatternBuilder","l":"symbol(String)","u":"symbol(java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"symbolDocument(String)","u":"symbolDocument(java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"symbolDocument(String, UUID)","u":"symbolDocument(java.lang.String,java.util.UUID)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"symbolDocument(String, UUID, UUID)","u":"symbolDocument(java.lang.String,java.util.UUID,java.util.UUID)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"symbolDocument(String, UUID, UUID, UUID)","u":"symbolDocument(java.lang.String,java.util.UUID,java.util.UUID,java.util.UUID)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"symbolValue_()"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"symbolValue(Class<E>)","u":"symbolValue(java.lang.Class)"},{"p":"org.apache.calcite.sql.fun","c":"SqlBetweenOperator.Flag","l":"SYMMETRIC"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"SYMMETRIC_BETWEEN"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"SYMMETRIC_NOT_BETWEEN"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"SYMMETRICAL"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"SYMMETRICAL_SAME_ARG_TYPE"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaImpl","l":"syncResults(Meta.StatementHandle, QueryState, long)","u":"syncResults(org.apache.calcite.avatica.Meta.StatementHandle,org.apache.calcite.avatica.QueryState,long)"},{"p":"org.apache.calcite.schema","c":"Schema.TableType","l":"SYNONYM"},{"p":"org.apache.calcite.sql.validate","c":"SqlUserDefinedFunction","l":"syntax"},{"p":"org.apache.calcite","c":"DataContext.Variable","l":"SYS_TIMESTAMP"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SYSDATE"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"SYSDATE"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"sysDate(DataContext)","u":"sysDate(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.sql","c":"SqlFunctionCategory","l":"SYSTEM"},{"p":"org.apache.calcite.schema","c":"Schema.TableType","l":"SYSTEM_INDEX"},{"p":"org.apache.calcite.adapter.os","c":"OsQueryType","l":"SYSTEM_INFO"},{"p":"org.apache.calcite.schema","c":"Schema.TableType","l":"SYSTEM_TABLE"},{"p":"org.apache.calcite.schema","c":"Schema.TableType","l":"SYSTEM_TOAST_INDEX"},{"p":"org.apache.calcite.schema","c":"Schema.TableType","l":"SYSTEM_TOAST_TABLE"},{"p":"org.apache.calcite","c":"DataContext.Variable","l":"SYSTEM_USER"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SYSTEM_USER"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"SYSTEM_USER"},{"p":"org.apache.calcite.schema","c":"Schema.TableType","l":"SYSTEM_VIEW"},{"p":"org.apache.calcite.util","c":"Unsafe","l":"systemExit(int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"systemUser(DataContext)","u":"systemUser(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"SYSTIMESTAMP"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"SYSTIMESTAMP"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"sysTimestamp(DataContext)","u":"sysTimestamp(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.materialize","c":"LatticeTable","l":"t"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"t"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.AnalyzeViewResult","l":"table"},{"p":"org.apache.calcite.materialize","c":"Lattice.BaseColumn","l":"table"},{"p":"org.apache.calcite.materialize","c":"LatticeNode","l":"table"},{"p":"org.apache.calcite.model","c":"JsonMaterialization","l":"table"},{"p":"org.apache.calcite.rel.core","c":"TableModify","l":"table"},{"p":"org.apache.calcite.rel.core","c":"TableScan","l":"table"},{"p":"org.apache.calcite.rel.core","c":"TableSpool","l":"table"},{"p":"org.apache.calcite.rel.mutable","c":"MutableTableModify","l":"table"},{"p":"org.apache.calcite.schema.impl","c":"AbstractTableQueryable","l":"table"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingSqlValidatorTable","l":"table"},{"p":"org.apache.calcite.schema","c":"Schema.TableType","l":"TABLE"},{"p":"org.apache.calcite.sql.validate","c":"SqlMonikerType","l":"TABLE"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaImpl","l":"TABLE_COLUMNS"},{"p":"org.apache.calcite.rel.hint","c":"HintPredicates","l":"TABLE_FUNCTION_SCAN"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"TABLE_INPUT_REF"},{"p":"org.apache.calcite.adapter.splunk","c":"SplunkSchema","l":"TABLE_MAP"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"TABLE_REF"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TABLE_REFERENCES"},{"p":"org.apache.calcite.rel.hint","c":"HintPredicates","l":"TABLE_SCAN"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules","l":"TABLE_SCAN_FACTORY"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaImpl","l":"TABLE_TYPE_COLUMNS"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorTable","l":"table()"},{"p":"org.apache.calcite.schema","c":"Schemas","l":"table(DataContext, String...)","u":"table(org.apache.calcite.DataContext,java.lang.String...)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdCollation","l":"table(RelOptTable)","u":"table(org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdDistribution","l":"table(RelOptTable)","u":"table(org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.plan","c":"TableAccessMap","l":"TableAccessMap()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.plan","c":"TableAccessMap","l":"TableAccessMap(List<String>, TableAccessMap.Mode)","u":"%3Cinit%3E(java.util.List,org.apache.calcite.plan.TableAccessMap.Mode)"},{"p":"org.apache.calcite.plan","c":"TableAccessMap","l":"TableAccessMap(RelNode)","u":"%3Cinit%3E(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.materialize","c":"SqlStatisticProvider","l":"tableCardinality(RelOptTable)","u":"tableCardinality(org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.statistic","c":"CachingSqlStatisticProvider","l":"tableCardinality(RelOptTable)","u":"tableCardinality(org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.statistic","c":"MapSqlStatisticProvider","l":"tableCardinality(RelOptTable)","u":"tableCardinality(org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.statistic","c":"QuerySqlStatisticProvider","l":"tableCardinality(RelOptTable)","u":"tableCardinality(org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.sql","c":"SqlTableFunction","l":"tableCharacteristic(int)"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.InvalidTableFunction","l":"tableCharacteristic(int)"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.ScoreTableFunction","l":"tableCharacteristic(int)"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.SimilarlityTableFunction","l":"tableCharacteristic(int)"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.TopNTableFunction","l":"tableCharacteristic(int)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema.TableEntry","l":"TableEntry(CalciteSchema, String, ImmutableList<String>)","u":"%3Cinit%3E(org.apache.calcite.jdbc.CalciteSchema,java.lang.String,com.google.common.collect.ImmutableList)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"tableEntry(String, Table)","u":"tableEntry(java.lang.String,org.apache.calcite.schema.Table)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema.TableEntryImpl","l":"TableEntryImpl(CalciteSchema, String, Table, ImmutableList<String>)","u":"%3Cinit%3E(org.apache.calcite.jdbc.CalciteSchema,java.lang.String,org.apache.calcite.schema.Table,com.google.common.collect.ImmutableList)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"tableExists(String)","u":"tableExists(java.lang.String)"},{"p":"org.apache.calcite.schema","c":"Schemas","l":"tableExpression(SchemaPlus, Type, String, Class)","u":"tableExpression(org.apache.calcite.schema.SchemaPlus,java.lang.reflect.Type,java.lang.String,java.lang.Class)"},{"p":"org.apache.calcite.sql.type","c":"TableFunctionReturnTypeInference","l":"TableFunctionReturnTypeInference(RelProtoDataType, List<String>, boolean)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelProtoDataType,java.util.List,boolean)"},{"p":"org.apache.calcite.rel.core","c":"TableFunctionScan","l":"TableFunctionScan(RelInput)","u":"%3Cinit%3E(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel.core","c":"TableFunctionScan","l":"TableFunctionScan(RelOptCluster, RelTraitSet, List<RelHint>, List<RelNode>, RexNode, Type, RelDataType, Set<RelColumnMapping>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.lang.reflect.Type,org.apache.calcite.rel.type.RelDataType,java.util.Set)"},{"p":"org.apache.calcite.rel.core","c":"TableFunctionScan","l":"TableFunctionScan(RelOptCluster, RelTraitSet, List<RelNode>, RexNode, Type, RelDataType, Set<RelColumnMapping>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,org.apache.calcite.rex.RexNode,java.lang.reflect.Type,org.apache.calcite.rel.type.RelDataType,java.util.Set)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor","l":"tableFunctionScanContext(List<SqlNode>)","u":"tableFunctionScanContext(java.util.List)"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.Struct","l":"tableFunctionScanFactory"},{"p":"org.apache.calcite.sql.util","c":"ChainedSqlOperatorTable","l":"tableList"},{"p":"org.apache.calcite.util","c":"Smalls.TableMacroFunction","l":"TableMacroFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util","c":"Smalls.TableMacroFunctionWithNamedParameters","l":"TableMacroFunctionWithNamedParameters()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.pig","c":"PigSchema","l":"tableMap"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"tableMap"},{"p":"org.apache.calcite.rel.core","c":"TableModify","l":"TableModify(RelInput)","u":"%3Cinit%3E(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel.core","c":"TableModify","l":"TableModify(RelOptCluster, RelTraitSet, RelOptTable, Prepare.CatalogReader, RelNode, TableModify.Operation, List<String>, List<RexNode>, boolean)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.plan.RelOptTable,org.apache.calcite.prepare.Prepare.CatalogReader,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.TableModify.Operation,java.util.List,java.util.List,boolean)"},{"p":"org.apache.calcite.prepare","c":"Prepare.PreparedResultImpl","l":"tableModOp"},{"p":"org.apache.calcite.schema.impl","c":"AbstractTableQueryable","l":"tableName"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcTable","l":"tableName()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"tableNameNotFound(String)","u":"tableNameNotFound(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"tableNameNotFoundDidYouMean(String, String)","u":"tableNameNotFoundDidYouMean(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"tableNotFound(String)","u":"tableNotFound(java.lang.String)"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.AnalyzeViewResult","l":"tablePath"},{"p":"org.apache.calcite.plan","c":"RelOptMaterialization","l":"tableRel"},{"p":"org.apache.calcite.model","c":"JsonMapSchema","l":"tables"},{"p":"org.apache.calcite.schema.impl","c":"StarTable","l":"tables"},{"p":"org.apache.calcite.model","c":"ModelHandler.ExtraOperand","l":"TABLES"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcBaseSchema","l":"tables()"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcCatalogSchema","l":"tables()"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcSchema","l":"tables()"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"tables()"},{"p":"org.apache.calcite.materialize","c":"Lattice","l":"tables()"},{"p":"org.apache.calcite.schema.impl","c":"AbstractSchema","l":"tables()"},{"p":"org.apache.calcite.schema.impl","c":"DelegatingSchema","l":"tables()"},{"p":"org.apache.calcite.schema","c":"Schema","l":"tables()"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"TABLESAMPLE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"TABLESAMPLE"},{"p":"org.apache.calcite.rel.core","c":"TableScan","l":"TableScan(RelInput)","u":"%3Cinit%3E(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel.core","c":"TableScan","l":"TableScan(RelOptCluster, RelTraitSet, List<RelHint>, RelOptTable)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.rel.core","c":"TableScan","l":"TableScan(RelOptCluster, RelTraitSet, RelOptTable)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.rel.rules","c":"TableScanRule","l":"TableScanRule(RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"TableScanRule","l":"TableScanRule(RelRule.Config)","u":"%3Cinit%3E(org.apache.calcite.plan.RelRule.Config)"},{"p":"org.apache.calcite.rel.core","c":"TableSpool","l":"TableSpool(RelOptCluster, RelTraitSet, RelNode, Spool.Type, Spool.Type, RelOptTable)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Spool.Type,org.apache.calcite.rel.core.Spool.Type,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.sql","c":"SqlUnknownLiteral","l":"tag"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TAKE"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"take(Enumerable<TSource>, int)","u":"take(org.apache.calcite.linq4j.Enumerable,int)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"take(Enumerable<TSource>, long)","u":"take(org.apache.calcite.linq4j.Enumerable,long)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"take(int)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"take(int)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"take(int)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"take(int)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"take(Queryable<T>, int)","u":"take(org.apache.calcite.linq4j.Queryable,int)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"take(Queryable<T>, int)","u":"take(org.apache.calcite.linq4j.Queryable,int)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"take(Queryable<T>, int)","u":"take(org.apache.calcite.linq4j.Queryable,int)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"takeWhile(Enumerable<TSource>, Predicate1<TSource>)","u":"takeWhile(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"takeWhile(Enumerable<TSource>, Predicate2<TSource, Integer>)","u":"takeWhile(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Predicate2)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"takeWhile(FunctionExpression<Predicate1<T>>)","u":"takeWhile(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"takeWhile(FunctionExpression<Predicate1<T>>)","u":"takeWhile(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"takeWhile(FunctionExpression<Predicate1<TSource>>)"},{"p":"","c":"","l":"takeWhile(FunctionExpression<Predicate1<TSource>>)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"takeWhile(Predicate1<T>)","u":"takeWhile(org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"takeWhile(Predicate1<TSource>)","u":"takeWhile(org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"takeWhile(Predicate2<T, Integer>)","u":"takeWhile(org.apache.calcite.linq4j.function.Predicate2)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"takeWhile(Predicate2<TSource, Integer>)","u":"takeWhile(org.apache.calcite.linq4j.function.Predicate2)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"takeWhile(Queryable<T>, FunctionExpression<Predicate1<T>>)","u":"takeWhile(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"takeWhile(Queryable<T>, FunctionExpression<Predicate1<T>>)","u":"takeWhile(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"takeWhile(Queryable<T>, FunctionExpression<Predicate1<T>>)","u":"takeWhile(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"takeWhileLong(Enumerable<TSource>, Predicate2<TSource, Long>)","u":"takeWhileLong(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Predicate2)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"takeWhileN(FunctionExpression<Predicate2<T, Integer>>)","u":"takeWhileN(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"takeWhileN(FunctionExpression<Predicate2<T, Integer>>)","u":"takeWhileN(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"takeWhileN(FunctionExpression<Predicate2<TSource, Integer>>)"},{"p":"","c":"","l":"takeWhileN(FunctionExpression<Predicate2<TSource, Integer>>)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"takeWhileN(Queryable<T>, FunctionExpression<Predicate2<T, Integer>>)","u":"takeWhileN(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"takeWhileN(Queryable<T>, FunctionExpression<Predicate2<T, Integer>>)","u":"takeWhileN(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"takeWhileN(Queryable<T>, FunctionExpression<Predicate2<T, Integer>>)","u":"takeWhileN(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig.LineFolding","l":"TALL"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TAN"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"TAN"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"tan(BigDecimal)","u":"tan(java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"tan(double)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TAND"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"TAND"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"tand(BigDecimal)","u":"tand(java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"tand(double)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TANH"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"TANH"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"tanh(BigDecimal)","u":"tanh(java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"tanh(double)"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor.UnifyRuleCall","l":"target"},{"p":"org.apache.calcite.util.graph","c":"DefaultEdge","l":"target"},{"p":"org.apache.calcite.util.mapping","c":"IntPair","l":"target"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor.AbstractUnifyRule","l":"target(int)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings","l":"target(IntFunction<? extends Integer>, int, int)","u":"target(java.util.function.IntFunction,int,int)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings","l":"target(Iterable<IntPair>, int, int)","u":"target(java.lang.Iterable,int,int)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings","l":"target(List<Integer>, int)","u":"target(java.util.List,int)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings","l":"target(Map<Integer, Integer>, int, int)","u":"target(java.util.Map,int,int)"},{"p":"org.apache.calcite.linq4j.tree","c":"MethodCallExpression","l":"targetExpression"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor.UnifyRule","l":"targetOperand"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.PartialMapping","l":"targets"},{"p":"org.apache.calcite.runtime","c":"SocketFactoryImpl","l":"TCP_NODELAY"},{"p":"org.apache.calcite.test","c":"DiffTestCase","l":"tearDown()"},{"p":"org.apache.calcite.util","c":"Glossary","l":"TEMPLATE_METHOD_PATTERN"},{"p":"org.apache.calcite.schema","c":"Schema.TableType","l":"TEMPORAL_TABLE"},{"p":"org.apache.calcite.schema","c":"Schema.TableType","l":"TEMPORARY_INDEX"},{"p":"org.apache.calcite.schema","c":"Schema.TableType","l":"TEMPORARY_SEQUENCE"},{"p":"org.apache.calcite.schema","c":"Schema.TableType","l":"TEMPORARY_TABLE"},{"p":"org.apache.calcite.schema","c":"Schema.TableType","l":"TEMPORARY_VIEW"},{"p":"org.apache.calcite.util.mapping","c":"MappingType","l":"TEN"},{"p":"org.apache.calcite.util.format.postgresql","c":"ChronoUnitEnum","l":"TENTHS_OF_MS"},{"p":"org.apache.calcite.util.format.postgresql","c":"ChronoUnitEnum","l":"TENTHS_OF_SECOND"},{"p":"org.apache.calcite.sql","c":"SqlDialect.DatabaseProduct","l":"TERADATA"},{"p":"org.apache.calcite.sql.dialect","c":"TeradataSqlDialect","l":"TeradataSqlDialect(SqlDialect.Context)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect.Context)"},{"p":"org.apache.calcite.config","c":"CalciteSystemProperty","l":"TEST_ARROW"},{"p":"org.apache.calcite.config","c":"CalciteSystemProperty","l":"TEST_CASSANDRA"},{"p":"org.apache.calcite.config","c":"CalciteSystemProperty","l":"TEST_DATASET_PATH"},{"p":"org.apache.calcite.config","c":"CalciteSystemProperty","l":"TEST_DB"},{"p":"org.apache.calcite.config","c":"CalciteSystemProperty","l":"TEST_DRUID"},{"p":"org.apache.calcite.config","c":"CalciteSystemProperty","l":"TEST_FOODMART_QUERY_IDS"},{"p":"org.apache.calcite.config","c":"CalciteSystemProperty","l":"TEST_INNODB"},{"p":"org.apache.calcite.config","c":"CalciteSystemProperty","l":"TEST_MONGODB"},{"p":"org.apache.calcite.config","c":"CalciteSystemProperty","l":"TEST_REDIS"},{"p":"org.apache.calcite.config","c":"CalciteSystemProperty","l":"TEST_SPLUNK"},{"p":"org.apache.calcite.util","c":"ConversionUtil","l":"TEST_UNICODE_SQL_ESCAPED_LITERAL"},{"p":"org.apache.calcite.util","c":"ConversionUtil","l":"TEST_UNICODE_STRING"},{"p":"org.apache.calcite.config","c":"CalciteSystemProperty","l":"TEST_WITH_DOCKER_CONTAINER"},{"p":"org.apache.calcite.rel.rules","c":"PushProjector.ExprCondition","l":"test(RexNode)","u":"test(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.test","c":"QuidemTest","l":"test(String)","u":"test(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"PredicateImpl","l":"test(T)"},{"p":"org.apache.calcite.rel.rules","c":"FilterTableScanRule","l":"test(TableScan)","u":"test(org.apache.calcite.rel.core.TableScan)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectTableScanRule","l":"test(TableScan)","u":"test(org.apache.calcite.rel.core.TableScan)"},{"p":"org.apache.calcite.test","c":"IntervalTest","l":"testAll()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest","l":"testCaseExpression()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest","l":"testCast()"},{"p":"org.apache.calcite.test","c":"SqlOperatorTest","l":"testConstantCast()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserFixture","l":"tester"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture","l":"tester"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"tester"},{"p":"org.apache.calcite.test","c":"SqlOperatorTest","l":"TESTER"},{"p":"org.apache.calcite.test","c":"SqlToRelFixture","l":"TESTER"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest.TesterImpl","l":"TesterImpl()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.test","c":"SqlOperatorTest.TesterImpl","l":"TesterImpl()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest","l":"testHoist()"},{"p":"org.apache.calcite.test","c":"SqlOperatorTest","l":"testIssue6322()"},{"p":"org.apache.calcite.test","c":"SqlOperatorTest","l":"testJsonInsert()"},{"p":"org.apache.calcite.test","c":"SqlOperatorTest","l":"testJsonReplace()"},{"p":"org.apache.calcite.test","c":"SqlOperatorTest","l":"testJsonSet()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest","l":"testLambdaExpression()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest","l":"testMetadata()"},{"p":"org.apache.calcite.test","c":"SqlOperatorTest","l":"testOverflow()"},{"p":"org.apache.calcite.util","c":"Smalls.TestStaticTableFunction","l":"TestStaticTableFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest","l":"testTimeUnitCodes()"},{"p":"org.apache.calcite.util","c":"TestUtil","l":"TestUtil()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.test","c":"SqlOperatorTest","l":"testVarbinaryCast()"},{"p":"org.apache.calcite.test","c":"SqlOperatorTest","l":"testVarbitArithmetic()"},{"p":"org.apache.calcite.test","c":"SqlOperatorTest","l":"testVariant()"},{"p":"org.apache.calcite.sql","c":"SqlExplainFormat","l":"TEXT"},{"p":"org.apache.calcite.util.format.postgresql","c":"PatternModifier","l":"TH_LOWER"},{"p":"org.apache.calcite.util.format.postgresql","c":"PatternModifier","l":"TH_UPPER"},{"p":"org.apache.calcite.test","c":"CalciteAssert","l":"that()"},{"p":"org.apache.calcite.test","c":"CalciteAssert","l":"that(CalciteAssert.Config)","u":"that(org.apache.calcite.test.CalciteAssert.Config)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"thenBy(Function1<T, TKey>)","u":"thenBy(org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedOrderedEnumerable","l":"thenBy(Function1<T, TKey>)","u":"thenBy(org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"thenBy(Function1<T, TKey>, Comparator<TKey>)","u":"thenBy(org.apache.calcite.linq4j.function.Function1,java.util.Comparator)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedOrderedEnumerable","l":"thenBy(Function1<T, TKey>, Comparator<TKey>)","u":"thenBy(org.apache.calcite.linq4j.function.Function1,java.util.Comparator)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"thenBy(FunctionExpression<Function1<T, TKey>>)","u":"thenBy(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedOrderedQueryable","l":"thenBy(FunctionExpression<Function1<T, TKey>>)","u":"thenBy(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"thenBy(FunctionExpression<Function1<T, TKey>>, Comparator<TKey>)","u":"thenBy(org.apache.calcite.linq4j.tree.FunctionExpression,java.util.Comparator)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedOrderedQueryable","l":"thenBy(FunctionExpression<Function1<T, TKey>>, Comparator<TKey>)","u":"thenBy(org.apache.calcite.linq4j.tree.FunctionExpression,java.util.Comparator)"},{"p":"","c":"","l":"thenBy(FunctionExpression<Function1<TSource, TKey>>)"},{"p":"","c":"","l":"thenBy(FunctionExpression<Function1<TSource, TKey>>, Comparator<TKey>)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"thenBy(OrderedEnumerable<TSource>, Function1<TSource, TKey>)","u":"thenBy(org.apache.calcite.linq4j.OrderedEnumerable,org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"thenBy(OrderedEnumerable<TSource>, Function1<TSource, TKey>, Comparator<TKey>)","u":"thenBy(org.apache.calcite.linq4j.OrderedEnumerable,org.apache.calcite.linq4j.function.Function1,java.util.Comparator)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"thenBy(OrderedQueryable<T>, FunctionExpression<Function1<T, TKey>>)","u":"thenBy(org.apache.calcite.linq4j.OrderedQueryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"thenBy(OrderedQueryable<T>, FunctionExpression<Function1<T, TKey>>)","u":"thenBy(org.apache.calcite.linq4j.OrderedQueryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"thenBy(OrderedQueryable<T>, FunctionExpression<Function1<T, TKey>>)","u":"thenBy(org.apache.calcite.linq4j.OrderedQueryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"thenBy(OrderedQueryable<T>, FunctionExpression<Function1<T, TKey>>, Comparator<TKey>)","u":"thenBy(org.apache.calcite.linq4j.OrderedQueryable,org.apache.calcite.linq4j.tree.FunctionExpression,java.util.Comparator)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"thenBy(OrderedQueryable<T>, FunctionExpression<Function1<T, TKey>>, Comparator<TKey>)","u":"thenBy(org.apache.calcite.linq4j.OrderedQueryable,org.apache.calcite.linq4j.tree.FunctionExpression,java.util.Comparator)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"thenBy(OrderedQueryable<T>, FunctionExpression<Function1<T, TKey>>, Comparator<TKey>)","u":"thenBy(org.apache.calcite.linq4j.OrderedQueryable,org.apache.calcite.linq4j.tree.FunctionExpression,java.util.Comparator)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"thenByDescending(Function1<T, TKey>)","u":"thenByDescending(org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedOrderedEnumerable","l":"thenByDescending(Function1<T, TKey>)","u":"thenByDescending(org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"thenByDescending(Function1<T, TKey>, Comparator<TKey>)","u":"thenByDescending(org.apache.calcite.linq4j.function.Function1,java.util.Comparator)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedOrderedEnumerable","l":"thenByDescending(Function1<T, TKey>, Comparator<TKey>)","u":"thenByDescending(org.apache.calcite.linq4j.function.Function1,java.util.Comparator)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"thenByDescending(FunctionExpression<Function1<T, TKey>>)","u":"thenByDescending(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedOrderedQueryable","l":"thenByDescending(FunctionExpression<Function1<T, TKey>>)","u":"thenByDescending(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"thenByDescending(FunctionExpression<Function1<T, TKey>>, Comparator<TKey>)","u":"thenByDescending(org.apache.calcite.linq4j.tree.FunctionExpression,java.util.Comparator)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedOrderedQueryable","l":"thenByDescending(FunctionExpression<Function1<T, TKey>>, Comparator<TKey>)","u":"thenByDescending(org.apache.calcite.linq4j.tree.FunctionExpression,java.util.Comparator)"},{"p":"","c":"","l":"thenByDescending(FunctionExpression<Function1<TSource, TKey>>)"},{"p":"","c":"","l":"thenByDescending(FunctionExpression<Function1<TSource, TKey>>, Comparator<TKey>)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"thenByDescending(OrderedEnumerable<TSource>, Function1<TSource, TKey>)","u":"thenByDescending(org.apache.calcite.linq4j.OrderedEnumerable,org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"thenByDescending(OrderedEnumerable<TSource>, Function1<TSource, TKey>, Comparator<TKey>)","u":"thenByDescending(org.apache.calcite.linq4j.OrderedEnumerable,org.apache.calcite.linq4j.function.Function1,java.util.Comparator)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"thenByDescending(OrderedQueryable<T>, FunctionExpression<Function1<T, TKey>>)","u":"thenByDescending(org.apache.calcite.linq4j.OrderedQueryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"thenByDescending(OrderedQueryable<T>, FunctionExpression<Function1<T, TKey>>)","u":"thenByDescending(org.apache.calcite.linq4j.OrderedQueryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"thenByDescending(OrderedQueryable<T>, FunctionExpression<Function1<T, TKey>>)","u":"thenByDescending(org.apache.calcite.linq4j.OrderedQueryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"thenByDescending(OrderedQueryable<T>, FunctionExpression<Function1<T, TKey>>, Comparator<TKey>)","u":"thenByDescending(org.apache.calcite.linq4j.OrderedQueryable,org.apache.calcite.linq4j.tree.FunctionExpression,java.util.Comparator)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"thenByDescending(OrderedQueryable<T>, FunctionExpression<Function1<T, TKey>>, Comparator<TKey>)","u":"thenByDescending(org.apache.calcite.linq4j.OrderedQueryable,org.apache.calcite.linq4j.tree.FunctionExpression,java.util.Comparator)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"thenByDescending(OrderedQueryable<T>, FunctionExpression<Function1<T, TKey>>, Comparator<TKey>)","u":"thenByDescending(org.apache.calcite.linq4j.OrderedQueryable,org.apache.calcite.linq4j.tree.FunctionExpression,java.util.Comparator)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidType","l":"THETA_SKETCH"},{"p":"org.apache.calcite.util.format.postgresql","c":"ChronoUnitEnum","l":"THOUSANDTHS_OF_MS"},{"p":"org.apache.calcite.util.format.postgresql","c":"ChronoUnitEnum","l":"THOUSANDTHS_OF_SECOND"},{"p":"org.apache.calcite.test.catalog","c":"CountingFactory","l":"THREAD_CALL_COUNT"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare","l":"THREAD_CONTEXT_STACK"},{"p":"org.apache.calcite.util","c":"Smalls.MyPlusInitFunction","l":"THREAD_DIGEST"},{"p":"org.apache.calcite.prepare","c":"Prepare","l":"THREAD_EXPAND"},{"p":"org.apache.calcite.prepare","c":"Prepare","l":"THREAD_INSUBQUERY_THRESHOLD"},{"p":"org.apache.calcite.prepare","c":"Prepare.CatalogReader","l":"THREAD_LOCAL"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcSchema","l":"THREAD_METADATA"},{"p":"org.apache.calcite.rel.metadata","c":"RelMetadataQueryBase","l":"THREAD_PROVIDERS"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeCoercionRule","l":"THREAD_PROVIDERS"},{"p":"org.apache.calcite.prepare","c":"Prepare","l":"THREAD_TRIM"},{"p":"org.apache.calcite.test","c":"SqlOperatorTest.TesterImpl","l":"THREAD_TYPE_SYSTEM"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"Throw"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"THROW"},{"p":"org.apache.calcite.util","c":"Litmus","l":"THROW"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"throw_(Expression)","u":"throw_(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"THROW_UNLESS"},{"p":"org.apache.calcite.sql.fun","c":"SqlInternalOperators","l":"THROW_UNLESS"},{"p":"org.apache.calcite.util","c":"Util","l":"throwAsRuntime(String, Throwable)","u":"throwAsRuntime(java.lang.String,java.lang.Throwable)"},{"p":"org.apache.calcite.util","c":"Util","l":"throwAsRuntime(Throwable)","u":"throwAsRuntime(java.lang.Throwable)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateExpandWithinDistinctRule.Config","l":"throwIfNotUnique()"},{"p":"org.apache.calcite.util","c":"Util","l":"throwIfUnchecked(Throwable)","u":"throwIfUnchecked(java.lang.Throwable)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertQuery","l":"throws_(String)","u":"throws_(java.lang.String)"},{"p":"org.apache.calcite.test","c":"SqlToRelFixture","l":"throws_(String)","u":"throws_(java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"ThrowStatement","l":"ThrowStatement(Expression)","u":"%3Cinit%3E(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"throwUnless(boolean, String)","u":"throwUnless(boolean,java.lang.String)"},{"p":"org.apache.calcite.materialize","c":"Lattice.Tile","l":"Tile(ImmutableList<Lattice.Measure>, ImmutableList<Lattice.Column>)","u":"%3Cinit%3E(com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList)"},{"p":"org.apache.calcite.materialize","c":"Lattice.TileBuilder","l":"TileBuilder()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.materialize","c":"TileKey","l":"TileKey(Lattice, ImmutableBitSet, ImmutableList<Lattice.Measure>)","u":"%3Cinit%3E(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,com.google.common.collect.ImmutableList)"},{"p":"org.apache.calcite.materialize","c":"Lattice","l":"tiles"},{"p":"org.apache.calcite.model","c":"JsonLattice","l":"tiles"},{"p":"org.apache.calcite.materialize","c":"TileSuggester","l":"tiles()"},{"p":"org.apache.calcite.materialize","c":"TileSuggester","l":"TileSuggester(Lattice)","u":"%3Cinit%3E(org.apache.calcite.materialize.Lattice)"},{"p":"org.apache.calcite.runtime.rtti","c":"RuntimeTypeInformation.RuntimeSqlTypeName","l":"TIME"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFamily","l":"TIME"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"TIME"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TIME"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"TIME"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"TIME"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"TIME"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"TIME_ADD"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"TIME_ADD"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"TIME_DIFF"},{"p":"org.apache.calcite","c":"DataContext.Variable","l":"TIME_FRAME_SET"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"TIME_FRAME_TYPES"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"TIME_INTERVAL"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"TIME_NULLABLE"},{"p":"org.apache.calcite.test","c":"SqlOperatorTest","l":"TIME_PATTERN"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TIME_STRING_TO_TIME_WITH_LOCAL_TIME_ZONE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"TIME_SUB"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"TIME_SUB"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TIME_TO_INT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TIME_TO_INT_OPTIONAL"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"TIME_TRUNC"},{"p":"org.apache.calcite.runtime.rtti","c":"RuntimeTypeInformation.RuntimeSqlTypeName","l":"TIME_TZ"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"TIME_TZ"},{"p":"org.apache.calcite.runtime.rtti","c":"RuntimeTypeInformation.RuntimeSqlTypeName","l":"TIME_WITH_LOCAL_TIME_ZONE"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"TIME_WITH_LOCAL_TIME_ZONE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TIME_WITH_LOCAL_TIME_ZONE_TO_STRING"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TIME_WITH_LOCAL_TIME_ZONE_TO_TIME"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TIME_WITH_LOCAL_TIME_ZONE_TO_TIMESTAMP"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TIME_WITH_LOCAL_TIME_ZONE_TO_TIMESTAMP_WITH_LOCAL_TIME_ZONE"},{"p":"org.apache.calcite.sql.type","c":"ExtraSqlTypes","l":"TIME_WITH_TIMEZONE"},{"p":"org.apache.calcite.config","c":"CalciteConnectionProperty","l":"TIME_ZONE"},{"p":"org.apache.calcite","c":"DataContext.Variable","l":"TIME_ZONE"},{"p":"org.apache.calcite.sql.babel.postgres","c":"SqlSetOptions.Names","l":"TIME_ZONE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TIME_ZONE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TIME_ZONE_GET_OFFSET"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"time(int, int, int)","u":"time(int,int,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"time(long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"time(long, String)","u":"time(long,java.lang.String)"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"timeDataType"},{"p":"org.apache.calcite.sql","c":"SqlFunctionCategory","l":"TIMEDATE"},{"p":"org.apache.calcite.adapter.druid","c":"TimeExtractionFunction","l":"TimeExtractionFunction(String, Granularity, String, String)","u":"%3Cinit%3E(java.lang.String,org.apache.calcite.adapter.druid.Granularity,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlIntervalQualifier","l":"timeFrameName"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"timeFrameSet"},{"p":"org.apache.calcite.util","c":"Smalls.AllTypesFunction","l":"timeFun(Time)","u":"timeFun(java.sql.Time)"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"timeInterval()"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"timeLiteral(TimeString)","u":"timeLiteral(org.apache.calcite.util.TimeString)"},{"p":"org.apache.calcite","c":"DataContext.Variable","l":"TIMEOUT"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"TIMES"},{"p":"org.apache.calcite.adapter.druid","c":"QueryType","l":"TIMESERIES"},{"p":"org.apache.calcite.runtime.rtti","c":"RuntimeTypeInformation.RuntimeSqlTypeName","l":"TIMESTAMP"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFamily","l":"TIMESTAMP"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"TIMESTAMP"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TIMESTAMP"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"TIMESTAMP"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"TIMESTAMP"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"TIMESTAMP"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"TIMESTAMP_ADD"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"TIMESTAMP_ADD"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"TIMESTAMP_ADD2"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"TIMESTAMP_DIFF"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"TIMESTAMP_DIFF"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"TIMESTAMP_DIFF3"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"TIMESTAMP_INTERVAL"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"TIMESTAMP_LTZ"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"TIMESTAMP_LTZ"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"TIMESTAMP_LTZ_NULLABLE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TIMESTAMP_MICROS"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"TIMESTAMP_MICROS"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TIMESTAMP_MILLIS"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"TIMESTAMP_MILLIS"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"TIMESTAMP_NTZ"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"TIMESTAMP_NULLABLE"},{"p":"org.apache.calcite.test","c":"SqlOperatorTest","l":"TIMESTAMP_PATTERN"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TIMESTAMP_SECONDS"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"TIMESTAMP_SECONDS"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"TIMESTAMP_STRING"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TIMESTAMP_STRING_TO_TIMESTAMP_WITH_LOCAL_TIME_ZONE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"TIMESTAMP_SUB"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"TIMESTAMP_SUB"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TIMESTAMP_TO_DATE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TIMESTAMP_TO_LONG"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TIMESTAMP_TO_LONG_OFFSET"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TIMESTAMP_TO_LONG_OPTIONAL"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TIMESTAMP_TO_LONG_OPTIONAL_OFFSET"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"TIMESTAMP_TRUNC"},{"p":"org.apache.calcite.runtime.rtti","c":"RuntimeTypeInformation.RuntimeSqlTypeName","l":"TIMESTAMP_TZ"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"TIMESTAMP_TZ"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"TIMESTAMP_TZ"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"TIMESTAMP_TZ_NULLABLE"},{"p":"org.apache.calcite.runtime.rtti","c":"RuntimeTypeInformation.RuntimeSqlTypeName","l":"TIMESTAMP_WITH_LOCAL_TIME_ZONE"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"TIMESTAMP_WITH_LOCAL_TIME_ZONE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TIMESTAMP_WITH_LOCAL_TIME_ZONE_TO_DATE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TIMESTAMP_WITH_LOCAL_TIME_ZONE_TO_STRING"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TIMESTAMP_WITH_LOCAL_TIME_ZONE_TO_TIME"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TIMESTAMP_WITH_LOCAL_TIME_ZONE_TO_TIME_WITH_LOCAL_TIME_ZONE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TIMESTAMP_WITH_LOCAL_TIME_ZONE_TO_TIMESTAMP"},{"p":"org.apache.calcite.sql.type","c":"ExtraSqlTypes","l":"TIMESTAMP_WITH_TIMEZONE"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"timestamp(int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"timestamp(int, String)","u":"timestamp(int,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"timestamp(long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"timestamp(long, String)","u":"timestamp(long,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"timestamp(String)","u":"timestamp(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"timestamp(String, String)","u":"timestamp(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"timestampDataType"},{"p":"org.apache.calcite.rel.type","c":"TimeFrame","l":"timestampEpoch()"},{"p":"org.apache.calcite.util","c":"Smalls.AllTypesFunction","l":"timestampFun(Timestamp)","u":"timestampFun(java.sql.Timestamp)"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"timestampInterval()"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"timestampLiteral(TimestampString)","u":"timestampLiteral(org.apache.calcite.util.TimestampString)"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"timestampLocalTzLiteral(TimestampString)","u":"timestampLocalTzLiteral(org.apache.calcite.util.TimestampString)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"timestampMicros(long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"timestampMillis(long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"timestampSeconds(long)"},{"p":"org.apache.calcite.util","c":"TimestampString","l":"TimestampString(int, int, int, int, int, int)","u":"%3Cinit%3E(int,int,int,int,int,int)"},{"p":"org.apache.calcite.util","c":"TimestampString","l":"TimestampString(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"timestampToDate(long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"timestampToTime(long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"timestampWithLocalTimeZoneToDate(long, TimeZone)","u":"timestampWithLocalTimeZoneToDate(long,java.util.TimeZone)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"timestampWithLocalTimeZoneToString(long, TimeZone)","u":"timestampWithLocalTimeZoneToString(long,java.util.TimeZone)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"timestampWithLocalTimeZoneToTime(long, TimeZone)","u":"timestampWithLocalTimeZoneToTime(long,java.util.TimeZone)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"timestampWithLocalTimeZoneToTimestamp(long, TimeZone)","u":"timestampWithLocalTimeZoneToTimestamp(long,java.util.TimeZone)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"timestampWithLocalTimeZoneToTimeWithLocalTimeZone(long)"},{"p":"org.apache.calcite.util","c":"TimestampWithTimeZoneString","l":"TimestampWithTimeZoneString(int, int, int, int, int, int, String)","u":"%3Cinit%3E(int,int,int,int,int,int,java.lang.String)"},{"p":"org.apache.calcite.util","c":"TimestampWithTimeZoneString","l":"TimestampWithTimeZoneString(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.util","c":"TimestampWithTimeZoneString","l":"TimestampWithTimeZoneString(TimestampString, TimeZone)","u":"%3Cinit%3E(org.apache.calcite.util.TimestampString,java.util.TimeZone)"},{"p":"org.apache.calcite.util","c":"TimeString","l":"TimeString(int, int, int)","u":"%3Cinit%3E(int,int,int)"},{"p":"org.apache.calcite.util","c":"TimeString","l":"TimeString(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser.Config","l":"timeUnitCodes()"},{"p":"org.apache.calcite.sql","c":"SqlIntervalQualifier","l":"timeUnitRange"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"timeWithLocalTimeZoneToString(int, TimeZone)","u":"timeWithLocalTimeZoneToString(int,java.util.TimeZone)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"timeWithLocalTimeZoneToTime(int, TimeZone)","u":"timeWithLocalTimeZoneToTime(int,java.util.TimeZone)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"timeWithLocalTimeZoneToTimestamp(String, int, TimeZone)","u":"timeWithLocalTimeZoneToTimestamp(java.lang.String,int,java.util.TimeZone)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"timeWithLocalTimeZoneToTimestampWithLocalTimeZone(String, int)","u":"timeWithLocalTimeZoneToTimestampWithLocalTimeZone(java.lang.String,int)"},{"p":"org.apache.calcite.util","c":"TimeWithTimeZoneString","l":"TimeWithTimeZoneString(int, int, int, String)","u":"%3Cinit%3E(int,int,int,java.lang.String)"},{"p":"org.apache.calcite.util","c":"TimeWithTimeZoneString","l":"TimeWithTimeZoneString(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.util","c":"TimeWithTimeZoneString","l":"TimeWithTimeZoneString(TimeString, TimeZone)","u":"%3Cinit%3E(org.apache.calcite.util.TimeString,java.util.TimeZone)"},{"p":"org.apache.calcite.config","c":"CalciteConnectionProperty","l":"TIMEZONE"},{"p":"org.apache.calcite.util.format.postgresql","c":"ChronoUnitEnum","l":"TIMEZONE_HOURS"},{"p":"org.apache.calcite.util.format.postgresql","c":"ChronoUnitEnum","l":"TIMEZONE_MINUTES"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfig","l":"timeZone()"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfigImpl","l":"timeZone()"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"timeZone(DataContext)","u":"timeZone(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"TimeZoneCompiledPattern","l":"TimeZoneCompiledPattern(Set<PatternModifier>, boolean)","u":"%3Cinit%3E(java.util.Set,boolean)"},{"p":"org.apache.calcite.util.format.postgresql.format","c":"TimeZoneFormatPattern","l":"TimeZoneFormatPattern(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"TimeZoneHoursCompiledPattern","l":"TimeZoneHoursCompiledPattern(Set<PatternModifier>)","u":"%3Cinit%3E(java.util.Set)"},{"p":"org.apache.calcite.util.format.postgresql.format","c":"TimeZoneHoursFormatPattern","l":"TimeZoneHoursFormatPattern()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"TimeZoneMinutesCompiledPattern","l":"TimeZoneMinutesCompiledPattern(Set<PatternModifier>)","u":"%3Cinit%3E(java.util.Set)"},{"p":"org.apache.calcite.util.format.postgresql.format","c":"TimeZoneMinutesFormatPattern","l":"TimeZoneMinutesFormatPattern()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"TimeZoneOffsetCompiledPattern","l":"TimeZoneOffsetCompiledPattern(Set<PatternModifier>)","u":"%3Cinit%3E(java.util.Set)"},{"p":"org.apache.calcite.util.format.postgresql.format","c":"TimeZoneOffsetFormatPattern","l":"TimeZoneOffsetFormatPattern()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.prepare","c":"Prepare","l":"timingTracer"},{"p":"org.apache.calcite.runtime.rtti","c":"RuntimeTypeInformation.RuntimeSqlTypeName","l":"TINYINT"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"TINYINT"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"TINYINT"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"TINYINT_NULLABLE"},{"p":"org.apache.calcite.test.schemata.bookstore","c":"BookstoreSchema.Book","l":"title"},{"p":"org.apache.calcite.util.format.postgresql","c":"PatternModifier","l":"TM"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"TO_ARRAY"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeTransforms","l":"TO_ARRAY"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeTransforms","l":"TO_ARRAY_FORCE_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"TO_ARRAY_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeTransforms","l":"TO_ARRAY_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeTransforms","l":"TO_ARRAY_QUERY"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TO_BASE32"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"TO_BASE32"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TO_BASE64"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"TO_BASE64"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRules","l":"TO_BINDABLE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TO_CHAR"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"TO_CHAR"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TO_CHAR_PG"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"TO_CHAR_PG"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TO_CODE_POINTS"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"TO_CODE_POINTS"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"TO_COLLECTION_ELEMENT"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"TO_COLLECTION_ELEMENT_FORCE_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"TO_COLLECTION_ELEMENT_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeTransforms","l":"TO_COLLECTION_ELEMENT_TYPE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TO_DATE"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"TO_DATE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TO_DATE_PG"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"TO_DATE_PG"},{"p":"org.apache.calcite.adapter.arrow","c":"ArrowRules","l":"TO_ENUMERABLE"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraRules","l":"TO_ENUMERABLE"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbRules","l":"TO_ENUMERABLE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TO_HEX"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"TO_HEX"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRules","l":"TO_INTERPRETER"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"TO_MAP"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeTransforms","l":"TO_MAP"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"TO_MAP_ENTRIES"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"TO_MAP_ENTRIES_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"TO_MAP_KEYS"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeTransforms","l":"TO_MAP_KEYS"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"TO_MAP_KEYS_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeTransforms","l":"TO_MAP_QUERY"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"TO_MAP_VALUES"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeTransforms","l":"TO_MAP_VALUES"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"TO_MAP_VALUES_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeTransforms","l":"TO_MEASURE"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"TO_MULTISET"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeTransforms","l":"TO_MULTISET"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeTransforms","l":"TO_MULTISET_QUERY"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeTransforms","l":"TO_NOT_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeTransforms","l":"TO_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeTransforms","l":"TO_NULLABLE_ALL"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeTransforms","l":"TO_NULLABLE_IF_ARRAY_CONTAINS_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"TO_ROW"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeTransforms","l":"TO_ROW"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TO_TIMESTAMP"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"TO_TIMESTAMP"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TO_TIMESTAMP_PG"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"TO_TIMESTAMP_PG"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeTransforms","l":"TO_VARYING"},{"p":"org.apache.calcite.runtime","c":"ConsList","l":"toArray()"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat1List","l":"toArray()"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat2List","l":"toArray()"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat3List","l":"toArray()"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat4List","l":"toArray()"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat5List","l":"toArray()"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat6List","l":"toArray()"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"toArray()"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"toArray()"},{"p":"org.apache.calcite.util","c":"ImmutableIntList","l":"toArray()"},{"p":"org.apache.calcite.util","c":"BitSets","l":"toArray(BitSet)","u":"toArray(java.util.BitSet)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"toArray(Collection)","u":"toArray(java.util.Collection)"},{"p":"org.apache.calcite.util","c":"IntList","l":"toArray(List<Integer>)","u":"toArray(java.util.List)"},{"p":"org.apache.calcite.runtime","c":"ConsList","l":"toArray(T[])"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"toArray(T[])"},{"p":"org.apache.calcite.util","c":"ImmutableIntList","l":"toArray(T[])"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat1List","l":"toArray(T2[])"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat2List","l":"toArray(T2[])"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat3List","l":"toArray(T2[])"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat4List","l":"toArray(T2[])"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat5List","l":"toArray(T2[])"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat6List","l":"toArray(T2[])"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"toArray2(Collection<Number>)","u":"toArray2(java.util.Collection)"},{"p":"org.apache.calcite.runtime","c":"Pattern.AbstractPattern","l":"toAutomaton()"},{"p":"org.apache.calcite.runtime","c":"Pattern","l":"toAutomaton()"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toBase32(ByteString)","u":"toBase32(org.apache.calcite.avatica.util.ByteString)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toBase32(String)","u":"toBase32(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toBase64(ByteString)","u":"toBase64(org.apache.calcite.avatica.util.ByteString)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toBase64(String)","u":"toBase64(java.lang.String)"},{"p":"org.apache.calcite.util","c":"NumberUtil","l":"toBigDecimal(Number)","u":"toBigDecimal(java.lang.Number)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toBigDecimal(Number)","u":"toBigDecimal(java.lang.Number)"},{"p":"org.apache.calcite.util","c":"NumberUtil","l":"toBigDecimal(Number, int)","u":"toBigDecimal(java.lang.Number,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toBigDecimal(Object)","u":"toBigDecimal(java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toBigDecimal(String)","u":"toBigDecimal(java.lang.String)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableInterpretable","l":"toBindable(Map<String, Object>, CalcitePrepare.SparkHandler, EnumerableRel, EnumerableRel.Prefer)","u":"toBindable(java.util.Map,org.apache.calcite.jdbc.CalcitePrepare.SparkHandler,org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"toBitSet()"},{"p":"org.apache.calcite.util","c":"BitString","l":"toBitString()"},{"p":"org.apache.calcite.linq4j.tree","c":"BlockBuilder","l":"toBlock()"},{"p":"org.apache.calcite.linq4j.tree","c":"Blocks","l":"toBlock(Node)","u":"toBlock(org.apache.calcite.linq4j.tree.Node)"},{"p":"org.apache.calcite.rex","c":"RexUnknownAs","l":"toBoolean()"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toBoolean(Number)","u":"toBoolean(java.lang.Number)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toBoolean(Object)","u":"toBoolean(java.lang.Object)"},{"p":"org.apache.calcite.util","c":"ConversionUtil","l":"toBoolean(String)","u":"toBoolean(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toBoolean(String)","u":"toBoolean(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toByte(Number)","u":"toByte(java.lang.Number)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toByte(Object)","u":"toByte(java.lang.Object)"},{"p":"org.apache.calcite.util","c":"BitString","l":"toByteArrayFromBitString(String, int)","u":"toByteArrayFromBitString(java.lang.String,int)"},{"p":"org.apache.calcite.util","c":"ConversionUtil","l":"toByteArrayFromString(String, int)","u":"toByteArrayFromString(java.lang.String,int)"},{"p":"org.apache.calcite.util","c":"DateString","l":"toCalendar()"},{"p":"org.apache.calcite.util","c":"TimestampString","l":"toCalendar()"},{"p":"org.apache.calcite.util","c":"TimeString","l":"toCalendar()"},{"p":"org.apache.calcite.util","c":"TimestampString","l":"toCalendar(TimeZone)","u":"toCalendar(java.util.TimeZone)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"toCase(String, Casing)","u":"toCase(java.lang.String,org.apache.calcite.avatica.util.Casing)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.DateFormatFunction","l":"toChar(long, String)","u":"toChar(long,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.DateFormatFunctionPg","l":"toChar(long, String)","u":"toChar(long,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toChar(String)","u":"toChar(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toCharBoxed(String)","u":"toCharBoxed(java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"Types","l":"toClass(Type)","u":"toClass(java.lang.reflect.Type)"},{"p":"org.apache.calcite.linq4j.tree","c":"Types","l":"toClassArray(Iterable<? extends Expression>)","u":"toClassArray(java.lang.Iterable)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"toCnf(RexBuilder, int, RexNode)","u":"toCnf(org.apache.calcite.rex.RexBuilder,int,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"toCnf(RexBuilder, RexNode)","u":"toCnf(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toCodePoints(ByteString)","u":"toCodePoints(org.apache.calcite.avatica.util.ByteString)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toCodePoints(String)","u":"toCodePoints(java.lang.String)"},{"p":"org.apache.calcite.rel.externalize","c":"RelJson","l":"toCollation(List<Map<String, Object>>)","u":"toCollation(java.util.List)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.DateFormatFunction","l":"toDate(String, String)","u":"toDate(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.DateFormatFunctionPg","l":"toDate(String, String)","u":"toDate(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.util","c":"Smalls.AllTypesFunction","l":"toDateFun(int)"},{"p":"org.apache.calcite.util","c":"Smalls.AllTypesFunction","l":"toDateFun(Long)","u":"toDateFun(java.lang.Long)"},{"p":"org.apache.calcite.rel.externalize","c":"RelJson","l":"toDistribution(Map<String, Object>)","u":"toDistribution(java.util.Map)"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"toDnf(RexBuilder, RexNode)","u":"toDnf(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.test","c":"SqlOperatorTest","l":"TODO"},{"p":"org.apache.calcite.util","c":"Bug","l":"TODO_FIXED"},{"p":"org.apache.calcite.linq4j","c":"Extensions","l":"todo()"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"toDot()"},{"p":"org.apache.calcite.util","c":"Smalls.AllTypesFunction","l":"toDouble(BigDecimal)","u":"toDouble(java.math.BigDecimal)"},{"p":"org.apache.calcite.util","c":"Smalls.AllTypesFunction","l":"toDouble(Double)","u":"toDouble(java.lang.Double)"},{"p":"org.apache.calcite.util","c":"Smalls.AllTypesFunction","l":"toDouble(Float)","u":"toDouble(java.lang.Float)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toDouble(Number)","u":"toDouble(java.lang.Number)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toDouble(Object)","u":"toDouble(java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toDouble(String)","u":"toDouble(java.lang.String)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery","l":"toDruidColumn(RexNode, RelDataType, DruidQuery)","u":"toDruidColumn(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.druid.DruidQuery)"},{"p":"org.apache.calcite.adapter.druid","c":"BinaryOperatorConversion","l":"toDruidExpression(RexNode, RelDataType, DruidQuery)","u":"toDruidExpression(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.druid.DruidQuery)"},{"p":"org.apache.calcite.adapter.druid","c":"CeilOperatorConversion","l":"toDruidExpression(RexNode, RelDataType, DruidQuery)","u":"toDruidExpression(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.druid.DruidQuery)"},{"p":"org.apache.calcite.adapter.druid","c":"DirectOperatorConversion","l":"toDruidExpression(RexNode, RelDataType, DruidQuery)","u":"toDruidExpression(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.druid.DruidQuery)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidExpressions","l":"toDruidExpression(RexNode, RelDataType, DruidQuery)","u":"toDruidExpression(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.druid.DruidQuery)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidSqlCastConverter","l":"toDruidExpression(RexNode, RelDataType, DruidQuery)","u":"toDruidExpression(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.druid.DruidQuery)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidSqlOperatorConverter","l":"toDruidExpression(RexNode, RelDataType, DruidQuery)","u":"toDruidExpression(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.druid.DruidQuery)"},{"p":"org.apache.calcite.adapter.druid","c":"ExtractOperatorConversion","l":"toDruidExpression(RexNode, RelDataType, DruidQuery)","u":"toDruidExpression(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.druid.DruidQuery)"},{"p":"org.apache.calcite.adapter.druid","c":"FloorOperatorConversion","l":"toDruidExpression(RexNode, RelDataType, DruidQuery)","u":"toDruidExpression(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.druid.DruidQuery)"},{"p":"org.apache.calcite.adapter.druid","c":"NaryOperatorConverter","l":"toDruidExpression(RexNode, RelDataType, DruidQuery)","u":"toDruidExpression(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.druid.DruidQuery)"},{"p":"org.apache.calcite.adapter.druid","c":"SubstringOperatorConversion","l":"toDruidExpression(RexNode, RelDataType, DruidQuery)","u":"toDruidExpression(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.druid.DruidQuery)"},{"p":"org.apache.calcite.adapter.druid","c":"UnaryPrefixOperatorConversion","l":"toDruidExpression(RexNode, RelDataType, DruidQuery)","u":"toDruidExpression(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.druid.DruidQuery)"},{"p":"org.apache.calcite.adapter.druid","c":"UnarySuffixOperatorConversion","l":"toDruidExpression(RexNode, RelDataType, DruidQuery)","u":"toDruidExpression(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.druid.DruidQuery)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidExpressions","l":"toDruidExpressions(DruidQuery, RelDataType, List<RexNode>)","u":"toDruidExpressions(org.apache.calcite.adapter.druid.DruidQuery,org.apache.calcite.rel.type.RelDataType,java.util.List)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidDateTimeUtils","l":"toDruidGranularity(TimeUnitRange)","u":"toDruidGranularity(org.apache.calcite.avatica.util.TimeUnitRange)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumUtils","l":"toExternal(List<RelDataType>, TimeZone)","u":"toExternal(java.util.List,java.util.TimeZone)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumUtils","l":"toExternal(RelDataType, TimeZone)","u":"toExternal(org.apache.calcite.rel.type.RelDataType,java.util.TimeZone)"},{"p":"org.apache.calcite.rel.externalize","c":"RelJson","l":"toFieldCollation(Map<String, Object>)","u":"toFieldCollation(java.util.Map)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeField.ToFieldIndex","l":"ToFieldIndex()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeField.ToFieldName","l":"ToFieldName()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toFloat(Number)","u":"toFloat(java.lang.Number)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toFloat(Object)","u":"toFloat(java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toFloat(String)","u":"toFloat(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlAbstractDateTimeLiteral","l":"toFormattedString()"},{"p":"org.apache.calcite.sql","c":"SqlDateLiteral","l":"toFormattedString()"},{"p":"org.apache.calcite.sql","c":"SqlTimeLiteral","l":"toFormattedString()"},{"p":"org.apache.calcite.sql","c":"SqlTimestampLiteral","l":"toFormattedString()"},{"p":"org.apache.calcite.sql","c":"SqlTimestampTzLiteral","l":"toFormattedString()"},{"p":"org.apache.calcite.sql","c":"SqlTimeTzLiteral","l":"toFormattedString()"},{"p":"org.apache.calcite.sql","c":"SqlUuidLiteral","l":"toFormattedString()"},{"p":"org.apache.calcite.linq4j.tree","c":"Blocks","l":"toFunctionBlock(Node)","u":"toFunctionBlock(org.apache.calcite.linq4j.tree.Node)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toHex(ByteString)","u":"toHex(org.apache.calcite.avatica.util.ByteString)"},{"p":"org.apache.calcite.util","c":"BitString","l":"toHexString()"},{"p":"org.apache.calcite.sql.validate","c":"SqlIdentifierMoniker","l":"toIdentifier()"},{"p":"org.apache.calcite.sql.validate","c":"SqlMoniker","l":"toIdentifier()"},{"p":"org.apache.calcite.sql.validate","c":"SqlMonikerImpl","l":"toIdentifier()"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"toImmutableBitSet()"},{"p":"org.apache.calcite.util","c":"Util","l":"toImmutableList()"},{"p":"org.apache.calcite.runtime","c":"PairList","l":"toImmutableMap()"},{"p":"org.apache.calcite.runtime","c":"HilbertCurve2D","l":"toIndex(double, double)","u":"toIndex(double,double)"},{"p":"org.apache.calcite.runtime","c":"SpaceFillingCurve2D","l":"toIndex(double, double)","u":"toIndex(double,double)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toInt(Date)","u":"toInt(java.sql.Date)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toInt(Date, TimeZone)","u":"toInt(java.sql.Date,java.util.TimeZone)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toInt(Number)","u":"toInt(java.lang.Number)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toInt(Object)","u":"toInt(java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toInt(String)","u":"toInt(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toInt(Time)","u":"toInt(java.sql.Time)"},{"p":"org.apache.calcite.util","c":"ImmutableIntList","l":"toIntArray()"},{"p":"org.apache.calcite.util","c":"IntList","l":"toIntArray()"},{"p":"org.apache.calcite.util","c":"ImmutableIntList","l":"toIntegerList()"},{"p":"org.apache.calcite.adapter.druid","c":"DruidDateTimeUtils","l":"toInterval(List<Range<Long>>)","u":"toInterval(java.util.List)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toIntOptional(Date)","u":"toIntOptional(java.sql.Date)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toIntOptional(Date, TimeZone)","u":"toIntOptional(java.sql.Date,java.util.TimeZone)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toIntOptional(Object)","u":"toIntOptional(java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toIntOptional(Time)","u":"toIntOptional(java.sql.Time)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidDateTimeUtils","l":"toISOPeriodFormat(Granularity.Type)","u":"toISOPeriodFormat(org.apache.calcite.adapter.druid.Granularity.Type)"},{"p":"org.apache.calcite.util","c":"BitSets","l":"toIter(BitSet)","u":"toIter(java.util.BitSet)"},{"p":"org.apache.calcite.util","c":"BitSets","l":"toIter(ImmutableBitSet)","u":"toIter(org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.util","c":"Util","l":"toJavaId(String, int)","u":"toJavaId(java.lang.String,int)"},{"p":"org.apache.calcite.util","c":"TestUtil","l":"toJavaString(String)","u":"toJavaString(java.lang.String)"},{"p":"org.apache.calcite.rel.externalize","c":"RelJson","l":"toJson(AggregateCall)","u":"toJson(org.apache.calcite.rel.core.AggregateCall)"},{"p":"org.apache.calcite.rel.externalize","c":"RelJson","l":"toJson(Object)","u":"toJson(java.lang.Object)"},{"p":"org.apache.calcite.rel.externalize","c":"RelJson","l":"toJson(Range<C>)","u":"toJson(com.google.common.collect.Range)"},{"p":"org.apache.calcite.rel.externalize","c":"RelJson","l":"toJson(RangeSet<C>)","u":"toJson(com.google.common.collect.RangeSet)"},{"p":"org.apache.calcite.rel.externalize","c":"RelJson","l":"toJson(RelCollationImpl)","u":"toJson(org.apache.calcite.rel.RelCollationImpl)"},{"p":"org.apache.calcite.rel.externalize","c":"RelJson","l":"toJson(RexNode)","u":"toJson(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.externalize","c":"RelJson","l":"toJson(Sarg<C>)","u":"toJson(org.apache.calcite.util.Sarg)"},{"p":"org.apache.calcite.util","c":"JsonBuilder","l":"toJsonString(Object)","u":"toJsonString(java.lang.Object)"},{"p":"org.apache.calcite.util","c":"Util","l":"tokenize(String, String)","u":"tokenize(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.sql.advise","c":"SqlSimpleParser.Tokenizer","l":"Tokenizer(String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.sql.advise","c":"SqlSimpleParser.Tokenizer","l":"Tokenizer(String, String, Quoting)","u":"%3Cinit%3E(java.lang.String,java.lang.String,org.apache.calcite.avatica.util.Quoting)"},{"p":"org.apache.calcite.plan","c":"RelOptMaterialization","l":"toLeafJoinForm(RelNode)","u":"toLeafJoinForm(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.util","c":"Util","l":"toLinux(String)","u":"toLinux(java.lang.String)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"toList()"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"toList()"},{"p":"org.apache.calcite.runtime","c":"ConsList","l":"toList()"},{"p":"org.apache.calcite.runtime","c":"FlatLists.AbstractFlatList","l":"toList()"},{"p":"org.apache.calcite.sql","c":"SqlNode","l":"toList()"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"toList()"},{"p":"org.apache.calcite.util","c":"BitSets","l":"toList(BitSet)","u":"toList(java.util.BitSet)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"toList(Enumerable<TSource>)","u":"toList(org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.util","c":"Util","l":"toList(Iterator<T>)","u":"toList(java.util.Iterator)"},{"p":"org.apache.calcite.sql","c":"SqlNode","l":"toList(SqlParserPos)","u":"toList(org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.rel.logical","c":"ToLogicalConverter","l":"ToLogicalConverter(RelBuilder)","u":"%3Cinit%3E(org.apache.calcite.tools.RelBuilder)"},{"p":"org.apache.calcite.util","c":"Smalls.AllTypesFunction","l":"toLong(Date)","u":"toLong(java.sql.Date)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toLong(Date)","u":"toLong(java.util.Date)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toLong(Number)","u":"toLong(java.lang.Number)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toLong(Object)","u":"toLong(java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toLong(String)","u":"toLong(java.lang.String)"},{"p":"org.apache.calcite.util","c":"Smalls.AllTypesFunction","l":"toLong(Time)","u":"toLong(java.sql.Time)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toLong(Timestamp)","u":"toLong(java.sql.Timestamp)"},{"p":"org.apache.calcite.util","c":"Smalls.AllTypesFunction","l":"toLong(Timestamp)","u":"toLong(java.sql.Timestamp)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toLong(Timestamp, TimeZone)","u":"toLong(java.sql.Timestamp,java.util.TimeZone)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"toLongArray()"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toLongOptional(Object)","u":"toLongOptional(java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toLongOptional(Timestamp)","u":"toLongOptional(java.sql.Timestamp)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toLongOptional(Timestamp, TimeZone)","u":"toLongOptional(java.sql.Timestamp,java.util.TimeZone)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"toLookup(Enumerable<TSource>, Function1<TSource, TKey>)","u":"toLookup(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"toLookup(Enumerable<TSource>, Function1<TSource, TKey>, EqualityComparer<TKey>)","u":"toLookup(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"toLookup(Enumerable<TSource>, Function1<TSource, TKey>, Function1<TSource, TElement>)","u":"toLookup(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"toLookup(Enumerable<TSource>, Function1<TSource, TKey>, Function1<TSource, TElement>, EqualityComparer<TKey>)","u":"toLookup(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"toLookup(Function1<T, TKey>)","u":"toLookup(org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"toLookup(Function1<T, TKey>, EqualityComparer<TKey>)","u":"toLookup(org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"toLookup(Function1<T, TKey>, Function1<T, TElement>)","u":"toLookup(org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"toLookup(Function1<T, TKey>, Function1<T, TElement>, EqualityComparer<TKey>)","u":"toLookup(org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"toLookup(Function1<TSource, TKey>)","u":"toLookup(org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"toLookup(Function1<TSource, TKey>, EqualityComparer<TKey>)","u":"toLookup(org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"toLookup(Function1<TSource, TKey>, Function1<TSource, TElement>)","u":"toLookup(org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"toLookup(Function1<TSource, TKey>, Function1<TSource, TElement>, EqualityComparer<TKey>)","u":"toLookup(org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"toMap(Enumerable<TSource>, Function1<TSource, TKey>)","u":"toMap(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"toMap(Enumerable<TSource>, Function1<TSource, TKey>, EqualityComparer<TKey>)","u":"toMap(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"toMap(Enumerable<TSource>, Function1<TSource, TKey>, Function1<TSource, TElement>)","u":"toMap(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"toMap(Enumerable<TSource>, Function1<TSource, TKey>, Function1<TSource, TElement>, EqualityComparer<TKey>)","u":"toMap(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"toMap(Function1<T, TKey>)","u":"toMap(org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"toMap(Function1<T, TKey>, EqualityComparer<TKey>)","u":"toMap(org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"toMap(Function1<T, TKey>, Function1<T, TElement>)","u":"toMap(org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"toMap(Function1<T, TKey>, Function1<T, TElement>, EqualityComparer<TKey>)","u":"toMap(org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"toMap(Function1<TSource, TKey>)","u":"toMap(org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"toMap(Function1<TSource, TKey>, EqualityComparer<TKey>)","u":"toMap(org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"toMap(Function1<TSource, TKey>, Function1<TSource, TElement>)","u":"toMap(org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"toMap(Function1<TSource, TKey>, Function1<TSource, TElement>, EqualityComparer<TKey>)","u":"toMap(org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.util","c":"Pair","l":"toMap(Iterable<? extends Pair<? extends K, ? extends V>>)","u":"toMap(java.lang.Iterable)"},{"p":"org.apache.calcite.profile","c":"Profiler.Distribution","l":"toMap(JsonBuilder)","u":"toMap(org.apache.calcite.util.JsonBuilder)"},{"p":"org.apache.calcite.profile","c":"Profiler.FunctionalDependency","l":"toMap(JsonBuilder)","u":"toMap(org.apache.calcite.util.JsonBuilder)"},{"p":"org.apache.calcite.profile","c":"Profiler.RowCount","l":"toMap(JsonBuilder)","u":"toMap(org.apache.calcite.util.JsonBuilder)"},{"p":"org.apache.calcite.profile","c":"Profiler.Statistic","l":"toMap(JsonBuilder)","u":"toMap(org.apache.calcite.util.JsonBuilder)"},{"p":"org.apache.calcite.profile","c":"Profiler.Unique","l":"toMap(JsonBuilder)","u":"toMap(org.apache.calcite.util.JsonBuilder)"},{"p":"org.apache.calcite.util","c":"Util","l":"toMap(Properties)","u":"toMap(java.util.Properties)"},{"p":"org.apache.calcite.materialize","c":"Lattice","l":"toMeasures(List<AggregateCall>)","u":"toMeasures(java.util.List)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcTable","l":"toModificationRel(RelOptCluster, RelOptTable, Prepare.CatalogReader, RelNode, TableModify.Operation, List<String>, List<RexNode>, boolean)","u":"toModificationRel(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelOptTable,org.apache.calcite.prepare.Prepare.CatalogReader,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.TableModify.Operation,java.util.List,java.util.List,boolean)"},{"p":"org.apache.calcite.schema.impl","c":"ListTransientTable","l":"toModificationRel(RelOptCluster, RelOptTable, Prepare.CatalogReader, RelNode, TableModify.Operation, List<String>, List<RexNode>, boolean)","u":"toModificationRel(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelOptTable,org.apache.calcite.prepare.Prepare.CatalogReader,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.TableModify.Operation,java.util.List,java.util.List,boolean)"},{"p":"org.apache.calcite.schema","c":"ModifiableTable","l":"toModificationRel(RelOptCluster, RelOptTable, Prepare.CatalogReader, RelNode, TableModify.Operation, List<String>, List<RexNode>, boolean)","u":"toModificationRel(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelOptTable,org.apache.calcite.prepare.Prepare.CatalogReader,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.TableModify.Operation,java.util.List,java.util.List,boolean)"},{"p":"org.apache.calcite.test","c":"AbstractModifiableTable","l":"toModificationRel(RelOptCluster, RelOptTable, Prepare.CatalogReader, RelNode, TableModify.Operation, List<String>, List<RexNode>, boolean)","u":"toModificationRel(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelOptTable,org.apache.calcite.prepare.Prepare.CatalogReader,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.TableModify.Operation,java.util.List,java.util.List,boolean)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableRels","l":"toMutable(RelNode)","u":"toMutable(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"toNodeArray(List<SqlNode>)","u":"toNodeArray(java.util.List)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"toNodeArray(SqlNodeList)","u":"toNodeArray(org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"toNodeList(SqlNode[])","u":"toNodeList(org.apache.calcite.sql.SqlNode[])"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchSearchResult","l":"took()"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"tooLong(String)","u":"tooLong(java.lang.String)"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.TooManyElementsException","l":"TooManyElementsException()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.plan.hep","c":"HepMatchOrder","l":"TOP_DOWN"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"TOP_LEVEL"},{"p":"org.apache.calcite.adapter.druid","c":"QueryType","l":"TOP_N"},{"p":"org.apache.calcite.util.format","c":"FormatElement","l":"toPattern(StringBuilder)","u":"toPattern(java.lang.StringBuilder)"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"toPattern(StringBuilder)","u":"toPattern(java.lang.StringBuilder)"},{"p":"org.apache.calcite.config","c":"CalciteConnectionProperty","l":"TOPDOWN_OPT"},{"p":"org.apache.calcite.config","c":"CalciteSystemProperty","l":"TOPDOWN_OPT"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfig","l":"topDownOpt()"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfigImpl","l":"topDownOpt()"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"topN(SqlNode, SqlNode)","u":"topN(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlWriter","l":"topN(SqlNode, SqlNode)","u":"topN(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.test","c":"MockSqlOperatorTable.TopNTableFunction","l":"TopNTableFunction()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.runtime","c":"HilbertCurve2D","l":"toPoint(long)"},{"p":"org.apache.calcite.runtime","c":"SpaceFillingCurve2D","l":"toPoint(long)"},{"p":"org.apache.calcite.util.graph","c":"TopologicalOrderIterator","l":"TopologicalOrderIterator(DirectedGraph<V, E>)","u":"%3Cinit%3E(org.apache.calcite.util.graph.DirectedGraph)"},{"p":"org.apache.calcite.util","c":"Util","l":"toPosix(TimeZone, boolean)","u":"toPosix(java.util.TimeZone,boolean)"},{"p":"org.apache.calcite.linq4j.function","c":"Functions","l":"toPredicate(Function2<T1, T2, Boolean>)","u":"toPredicate(org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.linq4j.function","c":"Functions","l":"toPredicate2(Predicate1<T1>)","u":"toPredicate2(org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.sql","c":"SqlSplittableAggFunction.AbstractSumSplitter","l":"topSplit(RexBuilder, SqlSplittableAggFunction.Registry<RexNode>, int, RelDataType, AggregateCall, int, int)","u":"topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction.Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlSplittableAggFunction.CountSplitter","l":"topSplit(RexBuilder, SqlSplittableAggFunction.Registry<RexNode>, int, RelDataType, AggregateCall, int, int)","u":"topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction.Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlSplittableAggFunction.SelfSplitter","l":"topSplit(RexBuilder, SqlSplittableAggFunction.Registry<RexNode>, int, RelDataType, AggregateCall, int, int)","u":"topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction.Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlSplittableAggFunction","l":"topSplit(RexBuilder, SqlSplittableAggFunction.Registry<RexNode>, int, RelDataType, AggregateCall, int, int)","u":"topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction.Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)"},{"p":"org.apache.calcite.adapter.druid","c":"ExtractionDimensionSpec","l":"toQueryGranularity(DimensionSpec)","u":"toQueryGranularity(org.apache.calcite.adapter.druid.DimensionSpec)"},{"p":"org.apache.calcite.runtime","c":"HilbertCurve2D","l":"toRanges(double, double, double, double, SpaceFillingCurve2D.RangeComputeHints)","u":"toRanges(double,double,double,double,org.apache.calcite.runtime.SpaceFillingCurve2D.RangeComputeHints)"},{"p":"org.apache.calcite.runtime","c":"SpaceFillingCurve2D","l":"toRanges(double, double, double, double, SpaceFillingCurve2D.RangeComputeHints)","u":"toRanges(double,double,double,double,org.apache.calcite.runtime.SpaceFillingCurve2D.RangeComputeHints)"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture","l":"toRel()"},{"p":"org.apache.calcite.test","c":"RelOptFixture","l":"toRel()"},{"p":"org.apache.calcite.test","c":"SqlToRelFixture","l":"toRel()"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"toRel(RelOptTable, List<RelHint>)","u":"toRel(org.apache.calcite.plan.RelOptTable,java.util.List)"},{"p":"org.apache.calcite.plan","c":"RelOptAbstractTable","l":"toRel(RelOptTable.ToRelContext)","u":"toRel(org.apache.calcite.plan.RelOptTable.ToRelContext)"},{"p":"org.apache.calcite.plan","c":"RelOptTable","l":"toRel(RelOptTable.ToRelContext)","u":"toRel(org.apache.calcite.plan.RelOptTable.ToRelContext)"},{"p":"org.apache.calcite.prepare","c":"RelOptTableImpl","l":"toRel(RelOptTable.ToRelContext)","u":"toRel(org.apache.calcite.plan.RelOptTable.ToRelContext)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockRelViewTable","l":"toRel(RelOptTable.ToRelContext)","u":"toRel(org.apache.calcite.plan.RelOptTable.ToRelContext)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"toRel(RelOptTable.ToRelContext)","u":"toRel(org.apache.calcite.plan.RelOptTable.ToRelContext)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockViewTable","l":"toRel(RelOptTable.ToRelContext)","u":"toRel(org.apache.calcite.plan.RelOptTable.ToRelContext)"},{"p":"org.apache.calcite.adapter.arrow","c":"ArrowTable","l":"toRel(RelOptTable.ToRelContext, RelOptTable)","u":"toRel(org.apache.calcite.plan.RelOptTable.ToRelContext,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraTable","l":"toRel(RelOptTable.ToRelContext, RelOptTable)","u":"toRel(org.apache.calcite.plan.RelOptTable.ToRelContext,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.adapter.csv","c":"CsvTranslatableTable","l":"toRel(RelOptTable.ToRelContext, RelOptTable)","u":"toRel(org.apache.calcite.plan.RelOptTable.ToRelContext,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidTable","l":"toRel(RelOptTable.ToRelContext, RelOptTable)","u":"toRel(org.apache.calcite.plan.RelOptTable.ToRelContext,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchTable","l":"toRel(RelOptTable.ToRelContext, RelOptTable)","u":"toRel(org.apache.calcite.plan.RelOptTable.ToRelContext,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.adapter.file","c":"CsvTranslatableTable","l":"toRel(RelOptTable.ToRelContext, RelOptTable)","u":"toRel(org.apache.calcite.plan.RelOptTable.ToRelContext,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeTable","l":"toRel(RelOptTable.ToRelContext, RelOptTable)","u":"toRel(org.apache.calcite.plan.RelOptTable.ToRelContext,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbTable","l":"toRel(RelOptTable.ToRelContext, RelOptTable)","u":"toRel(org.apache.calcite.plan.RelOptTable.ToRelContext,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcTable","l":"toRel(RelOptTable.ToRelContext, RelOptTable)","u":"toRel(org.apache.calcite.plan.RelOptTable.ToRelContext,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoTable","l":"toRel(RelOptTable.ToRelContext, RelOptTable)","u":"toRel(org.apache.calcite.plan.RelOptTable.ToRelContext,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.adapter.pig","c":"PigTable","l":"toRel(RelOptTable.ToRelContext, RelOptTable)","u":"toRel(org.apache.calcite.plan.RelOptTable.ToRelContext,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.schema.impl","c":"MaterializedViewTable","l":"toRel(RelOptTable.ToRelContext, RelOptTable)","u":"toRel(org.apache.calcite.plan.RelOptTable.ToRelContext,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.schema.impl","c":"StarTable","l":"toRel(RelOptTable.ToRelContext, RelOptTable)","u":"toRel(org.apache.calcite.plan.RelOptTable.ToRelContext,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.schema.impl","c":"ViewTable","l":"toRel(RelOptTable.ToRelContext, RelOptTable)","u":"toRel(org.apache.calcite.plan.RelOptTable.ToRelContext,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.schema","c":"TranslatableTable","l":"toRel(RelOptTable.ToRelContext, RelOptTable)","u":"toRel(org.apache.calcite.plan.RelOptTable.ToRelContext,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockDynamicTable","l":"toRel(RelOptTable.ToRelContext, RelOptTable)","u":"toRel(org.apache.calcite.plan.RelOptTable.ToRelContext,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.util","c":"Smalls.SimpleTable","l":"toRel(RelOptTable.ToRelContext, RelOptTable)","u":"toRel(org.apache.calcite.plan.RelOptTable.ToRelContext,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.plan","c":"ViewExpanders","l":"toRelContext(RelOptTable.ViewExpander, RelOptCluster)","u":"toRelContext(org.apache.calcite.plan.RelOptTable.ViewExpander,org.apache.calcite.plan.RelOptCluster)"},{"p":"org.apache.calcite.plan","c":"ViewExpanders","l":"toRelContext(RelOptTable.ViewExpander, RelOptCluster, List<RelHint>)","u":"toRelContext(org.apache.calcite.plan.RelOptTable.ViewExpander,org.apache.calcite.plan.RelOptCluster,java.util.List)"},{"p":"org.apache.calcite.tools","c":"RelBuilder.OverCall","l":"toRex()"},{"p":"org.apache.calcite.materialize","c":"LatticeSuggester","l":"toRex(LatticeTable, int)","u":"toRex(org.apache.calcite.materialize.LatticeTable,int)"},{"p":"org.apache.calcite.rel.externalize","c":"RelJson","l":"toRex(RelOptCluster, Object)","u":"toRex(org.apache.calcite.plan.RelOptCluster,java.lang.Object)"},{"p":"org.apache.calcite.test","c":"SqlToRelFixture","l":"toRoot()"},{"p":"org.apache.calcite.adapter.kafka","c":"KafkaRowConverterImpl","l":"toRow(ConsumerRecord<byte[], byte[]>)","u":"toRow(org.apache.kafka.clients.consumer.ConsumerRecord)"},{"p":"org.apache.calcite.adapter.kafka","c":"KafkaRowConverter","l":"toRow(ConsumerRecord<K, V>)","u":"toRow(org.apache.kafka.clients.consumer.ConsumerRecord)"},{"p":"org.apache.calcite.runtime","c":"Enumerables","l":"toRow(Enumerable<Object[]>)","u":"toRow(org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.runtime","c":"Enumerables","l":"toRow(Supplier<Enumerable<Object[]>>)","u":"toRow(com.google.common.base.Supplier)"},{"p":"org.apache.calcite.runtime","c":"Enumerables","l":"toRow(Supplier<Enumerable<Object[]>>)","u":"toRow(java.util.function.Supplier)"},{"p":"org.apache.calcite.adapter.arrow","c":"ArrowRules.ArrowFilterRule.Config","l":"toRule()"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraRules.CassandraFilterRule.CassandraFilterRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraRules.CassandraLimitRule.CassandraLimitRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraRules.CassandraSortRule.CassandraSortRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.adapter.csv","c":"CsvProjectTableScanRule.Config","l":"toRule()"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules.DruidAggregateProjectRule.DruidAggregateProjectRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules.DruidAggregateRule.DruidAggregateRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules.DruidFilterRule.DruidFilterRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules.DruidHavingFilterRule.DruidHavingFilterRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules.DruidPostAggregationProjectRule.DruidPostAggregationProjectRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules.DruidProjectRule.DruidProjectRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.adapter.druid","c":"DruidRules.DruidSortRule.DruidSortRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableBatchNestedLoopJoinRule.Config","l":"toRule()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableFilterToCalcRule.Config","l":"toRule()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableLimitRule.Config","l":"toRule()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableLimitSortRule.Config","l":"toRule()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableMergeUnionRule.Config","l":"toRule()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableProjectToCalcRule.Config","l":"toRule()"},{"p":"org.apache.calcite.adapter.file","c":"CsvProjectTableScanRule.Config","l":"toRule()"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeRules.GeodeFilterRule.GeodeFilterRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeRules.GeodeSortLimitRule.GeodeSortLimitRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbRules.InnodbFilterRule.InnodbFilterRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbRules.InnodbSortFilterRule.InnodbSortFilterRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbRules.InnodbSortTableScanRule.InnodbSortTableScanRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.adapter.splunk","c":"SplunkPushDownRule.Config","l":"toRule()"},{"p":"org.apache.calcite.interpreter","c":"Bindables.BindableTableScanRule.Config","l":"toRule()"},{"p":"org.apache.calcite.piglet","c":"PigToSqlAggregateRule.Config","l":"toRule()"},{"p":"org.apache.calcite.plan","c":"RelRule.Config","l":"toRule()"},{"p":"org.apache.calcite.plan.volcano","c":"AbstractConverter.ExpandConversionRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.convert","c":"ConverterRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.convert","c":"TraitMatchingRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"AggregateCaseToFilterRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"AggregateExpandDistinctAggregatesRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"AggregateExpandWithinDistinctRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"AggregateExtractProjectRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"AggregateFilterTransposeRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"AggregateJoinJoinRemoveRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"AggregateJoinRemoveRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"AggregateJoinTransposeRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"AggregateMergeRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"AggregateProjectConstantToDummyJoinRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"AggregateProjectMergeRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"AggregateProjectPullUpConstantsRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"AggregateProjectStarTableRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"AggregateReduceFunctionsRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"AggregateRemoveRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"AggregateStarTableRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"AggregateUnionAggregateRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"AggregateUnionTransposeRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"AggregateValuesRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"CalcMergeRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"CalcRemoveRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"CalcSplitRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"CoerceInputsRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"DateRangeRules.FilterDateRangeRule.FilterDateRangeRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"DphypJoinReorderRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"ExchangeRemoveConstantKeysRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"FilterAggregateTransposeRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"FilterCalcMergeRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"FilterCorrelateRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"FilterFlattenCorrelatedConditionRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"FilterJoinRule.FilterIntoJoinRule.FilterIntoJoinRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"FilterJoinRule.JoinConditionPushRule.JoinConditionPushRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"FilterMergeRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"FilterMultiJoinMergeRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"FilterProjectTransposeRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"FilterRemoveIsNotDistinctFromRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"FilterSampleTransposeRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"FilterSetOpTransposeRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"FilterTableFunctionTransposeRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"FilterTableScanRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"FilterToCalcRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"FilterWindowTransposeRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"IntersectToDistinctRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"JoinAddRedundantSemiJoinRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"JoinAssociateRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"JoinCommuteRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"JoinDeriveIsNotNullFilterRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"JoinExtractFilterRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"JoinProjectTransposeRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"JoinPushExpressionsRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"JoinPushThroughJoinRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"JoinPushTransitivePredicatesRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"JoinToCorrelateRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"JoinToHyperGraphRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"JoinToMultiJoinRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"JoinUnionTransposeRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"LoptOptimizeJoinRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"MatchRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewOnlyAggregateRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewOnlyFilterRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewOnlyJoinRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewProjectAggregateRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewProjectFilterRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewProjectJoinRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"MaterializedViewFilterScanRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"MeasureRules.AggregateMeasure2RuleConfig","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"MeasureRules.AggregateMeasureRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"MeasureRules.FilterSortMeasureRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"MeasureRules.ProjectMeasureRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"MeasureRules.ProjectSortMeasureRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"MinusToDistinctRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"MultiJoinOptimizeBushyRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"MultiJoinProjectTransposeRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"ProjectAggregateMergeRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"ProjectCalcMergeRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"ProjectCorrelateTransposeRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"ProjectFilterTransposeRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"ProjectJoinJoinRemoveRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"ProjectJoinRemoveRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"ProjectJoinTransposeRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"ProjectMergeRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"ProjectMultiJoinMergeRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"ProjectOverSumToSum0Rule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"ProjectRemoveRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"ProjectSetOpTransposeRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"ProjectTableScanRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"ProjectToCalcRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"ProjectToWindowRule.CalcToWindowRule.CalcToWindowRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"ProjectToWindowRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"ProjectToWindowRule.ProjectToLogicalProjectAndWindowRule.ProjectToLogicalProjectAndWindowRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"ProjectWindowTransposeRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules.CorrelateLeftEmptyRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules.CorrelateRightEmptyRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules.IntersectEmptyPruneRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules.JoinLeftEmptyRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules.JoinRightEmptyRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules.MinusEmptyPruneRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules.PruneEmptyRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules.RemoveEmptySingleRule.RemoveEmptySingleRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules.SortFetchZeroRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules.UnionEmptyPruneRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules.ZeroMaxRowsRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"ReduceDecimalsRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.CalcReduceExpressionsRule.CalcReduceExpressionsRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.FilterReduceExpressionsRule.FilterReduceExpressionsRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.JoinReduceExpressionsRule.JoinReduceExpressionsRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.ProjectReduceExpressionsRule.ProjectReduceExpressionsRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.WindowReduceExpressionsRule.WindowReduceExpressionsRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"SampleToFilterRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinFilterTransposeRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinJoinTransposeRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinProjectTransposeRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinRemoveRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinRule.JoinOnUniqueToSemiJoinRule.JoinOnUniqueToSemiJoinRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinRule.JoinToSemiJoinRule.JoinToSemiJoinRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinRule.ProjectToSemiJoinRule.ProjectToSemiJoinRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"SingleValuesOptimizationRules.PruneSingleValueRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"SortJoinCopyRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"SortJoinTransposeRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"SortMergeRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"SortProjectTransposeRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"SortRemoveConstantKeysRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"SortRemoveRedundantRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"SortRemoveRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"SortUnionTransposeRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"SpatialRules.FilterHilbertRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"SubQueryRemoveRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"TableScanRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"UnionEliminatorRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"UnionMergeRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"UnionPullUpConstantsRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"UnionToDistinctRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"UnionToValuesRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.rules","c":"ValuesReduceRule.Config","l":"toRule()"},{"p":"org.apache.calcite.rel.stream","c":"StreamRules.DeltaAggregateTransposeRule.DeltaAggregateTransposeRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.rel.stream","c":"StreamRules.DeltaFilterTransposeRule.DeltaFilterTransposeRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.rel.stream","c":"StreamRules.DeltaJoinTransposeRule.DeltaJoinTransposeRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.rel.stream","c":"StreamRules.DeltaProjectTransposeRule.DeltaProjectTransposeRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.rel.stream","c":"StreamRules.DeltaSortTransposeRule.DeltaSortTransposeRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.rel.stream","c":"StreamRules.DeltaTableScanRule.DeltaTableScanRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.rel.stream","c":"StreamRules.DeltaTableScanToEmptyRule.DeltaTableScanToEmptyRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.rel.stream","c":"StreamRules.DeltaUnionTransposeRule.DeltaUnionTransposeRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator.AdjustProjectForCountAggregateRule.AdjustProjectForCountAggregateRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator.RemoveCorrelationForScalarAggregateRule.RemoveCorrelationForScalarAggregateRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator.RemoveCorrelationForScalarProjectRule.RemoveCorrelationForScalarProjectRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator.RemoveSingleAggregateRule.RemoveSingleAggregateRuleConfig","l":"toRule()"},{"p":"org.apache.calcite.rel.convert","c":"ConverterRule.Config","l":"toRule(Class<R>)","u":"toRule(java.lang.Class)"},{"p":"org.apache.calcite.util","c":"Util","l":"toScientificNotation(BigDecimal)","u":"toScientificNotation(java.math.BigDecimal)"},{"p":"org.apache.calcite.util","c":"Util","l":"toScientificNotation(Double)","u":"toScientificNotation(java.lang.Double)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toShort(Number)","u":"toShort(java.lang.Number)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toShort(Object)","u":"toShort(java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toShort(String)","u":"toShort(java.lang.String)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Context","l":"toSql(AggregateCall)","u":"toSql(org.apache.calcite.rel.core.AggregateCall)"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"toSql(boolean)"},{"p":"org.apache.calcite.materialize","c":"Lattice.BaseColumn","l":"toSql(Lattice.SqlWriter)","u":"toSql(org.apache.calcite.materialize.Lattice.SqlWriter)"},{"p":"org.apache.calcite.materialize","c":"Lattice.Column","l":"toSql(Lattice.SqlWriter)","u":"toSql(org.apache.calcite.materialize.Lattice.SqlWriter)"},{"p":"org.apache.calcite.materialize","c":"Lattice.DerivedColumn","l":"toSql(Lattice.SqlWriter)","u":"toSql(org.apache.calcite.materialize.Lattice.SqlWriter)"},{"p":"org.apache.calcite.adapter.java","c":"JavaTypeFactory","l":"toSql(RelDataType)","u":"toSql(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.jdbc","c":"JavaTypeFactoryImpl","l":"toSql(RelDataType)","u":"toSql(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.jdbc","c":"JavaTypeFactoryImpl","l":"toSql(RelDataTypeFactory, RelDataType)","u":"toSql(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Context","l":"toSql(RelFieldCollation)","u":"toSql(org.apache.calcite.rel.RelFieldCollation)"},{"p":"org.apache.calcite.statistic","c":"QuerySqlStatisticProvider","l":"toSql(RelNode, SqlDialect)","u":"toSql(org.apache.calcite.rel.RelNode,org.apache.calcite.sql.SqlDialect)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor","l":"toSql(RexLiteral)","u":"toSql(org.apache.calcite.rex.RexLiteral)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor","l":"toSql(RexProgram, RexLiteral)","u":"toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexLiteral)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Context","l":"toSql(RexProgram, RexNode)","u":"toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.MatchRecognizeContext","l":"toSql(RexProgram, RexNode)","u":"toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Context","l":"toSql(RexWindowBound)","u":"toSql(org.apache.calcite.rex.RexWindowBound)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Context","l":"toSql(RexWindowExclusion)","u":"toSql(org.apache.calcite.rex.RexWindowExclusion)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Context","l":"toSql(Window.Group, ImmutableList<RexLiteral>, int)","u":"toSql(org.apache.calcite.rel.core.Window.Group,com.google.common.collect.ImmutableList,int)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"toSqlString()"},{"p":"org.apache.calcite.sql","c":"SqlWriter","l":"toSqlString()"},{"p":"org.apache.calcite.sql.util","c":"SqlBuilder","l":"toSqlString()"},{"p":"org.apache.calcite.sql","c":"SqlNode","l":"toSqlString(SqlDialect)","u":"toSqlString(org.apache.calcite.sql.SqlDialect)"},{"p":"org.apache.calcite.sql","c":"SqlNode","l":"toSqlString(SqlDialect, boolean)","u":"toSqlString(org.apache.calcite.sql.SqlDialect,boolean)"},{"p":"org.apache.calcite.sql","c":"SqlAsofJoin","l":"toSqlString(UnaryOperator<SqlWriterConfig>)","u":"toSqlString(java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.sql","c":"SqlJoin","l":"toSqlString(UnaryOperator<SqlWriterConfig>)","u":"toSqlString(java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.sql","c":"SqlNode","l":"toSqlString(UnaryOperator<SqlWriterConfig>)","u":"toSqlString(java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.sql","c":"SqlIdentifier","l":"toStar(List<String>)","u":"toStar(java.util.List)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraTable","l":"toString()"},{"p":"org.apache.calcite.adapter.csv","c":"CsvFilterableTable","l":"toString()"},{"p":"org.apache.calcite.adapter.csv","c":"CsvScannableTable","l":"toString()"},{"p":"org.apache.calcite.adapter.csv","c":"CsvStreamScannableTable","l":"toString()"},{"p":"org.apache.calcite.adapter.csv","c":"CsvTranslatableTable","l":"toString()"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery.QuerySpec","l":"toString()"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchTable","l":"toString()"},{"p":"org.apache.calcite.adapter.enumerable","c":"AggImpState","l":"toString()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableConvention","l":"toString()"},{"p":"org.apache.calcite.adapter.file","c":"CsvTranslatableTable","l":"toString()"},{"p":"org.apache.calcite.adapter.file","c":"JsonScannableTable","l":"toString()"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeRel.GeodeImplementContext","l":"toString()"},{"p":"org.apache.calcite.adapter.geode.rel","c":"GeodeTable","l":"toString()"},{"p":"org.apache.calcite.adapter.geode.simple","c":"GeodeSimpleScannableTable","l":"toString()"},{"p":"org.apache.calcite.adapter.innodb","c":"IndexCondition","l":"toString()"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbTable","l":"toString()"},{"p":"org.apache.calcite.adapter.java","c":"ReflectiveSchema","l":"toString()"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcTable","l":"toString()"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoTable","l":"toString()"},{"p":"org.apache.calcite.adapter.splunk","c":"SplunkQuery","l":"toString()"},{"p":"org.apache.calcite.interpreter","c":"BindableConvention","l":"toString()"},{"p":"org.apache.calcite.interpreter","c":"InterpretableConvention","l":"toString()"},{"p":"org.apache.calcite.interpreter","c":"Row","l":"toString()"},{"p":"org.apache.calcite.jdbc","c":"JavaTypeFactoryImpl.SyntheticRecordType","l":"toString()"},{"p":"org.apache.calcite.linq4j","c":"MemoryFactory.Memory","l":"toString()"},{"p":"org.apache.calcite.linq4j","c":"QueryProviderImpl.QueryableImpl","l":"toString()"},{"p":"org.apache.calcite.linq4j.tree","c":"AbstractNode","l":"toString()"},{"p":"org.apache.calcite.materialize","c":"Lattice.BaseColumn","l":"toString()"},{"p":"org.apache.calcite.materialize","c":"Lattice.DerivedColumn","l":"toString()"},{"p":"org.apache.calcite.materialize","c":"Lattice.Measure","l":"toString()"},{"p":"org.apache.calcite.materialize","c":"Lattice","l":"toString()"},{"p":"org.apache.calcite.materialize","c":"LatticeNode","l":"toString()"},{"p":"org.apache.calcite.materialize","c":"LatticeTable","l":"toString()"},{"p":"org.apache.calcite.materialize","c":"MaterializationKey","l":"toString()"},{"p":"org.apache.calcite.materialize","c":"TileKey","l":"toString()"},{"p":"org.apache.calcite.model","c":"JsonCustomSchema","l":"toString()"},{"p":"org.apache.calcite.model","c":"JsonLattice","l":"toString()"},{"p":"org.apache.calcite.model","c":"JsonMaterialization","l":"toString()"},{"p":"org.apache.calcite.model","c":"JsonView","l":"toString()"},{"p":"org.apache.calcite.plan","c":"Convention.Impl","l":"toString()"},{"p":"org.apache.calcite.plan","c":"RelOptCost","l":"toString()"},{"p":"org.apache.calcite.plan","c":"RelOptCostImpl","l":"toString()"},{"p":"org.apache.calcite.plan","c":"RelOptPredicateList","l":"toString()"},{"p":"org.apache.calcite.plan","c":"RelOptRule","l":"toString()"},{"p":"org.apache.calcite.plan","c":"RelOptRuleOperand","l":"toString()"},{"p":"org.apache.calcite.plan","c":"RelTrait","l":"toString()"},{"p":"org.apache.calcite.plan","c":"RelTraitSet","l":"toString()"},{"p":"org.apache.calcite.prepare","c":"RelOptTableImpl","l":"toString()"},{"p":"org.apache.calcite.profile","c":"Profiler.Column","l":"toString()"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"toString()"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"toString()"},{"p":"org.apache.calcite.rel.core","c":"CorrelationId","l":"toString()"},{"p":"org.apache.calcite.rel.core","c":"Window.Group","l":"toString()"},{"p":"org.apache.calcite.rel.hint","c":"RelHint","l":"toString()"},{"p":"org.apache.calcite.rel.metadata.janino","c":"DescriptiveCacheKey","l":"toString()"},{"p":"org.apache.calcite.rel.mutable","c":"MutableRel","l":"toString()"},{"p":"org.apache.calcite.rel","c":"RelCollationImpl","l":"toString()"},{"p":"org.apache.calcite.rel","c":"RelFieldCollation","l":"toString()"},{"p":"org.apache.calcite.rel","c":"RelReferentialConstraintImpl","l":"toString()"},{"p":"org.apache.calcite.rel","c":"RelRoot","l":"toString()"},{"p":"org.apache.calcite.rel.rules","c":"CalcRelSplitter.RelType","l":"toString()"},{"p":"org.apache.calcite.rel.rules","c":"HyperEdge","l":"toString()"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule.Edge","l":"toString()"},{"p":"org.apache.calcite.rel.type","c":"RelDataType","l":"toString()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFieldImpl","l":"toString()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeImpl","l":"toString()"},{"p":"org.apache.calcite.rex","c":"RexCall","l":"toString()"},{"p":"org.apache.calcite.rex","c":"RexFieldCollation","l":"toString()"},{"p":"org.apache.calcite.rex","c":"RexLambda","l":"toString()"},{"p":"org.apache.calcite.rex","c":"RexNode","l":"toString()"},{"p":"org.apache.calcite.rex","c":"RexProgram","l":"toString()"},{"p":"org.apache.calcite.rex","c":"RexRangeRef","l":"toString()"},{"p":"org.apache.calcite.rex","c":"RexTableInputRef.RelTableRef","l":"toString()"},{"p":"org.apache.calcite.rex","c":"RexWindow","l":"toString()"},{"p":"org.apache.calcite.rex","c":"RexWindowExclusion","l":"toString()"},{"p":"org.apache.calcite.runtime","c":"ConsList","l":"toString()"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat1List","l":"toString()"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat2List","l":"toString()"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat3List","l":"toString()"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat4List","l":"toString()"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat5List","l":"toString()"},{"p":"org.apache.calcite.runtime","c":"FlatLists.Flat6List","l":"toString()"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.JsonPathContext","l":"toString()"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.JsonValueContext","l":"toString()"},{"p":"org.apache.calcite.runtime","c":"MapEntry","l":"toString()"},{"p":"org.apache.calcite.runtime","c":"Pattern.OpPattern","l":"toString()"},{"p":"org.apache.calcite.runtime","c":"Pattern.RepeatPattern","l":"toString()"},{"p":"org.apache.calcite.runtime","c":"Pattern.SymbolPattern","l":"toString()"},{"p":"org.apache.calcite.runtime.rtti","c":"BasicSqlTypeRtti","l":"toString()"},{"p":"org.apache.calcite.runtime.rtti","c":"GenericSqlTypeRtti","l":"toString()"},{"p":"org.apache.calcite.runtime.rtti","c":"RowSqlTypeRtti","l":"toString()"},{"p":"org.apache.calcite.runtime","c":"SpaceFillingCurve2D.CoveredRange","l":"toString()"},{"p":"org.apache.calcite.runtime","c":"SpaceFillingCurve2D.OverlappingRange","l":"toString()"},{"p":"org.apache.calcite.runtime","c":"Unit","l":"toString()"},{"p":"org.apache.calcite.runtime.variant","c":"VariantNonNull","l":"toString()"},{"p":"org.apache.calcite.runtime.variant","c":"VariantNull","l":"toString()"},{"p":"org.apache.calcite.runtime.variant","c":"VariantSqlNull","l":"toString()"},{"p":"org.apache.calcite.schema.impl","c":"DelegatingSchema","l":"toString()"},{"p":"org.apache.calcite.schema.impl","c":"LongSchemaVersion","l":"toString()"},{"p":"org.apache.calcite.schema.lookup","c":"LikePattern","l":"toString()"},{"p":"org.apache.calcite.sql.advise","c":"SqlSimpleParser.Token","l":"toString()"},{"p":"org.apache.calcite.sql.babel.postgres","c":"SqlSetOptions.Names","l":"toString()"},{"p":"org.apache.calcite.sql.babel.postgres","c":"TransactionChainingMode","l":"toString()"},{"p":"org.apache.calcite.sql.babel.postgres","c":"TransactionMode","l":"toString()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserPos","l":"toString()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil.ToTreeListItem","l":"toString()"},{"p":"org.apache.calcite.sql.parser","c":"StringAndPos","l":"toString()"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"toString()"},{"p":"org.apache.calcite.sql","c":"SqlAbstractDateTimeLiteral","l":"toString()"},{"p":"org.apache.calcite.sql","c":"SqlAccessType","l":"toString()"},{"p":"org.apache.calcite.sql","c":"SqlCollation","l":"toString()"},{"p":"org.apache.calcite.sql","c":"SqlDateLiteral","l":"toString()"},{"p":"org.apache.calcite.sql","c":"SqlIdentifier","l":"toString()"},{"p":"org.apache.calcite.sql","c":"SqlIntervalLiteral.IntervalValue","l":"toString()"},{"p":"org.apache.calcite.sql","c":"SqlJsonEmptyOrError","l":"toString()"},{"p":"org.apache.calcite.sql","c":"SqlJsonEncoding","l":"toString()"},{"p":"org.apache.calcite.sql","c":"SqlJsonQueryEmptyOrErrorBehavior","l":"toString()"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize.AfterOption","l":"toString()"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize.RowsPerMatchOption","l":"toString()"},{"p":"org.apache.calcite.sql","c":"SqlNode","l":"toString()"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"toString()"},{"p":"org.apache.calcite.sql","c":"SqlSampleSpec.SqlSubstitutionSampleSpec","l":"toString()"},{"p":"org.apache.calcite.sql","c":"SqlSampleSpec.SqlTableSampleSpec","l":"toString()"},{"p":"org.apache.calcite.sql","c":"SqlTimeLiteral","l":"toString()"},{"p":"org.apache.calcite.sql","c":"SqlTimestampLiteral","l":"toString()"},{"p":"org.apache.calcite.sql","c":"SqlTimestampTzLiteral","l":"toString()"},{"p":"org.apache.calcite.sql","c":"SqlTimeTzLiteral","l":"toString()"},{"p":"org.apache.calcite.sql","c":"SqlUuidLiteral","l":"toString()"},{"p":"org.apache.calcite.sql","c":"TableCharacteristic","l":"toString()"},{"p":"org.apache.calcite.sql.util","c":"IdPair","l":"toString()"},{"p":"org.apache.calcite.sql.util","c":"SqlBuilder","l":"toString()"},{"p":"org.apache.calcite.sql.util","c":"SqlString","l":"toString()"},{"p":"org.apache.calcite.sql.validate","c":"SqlIdentifierMoniker","l":"toString()"},{"p":"org.apache.calcite.sql.validate","c":"SqlMonikerImpl","l":"toString()"},{"p":"org.apache.calcite.sql.validate","c":"SqlQualified","l":"toString()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope.Path","l":"toString()"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator.CorelMap","l":"toString()"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture.MetadataConfig","l":"toString()"},{"p":"org.apache.calcite.test.schemata.hr","c":"Department","l":"toString()"},{"p":"org.apache.calcite.test.schemata.hr","c":"Dependent","l":"toString()"},{"p":"org.apache.calcite.test.schemata.hr","c":"Employee","l":"toString()"},{"p":"org.apache.calcite.test.schemata.hr","c":"Event","l":"toString()"},{"p":"org.apache.calcite.test.schemata.hr","c":"HierarchySchema.Hierarchy","l":"toString()"},{"p":"org.apache.calcite.test.schemata.hr","c":"HierarchySchema","l":"toString()"},{"p":"org.apache.calcite.test.schemata.hr","c":"HrSchema","l":"toString()"},{"p":"org.apache.calcite.test.schemata.hr","c":"HrSchemaBig","l":"toString()"},{"p":"org.apache.calcite.test.schemata.hr","c":"Location","l":"toString()"},{"p":"org.apache.calcite.test.schemata.hr","c":"NullableTest","l":"toString()"},{"p":"org.apache.calcite.test.schemata.tpch","c":"TpchSchema.Customer","l":"toString()"},{"p":"org.apache.calcite.test.schemata.tpch","c":"TpchSchema.LineItem","l":"toString()"},{"p":"org.apache.calcite.test.schemata.tpch","c":"TpchSchema.Part","l":"toString()"},{"p":"org.apache.calcite.test.schemata.tpch","c":"TpchSchema.PartSupp","l":"toString()"},{"p":"org.apache.calcite.tools","c":"Hoist.Hoisted","l":"toString()"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"toString()"},{"p":"org.apache.calcite.util","c":"BitString","l":"toString()"},{"p":"org.apache.calcite.util","c":"DateString","l":"toString()"},{"p":"org.apache.calcite.util.graph","c":"DefaultDirectedGraph","l":"toString()"},{"p":"org.apache.calcite.util.graph","c":"DefaultEdge","l":"toString()"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"toString()"},{"p":"org.apache.calcite.util","c":"ImmutableIntList","l":"toString()"},{"p":"org.apache.calcite.util.mapping","c":"IntPair","l":"toString()"},{"p":"org.apache.calcite.util.mapping","c":"Mappings.AbstractMapping","l":"toString()"},{"p":"org.apache.calcite.util","c":"NameMap","l":"toString()"},{"p":"org.apache.calcite.util","c":"NameMultimap","l":"toString()"},{"p":"org.apache.calcite.util","c":"NameSet","l":"toString()"},{"p":"org.apache.calcite.util","c":"NlsString","l":"toString()"},{"p":"org.apache.calcite.util","c":"Pair","l":"toString()"},{"p":"org.apache.calcite.util","c":"Permutation","l":"toString()"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser.Call","l":"toString()"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser.Token","l":"toString()"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser","l":"toString()"},{"p":"org.apache.calcite.util","c":"Sarg","l":"toString()"},{"p":"org.apache.calcite.util","c":"Smalls.IntString","l":"toString()"},{"p":"org.apache.calcite.util","c":"Smalls.WideSaleSchema","l":"toString()"},{"p":"org.apache.calcite.util","c":"TimestampString","l":"toString()"},{"p":"org.apache.calcite.util","c":"TimestampWithTimeZoneString","l":"toString()"},{"p":"org.apache.calcite.util","c":"TimeString","l":"toString()"},{"p":"org.apache.calcite.util","c":"TimeWithTimeZoneString","l":"toString()"},{"p":"org.apache.calcite.piglet","c":"Ast","l":"toString(Ast.Node)","u":"toString(org.apache.calcite.piglet.Ast.Node)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toString(BigDecimal)","u":"toString(java.math.BigDecimal)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toString(boolean)"},{"p":"org.apache.calcite.plan","c":"RelOptCost","l":"toString(double)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toString(double)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toString(float)"},{"p":"org.apache.calcite.util","c":"TimestampString","l":"toString(int)"},{"p":"org.apache.calcite.util","c":"TimestampWithTimeZoneString","l":"toString(int)"},{"p":"org.apache.calcite.util","c":"TimeString","l":"toString(int)"},{"p":"org.apache.calcite.util","c":"TimeWithTimeZoneString","l":"toString(int)"},{"p":"org.apache.calcite.util","c":"Util","l":"toString(Iterable<T>, String, String, String)","u":"toString(java.lang.Iterable,java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"toString(List<? extends Node>, String, boolean)","u":"toString(java.util.List,java.lang.String,boolean)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"toString(Node)","u":"toString(org.apache.calcite.linq4j.tree.Node)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"toString(RelNode)","u":"toString(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"toString(RelNode, SqlExplainLevel)","u":"toString(org.apache.calcite.rel.RelNode,org.apache.calcite.sql.SqlExplainLevel)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"toString(RelNode, SqlExplainLevel, boolean)","u":"toString(org.apache.calcite.rel.RelNode,org.apache.calcite.sql.SqlExplainLevel,boolean)"},{"p":"org.apache.calcite.test","c":"CalciteAssert","l":"toString(ResultSet)","u":"toString(java.sql.ResultSet)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"toStringArray(List<String>)","u":"toStringArray(java.util.List)"},{"p":"org.apache.calcite.util","c":"ConversionUtil","l":"toStringFromApprox(double, boolean)","u":"toStringFromApprox(double,boolean)"},{"p":"org.apache.calcite.util","c":"ConversionUtil","l":"toStringFromByteArray(byte[], int)","u":"toStringFromByteArray(byte[],int)"},{"p":"org.apache.calcite.linq4j.function","c":"Functions","l":"toStringSelector()"},{"p":"org.apache.calcite.util.graph","c":"DefaultDirectedGraph","l":"toStringUnordered()"},{"p":"org.apache.calcite.sql.validate","c":"MatchRecognizeNamespace","l":"toStruct(RelDataType, SqlNode)","u":"toStruct(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.adapter.elasticsearch","c":"ElasticsearchSearchResult.SearchHits","l":"total()"},{"p":"org.apache.calcite.util","c":"Smalls.AllTypesFunction","l":"toTimeFun(Long)","u":"toTimeFun(java.lang.Long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.DateFormatFunction","l":"toTimestamp(String, String)","u":"toTimestamp(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.DateFormatFunctionPg","l":"toTimestamp(String, String)","u":"toTimestamp(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.util","c":"Smalls.AllTypesFunction","l":"toTimestampFun(Long)","u":"toTimestampFun(java.lang.Long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toTimestampWithLocalTimeZone(String)","u":"toTimestampWithLocalTimeZone(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toTimestampWithLocalTimeZone(String, TimeZone)","u":"toTimestampWithLocalTimeZone(java.lang.String,java.util.TimeZone)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toTimeWithLocalTimeZone(String)","u":"toTimeWithLocalTimeZone(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"toTimeWithLocalTimeZone(String, TimeZone)","u":"toTimeWithLocalTimeZone(java.lang.String,java.util.TimeZone)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"toTree(List<Object>)","u":"toTree(java.util.List)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"toTreeEx(SqlSpecialOperator.TokenSequence, int, int, SqlKind)","u":"toTreeEx(org.apache.calcite.sql.SqlSpecialOperator.TokenSequence,int,int,org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil.ToTreeListItem","l":"ToTreeListItem(SqlOperator, SqlParserPos)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.adapter.arrow","c":"ArrowFieldTypeFactory","l":"toType(ArrowType, JavaTypeFactory)","u":"toType(org.apache.arrow.vector.types.pojo.ArrowType,org.apache.calcite.adapter.java.JavaTypeFactory)"},{"p":"org.apache.calcite.rel.externalize","c":"RelJson","l":"toType(RelDataTypeFactory, Object)","u":"toType(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.Object)"},{"p":"org.apache.calcite.util","c":"Util","l":"toUnchecked(Exception)","u":"toUnchecked(java.lang.Exception)"},{"p":"org.apache.calcite.util","c":"Util","l":"toURL(File)","u":"toURL(java.io.File)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"toValue()"},{"p":"org.apache.calcite.sql","c":"SqlNumericLiteral","l":"toValue()"},{"p":"org.apache.calcite.adapter.tpcds","c":"TpcdsSchema","l":"TpcdsSchema(double)","u":"%3Cinit%3E(double)"},{"p":"org.apache.calcite.adapter.tpcds","c":"TpcdsSchema","l":"TpcdsSchema(double, int, int)","u":"%3Cinit%3E(double,int,int)"},{"p":"org.apache.calcite.adapter.tpcds","c":"TpcdsSchemaFactory","l":"TpcdsSchemaFactory()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.test","c":"CalciteAssert.SchemaSpec","l":"TPCH"},{"p":"org.apache.calcite.test.schemata.tpch","c":"TpchSchema","l":"TpchSchema()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.tpch","c":"TpchSchema","l":"TpchSchema(double, int, int, boolean)","u":"%3Cinit%3E(double,int,int,boolean)"},{"p":"org.apache.calcite.adapter.tpch","c":"TpchSchemaFactory","l":"TpchSchemaFactory()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util.trace","c":"CalciteLogger","l":"trace(String, Object, Object)","u":"trace(java.lang.String,java.lang.Object,java.lang.Object)"},{"p":"org.apache.calcite.util.trace","c":"CalciteLogger","l":"trace(String, Object, Object, Object)","u":"trace(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)"},{"p":"org.apache.calcite.util.trace","c":"CalciteLogger","l":"trace(String, Object, Object, Object, Object)","u":"trace(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)"},{"p":"org.apache.calcite.util.trace","c":"CalciteLogger","l":"trace(String, Object...)","u":"trace(java.lang.String,java.lang.Object...)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"TRACER"},{"p":"org.apache.calcite.util.trace","c":"CalciteTimingTracer","l":"traceTime(String)","u":"traceTime(java.lang.String)"},{"p":"org.apache.calcite.sql.fun","c":"SqlTrimFunction.Flag","l":"TRAILING"},{"p":"org.apache.calcite.plan","c":"RelOptRuleOperand","l":"trait"},{"p":"org.apache.calcite.plan","c":"RelRule.OperandDetailBuilder","l":"trait(RelTrait)","u":"trait(org.apache.calcite.plan.RelTrait)"},{"p":"org.apache.calcite.rel.convert","c":"ConverterImpl","l":"traitDef"},{"p":"org.apache.calcite.tools","c":"Frameworks.ConfigBuilder","l":"traitDefs(List<RelTraitDef>)","u":"traitDefs(java.util.List)"},{"p":"org.apache.calcite.tools","c":"Frameworks.ConfigBuilder","l":"traitDefs(RelTraitDef...)","u":"traitDefs(org.apache.calcite.plan.RelTraitDef...)"},{"p":"org.apache.calcite.rel.convert","c":"TraitMatchingRule","l":"TraitMatchingRule(ConverterRule)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule)"},{"p":"org.apache.calcite.rel.convert","c":"TraitMatchingRule","l":"TraitMatchingRule(ConverterRule, RelBuilderFactory)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.ConverterRule,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.convert","c":"TraitMatchingRule","l":"TraitMatchingRule(TraitMatchingRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.convert.TraitMatchingRule.Config)"},{"p":"org.apache.calcite.rel","c":"AbstractRelNode","l":"traitSet"},{"p":"org.apache.calcite.plan","c":"RelOptCluster","l":"traitSet()"},{"p":"org.apache.calcite.plan","c":"RelOptCluster","l":"traitSetOf(RelTrait)","u":"traitSetOf(org.apache.calcite.plan.RelTrait)"},{"p":"org.apache.calcite.plan","c":"RelOptCluster","l":"traitSetOf(RelTrait...)","u":"traitSetOf(org.apache.calcite.plan.RelTrait...)"},{"p":"org.apache.calcite.sql.babel.postgres","c":"SqlSetOptions.Names","l":"TRANSACTION"},{"p":"org.apache.calcite.sql.babel.postgres","c":"SqlSetOptions.Names","l":"TRANSACTION_SNAPSHOT"},{"p":"org.apache.calcite.runtime","c":"PairList","l":"transform(BiFunction<T, U, R>)","u":"transform(java.util.function.BiFunction)"},{"p":"org.apache.calcite.linq4j","c":"Linq4j","l":"transform(Enumerator<? extends F>, Function1<? super F, ? extends E>)","u":"transform(org.apache.calcite.linq4j.Enumerator,org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.linq4j","c":"TransformedEnumerator","l":"transform(F)"},{"p":"org.apache.calcite.prepare","c":"PlannerImpl","l":"transform(int, RelTraitSet, RelNode)","u":"transform(int,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.tools","c":"Planner","l":"transform(int, RelTraitSet, RelNode)","u":"transform(int,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.util","c":"Util","l":"transform(Iterable<? extends F>, Function<? super F, ? extends T>)","u":"transform(java.lang.Iterable,java.util.function.Function)"},{"p":"org.apache.calcite.util","c":"Util","l":"transform(Iterator<? extends F>, Function<? super F, ? extends T>)","u":"transform(java.util.Iterator,java.util.function.Function)"},{"p":"org.apache.calcite.util","c":"Util","l":"transform(List<? extends F>, Function<? super F, ? extends T>)","u":"transform(java.util.List,java.util.function.Function)"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"transform(Mappings.TargetMapping)","u":"transform(org.apache.calcite.util.mapping.Mappings.TargetMapping)"},{"p":"org.apache.calcite.sql","c":"SqlOperatorBinding","l":"transform(SqlTypeTransform)","u":"transform(org.apache.calcite.sql.type.SqlTypeTransform)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"transform(UnaryOperator<RelBuilder.Config>)","u":"transform(java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"transform(UnaryOperator<SqlValidator.Config>)","u":"transform(java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"transform(UnaryOperator<SqlValidator.Config>)","u":"transform(java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.runtime","c":"PairList","l":"transform2(BiFunction<T, U, R>)","u":"transform2(java.util.function.BiFunction)"},{"p":"org.apache.calcite.runtime","c":"AddZTransformer","l":"transformCoordinates(CoordinateSequence, Geometry)","u":"transformCoordinates(org.locationtech.jts.geom.CoordinateSequence,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"CoordinateTransformer","l":"transformCoordinates(CoordinateSequence, Geometry)","u":"transformCoordinates(org.locationtech.jts.geom.CoordinateSequence,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"FlipCoordinatesTransformer","l":"transformCoordinates(CoordinateSequence, Geometry)","u":"transformCoordinates(org.locationtech.jts.geom.CoordinateSequence,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"ProjectionTransformer","l":"transformCoordinates(CoordinateSequence, Geometry)","u":"transformCoordinates(org.locationtech.jts.geom.CoordinateSequence,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"RemoveRepeatedPointsTransformer","l":"transformCoordinates(CoordinateSequence, Geometry)","u":"transformCoordinates(org.locationtech.jts.geom.CoordinateSequence,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.linq4j","c":"TransformedEnumerator","l":"TransformedEnumerator(Enumerator<? extends F>)","u":"%3Cinit%3E(org.apache.calcite.linq4j.Enumerator)"},{"p":"org.apache.calcite.runtime","c":"ProjectionTransformer","l":"transformGeometryCollection(GeometryCollection, Geometry)","u":"transformGeometryCollection(org.locationtech.jts.geom.GeometryCollection,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.util","c":"Util","l":"transformIndexed(List<? extends F>, BiFunction<? super F, Integer, ? extends T>)","u":"transformIndexed(java.util.List,java.util.function.BiFunction)"},{"p":"org.apache.calcite.runtime","c":"ProjectionTransformer","l":"transformLinearRing(LinearRing, Geometry)","u":"transformLinearRing(org.locationtech.jts.geom.LinearRing,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"ProjectionTransformer","l":"transformLineString(LineString, Geometry)","u":"transformLineString(org.locationtech.jts.geom.LineString,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"ProjectionTransformer","l":"transformMultiLineString(MultiLineString, Geometry)","u":"transformMultiLineString(org.locationtech.jts.geom.MultiLineString,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"ProjectionTransformer","l":"transformMultiPoint(MultiPoint, Geometry)","u":"transformMultiPoint(org.locationtech.jts.geom.MultiPoint,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"ProjectionTransformer","l":"transformMultiPolygon(MultiPolygon, Geometry)","u":"transformMultiPolygon(org.locationtech.jts.geom.MultiPolygon,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.rex","c":"RexTransformer","l":"transformNullSemantics()"},{"p":"org.apache.calcite.runtime","c":"ProjectionTransformer","l":"transformPoint(Point, Geometry)","u":"transformPoint(org.locationtech.jts.geom.Point,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"ProjectionTransformer","l":"transformPolygon(Polygon, Geometry)","u":"transformPolygon(org.locationtech.jts.geom.Polygon,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.runtime","c":"RemoveHoleTransformer","l":"transformPolygon(Polygon, Geometry)","u":"transformPolygon(org.locationtech.jts.geom.Polygon,org.locationtech.jts.geom.Geometry)"},{"p":"org.apache.calcite.plan","c":"RelOptRuleCall","l":"transformTo(RelNode)","u":"transformTo(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan","c":"RelOptRuleCall","l":"transformTo(RelNode, Map<RelNode, RelNode>)","u":"transformTo(org.apache.calcite.rel.RelNode,java.util.Map)"},{"p":"org.apache.calcite.plan.hep","c":"HepRuleCall","l":"transformTo(RelNode, Map<RelNode, RelNode>, RelHintsPropagator)","u":"transformTo(org.apache.calcite.rel.RelNode,java.util.Map,org.apache.calcite.plan.RelHintsPropagator)"},{"p":"org.apache.calcite.plan","c":"RelOptRuleCall","l":"transformTo(RelNode, Map<RelNode, RelNode>, RelHintsPropagator)","u":"transformTo(org.apache.calcite.rel.RelNode,java.util.Map,org.apache.calcite.plan.RelHintsPropagator)"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoRuleCall","l":"transformTo(RelNode, Map<RelNode, RelNode>, RelHintsPropagator)","u":"transformTo(org.apache.calcite.rel.RelNode,java.util.Map,org.apache.calcite.plan.RelHintsPropagator)"},{"p":"org.apache.calcite.plan","c":"RelOptRuleCall","l":"transformTo(RelNode, RelHintsPropagator)","u":"transformTo(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelHintsPropagator)"},{"p":"org.apache.calcite.adapter.splunk","c":"SplunkPushDownRule","l":"transformToFarragoUdxRel(RelOptRuleCall, SplunkTableScan, LogicalFilter, LogicalProject, LogicalProject)","u":"transformToFarragoUdxRel(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.adapter.splunk.SplunkTableScan,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalProject)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeTransform","l":"transformType(SqlOperatorBinding, RelDataType)","u":"transformType(org.apache.calcite.sql.SqlOperatorBinding,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"transientScan(String)","u":"transientScan(java.lang.String)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"transientScan(String, RelDataType)","u":"transientScan(java.lang.String,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.core","c":"RepeatUnion","l":"transientTable"},{"p":"org.apache.calcite.adapter.csv","c":"CsvTable.Flavor","l":"TRANSLATABLE"},{"p":"org.apache.calcite.adapter.file","c":"CsvTable.Flavor","l":"TRANSLATABLE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"TRANSLATE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"TRANSLATE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TRANSLATE_WITH_CHARSET"},{"p":"org.apache.calcite.sql.validate","c":"MatchRecognizeNamespace","l":"translate(String)","u":"translate(java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"AliasNamespace","l":"translate(String)","u":"translate(java.lang.String)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TRANSLATE3"},{"p":"org.apache.calcite.sql.fun","c":"OracleSqlOperatorTable","l":"TRANSLATE3"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"TRANSLATE3"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"translate3(String, String, String)","u":"translate3(java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.adapter.druid","c":"TimeExtractionFunction","l":"translateCastToTimeExtract(RexNode, TimeZone)","u":"translateCastToTimeExtract(org.apache.calcite.rex.RexNode,java.util.TimeZone)"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"translateCharacterSetName(String)","u":"translateCharacterSetName(java.lang.String)"},{"p":"org.apache.calcite.sql2rel","c":"StandardConvertletTable","l":"translateCharset(SqlRexContext, SqlCall)","u":"translateCharset(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexToLixTranslator","l":"translateCondition(RexProgram, JavaTypeFactory, BlockBuilder, RexToLixTranslator.InputGetter, Function1<String, RexToLixTranslator.InputGetter>, SqlConformance)","u":"translateCondition(org.apache.calcite.rex.RexProgram,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.RexToLixTranslator.InputGetter,org.apache.calcite.linq4j.function.Function1,org.apache.calcite.sql.validate.SqlConformance)"},{"p":"org.apache.calcite.rel.externalize","c":"RelJson.InputTranslator","l":"translateInput(RelJson, int, Map<String, Object>, RelInput)","u":"translateInput(org.apache.calcite.rel.externalize.RelJson,int,java.util.Map,org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexToLixTranslator","l":"translateList(List<? extends RexNode>)","u":"translateList(java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexToLixTranslator","l":"translateList(List<? extends RexNode>, List<? extends Type>)","u":"translateList(java.util.List,java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexToLixTranslator","l":"translateList(List<RexNode>, RexImpTable.NullAs)","u":"translateList(java.util.List,org.apache.calcite.adapter.enumerable.RexImpTable.NullAs)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexToLixTranslator","l":"translateList(List<RexNode>, RexImpTable.NullAs, List<? extends Type>)","u":"translateList(java.util.List,org.apache.calcite.adapter.enumerable.RexImpTable.NullAs,java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexToLixTranslator","l":"translateLiteral(RexLiteral, RelDataType, JavaTypeFactory, RexImpTable.NullAs)","u":"translateLiteral(org.apache.calcite.rex.RexLiteral,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.adapter.enumerable.RexImpTable.NullAs)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexToLixTranslator","l":"translateProjects(RexProgram, JavaTypeFactory, SqlConformance, BlockBuilder, BlockBuilder, PhysType, Expression, RexToLixTranslator.InputGetter, Function1<String, RexToLixTranslator.InputGetter>)","u":"translateProjects(org.apache.calcite.rex.RexProgram,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.sql.validate.SqlConformance,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.RexToLixTranslator.InputGetter,org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexToLixTranslator","l":"translateProjects(RexProgram, JavaTypeFactory, SqlConformance, BlockBuilder, PhysType, Expression, RexToLixTranslator.InputGetter, Function1<String, RexToLixTranslator.InputGetter>)","u":"translateProjects(org.apache.calcite.rex.RexProgram,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.sql.validate.SqlConformance,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.RexToLixTranslator.InputGetter,org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexToLixTranslator","l":"translateTableFunction(JavaTypeFactory, SqlConformance, BlockBuilder, Expression, RexCall, Expression, PhysType, PhysType)","u":"translateTableFunction(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.sql.validate.SqlConformance,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rex.RexCall,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.PhysType)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"translateWithCharset(String, String)","u":"translateWithCharset(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.Config","l":"treatDynamicCallsAsConstant()"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"TRIM"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TRIM"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"TRIM"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"trim(boolean, boolean, String, String)","u":"trim(boolean,boolean,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"trim(boolean, boolean, String, String, boolean)","u":"trim(boolean,boolean,java.lang.String,java.lang.String,boolean)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"trim(ByteString)","u":"trim(org.apache.calcite.avatica.util.ByteString)"},{"p":"org.apache.calcite.sql2rel","c":"RelFieldTrimmer","l":"trim(RelNode)","u":"trim(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.util","c":"Source","l":"trim(String)","u":"trim(java.lang.String)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserUtil","l":"trim(String, String)","u":"trim(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.sql2rel","c":"RelFieldTrimmer","l":"trimChild(RelNode, RelNode, ImmutableBitSet, Set<RelDataTypeField>)","u":"trimChild(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)"},{"p":"org.apache.calcite.sql2rel","c":"RelFieldTrimmer","l":"trimChildRestore(RelNode, RelNode, ImmutableBitSet, Set<RelDataTypeField>)","u":"trimChildRestore(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"trimError(String)","u":"trimError(java.lang.String)"},{"p":"org.apache.calcite.sql2rel","c":"RelFieldTrimmer","l":"trimFields(Aggregate, ImmutableBitSet, Set<RelDataTypeField>)","u":"trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)"},{"p":"org.apache.calcite.sql2rel","c":"RelFieldTrimmer","l":"trimFields(Calc, ImmutableBitSet, Set<RelDataTypeField>)","u":"trimFields(org.apache.calcite.rel.core.Calc,org.apache.calcite.util.ImmutableBitSet,java.util.Set)"},{"p":"org.apache.calcite.sql2rel","c":"RelFieldTrimmer","l":"trimFields(Exchange, ImmutableBitSet, Set<RelDataTypeField>)","u":"trimFields(org.apache.calcite.rel.core.Exchange,org.apache.calcite.util.ImmutableBitSet,java.util.Set)"},{"p":"org.apache.calcite.sql2rel","c":"RelFieldTrimmer","l":"trimFields(Filter, ImmutableBitSet, Set<RelDataTypeField>)","u":"trimFields(org.apache.calcite.rel.core.Filter,org.apache.calcite.util.ImmutableBitSet,java.util.Set)"},{"p":"org.apache.calcite.sql2rel","c":"RelFieldTrimmer","l":"trimFields(Join, ImmutableBitSet, Set<RelDataTypeField>)","u":"trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)"},{"p":"org.apache.calcite.sql2rel","c":"RelFieldTrimmer","l":"trimFields(LogicalCorrelate, ImmutableBitSet, Set<RelDataTypeField>)","u":"trimFields(org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)"},{"p":"org.apache.calcite.sql2rel","c":"RelFieldTrimmer","l":"trimFields(LogicalTableFunctionScan, ImmutableBitSet, Set<RelDataTypeField>)","u":"trimFields(org.apache.calcite.rel.logical.LogicalTableFunctionScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)"},{"p":"org.apache.calcite.sql2rel","c":"RelFieldTrimmer","l":"trimFields(LogicalTableModify, ImmutableBitSet, Set<RelDataTypeField>)","u":"trimFields(org.apache.calcite.rel.logical.LogicalTableModify,org.apache.calcite.util.ImmutableBitSet,java.util.Set)"},{"p":"org.apache.calcite.sql2rel","c":"RelFieldTrimmer","l":"trimFields(LogicalValues, ImmutableBitSet, Set<RelDataTypeField>)","u":"trimFields(org.apache.calcite.rel.logical.LogicalValues,org.apache.calcite.util.ImmutableBitSet,java.util.Set)"},{"p":"org.apache.calcite.sql2rel","c":"RelFieldTrimmer","l":"trimFields(Project, ImmutableBitSet, Set<RelDataTypeField>)","u":"trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)"},{"p":"org.apache.calcite.sql2rel","c":"RelFieldTrimmer","l":"trimFields(RelNode, ImmutableBitSet, Set<RelDataTypeField>)","u":"trimFields(org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)"},{"p":"org.apache.calcite.sql2rel","c":"RelFieldTrimmer","l":"trimFields(Sample, ImmutableBitSet, Set<RelDataTypeField>)","u":"trimFields(org.apache.calcite.rel.core.Sample,org.apache.calcite.util.ImmutableBitSet,java.util.Set)"},{"p":"org.apache.calcite.sql2rel","c":"RelFieldTrimmer","l":"trimFields(SetOp, ImmutableBitSet, Set<RelDataTypeField>)","u":"trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)"},{"p":"org.apache.calcite.sql2rel","c":"RelFieldTrimmer","l":"trimFields(Snapshot, ImmutableBitSet, Set<RelDataTypeField>)","u":"trimFields(org.apache.calcite.rel.core.Snapshot,org.apache.calcite.util.ImmutableBitSet,java.util.Set)"},{"p":"org.apache.calcite.sql2rel","c":"RelFieldTrimmer","l":"trimFields(Sort, ImmutableBitSet, Set<RelDataTypeField>)","u":"trimFields(org.apache.calcite.rel.core.Sort,org.apache.calcite.util.ImmutableBitSet,java.util.Set)"},{"p":"org.apache.calcite.sql2rel","c":"RelFieldTrimmer","l":"trimFields(SortExchange, ImmutableBitSet, Set<RelDataTypeField>)","u":"trimFields(org.apache.calcite.rel.core.SortExchange,org.apache.calcite.util.ImmutableBitSet,java.util.Set)"},{"p":"org.apache.calcite.sql2rel","c":"RelFieldTrimmer","l":"trimFields(TableScan, ImmutableBitSet, Set<RelDataTypeField>)","u":"trimFields(org.apache.calcite.rel.core.TableScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)"},{"p":"org.apache.calcite.runtime","c":"Hook","l":"TRIMMED"},{"p":"org.apache.calcite.test","c":"Matchers","l":"trimNodeIds(String)","u":"trimNodeIds(java.lang.String)"},{"p":"org.apache.calcite.util","c":"Source","l":"trimOrNull(String)","u":"trimOrNull(java.lang.String)"},{"p":"org.apache.calcite.sql.test","c":"AbstractSqlTester","l":"trimRelNode(SqlTestFactory, RelNode)","u":"trimRelNode(org.apache.calcite.sql.test.SqlTestFactory,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.sql.test","c":"SqlTester","l":"trimRelNode(SqlTestFactory, RelNode)","u":"trimRelNode(org.apache.calcite.sql.test.SqlTestFactory,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.sql2rel","c":"RelFieldTrimmer.TrimResult","l":"TrimResult(RelNode, Mapping)","u":"%3Cinit%3E(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"trimUnusedFields(boolean, RelNode)","u":"trimUnusedFields(boolean,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.prepare","c":"Prepare","l":"trimUnusedFields(RelRoot)","u":"trimUnusedFields(org.apache.calcite.rel.RelRoot)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexImpTable.NullAs","l":"TRUE"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.Logic","l":"TRUE"},{"p":"org.apache.calcite.rex","c":"RexUnknownAs","l":"TRUE"},{"p":"org.apache.calcite.sql","c":"SqlJsonExistsErrorBehavior","l":"TRUE"},{"p":"org.apache.calcite.linq4j.function","c":"Predicate1","l":"TRUE"},{"p":"org.apache.calcite.linq4j.function","c":"Predicate2","l":"TRUE"},{"p":"org.apache.calcite.rel.rules","c":"PushProjector.ExprCondition","l":"TRUE"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexImpTable","l":"TRUE_EXPR"},{"p":"org.apache.calcite.linq4j.tree","c":"OptimizeShuttle","l":"TRUE_EXPR"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.Logic","l":"TRUE_FALSE"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.Logic","l":"TRUE_FALSE_UNKNOWN"},{"p":"org.apache.calcite.rel.rules","c":"FilterJoinRule","l":"TRUE_PREDICATE"},{"p":"org.apache.calcite.linq4j.function","c":"Functions","l":"truePredicate1()"},{"p":"org.apache.calcite.linq4j.function","c":"Functions","l":"truePredicate2()"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"TRUNC_BIG_QUERY"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TRUNCATE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"TRUNCATE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TRUNCATE_OR_PAD"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"TRUNCATE_TABLE"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"truncate(ByteString, int)","u":"truncate(org.apache.calcite.avatica.util.ByteString,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"truncate(int, int)","u":"truncate(int,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"truncate(long, long)","u":"truncate(long,long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"truncate(String, int)","u":"truncate(java.lang.String,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"truncateOrPad(ByteString, int)","u":"truncateOrPad(org.apache.calcite.avatica.util.ByteString,int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"truncateOrPad(String, int)","u":"truncateOrPad(java.lang.String,int)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlDdlNodes","l":"truncateTable(SqlParserPos, SqlIdentifier, boolean)","u":"truncateTable(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlIdentifier,boolean)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"Try"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture.CastType","l":"TRY_CAST"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"TRY_CAST"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"tryCatch(Statement, CatchBlock...)","u":"tryCatch(org.apache.calcite.linq4j.tree.Statement,org.apache.calcite.linq4j.tree.CatchBlock...)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"tryCatch(Statement, Iterable<? extends CatchBlock>)","u":"tryCatch(org.apache.calcite.linq4j.tree.Statement,java.lang.Iterable)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"tryCatchFinally(Statement, Iterable<? extends CatchBlock>, Statement)","u":"tryCatchFinally(org.apache.calcite.linq4j.tree.Statement,java.lang.Iterable,org.apache.calcite.linq4j.tree.Statement)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"tryCatchFinally(Statement, Statement, CatchBlock...)","u":"tryCatchFinally(org.apache.calcite.linq4j.tree.Statement,org.apache.calcite.linq4j.tree.Statement,org.apache.calcite.linq4j.tree.CatchBlock...)"},{"p":"org.apache.calcite.sql.fun","c":"SqlQuantifyOperator","l":"tryDeriveTypeForCollection(SqlValidator, SqlValidatorScope, SqlCall)","u":"tryDeriveTypeForCollection(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"tryFinally(Statement, Statement)","u":"tryFinally(org.apache.calcite.linq4j.tree.Statement,org.apache.calcite.linq4j.tree.Statement)"},{"p":"org.apache.calcite.linq4j.tree","c":"DeterministicCodeOptimizer","l":"tryOptimizeMethodCall(MethodCallExpression)","u":"tryOptimizeMethodCall(org.apache.calcite.linq4j.tree.MethodCallExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"ClassDeclarationFinder","l":"tryOptimizeNewInstance(NewExpression)","u":"tryOptimizeNewInstance(org.apache.calcite.linq4j.tree.NewExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"DeterministicCodeOptimizer","l":"tryOptimizeNewInstance(NewExpression)","u":"tryOptimizeNewInstance(org.apache.calcite.linq4j.tree.NewExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"TryStatement","l":"TryStatement(Statement, List<CatchBlock>, Statement)","u":"%3Cinit%3E(org.apache.calcite.linq4j.tree.Statement,java.util.List,org.apache.calcite.linq4j.tree.Statement)"},{"p":"org.apache.calcite.util","c":"TryThreadLocal","l":"TryThreadLocal()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.plan","c":"RelOptMaterialization","l":"tryUseStar(RelNode, RelOptTable)","u":"tryUseStar(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptTable)"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"ts"},{"p":"org.apache.calcite.test.schemata.hr","c":"Event","l":"ts"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"TUMBLE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"TUMBLE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"TUMBLE_END"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"TUMBLE_END"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"TUMBLE_OLD"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"TUMBLE_START"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"TUMBLE_START"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TUMBLING"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumUtils","l":"tumbling(Enumerable<TSource>, Function1<TSource, TResult>)","u":"tumbling(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function1)"},{"p":"org.apache.calcite.piglet","c":"Ast.Op","l":"TUPLE"},{"p":"org.apache.calcite.piglet","c":"Ast.Op","l":"TUPLE_TYPE"},{"p":"org.apache.calcite.runtime","c":"SpaceFillingCurve2D.AbstractRange","l":"tuple()"},{"p":"org.apache.calcite.runtime","c":"SpaceFillingCurve2D.IndexRange","l":"tuple()"},{"p":"org.apache.calcite.rel.core","c":"Values","l":"tuples"},{"p":"org.apache.calcite.piglet","c":"Ast.TupleType","l":"TupleType(SqlParserPos, List<Ast.FieldSchema>)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,java.util.List)"},{"p":"org.apache.calcite.linq4j.tree","c":"AbstractNode","l":"type"},{"p":"org.apache.calcite.linq4j.tree","c":"NewExpression","l":"type"},{"p":"org.apache.calcite.linq4j.tree","c":"TypeBinaryExpression","l":"type"},{"p":"org.apache.calcite.model","c":"JsonType","l":"type"},{"p":"org.apache.calcite.model","c":"JsonTypeAttribute","l":"type"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"type"},{"p":"org.apache.calcite.rel.mutable","c":"MutableRel","l":"type"},{"p":"org.apache.calcite.rex","c":"RexCall","l":"type"},{"p":"org.apache.calcite.rex","c":"RexVariable","l":"type"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisorHint","l":"type"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateForeignSchema","l":"type"},{"p":"org.apache.calcite.sql.validate","c":"MatchRecognizeNamespace","l":"type"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser.Token","l":"type"},{"p":"org.apache.calcite.schema","c":"Schema.TableType","l":"TYPE"},{"p":"org.apache.calcite.sql","c":"SqlExplain.Depth","l":"TYPE"},{"p":"org.apache.calcite.config","c":"CalciteConnectionProperty","l":"TYPE_COERCION"},{"p":"org.apache.calcite.jdbc","c":"CalciteMetaImpl","l":"TYPE_INFO_COLUMNS"},{"p":"org.apache.calcite.config","c":"CalciteConnectionProperty","l":"TYPE_SYSTEM"},{"p":"org.apache.calcite.sql.dialect","c":"BigQuerySqlDialect","l":"TYPE_SYSTEM"},{"p":"org.apache.calcite.sql.dialect","c":"RedshiftSqlDialect","l":"TYPE_SYSTEM"},{"p":"org.apache.calcite.config","c":"CalciteConnectionProperty","l":"type()"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"type(Consumer<RelDataType>)","u":"type(java.util.function.Consumer)"},{"p":"org.apache.calcite.piglet","c":"Ast.Type","l":"Type(SqlParserPos, Ast.Op)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.piglet.Ast.Op)"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"type(String)","u":"type(java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"TypeAs"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"typeAs(Expression, Type)","u":"typeAs(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)"},{"p":"org.apache.calcite.linq4j.tree","c":"TypeBinaryExpression","l":"TypeBinaryExpression(ExpressionType, Expression, Type)","u":"%3Cinit%3E(org.apache.calcite.linq4j.tree.ExpressionType,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfig","l":"typeCoercion()"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfigImpl","l":"typeCoercion()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator.Config","l":"typeCoercionEnabled()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator.Config","l":"typeCoercionFactory()"},{"p":"org.apache.calcite.sql.validate.implicit","c":"TypeCoercionImpl","l":"TypeCoercionImpl(RelDataTypeFactory, SqlValidator)","u":"%3Cinit%3E(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.sql.validate.SqlValidator)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator.Config","l":"typeCoercionRules()"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TYPED_GET_ELEMENT_TYPE"},{"p":"org.apache.calcite.schema","c":"Schema.TableType","l":"TYPED_TABLE"},{"p":"org.apache.calcite.schema","c":"Schema.TableType","l":"TYPED_VIEW"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema.TypeEntry","l":"TypeEntry(CalciteSchema, String)","u":"%3Cinit%3E(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"typeEntry(String, RelProtoDataType)","u":"typeEntry(java.lang.String,org.apache.calcite.rel.type.RelProtoDataType)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema.TypeEntryImpl","l":"TypeEntryImpl(CalciteSchema, String, RelProtoDataType)","u":"%3Cinit%3E(org.apache.calcite.jdbc.CalciteSchema,java.lang.String,org.apache.calcite.rel.type.RelProtoDataType)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"TypeEqual"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"typeEqual(Expression, Type)","u":"typeEqual(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)"},{"p":"org.apache.calcite.jdbc","c":"CalcitePrepare.ParseResult","l":"typeFactory"},{"p":"org.apache.calcite.prepare","c":"CalciteCatalogReader","l":"typeFactory"},{"p":"org.apache.calcite.prepare","c":"CalcitePrepareImpl.CalcitePreparingStmt","l":"typeFactory"},{"p":"org.apache.calcite.rex","c":"RexBuilder","l":"typeFactory"},{"p":"org.apache.calcite.sql","c":"SqlOperatorBinding","l":"typeFactory"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"typeFactory"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"typeFactory"},{"p":"org.apache.calcite.test","c":"RexImplicationCheckerFixtures.Fixture","l":"typeFactory"},{"p":"org.apache.calcite.sql.test","c":"SqlTestFactory","l":"typeFactoryFactory"},{"p":"org.apache.calcite.sql.type","c":"CompositeOperandTypeChecker","l":"typeInference()"},{"p":"org.apache.calcite.sql.type","c":"SqlOperandTypeChecker","l":"typeInference()"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"TypeIs"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"typeIs(Expression, Type)","u":"typeIs(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertQuery","l":"typeIs(String)","u":"typeIs(java.lang.String)"},{"p":"org.apache.calcite.jdbc","c":"CalciteSchema","l":"typeMap"},{"p":"org.apache.calcite.sql.type","c":"AbstractSqlType","l":"typeName"},{"p":"org.apache.calcite.sql","c":"SqlIntervalQualifier","l":"typeName()"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"typeName(SqlTypeName)","u":"typeName(org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.rel.externalize","c":"RelJson","l":"typeNameToClass(String)","u":"typeNameToClass(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"typeNotAssignable(String, String, String, String)","u":"typeNotAssignable(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"typeNotComparable(String, String)","u":"typeNotComparable(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"typeNotComparableEachOther(String)","u":"typeNotComparableEachOther(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"typeNotComparableNear(String, String)","u":"typeNotComparableNear(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"typeNotFound(String)","u":"typeNotFound(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"typeNotSupported(String)","u":"typeNotSupported(java.lang.String)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"TYPEOF"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"TYPEOF"},{"p":"org.apache.calcite.model","c":"JsonMapSchema","l":"types"},{"p":"org.apache.calcite.model","c":"JsonRoot","l":"types"},{"p":"org.apache.calcite.sql.type","c":"MeasureSqlType","l":"types"},{"p":"org.apache.calcite.rex","c":"RexUtil","l":"types(List<? extends RexNode>)","u":"types(java.util.List)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"typesShouldAllBeMap(String, String)","u":"typesShouldAllBeMap(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactoryImpl","l":"typeSystem"},{"p":"org.apache.calcite.sql.type","c":"BasicSqlType","l":"typeSystem"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfig","l":"typeSystem(Class<T>, T)","u":"typeSystem(java.lang.Class,T)"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfigImpl","l":"typeSystem(Class<T>, T)","u":"typeSystem(java.lang.Class,T)"},{"p":"org.apache.calcite.tools","c":"Frameworks.ConfigBuilder","l":"typeSystem(RelDataTypeSystem)","u":"typeSystem(org.apache.calcite.rel.type.RelDataTypeSystem)"},{"p":"org.apache.calcite.sql.test","c":"SqlTestFactory","l":"typeSystemTransform"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdSize","l":"typeValueSize(RelDataType, Comparable)","u":"typeValueSize(org.apache.calcite.rel.type.RelDataType,java.lang.Comparable)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"TZ_TYPES"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"TZR"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"UN_BASE64"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"UNARY_MINUS"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"UNARY_PLUS"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"UnaryPlus"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"unaryPlus(Expression)","u":"unaryPlus(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"unaryPlus(Expression, Method)","u":"unaryPlus(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method)"},{"p":"org.apache.calcite.adapter.druid","c":"UnaryPrefixOperatorConversion","l":"UnaryPrefixOperatorConversion(SqlOperator, String)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlOperator,java.lang.String)"},{"p":"org.apache.calcite.adapter.druid","c":"UnarySuffixOperatorConversion","l":"UnarySuffixOperatorConversion(SqlOperator, String)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlOperator,java.lang.String)"},{"p":"org.apache.calcite.rex","c":"RexWindowBounds","l":"UNBOUNDED_FOLLOWING"},{"p":"org.apache.calcite.rex","c":"RexWindowBounds","l":"UNBOUNDED_PRECEDING"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"unboundedFollowing()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"unboundedFollowingWindowNotSupported()"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"unboundedPreceding()"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"Unbox"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"unbox(Class)","u":"unbox(java.lang.Class)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"unbox(Expression)","u":"unbox(org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"unbox(Expression, Primitive)","u":"unbox(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Primitive)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"unbox(Expression, Type)","u":"unbox(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"unbox(Type)","u":"unbox(java.lang.reflect.Type)"},{"p":"org.apache.calcite.linq4j.tree","c":"Types","l":"unbox(Type)","u":"unbox(java.lang.reflect.Type)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"unboxExact(Expression, Primitive)","u":"unboxExact(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Primitive)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"unchain(SqlNode)","u":"unchain(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"uncollect(List<String>, boolean)","u":"uncollect(java.util.List,boolean)"},{"p":"org.apache.calcite.rel.core","c":"Uncollect","l":"Uncollect(RelInput)","u":"%3Cinit%3E(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel.core","c":"Uncollect","l":"Uncollect(RelOptCluster, RelTraitSet, RelNode)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.core","c":"Uncollect","l":"Uncollect(RelOptCluster, RelTraitSet, RelNode, boolean, List<String>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,java.util.List)"},{"p":"org.apache.calcite.interpreter","c":"UncollectNode","l":"UncollectNode(Compiler, Uncollect)","u":"%3Cinit%3E(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.Uncollect)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName.Limit","l":"UNDERFLOW"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"unescapeUnicode(char)"},{"p":"org.apache.calcite.util","c":"Util","l":"unexpected(E)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"unicodeEscapeCharIllegal(String)","u":"unicodeEscapeCharIllegal(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"unicodeEscapeCharLength(String)","u":"unicodeEscapeCharLength(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"unicodeEscapeMalformed(int)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"unicodeEscapeUnexpected()"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor","l":"unifyAggregates(MutableAggregate, RexNode, MutableAggregate)","u":"unifyAggregates(org.apache.calcite.rel.mutable.MutableAggregate,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.mutable.MutableAggregate)"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor.UnifyRule","l":"UnifyRule(int, SubstitutionVisitor.Operand, SubstitutionVisitor.Operand)","u":"%3Cinit%3E(int,org.apache.calcite.plan.SubstitutionVisitor.Operand,org.apache.calcite.plan.SubstitutionVisitor.Operand)"},{"p":"org.apache.calcite.plan","c":"SubstitutionVisitor.UnifyRuleCall","l":"UnifyRuleCall(SubstitutionVisitor.UnifyRule, MutableRel, MutableRel, ImmutableList<MutableRel>)","u":"%3Cinit%3E(org.apache.calcite.plan.SubstitutionVisitor.UnifyRule,org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.mutable.MutableRel,com.google.common.collect.ImmutableList)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"UNION"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"UNION"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"UNION"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"UNION_ALL"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules","l":"UNION_INSTANCE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"UNION_MERGE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"UNION_PULL_UP_CONSTANTS"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"UNION_REMOVE"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"UNION_TO_DISTINCT"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"UNION_TO_VALUES"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"union(BitSet)","u":"union(java.util.BitSet)"},{"p":"org.apache.calcite.util","c":"BitSets","l":"union(BitSet, BitSet...)","u":"union(java.util.BitSet,java.util.BitSet...)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"union(boolean)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"union(boolean, int)","u":"union(boolean,int)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"union(Enumerable<T>)","u":"union(org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"union(Enumerable<T>)","u":"union(org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"union(Enumerable<T>)","u":"union(org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"union(Enumerable<T>, EqualityComparer<T>)","u":"union(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"union(Enumerable<T>, EqualityComparer<T>)","u":"union(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"union(Enumerable<T>, EqualityComparer<T>)","u":"union(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"","c":"","l":"union(Enumerable<TSource>)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"union(Enumerable<TSource>)","u":"union(org.apache.calcite.linq4j.Enumerable)"},{"p":"","c":"","l":"union(Enumerable<TSource>)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"union(Enumerable<TSource>, Enumerable<TSource>)","u":"union(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"union(Enumerable<TSource>, Enumerable<TSource>, EqualityComparer<TSource>)","u":"union(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"","c":"","l":"union(Enumerable<TSource>, EqualityComparer<TSource>)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"union(Enumerable<TSource>, EqualityComparer<TSource>)","u":"union(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"","c":"","l":"union(Enumerable<TSource>, EqualityComparer<TSource>)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"union(ImmutableBitSet)","u":"union(org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"union(Iterable<? extends ImmutableBitSet>)","u":"union(java.lang.Iterable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"union(Queryable<T>, Enumerable<T>)","u":"union(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"union(Queryable<T>, Enumerable<T>)","u":"union(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"union(Queryable<T>, Enumerable<T>)","u":"union(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"union(Queryable<T>, Enumerable<T>, EqualityComparer<T>)","u":"union(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"union(Queryable<T>, Enumerable<T>, EqualityComparer<T>)","u":"union(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"union(Queryable<T>, Enumerable<T>, EqualityComparer<T>)","u":"union(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.EqualityComparer)"},{"p":"org.apache.calcite.rel.core","c":"Union","l":"Union(RelInput)","u":"%3Cinit%3E(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel.core","c":"Union","l":"Union(RelOptCluster, RelTraitSet, List<RelHint>, List<RelNode>, boolean)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,java.util.List,boolean)"},{"p":"org.apache.calcite.rel.core","c":"Union","l":"Union(RelOptCluster, RelTraitSet, List<RelNode>, boolean)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,boolean)"},{"p":"org.apache.calcite.plan","c":"RelOptPredicateList","l":"union(RexBuilder, RelOptPredicateList)","u":"union(org.apache.calcite.rex.RexBuilder,org.apache.calcite.plan.RelOptPredicateList)"},{"p":"org.apache.calcite.rel.rules","c":"UnionEliminatorRule","l":"UnionEliminatorRule(Class<? extends Union>, RelBuilderFactory)","u":"%3Cinit%3E(java.lang.Class,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"UnionEliminatorRule","l":"UnionEliminatorRule(UnionEliminatorRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.UnionEliminatorRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"UnionMergeRule","l":"UnionMergeRule(Class<? extends SetOp>, String, RelBuilderFactory)","u":"%3Cinit%3E(java.lang.Class,java.lang.String,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"UnionMergeRule","l":"UnionMergeRule(Class<? extends Union>, RelFactories.SetOpFactory)","u":"%3Cinit%3E(java.lang.Class,org.apache.calcite.rel.core.RelFactories.SetOpFactory)"},{"p":"org.apache.calcite.rel.rules","c":"UnionMergeRule","l":"UnionMergeRule(UnionMergeRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.UnionMergeRule.Config)"},{"p":"org.apache.calcite.interpreter","c":"UnionNode","l":"UnionNode(Compiler, Union)","u":"%3Cinit%3E(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.Union)"},{"p":"org.apache.calcite.runtime","c":"UnionOperation","l":"UnionOperation()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUtil","l":"unionPreds(RexBuilder, RexNode, RexNode)","u":"unionPreds(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.rel.rules","c":"UnionPullUpConstantsRule","l":"UnionPullUpConstantsRule(Class<? extends Union>, RelBuilderFactory)","u":"%3Cinit%3E(java.lang.Class,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"UnionPullUpConstantsRule","l":"UnionPullUpConstantsRule(UnionPullUpConstantsRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.UnionPullUpConstantsRule.Config)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule.Config","l":"unionRewritingPullProgram()"},{"p":"org.apache.calcite.rel.rules","c":"UnionToDistinctRule","l":"UnionToDistinctRule(Class<? extends Union>, RelBuilderFactory)","u":"%3Cinit%3E(java.lang.Class,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"UnionToDistinctRule","l":"UnionToDistinctRule(Class<? extends Union>, RelFactories.SetOpFactory)","u":"%3Cinit%3E(java.lang.Class,org.apache.calcite.rel.core.RelFactories.SetOpFactory)"},{"p":"org.apache.calcite.rel.rules","c":"UnionToDistinctRule","l":"UnionToDistinctRule(UnionToDistinctRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.UnionToDistinctRule.Config)"},{"p":"org.apache.calcite.rel.rules","c":"UnionToValuesRule","l":"UnionToValuesRule(UnionToValuesRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.UnionToValuesRule.Config)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"UNIQUE"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"UNIQUE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"UNIQUE_KEYS"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"unique(Function<RelBuilder, RelNode>)","u":"unique(java.util.function.Function)"},{"p":"org.apache.calcite.tools","c":"RelBuilder.AggCall","l":"unique(Iterable<RexNode>)","u":"unique(java.lang.Iterable)"},{"p":"org.apache.calcite.rex","c":"RexSubQuery","l":"unique(RelNode)","u":"unique(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.tools","c":"RelBuilder.AggCall","l":"unique(RexNode...)","u":"unique(org.apache.calcite.rex.RexNode...)"},{"p":"org.apache.calcite.profile","c":"Profiler.Unique","l":"Unique(SortedSet<Profiler.Column>)","u":"%3Cinit%3E(java.util.SortedSet)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlDdlNodes","l":"unique(SqlParserPos, SqlIdentifier, SqlNodeList)","u":"unique(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlKeyConstraint","l":"unique(SqlParserPos, SqlIdentifier, SqlNodeList)","u":"unique(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.materialize","c":"Lattice","l":"uniqueColumnNames()"},{"p":"org.apache.calcite.profile","c":"Profiler.Profile","l":"uniqueList"},{"p":"org.apache.calcite.schema","c":"Schemas","l":"uniqueTableName(CalciteSchema, String)","u":"uniqueTableName(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory.Builder","l":"uniquify()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory.FieldInfoBuilder","l":"uniquify()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"uniquify(List<? extends String>)","u":"uniquify(java.util.List)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"uniquify(List<? extends String>, boolean)","u":"uniquify(java.util.List,boolean)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"uniquify(List<? extends String>, SqlValidatorUtil.Suggester)","u":"uniquify(java.util.List,org.apache.calcite.sql.validate.SqlValidatorUtil.Suggester)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"uniquify(List<? extends String>, SqlValidatorUtil.Suggester, boolean)","u":"uniquify(java.util.List,org.apache.calcite.sql.validate.SqlValidatorUtil.Suggester,boolean)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"uniquify(String, Set<String>, SqlValidatorUtil.Suggester)","u":"uniquify(java.lang.String,java.util.Set,org.apache.calcite.sql.validate.SqlValidatorUtil.Suggester)"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"UNIT_INTERVAL_NUMERIC_LITERAL"},{"p":"org.apache.calcite.rel.type","c":"TimeFrame","l":"unit()"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"UNIX_DATE"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"UNIX_DATE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"UNIX_DATE_CEIL"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"UNIX_DATE_EXTRACT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"UNIX_DATE_FLOOR"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"UNIX_DATE_TO_STRING"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"UNIX_MICROS"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"UNIX_MICROS"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"UNIX_MILLIS"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"UNIX_MILLIS"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"UNIX_SECONDS"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"UNIX_SECONDS"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"UNIX_TIME_TO_STRING"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"UNIX_TIMESTAMP_CEIL"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"UNIX_TIMESTAMP_FLOOR"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"UNIX_TIMESTAMP_TO_STRING"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"unixDate(int)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"unixDateExtract(String, long)","u":"unixDateExtract(java.lang.String,long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"unixDateExtract(TimeUnitRange, long)","u":"unixDateExtract(org.apache.calcite.avatica.util.TimeUnitRange,long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"unixMicros(long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"unixMillis(long)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"unixSeconds(long)"},{"p":"org.apache.calcite.rex","c":"RexUnknownAs","l":"UNKNOWN"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.PathMode","l":"UNKNOWN"},{"p":"org.apache.calcite.sql","c":"SqlDialect.DatabaseProduct","l":"UNKNOWN"},{"p":"org.apache.calcite.sql","c":"SqlJsonExistsErrorBehavior","l":"UNKNOWN"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"UNKNOWN"},{"p":"org.apache.calcite.schema","c":"Statistics","l":"UNKNOWN"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.Logic","l":"UNKNOWN_AS_FALSE"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.Logic","l":"UNKNOWN_AS_TRUE"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"unknownCharacterSet(String)","u":"unknownCharacterSet(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"unknownDatatypeName(String)","u":"unknownDatatypeName(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"unknownField(String)","u":"unknownField(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"unknownIdentifier(String)","u":"unknownIdentifier(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"unknownPattern(String)","u":"unknownPattern(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"unknownTargetColumn(String)","u":"unknownTargetColumn(java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"unknownType"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"unmatchInsertColumn(int, int)","u":"unmatchInsertColumn(int,int)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"UNNEST"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"UNNEST"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"UNNEST_WITH_ORDINALITY"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"unnestArgument()"},{"p":"org.apache.calcite.plan","c":"RelOptRuleOperandChildPolicy","l":"UNORDERED"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeComparability","l":"UNORDERED"},{"p":"org.apache.calcite.plan","c":"RelOptRule","l":"unordered(RelOptRuleOperand, RelOptRuleOperand...)","u":"unordered(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.plan.RelOptRuleOperand...)"},{"p":"org.apache.calcite.plan","c":"RelRule.OperandDetailBuilder","l":"unorderedInputs(RelRule.OperandTransform...)","u":"unorderedInputs(org.apache.calcite.plan.RelRule.OperandTransform...)"},{"p":"org.apache.calcite.piglet","c":"Ast","l":"unParse(Ast.UnParser, Ast.Node)","u":"unParse(org.apache.calcite.piglet.Ast.UnParser,org.apache.calcite.piglet.Ast.Node)"},{"p":"org.apache.calcite.sql","c":"SqlCollation","l":"unparse(SqlWriter)","u":"unparse(org.apache.calcite.sql.SqlWriter)"},{"p":"org.apache.calcite.sql.babel.postgres","c":"SqlBegin","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql.babel.postgres","c":"SqlCommit","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql.babel.postgres","c":"SqlDiscard","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql.babel.postgres","c":"SqlRollback","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql.babel.postgres","c":"SqlShow","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql.babel","c":"SqlBabelCreateTable","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlAttributeDefinition","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCheckConstraint","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlColumnDeclaration","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateForeignSchema","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateFunction","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateMaterializedView","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateSchema","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateTable","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateTableLike","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateType","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateView","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlDropObject","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlDropSchema","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlKeyConstraint","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlTruncateTable","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlAbstractDateTimeLiteral","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlAlienSystemTypeNameSpec","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlAlter","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlBasicTypeNameSpec","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlBinaryStringLiteral","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlCall","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlCharStringLiteral","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlCollectionTypeNameSpec","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlDataTypeSpec","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlDateLiteral","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlDelete","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlDescribeSchema","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlDescribeTable","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlDynamicParam","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlExplain","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlHint","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlIdentifier","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlInsert","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlIntervalLiteral","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlIntervalQualifier","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlLambda","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlMapTypeNameSpec","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlMerge","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlNode","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlNumericLiteral","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlPivot","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlRowTypeNameSpec","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlSelect","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlSetOption","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlSnapshot","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlTableRef","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlTimeLiteral","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlTimestampLiteral","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlTimestampTzLiteral","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlTimeTzLiteral","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlTypeNameSpec","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlUnknownLiteral","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlUnpivot","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlUpdate","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlUserDefinedTypeNameSpec","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlUuidLiteral","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"unparse(SqlWriter, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlBetweenOperator","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlCaseOperator","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlCastFunction","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlColumnListConstructor","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlConvertFunction","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlCursorConstructor","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlDatetimePlusOperator","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlDatetimeSubtractionOperator","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlDotOperator","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlExtractFunction","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlFloorFunction","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlIntervalOperator","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlItemOperator","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonArrayAggAggFunction","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonArrayFunction","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonExistsFunction","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonObjectAggAggFunction","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonObjectFunction","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonQueryFunction","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonValueFunction","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlLikeOperator","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlLiteralChainOperator","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlMultisetQueryConstructor","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlMultisetValueConstructor","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlOverlapsOperator","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlOverlayFunction","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlPositionFunction","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlPosixRegexOperator","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlRowOperator","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlSequenceValueOperator","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlThrowOperator","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlTranslate3Function","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlTranslateFunction","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlTrimFunction","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlAsofJoin.SqlAsofJoinOperator","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlAsOperator","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlFilterOperator","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlFunction","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlFunctionalOperator","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlInfixOperator","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlJdbcFunctionCall","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlJoin.SqlJoinOperator","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlLateralOperator","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize.SqlMatchRecognizeOperator","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlMeasureOperator","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlNullTreatmentOperator","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlSelectOperator","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlSetSemanticsTableOperator","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlSnapshot.SqlSnapshotOperator","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlUnnestOperator","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlValuesOperator","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlWithinDistinctOperator","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlWithinGroupOperator","l":"unparse(SqlWriter, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlSyntax","l":"unparse(SqlWriter, SqlOperator, SqlCall, int, int)","u":"unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.advise","c":"SqlSimpleParser.Token","l":"unparse(StringBuilder)","u":"unparse(java.lang.StringBuilder)"},{"p":"org.apache.calcite.sql","c":"SqlAlter","l":"unparseAlterOperation(SqlWriter, int, int)","u":"unparseAlterOperation(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlSetOption","l":"unparseAlterOperation(SqlWriter, int, int)","u":"unparseAlterOperation(org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"unparseBinarySyntax(SqlOperator, SqlCall, SqlWriter, int, int)","u":"unparseBinarySyntax(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlWriter,int,int)"},{"p":"org.apache.calcite.sql.dialect","c":"ClickHouseSqlDialect","l":"unparseBoolLiteral(SqlWriter, SqlLiteral, int, int)","u":"unparseBoolLiteral(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlLiteral,int,int)"},{"p":"org.apache.calcite.sql.dialect","c":"MssqlSqlDialect","l":"unparseBoolLiteral(SqlWriter, SqlLiteral, int, int)","u":"unparseBoolLiteral(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlLiteral,int,int)"},{"p":"org.apache.calcite.sql.dialect","c":"OracleSqlDialect","l":"unparseBoolLiteral(SqlWriter, SqlLiteral, int, int)","u":"unparseBoolLiteral(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlLiteral,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"unparseBoolLiteral(SqlWriter, SqlLiteral, int, int)","u":"unparseBoolLiteral(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlLiteral,int,int)"},{"p":"org.apache.calcite.util","c":"RelToSqlConverterUtil","l":"unparseBoolLiteralToCondition(SqlWriter, boolean)","u":"unparseBoolLiteralToCondition(org.apache.calcite.sql.SqlWriter,boolean)"},{"p":"org.apache.calcite.sql.dialect","c":"BigQuerySqlDialect","l":"unparseCall(SqlWriter, SqlCall, int, int)","u":"unparseCall(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.dialect","c":"ClickHouseSqlDialect","l":"unparseCall(SqlWriter, SqlCall, int, int)","u":"unparseCall(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.dialect","c":"ExasolSqlDialect","l":"unparseCall(SqlWriter, SqlCall, int, int)","u":"unparseCall(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.dialect","c":"FireboltSqlDialect","l":"unparseCall(SqlWriter, SqlCall, int, int)","u":"unparseCall(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.dialect","c":"HiveSqlDialect","l":"unparseCall(SqlWriter, SqlCall, int, int)","u":"unparseCall(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.dialect","c":"HsqldbSqlDialect","l":"unparseCall(SqlWriter, SqlCall, int, int)","u":"unparseCall(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.dialect","c":"MssqlSqlDialect","l":"unparseCall(SqlWriter, SqlCall, int, int)","u":"unparseCall(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.dialect","c":"MysqlSqlDialect","l":"unparseCall(SqlWriter, SqlCall, int, int)","u":"unparseCall(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.dialect","c":"OracleSqlDialect","l":"unparseCall(SqlWriter, SqlCall, int, int)","u":"unparseCall(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.dialect","c":"PostgresqlSqlDialect","l":"unparseCall(SqlWriter, SqlCall, int, int)","u":"unparseCall(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.dialect","c":"PrestoSqlDialect","l":"unparseCall(SqlWriter, SqlCall, int, int)","u":"unparseCall(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.dialect","c":"SnowflakeSqlDialect","l":"unparseCall(SqlWriter, SqlCall, int, int)","u":"unparseCall(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.dialect","c":"SparkSqlDialect","l":"unparseCall(SqlWriter, SqlCall, int, int)","u":"unparseCall(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.dialect","c":"StarRocksSqlDialect","l":"unparseCall(SqlWriter, SqlCall, int, int)","u":"unparseCall(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"unparseCall(SqlWriter, SqlCall, int, int)","u":"unparseCall(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlFloorFunction","l":"unparseDatetimeFunction(SqlWriter, SqlCall, String, Boolean)","u":"unparseDatetimeFunction(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,java.lang.String,java.lang.Boolean)"},{"p":"org.apache.calcite.sql.dialect","c":"ClickHouseSqlDialect","l":"unparseDateTimeLiteral(SqlWriter, SqlAbstractDateTimeLiteral, int, int)","u":"unparseDateTimeLiteral(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlAbstractDateTimeLiteral,int,int)"},{"p":"org.apache.calcite.sql.dialect","c":"MssqlSqlDialect","l":"unparseDateTimeLiteral(SqlWriter, SqlAbstractDateTimeLiteral, int, int)","u":"unparseDateTimeLiteral(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlAbstractDateTimeLiteral,int,int)"},{"p":"org.apache.calcite.sql.dialect","c":"OracleSqlDialect","l":"unparseDateTimeLiteral(SqlWriter, SqlAbstractDateTimeLiteral, int, int)","u":"unparseDateTimeLiteral(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlAbstractDateTimeLiteral,int,int)"},{"p":"org.apache.calcite.sql.dialect","c":"StarRocksSqlDialect","l":"unparseDateTimeLiteral(SqlWriter, SqlAbstractDateTimeLiteral, int, int)","u":"unparseDateTimeLiteral(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlAbstractDateTimeLiteral,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"unparseDateTimeLiteral(SqlWriter, SqlAbstractDateTimeLiteral, int, int)","u":"unparseDateTimeLiteral(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlAbstractDateTimeLiteral,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"unparseFetchUsingAnsi(SqlWriter, SqlNode, SqlNode)","u":"unparseFetchUsingAnsi(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"unparseFetchUsingLimit(SqlWriter, SqlNode, SqlNode)","u":"unparseFetchUsingLimit(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"unparseFunctionSyntax(SqlOperator, SqlWriter, SqlCall)","u":"unparseFunctionSyntax(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"unparseFunctionSyntax(SqlOperator, SqlWriter, SqlCall, boolean)","u":"unparseFunctionSyntax(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,boolean)"},{"p":"org.apache.calcite.util","c":"RelToSqlConverterUtil","l":"unparseHiveTrim(SqlWriter, SqlCall, int, int)","u":"unparseHiveTrim(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"unparseLimit(SqlWriter, SqlNode)","u":"unparseLimit(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"unparseListClause(SqlWriter, SqlNode)","u":"unparseListClause(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"unparseListClause(SqlWriter, SqlNode, SqlKind)","u":"unparseListClause(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"unparseNumericLiteral(SqlWriter, String, int, int)","u":"unparseNumericLiteral(org.apache.calcite.sql.SqlWriter,java.lang.String,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"unparseOffset(SqlWriter, SqlNode)","u":"unparseOffset(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.dialect","c":"BigQuerySqlDialect","l":"unparseOffsetFetch(SqlWriter, SqlNode, SqlNode)","u":"unparseOffsetFetch(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.dialect","c":"ClickHouseSqlDialect","l":"unparseOffsetFetch(SqlWriter, SqlNode, SqlNode)","u":"unparseOffsetFetch(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.dialect","c":"ExasolSqlDialect","l":"unparseOffsetFetch(SqlWriter, SqlNode, SqlNode)","u":"unparseOffsetFetch(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.dialect","c":"FireboltSqlDialect","l":"unparseOffsetFetch(SqlWriter, SqlNode, SqlNode)","u":"unparseOffsetFetch(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.dialect","c":"HiveSqlDialect","l":"unparseOffsetFetch(SqlWriter, SqlNode, SqlNode)","u":"unparseOffsetFetch(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.dialect","c":"HsqldbSqlDialect","l":"unparseOffsetFetch(SqlWriter, SqlNode, SqlNode)","u":"unparseOffsetFetch(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.dialect","c":"MssqlSqlDialect","l":"unparseOffsetFetch(SqlWriter, SqlNode, SqlNode)","u":"unparseOffsetFetch(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.dialect","c":"MysqlSqlDialect","l":"unparseOffsetFetch(SqlWriter, SqlNode, SqlNode)","u":"unparseOffsetFetch(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.dialect","c":"OracleSqlDialect","l":"unparseOffsetFetch(SqlWriter, SqlNode, SqlNode)","u":"unparseOffsetFetch(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.dialect","c":"PrestoSqlDialect","l":"unparseOffsetFetch(SqlWriter, SqlNode, SqlNode)","u":"unparseOffsetFetch(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.dialect","c":"RedshiftSqlDialect","l":"unparseOffsetFetch(SqlWriter, SqlNode, SqlNode)","u":"unparseOffsetFetch(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.dialect","c":"SnowflakeSqlDialect","l":"unparseOffsetFetch(SqlWriter, SqlNode, SqlNode)","u":"unparseOffsetFetch(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.dialect","c":"SparkSqlDialect","l":"unparseOffsetFetch(SqlWriter, SqlNode, SqlNode)","u":"unparseOffsetFetch(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.dialect","c":"SybaseSqlDialect","l":"unparseOffsetFetch(SqlWriter, SqlNode, SqlNode)","u":"unparseOffsetFetch(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.dialect","c":"VerticaSqlDialect","l":"unparseOffsetFetch(SqlWriter, SqlNode, SqlNode)","u":"unparseOffsetFetch(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"unparseOffsetFetch(SqlWriter, SqlNode, SqlNode)","u":"unparseOffsetFetch(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.util","c":"RelToSqlConverterUtil","l":"unparseSparkArrayAndMap(SqlWriter, SqlCall, int, int)","u":"unparseSparkArrayAndMap(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)"},{"p":"org.apache.calcite.sql.dialect","c":"MssqlSqlDialect","l":"unparseSqlDatetimeArithmetic(SqlWriter, SqlCall, SqlKind, int, int)","u":"unparseSqlDatetimeArithmetic(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlKind,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"unparseSqlDatetimeArithmetic(SqlWriter, SqlCall, SqlKind, int, int)","u":"unparseSqlDatetimeArithmetic(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlKind,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"unparseSqlIdentifierSyntax(SqlWriter, SqlIdentifier, boolean)","u":"unparseSqlIdentifierSyntax(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlIdentifier,boolean)"},{"p":"org.apache.calcite.sql.dialect","c":"BigQuerySqlDialect","l":"unparseSqlIntervalLiteral(SqlWriter, SqlIntervalLiteral, int, int)","u":"unparseSqlIntervalLiteral(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlIntervalLiteral,int,int)"},{"p":"org.apache.calcite.sql.dialect","c":"Db2SqlDialect","l":"unparseSqlIntervalLiteral(SqlWriter, SqlIntervalLiteral, int, int)","u":"unparseSqlIntervalLiteral(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlIntervalLiteral,int,int)"},{"p":"org.apache.calcite.sql.dialect","c":"FireboltSqlDialect","l":"unparseSqlIntervalLiteral(SqlWriter, SqlIntervalLiteral, int, int)","u":"unparseSqlIntervalLiteral(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlIntervalLiteral,int,int)"},{"p":"org.apache.calcite.sql.dialect","c":"MssqlSqlDialect","l":"unparseSqlIntervalLiteral(SqlWriter, SqlIntervalLiteral, int, int)","u":"unparseSqlIntervalLiteral(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlIntervalLiteral,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"unparseSqlIntervalLiteral(SqlWriter, SqlIntervalLiteral, int, int)","u":"unparseSqlIntervalLiteral(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlIntervalLiteral,int,int)"},{"p":"org.apache.calcite.sql.dialect","c":"BigQuerySqlDialect","l":"unparseSqlIntervalQualifier(SqlWriter, SqlIntervalQualifier, RelDataTypeSystem)","u":"unparseSqlIntervalQualifier(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlIntervalQualifier,org.apache.calcite.rel.type.RelDataTypeSystem)"},{"p":"org.apache.calcite.sql.dialect","c":"Db2SqlDialect","l":"unparseSqlIntervalQualifier(SqlWriter, SqlIntervalQualifier, RelDataTypeSystem)","u":"unparseSqlIntervalQualifier(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlIntervalQualifier,org.apache.calcite.rel.type.RelDataTypeSystem)"},{"p":"org.apache.calcite.sql.dialect","c":"FireboltSqlDialect","l":"unparseSqlIntervalQualifier(SqlWriter, SqlIntervalQualifier, RelDataTypeSystem)","u":"unparseSqlIntervalQualifier(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlIntervalQualifier,org.apache.calcite.rel.type.RelDataTypeSystem)"},{"p":"org.apache.calcite.sql.dialect","c":"MssqlSqlDialect","l":"unparseSqlIntervalQualifier(SqlWriter, SqlIntervalQualifier, RelDataTypeSystem)","u":"unparseSqlIntervalQualifier(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlIntervalQualifier,org.apache.calcite.rel.type.RelDataTypeSystem)"},{"p":"org.apache.calcite.sql.dialect","c":"MysqlSqlDialect","l":"unparseSqlIntervalQualifier(SqlWriter, SqlIntervalQualifier, RelDataTypeSystem)","u":"unparseSqlIntervalQualifier(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlIntervalQualifier,org.apache.calcite.rel.type.RelDataTypeSystem)"},{"p":"org.apache.calcite.sql.dialect","c":"PrestoSqlDialect","l":"unparseSqlIntervalQualifier(SqlWriter, SqlIntervalQualifier, RelDataTypeSystem)","u":"unparseSqlIntervalQualifier(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlIntervalQualifier,org.apache.calcite.rel.type.RelDataTypeSystem)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"unparseSqlIntervalQualifier(SqlWriter, SqlIntervalQualifier, RelDataTypeSystem)","u":"unparseSqlIntervalQualifier(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlIntervalQualifier,org.apache.calcite.rel.type.RelDataTypeSystem)"},{"p":"org.apache.calcite.sql.dialect","c":"PostgresqlSqlDialect","l":"unparseSqlSetOption(SqlWriter, int, int, SqlSetOption)","u":"unparseSqlSetOption(org.apache.calcite.sql.SqlWriter,int,int,org.apache.calcite.sql.SqlSetOption)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"unparseSqlSetOption(SqlWriter, int, int, SqlSetOption)","u":"unparseSqlSetOption(org.apache.calcite.sql.SqlWriter,int,int,org.apache.calcite.sql.SqlSetOption)"},{"p":"org.apache.calcite.sql.dialect","c":"AnsiSqlDialect","l":"unparseTableScanHints(SqlWriter, SqlNodeList, int, int)","u":"unparseTableScanHints(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlNodeList,int,int)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"unparseTableScanHints(SqlWriter, SqlNodeList, int, int)","u":"unparseTableScanHints(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlNodeList,int,int)"},{"p":"org.apache.calcite.sql.dialect","c":"MssqlSqlDialect","l":"unparseTopN(SqlWriter, SqlNode, SqlNode)","u":"unparseTopN(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.dialect","c":"SybaseSqlDialect","l":"unparseTopN(SqlWriter, SqlNode, SqlNode)","u":"unparseTopN(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"unparseTopN(SqlWriter, SqlNode, SqlNode)","u":"unparseTopN(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlNode","l":"unparseWithParentheses(SqlWriter, int, int, boolean)","u":"unparseWithParentheses(org.apache.calcite.sql.SqlWriter,int,int,boolean)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest.UnparsingTesterImpl","l":"UnparsingTesterImpl()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"UNPIVOT"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"unpivot(boolean, Iterable<String>, Iterable<String>, Iterable<? extends Map.Entry<? extends List<? extends RexLiteral>, ? extends List<? extends RexNode>>>)","u":"unpivot(boolean,java.lang.Iterable,java.lang.Iterable,java.lang.Iterable)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"unpivotCannotDeriveAxisType(String)","u":"unpivotCannotDeriveAxisType(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"unpivotCannotDeriveMeasureType(String)","u":"unpivotCannotDeriveMeasureType(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"unpivotDuplicate(String)","u":"unpivotDuplicate(java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"UnpivotNamespace","l":"UnpivotNamespace(SqlValidatorImpl, SqlUnpivot, SqlNode)","u":"%3Cinit%3E(org.apache.calcite.sql.validate.SqlValidatorImpl,org.apache.calcite.sql.SqlUnpivot,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"UnpivotScope","l":"UnpivotScope(SqlValidatorScope, SqlUnpivot)","u":"%3Cinit%3E(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlUnpivot)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"unpivotValueArityMismatch(int, int)","u":"unpivotValueArityMismatch(int,int)"},{"p":"org.apache.calcite.config","c":"CalciteConnectionProperty","l":"UNQUOTED_CASING"},{"p":"org.apache.calcite.config","c":"Lex","l":"unquotedCasing"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfig","l":"unquotedCasing()"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfigImpl","l":"unquotedCasing()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser.Config","l":"unquotedCasing()"},{"p":"org.apache.calcite.sql","c":"SqlDialect.Context","l":"unquotedCasing()"},{"p":"org.apache.calcite.sql","c":"SqlDialect","l":"unquoteStringLiteral(String)","u":"unquoteStringLiteral(java.lang.String)"},{"p":"org.apache.calcite.config","c":"CalciteConnectionConfigImpl","l":"unset(CalciteConnectionProperty)","u":"unset(org.apache.calcite.config.CalciteConnectionProperty)"},{"p":"org.apache.calcite.rel","c":"RelFieldCollation.NullDirection","l":"UNSPECIFIED"},{"p":"org.apache.calcite.sql.babel","c":"TableCollectionType","l":"UNSPECIFIED"},{"p":"org.apache.calcite.sql.validate","c":"SqlMonotonicity","l":"unstrict()"},{"p":"org.apache.calcite.rex","c":"RexAnalyzer","l":"unsupportedCount"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"unsupportedIntervalLiteral(String, String)","u":"unsupportedIntervalLiteral(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"unsupportedTypeInConvertFunc(String, String, String)","u":"unsupportedTypeInConvertFunc(java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"unsupportedTypeInOrderBy(String, String)","u":"unsupportedTypeInOrderBy(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl.Status","l":"UNVALIDATED"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcTable","l":"unwrap(Class<C>)","u":"unwrap(java.lang.Class)"},{"p":"org.apache.calcite.prepare","c":"CalciteCatalogReader","l":"unwrap(Class<C>)","u":"unwrap(java.lang.Class)"},{"p":"org.apache.calcite.schema.impl","c":"AbstractTable","l":"unwrap(Class<C>)","u":"unwrap(java.lang.Class)"},{"p":"org.apache.calcite.schema.impl","c":"ModifiableViewTable","l":"unwrap(Class<C>)","u":"unwrap(java.lang.Class)"},{"p":"org.apache.calcite.schema","c":"Wrapper","l":"unwrap(Class<C>)","u":"unwrap(java.lang.Class)"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingSqlValidatorCatalogReader","l":"unwrap(Class<C>)","u":"unwrap(java.lang.Class)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcCatalogSchema","l":"unwrap(Class<T>)","u":"unwrap(java.lang.Class)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcSchema","l":"unwrap(Class<T>)","u":"unwrap(java.lang.Class)"},{"p":"org.apache.calcite.jdbc","c":"CalciteStatement","l":"unwrap(Class<T>)","u":"unwrap(java.lang.Class)"},{"p":"org.apache.calcite.plan","c":"RelOptAbstractTable","l":"unwrap(Class<T>)","u":"unwrap(java.lang.Class)"},{"p":"org.apache.calcite.prepare","c":"RelOptTableImpl","l":"unwrap(Class<T>)","u":"unwrap(java.lang.Class)"},{"p":"org.apache.calcite.schema","c":"SchemaPlus","l":"unwrap(Class<T>)","u":"unwrap(java.lang.Class)"},{"p":"org.apache.calcite.sql.fun","c":"SqlAnyValueAggFunction","l":"unwrap(Class<T>)","u":"unwrap(java.lang.Class)"},{"p":"org.apache.calcite.sql.fun","c":"SqlBasicAggFunction","l":"unwrap(Class<T>)","u":"unwrap(java.lang.Class)"},{"p":"org.apache.calcite.sql.fun","c":"SqlBitOpAggFunction","l":"unwrap(Class<T>)","u":"unwrap(java.lang.Class)"},{"p":"org.apache.calcite.sql.fun","c":"SqlCountAggFunction","l":"unwrap(Class<T>)","u":"unwrap(java.lang.Class)"},{"p":"org.apache.calcite.sql.fun","c":"SqlMinMaxAggFunction","l":"unwrap(Class<T>)","u":"unwrap(java.lang.Class)"},{"p":"org.apache.calcite.sql.fun","c":"SqlSingleValueAggFunction","l":"unwrap(Class<T>)","u":"unwrap(java.lang.Class)"},{"p":"org.apache.calcite.sql.fun","c":"SqlSumAggFunction","l":"unwrap(Class<T>)","u":"unwrap(java.lang.Class)"},{"p":"org.apache.calcite.sql.fun","c":"SqlSumEmptyIsZeroAggFunction","l":"unwrap(Class<T>)","u":"unwrap(java.lang.Class)"},{"p":"org.apache.calcite.sql","c":"SqlAggFunction","l":"unwrap(Class<T>)","u":"unwrap(java.lang.Class)"},{"p":"org.apache.calcite.sql.validate","c":"MatchRecognizeNamespace","l":"unwrap(Class<T>)","u":"unwrap(java.lang.Class)"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingNamespace","l":"unwrap(Class<T>)","u":"unwrap(java.lang.Class)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorNamespace","l":"unwrap(Class<T>)","u":"unwrap(java.lang.Class)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockModifiableViewRelOptTable","l":"unwrap(Class<T>)","u":"unwrap(java.lang.Class)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockRelViewTable","l":"unwrap(Class<T>)","u":"unwrap(java.lang.Class)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"unwrap(Class<T>)","u":"unwrap(java.lang.Class)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockViewTable","l":"unwrap(Class<T>)","u":"unwrap(java.lang.Class)"},{"p":"org.apache.calcite.schema","c":"Schemas","l":"unwrap(Expression, Class)","u":"unwrap(org.apache.calcite.linq4j.tree.Expression,java.lang.Class)"},{"p":"org.apache.calcite.schema","c":"Wrapper","l":"unwrapOrThrow(Class<C>)","u":"unwrapOrThrow(java.lang.Class)"},{"p":"org.apache.calcite.rel.core","c":"TableModify.Operation","l":"UPDATE"},{"p":"org.apache.calcite.sql","c":"SqlAccessEnum","l":"UPDATE"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"UPDATE"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"UPDATE_ANON_PREFIX"},{"p":"org.apache.calcite.sql","c":"SqlWriter.FrameTypeEnum","l":"UPDATE_SET_LIST"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"UPDATE_SRC_ALIAS"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"UPDATE_TGT_ALIAS"},{"p":"org.apache.calcite.piglet","c":"PigRelBuilder","l":"updateAlias(Operator, String, boolean)","u":"updateAlias(org.apache.pig.newplan.Operator,java.lang.String,boolean)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableTableModify","l":"updateColumnList"},{"p":"org.apache.calcite.rel.rules","c":"HyperGraph","l":"updateEdgesForUnion(long, long)","u":"updateEdgesForUnion(long,long)"},{"p":"org.apache.calcite.sql.validate.implicit","c":"AbstractTypeCoercion","l":"updateInferredColumnType(SqlValidatorScope, SqlNode, int, RelDataType)","u":"updateInferredColumnType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,int,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate.implicit","c":"AbstractTypeCoercion","l":"updateInferredType(SqlNode, RelDataType)","u":"updateInferredType(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql2rel","c":"RelStructuredTypeFlattener","l":"updateRelInMap(SortedMap<CorrelationId, LogicalCorrelate>)","u":"updateRelInMap(java.util.SortedMap)"},{"p":"org.apache.calcite.sql2rel","c":"RelStructuredTypeFlattener","l":"updateRelInMap(SortedSetMultimap<RelNode, CorrelationId>)","u":"updateRelInMap(com.google.common.collect.SortedSetMultimap)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertQuery","l":"updates(int)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"updateSetFolding()"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"updateSetListNewline()"},{"p":"org.apache.calcite.util","c":"Bug","l":"upgrade(String)","u":"upgrade(java.lang.String)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"UPPER"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"UPPER"},{"p":"org.apache.calcite.sql.fun","c":"SqlBetweenOperator","l":"UPPER_OPERAND"},{"p":"org.apache.calcite.runtime","c":"SpaceFillingCurve2D.AbstractRange","l":"upper()"},{"p":"org.apache.calcite.runtime","c":"SpaceFillingCurve2D.IndexRange","l":"upper()"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"upper(String)","u":"upper(java.lang.String)"},{"p":"org.apache.calcite.rel.core","c":"Window.Group","l":"upperBound"},{"p":"org.apache.calcite.runtime","c":"BinarySearch","l":"upperBound(T[], K, Function1<T, K>, Comparator<K>)","u":"upperBound(T[],K,org.apache.calcite.linq4j.function.Function1,java.util.Comparator)"},{"p":"org.apache.calcite.runtime","c":"BinarySearch","l":"upperBound(T[], K, int, int, Function1<T, K>, Comparator<K>)","u":"upperBound(T[],K,int,int,org.apache.calcite.linq4j.function.Function1,java.util.Comparator)"},{"p":"org.apache.calcite.runtime","c":"BinarySearch","l":"upperBound(T[], T, Comparator<T>)","u":"upperBound(T[],T,java.util.Comparator)"},{"p":"org.apache.calcite.runtime","c":"BinarySearch","l":"upperBound(T[], T, int, int, Comparator<T>)","u":"upperBound(T[],T,int,int,java.util.Comparator)"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"upperBoundForInputs(RelNode, RelOptCost)","u":"upperBoundForInputs(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptCost)"},{"p":"org.apache.calcite.sql","c":"SqlInsertKeyword","l":"UPSERT"},{"p":"org.apache.calcite.test","c":"ConnectionSpec","l":"url"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"URL_DECODE"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"URL_DECODE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"URL_ENCODE"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"URL_ENCODE"},{"p":"org.apache.calcite.util","c":"Source","l":"url()"},{"p":"org.apache.calcite.util","c":"Sources","l":"url(String)","u":"url(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"UrlFunctions","l":"urlDecode(String)","u":"urlDecode(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"UrlFunctions","l":"urlEncode(String)","u":"urlEncode(java.lang.String)"},{"p":"org.apache.calcite.materialize","c":"Lattice.Builder","l":"use(Lattice.Column, boolean)","u":"use(org.apache.calcite.materialize.Lattice.Column,boolean)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableConvention","l":"useAbstractConvertersForConversion(RelTraitSet, RelTraitSet)","u":"useAbstractConvertersForConversion(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.interpreter","c":"BindableConvention","l":"useAbstractConvertersForConversion(RelTraitSet, RelTraitSet)","u":"useAbstractConvertersForConversion(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.interpreter","c":"InterpretableConvention","l":"useAbstractConvertersForConversion(RelTraitSet, RelTraitSet)","u":"useAbstractConvertersForConversion(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.plan","c":"Convention.Impl","l":"useAbstractConvertersForConversion(RelTraitSet, RelTraitSet)","u":"useAbstractConvertersForConversion(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.plan","c":"Convention","l":"useAbstractConvertersForConversion(RelTraitSet, RelTraitSet)","u":"useAbstractConvertersForConversion(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.sql","c":"SqlPivot","l":"usedColumnNames()"},{"p":"org.apache.calcite.sql","c":"SqlUnpivot","l":"usedColumnNames()"},{"p":"org.apache.calcite.sql","c":"SqlIntervalQualifier","l":"useDefaultFractionalSecondPrecision()"},{"p":"org.apache.calcite.sql","c":"SqlIntervalQualifier","l":"useDefaultStartPrecision()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactory","l":"useDoubleMultiplication(RelDataType, RelDataType)","u":"useDoubleMultiplication(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeFactoryImpl","l":"useDoubleMultiplication(RelDataType, RelDataType)","u":"useDoubleMultiplication(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.plan","c":"RelOptMaterializations","l":"useLattices(RelNode, List<RelOptLattice>)","u":"useLattices(org.apache.calcite.rel.RelNode,java.util.List)"},{"p":"org.apache.calcite.server","c":"DdlExecutor","l":"USELESS"},{"p":"org.apache.calcite.plan","c":"RelOptMaterializations","l":"useMaterializedViews(RelNode, List<RelOptMaterialization>)","u":"useMaterializedViews(org.apache.calcite.rel.RelNode,java.util.List)"},{"p":"org.apache.calcite.plan","c":"RelOptMaterializations","l":"useMaterializedViews(RelNode, List<RelOptMaterialization>, List<SubstitutionVisitor.UnifyRule>)","u":"useMaterializedViews(org.apache.calcite.rel.RelNode,java.util.List,java.util.List)"},{"p":"org.apache.calcite","c":"DataContext.Variable","l":"USER"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"USER"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"USER"},{"p":"org.apache.calcite.sql","c":"SqlFunctionCategory","l":"USER_DEFINED_CONSTRUCTOR"},{"p":"org.apache.calcite.sql","c":"SqlFunctionCategory","l":"USER_DEFINED_FUNCTION"},{"p":"org.apache.calcite.sql","c":"SqlFunctionCategory","l":"USER_DEFINED_PROCEDURE"},{"p":"org.apache.calcite.sql","c":"SqlFunctionCategory","l":"USER_DEFINED_SPECIFIC_FUNCTION"},{"p":"org.apache.calcite.sql","c":"SqlFunctionCategory","l":"USER_DEFINED_TABLE_FUNCTION"},{"p":"org.apache.calcite.sql","c":"SqlFunctionCategory","l":"USER_DEFINED_TABLE_SPECIFIC_FUNCTION"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"user(DataContext)","u":"user(org.apache.calcite.DataContext)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexImpTable.UserDefinedAggReflectiveImplementor","l":"UserDefinedAggReflectiveImplementor(AggregateFunctionImpl)","u":"%3Cinit%3E(org.apache.calcite.schema.impl.AggregateFunctionImpl)"},{"p":"org.apache.calcite.sql.validate.implicit","c":"TypeCoercion","l":"userDefinedFunctionCoercion(SqlValidatorScope, SqlCall, SqlFunction)","u":"userDefinedFunctionCoercion(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction)"},{"p":"org.apache.calcite.sql.validate.implicit","c":"TypeCoercionImpl","l":"userDefinedFunctionCoercion(SqlValidatorScope, SqlCall, SqlFunction)","u":"userDefinedFunctionCoercion(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction)"},{"p":"org.apache.calcite.test","c":"ConnectionSpec","l":"username"},{"p":"org.apache.calcite.sql","c":"JoinConditionType","l":"USING"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"usingNames(SqlJoin)","u":"usingNames(org.apache.calcite.sql.SqlJoin)"},{"p":"org.apache.calcite","c":"DataContext.Variable","l":"UTC_TIMESTAMP"},{"p":"org.apache.calcite.test","c":"SqlOperatorTest","l":"UTC_TZ"},{"p":"org.apache.calcite.sql","c":"SqlJsonEncoding","l":"UTF16"},{"p":"org.apache.calcite.sql","c":"SqlJsonEncoding","l":"UTF32"},{"p":"org.apache.calcite.sql","c":"SqlJsonEncoding","l":"UTF8"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema.EveryType","l":"utilDate"},{"p":"org.apache.calcite.runtime","c":"Utilities","l":"Utilities()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.runtime.rtti","c":"RuntimeTypeInformation.RuntimeSqlTypeName","l":"UUID"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFamily","l":"UUID"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"UUID"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"UUID_FROM_STRING"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"UUID_TO_BINARY"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"UUID_TO_STRING"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"uuidToBinary(UUID)","u":"uuidToBinary(java.util.UUID)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions","l":"uuidToString(UUID)","u":"uuidToString(java.util.UUID)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"V2M"},{"p":"org.apache.calcite.sql.fun","c":"SqlInternalOperators","l":"V2M"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl.Status","l":"VALID"},{"p":"org.apache.calcite.sql.test","c":"SqlTests.Stage","l":"VALIDATE"},{"p":"org.apache.calcite.sql.validate","c":"MatchRecognizeNamespace","l":"validate(RelDataType)","u":"validate(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingNamespace","l":"validate(RelDataType)","u":"validate(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorNamespace","l":"validate(RelDataType)","u":"validate(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.prepare","c":"PlannerImpl","l":"validate(SqlNode)","u":"validate(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"validate(SqlNode)","u":"validate(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validate(SqlNode)","u":"validate(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.tools","c":"Planner","l":"validate(SqlNode)","u":"validate(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlCall","l":"validate(SqlValidator, SqlValidatorScope)","u":"validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql","c":"SqlDataTypeSpec","l":"validate(SqlValidator, SqlValidatorScope)","u":"validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql","c":"SqlDelete","l":"validate(SqlValidator, SqlValidatorScope)","u":"validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql","c":"SqlDynamicParam","l":"validate(SqlValidator, SqlValidatorScope)","u":"validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql","c":"SqlIdentifier","l":"validate(SqlValidator, SqlValidatorScope)","u":"validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql","c":"SqlInsert","l":"validate(SqlValidator, SqlValidatorScope)","u":"validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql","c":"SqlIntervalQualifier","l":"validate(SqlValidator, SqlValidatorScope)","u":"validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"validate(SqlValidator, SqlValidatorScope)","u":"validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize","l":"validate(SqlValidator, SqlValidatorScope)","u":"validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql","c":"SqlMerge","l":"validate(SqlValidator, SqlValidatorScope)","u":"validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql","c":"SqlNode","l":"validate(SqlValidator, SqlValidatorScope)","u":"validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"validate(SqlValidator, SqlValidatorScope)","u":"validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql","c":"SqlSelect","l":"validate(SqlValidator, SqlValidatorScope)","u":"validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql","c":"SqlSetOption","l":"validate(SqlValidator, SqlValidatorScope)","u":"validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql","c":"SqlUpdate","l":"validate(SqlValidator, SqlValidatorScope)","u":"validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql","c":"SqlWindow","l":"validate(SqlValidator, SqlValidatorScope)","u":"validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql","c":"SqlWith","l":"validate(SqlValidator, SqlValidatorScope)","u":"validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisor","l":"validate(String)","u":"validate(java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"validateAggregateParams(SqlCall, SqlNode, SqlNodeList, SqlNodeList, SqlValidatorScope)","u":"validateAggregateParams(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validateAggregateParams(SqlCall, SqlNode, SqlNodeList, SqlNodeList, SqlValidatorScope)","u":"validateAggregateParams(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql.test","c":"AbstractSqlTester","l":"validateAndApply(SqlTestFactory, StringAndPos, SqlTester.ValidatedNodeFunction<R>)","u":"validateAndApply(org.apache.calcite.sql.test.SqlTestFactory,org.apache.calcite.sql.parser.StringAndPos,org.apache.calcite.sql.test.SqlTester.ValidatedNodeFunction)"},{"p":"org.apache.calcite.sql.test","c":"SqlTester","l":"validateAndApply(SqlTestFactory, StringAndPos, SqlTester.ValidatedNodeFunction<R>)","u":"validateAndApply(org.apache.calcite.sql.test.SqlTestFactory,org.apache.calcite.sql.parser.StringAndPos,org.apache.calcite.sql.test.SqlTester.ValidatedNodeFunction)"},{"p":"org.apache.calcite.prepare","c":"PlannerImpl","l":"validateAndGetType(SqlNode)","u":"validateAndGetType(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.tools","c":"Planner","l":"validateAndGetType(SqlNode)","u":"validateAndGetType(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.test","c":"AbstractSqlTester","l":"validateAndThen(SqlTestFactory, StringAndPos, SqlTester.ValidatedNodeConsumer)","u":"validateAndThen(org.apache.calcite.sql.test.SqlTestFactory,org.apache.calcite.sql.parser.StringAndPos,org.apache.calcite.sql.test.SqlTester.ValidatedNodeConsumer)"},{"p":"org.apache.calcite.sql.test","c":"SqlTester","l":"validateAndThen(SqlTestFactory, StringAndPos, SqlTester.ValidatedNodeConsumer)","u":"validateAndThen(org.apache.calcite.sql.test.SqlTestFactory,org.apache.calcite.sql.parser.StringAndPos,org.apache.calcite.sql.test.SqlTester.ValidatedNodeConsumer)"},{"p":"org.apache.calcite.sql.fun","c":"SqlAbstractGroupFunction","l":"validateCall(SqlCall, SqlValidator, SqlValidatorScope, SqlValidatorScope)","u":"validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql.fun","c":"SqlCaseOperator","l":"validateCall(SqlCall, SqlValidator, SqlValidatorScope, SqlValidatorScope)","u":"validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql.fun","c":"SqlConvertFunction","l":"validateCall(SqlCall, SqlValidator, SqlValidatorScope, SqlValidatorScope)","u":"validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql.fun","c":"SqlDotOperator","l":"validateCall(SqlCall, SqlValidator, SqlValidatorScope, SqlValidatorScope)","u":"validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql.fun","c":"SqlExtractFunction","l":"validateCall(SqlCall, SqlValidator, SqlValidatorScope, SqlValidatorScope)","u":"validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql.fun","c":"SqlFloorFunction","l":"validateCall(SqlCall, SqlValidator, SqlValidatorScope, SqlValidatorScope)","u":"validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql.fun","c":"SqlLikeOperator","l":"validateCall(SqlCall, SqlValidator, SqlValidatorScope, SqlValidatorScope)","u":"validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql.fun","c":"SqlLiteralChainOperator","l":"validateCall(SqlCall, SqlValidator, SqlValidatorScope, SqlValidatorScope)","u":"validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql.fun","c":"SqlOracleConvertFunction","l":"validateCall(SqlCall, SqlValidator, SqlValidatorScope, SqlValidatorScope)","u":"validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql.fun","c":"SqlSequenceValueOperator","l":"validateCall(SqlCall, SqlValidator, SqlValidatorScope, SqlValidatorScope)","u":"validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql.fun","c":"SqlTimestampAddFunction","l":"validateCall(SqlCall, SqlValidator, SqlValidatorScope, SqlValidatorScope)","u":"validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql.fun","c":"SqlTranslateFunction","l":"validateCall(SqlCall, SqlValidator, SqlValidatorScope, SqlValidatorScope)","u":"validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql","c":"SqlAggFunction","l":"validateCall(SqlCall, SqlValidator, SqlValidatorScope, SqlValidatorScope)","u":"validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql","c":"SqlAsOperator","l":"validateCall(SqlCall, SqlValidator, SqlValidatorScope, SqlValidatorScope)","u":"validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql","c":"SqlBasicFunction","l":"validateCall(SqlCall, SqlValidator, SqlValidatorScope, SqlValidatorScope)","u":"validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql","c":"SqlFilterOperator","l":"validateCall(SqlCall, SqlValidator, SqlValidatorScope, SqlValidatorScope)","u":"validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql","c":"SqlFunction","l":"validateCall(SqlCall, SqlValidator, SqlValidatorScope, SqlValidatorScope)","u":"validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize.SqlMatchRecognizeOperator","l":"validateCall(SqlCall, SqlValidator, SqlValidatorScope, SqlValidatorScope)","u":"validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql","c":"SqlNullTreatmentOperator","l":"validateCall(SqlCall, SqlValidator, SqlValidatorScope, SqlValidatorScope)","u":"validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"validateCall(SqlCall, SqlValidator, SqlValidatorScope, SqlValidatorScope)","u":"validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql","c":"SqlOverOperator","l":"validateCall(SqlCall, SqlValidator, SqlValidatorScope, SqlValidatorScope)","u":"validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql","c":"SqlSetOperator","l":"validateCall(SqlCall, SqlValidator, SqlValidatorScope, SqlValidatorScope)","u":"validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql","c":"SqlWithinDistinctOperator","l":"validateCall(SqlCall, SqlValidator, SqlValidatorScope, SqlValidatorScope)","u":"validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql","c":"SqlWithinGroupOperator","l":"validateCall(SqlCall, SqlValidator, SqlValidatorScope, SqlValidatorScope)","u":"validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"validateCall(SqlCall, SqlValidatorScope)","u":"validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validateCall(SqlCall, SqlValidatorScope)","u":"validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql","c":"SqlUtil","l":"validateCharset(ByteString, Charset)","u":"validateCharset(org.apache.calcite.avatica.util.ByteString,java.nio.charset.Charset)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"validateDataType(SqlDataTypeSpec)","u":"validateDataType(org.apache.calcite.sql.SqlDataTypeSpec)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validateDataType(SqlDataTypeSpec)","u":"validateDataType(org.apache.calcite.sql.SqlDataTypeSpec)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"validateDelete(SqlDelete)","u":"validateDelete(org.apache.calcite.sql.SqlDelete)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validateDelete(SqlDelete)","u":"validateDelete(org.apache.calcite.sql.SqlDelete)"},{"p":"org.apache.calcite.rel","c":"RelRoot","l":"validatedRowType"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"validateDynamicParam(SqlDynamicParam)","u":"validateDynamicParam(org.apache.calcite.sql.SqlDynamicParam)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validateDynamicParam(SqlDynamicParam)","u":"validateDynamicParam(org.apache.calcite.sql.SqlDynamicParam)"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisor.ValidateErrorInfo","l":"ValidateErrorInfo(CalciteContextException)","u":"%3Cinit%3E(org.apache.calcite.runtime.CalciteContextException)"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisor.ValidateErrorInfo","l":"ValidateErrorInfo(int, int, int, int, String)","u":"%3Cinit%3E(int,int,int,int,java.lang.String)"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisor.ValidateErrorInfo","l":"ValidateErrorInfo(SqlParserPos, String)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"AggregatingSelectScope","l":"validateExpr(SqlNode)","u":"validateExpr(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingScope","l":"validateExpr(SqlNode)","u":"validateExpr(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"ParameterScope","l":"validateExpr(SqlNode)","u":"validateExpr(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"GroupByScope","l":"validateExpr(SqlNode)","u":"validateExpr(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"MeasureScope","l":"validateExpr(SqlNode)","u":"validateExpr(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"OrderByScope","l":"validateExpr(SqlNode)","u":"validateExpr(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorScope","l":"validateExpr(SqlNode)","u":"validateExpr(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql","c":"SqlIdentifier","l":"validateExpr(SqlValidator, SqlValidatorScope)","u":"validateExpr(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql","c":"SqlNode","l":"validateExpr(SqlValidator, SqlValidatorScope)","u":"validateExpr(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql","c":"SqlNodeList","l":"validateExpr(SqlValidator, SqlValidatorScope)","u":"validateExpr(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql2rel","c":"InitializerContext","l":"validateExpression(RelDataType, SqlNode)","u":"validateExpression(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Blackboard","l":"validateExpression(RelDataType, SqlNode)","u":"validateExpression(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil","l":"validateExprWithRowType(boolean, SqlOperatorTable, RelDataTypeFactory, RelDataType, SqlNode)","u":"validateExprWithRowType(boolean,org.apache.calcite.sql.SqlOperatorTable,org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validateFeature(Feature, SqlParserPos)","u":"validateFeature(org.apache.calcite.runtime.Feature,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisorValidator","l":"validateFrom(SqlNode, RelDataType, SqlValidatorScope)","u":"validateFrom(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validateFrom(SqlNode, RelDataType, SqlValidatorScope)","u":"validateFrom(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validateGroupClause(SqlSelect)","u":"validateGroupClause(org.apache.calcite.sql.SqlSelect)"},{"p":"org.apache.calcite.tools","c":"PigRelBuilder","l":"validateGroupList(List<RelBuilder.GroupKey>)","u":"validateGroupList(java.util.List)"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisorValidator","l":"validateHavingClause(SqlSelect)","u":"validateHavingClause(org.apache.calcite.sql.SqlSelect)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validateHavingClause(SqlSelect)","u":"validateHavingClause(org.apache.calcite.sql.SqlSelect)"},{"p":"org.apache.calcite.rel.hint","c":"HintStrategyTable","l":"validateHint(RelHint)","u":"validateHint(org.apache.calcite.rel.hint.RelHint)"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisorValidator","l":"validateIdentifier(SqlIdentifier, SqlValidatorScope)","u":"validateIdentifier(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"validateIdentifier(SqlIdentifier, SqlValidatorScope)","u":"validateIdentifier(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validateIdentifier(SqlIdentifier, SqlValidatorScope)","u":"validateIdentifier(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql.validate","c":"AliasNamespace","l":"validateImpl(RelDataType)","u":"validateImpl(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate","c":"CollectNamespace","l":"validateImpl(RelDataType)","u":"validateImpl(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate","c":"IdentifierNamespace","l":"validateImpl(RelDataType)","u":"validateImpl(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate","c":"LambdaNamespace","l":"validateImpl(RelDataType)","u":"validateImpl(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate","c":"MatchRecognizeNamespace","l":"validateImpl(RelDataType)","u":"validateImpl(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate","c":"PivotNamespace","l":"validateImpl(RelDataType)","u":"validateImpl(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate","c":"ProcedureNamespace","l":"validateImpl(RelDataType)","u":"validateImpl(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate","c":"SelectNamespace","l":"validateImpl(RelDataType)","u":"validateImpl(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate","c":"SetopNamespace","l":"validateImpl(RelDataType)","u":"validateImpl(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate","c":"TableConstructorNamespace","l":"validateImpl(RelDataType)","u":"validateImpl(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate","c":"UnpivotNamespace","l":"validateImpl(RelDataType)","u":"validateImpl(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate","c":"WithNamespace","l":"validateImpl(RelDataType)","u":"validateImpl(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"validateInsert(SqlInsert)","u":"validateInsert(org.apache.calcite.sql.SqlInsert)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validateInsert(SqlInsert)","u":"validateInsert(org.apache.calcite.sql.SqlInsert)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"validateIntervalQualifier(SqlIntervalQualifier)","u":"validateIntervalQualifier(org.apache.calcite.sql.SqlIntervalQualifier)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validateIntervalQualifier(SqlIntervalQualifier)","u":"validateIntervalQualifier(org.apache.calcite.sql.SqlIntervalQualifier)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validateJoin(SqlJoin, SqlValidatorScope)","u":"validateJoin(org.apache.calcite.sql.SqlJoin,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.rel.rules","c":"FilterJoinRule","l":"validateJoinFilters(List<RexNode>, List<RexNode>, Join, JoinRelType)","u":"validateJoinFilters(java.util.List,java.util.List,org.apache.calcite.rel.core.Join,org.apache.calcite.rel.core.JoinRelType)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"validateLambda(SqlLambda)","u":"validateLambda(org.apache.calcite.sql.SqlLambda)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validateLambda(SqlLambda)","u":"validateLambda(org.apache.calcite.sql.SqlLambda)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"validateLiteral(SqlLiteral)","u":"validateLiteral(org.apache.calcite.sql.SqlLiteral)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validateLiteral(SqlLiteral)","u":"validateLiteral(org.apache.calcite.sql.SqlLiteral)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"validateMatchRecognize(SqlCall)","u":"validateMatchRecognize(org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validateMatchRecognize(SqlCall)","u":"validateMatchRecognize(org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"validateMerge(SqlMerge)","u":"validateMerge(org.apache.calcite.sql.SqlMerge)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validateMerge(SqlMerge)","u":"validateMerge(org.apache.calcite.sql.SqlMerge)"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisorValidator","l":"validateModality(SqlSelect, SqlModality, boolean)","u":"validateModality(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.validate.SqlModality,boolean)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"validateModality(SqlSelect, SqlModality, boolean)","u":"validateModality(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.validate.SqlModality,boolean)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validateModality(SqlSelect, SqlModality, boolean)","u":"validateModality(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.validate.SqlModality,boolean)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validateMustFilterRequirements(SqlSelect, SelectNamespace)","u":"validateMustFilterRequirements(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.validate.SelectNamespace)"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisorValidator","l":"validateNamespace(SqlValidatorNamespace, RelDataType)","u":"validateNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validateNamespace(SqlValidatorNamespace, RelDataType)","u":"validateNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"validateOperands(SqlValidator, SqlValidatorScope, SqlCall)","u":"validateOperands(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validateOrderList(SqlSelect)","u":"validateOrderList(org.apache.calcite.sql.SqlSelect)"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisorValidator","l":"validateOver(SqlCall, SqlValidatorScope)","u":"validateOver(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validateOver(SqlCall, SqlValidatorScope)","u":"validateOver(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"validateParameterizedExpression(SqlNode, Map<String, RelDataType>)","u":"validateParameterizedExpression(org.apache.calcite.sql.SqlNode,java.util.Map)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validateParameterizedExpression(SqlNode, Map<String, RelDataType>)","u":"validateParameterizedExpression(org.apache.calcite.sql.SqlNode,java.util.Map)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUtil","l":"validatePercentage(Double)","u":"validatePercentage(java.lang.Double)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validatePivot(SqlPivot)","u":"validatePivot(org.apache.calcite.sql.SqlPivot)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validateQualifyClause(SqlSelect)","u":"validateQualifyClause(org.apache.calcite.sql.SqlSelect)"},{"p":"org.apache.calcite.sql","c":"SqlFunction","l":"validateQuantifier(SqlValidator, SqlCall)","u":"validateQuantifier(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"validateQuery(SqlNode, SqlValidatorScope, RelDataType)","u":"validateQuery(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validateQuery(SqlNode, SqlValidatorScope, RelDataType)","u":"validateQuery(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdUtil","l":"validateResult(Double)","u":"validateResult(java.lang.Double)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validateSelect(SqlSelect, RelDataType)","u":"validateSelect(org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validateSelectList(SqlNodeList, SqlSelect, RelDataType)","u":"validateSelectList(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"validateSequenceValue(SqlValidatorScope, SqlIdentifier)","u":"validateSequenceValue(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validateSequenceValue(SqlValidatorScope, SqlIdentifier)","u":"validateSequenceValue(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validateTableFunction(SqlCall, SqlValidatorScope, RelDataType)","u":"validateTableFunction(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"validateTimeFrame(SqlIntervalQualifier)","u":"validateTimeFrame(org.apache.calcite.sql.SqlIntervalQualifier)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validateTimeFrame(SqlIntervalQualifier)","u":"validateTimeFrame(org.apache.calcite.sql.SqlIntervalQualifier)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validateUnnest(SqlCall, SqlValidatorScope, RelDataType)","u":"validateUnnest(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validateUnpivot(SqlUnpivot)","u":"validateUnpivot(org.apache.calcite.sql.SqlUnpivot)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"validateUpdate(SqlUpdate)","u":"validateUpdate(org.apache.calcite.sql.SqlUpdate)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validateUpdate(SqlUpdate)","u":"validateUpdate(org.apache.calcite.sql.SqlUpdate)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"validateValueAgainstConstraint(SqlNode, RexNode, Supplier<CalciteContextException>)","u":"validateValueAgainstConstraint(org.apache.calcite.sql.SqlNode,org.apache.calcite.rex.RexNode,java.util.function.Supplier)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validateValues(SqlCall, RelDataType, SqlValidatorScope)","u":"validateValues(org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql.advise","c":"SqlAdvisorValidator","l":"validateWhereClause(SqlSelect)","u":"validateWhereClause(org.apache.calcite.sql.SqlSelect)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validateWhereClause(SqlSelect)","u":"validateWhereClause(org.apache.calcite.sql.SqlSelect)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validateWhereOrOn(SqlValidatorScope, SqlNode, String)","u":"validateWhereOrOn(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"validateWindow(SqlNode, SqlValidatorScope, SqlCall)","u":"validateWindow(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validateWindow(SqlNode, SqlValidatorScope, SqlCall)","u":"validateWindow(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validateWindowClause(SqlSelect)","u":"validateWindowClause(org.apache.calcite.sql.SqlSelect)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"validateWith(SqlWith, SqlValidatorScope)","u":"validateWith(org.apache.calcite.sql.SqlWith,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validateWith(SqlWith, SqlValidatorScope)","u":"validateWith(org.apache.calcite.sql.SqlWith,org.apache.calcite.sql.validate.SqlValidatorScope)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator","l":"validateWithItem(SqlWithItem)","u":"validateWithItem(org.apache.calcite.sql.SqlWithItem)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl","l":"validateWithItem(SqlWithItem)","u":"validateWithItem(org.apache.calcite.sql.SqlWithItem)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"validationError(String)","u":"validationError(java.lang.String)"},{"p":"org.apache.calcite.tools","c":"ValidationException","l":"ValidationException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.calcite.tools","c":"ValidationException","l":"ValidationException(String, Throwable)","u":"%3Cinit%3E(java.lang.String,java.lang.Throwable)"},{"p":"org.apache.calcite.tools","c":"ValidationException","l":"ValidationException(Throwable)","u":"%3Cinit%3E(java.lang.Throwable)"},{"p":"org.apache.calcite.sql.validate","c":"MatchRecognizeNamespace","l":"validator"},{"p":"org.apache.calcite.sql.validate","c":"DelegatingScope","l":"validator"},{"p":"org.apache.calcite.sql.validate","c":"ParameterScope","l":"validator"},{"p":"org.apache.calcite.sql.validate.implicit","c":"AbstractTypeCoercion","l":"validator"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"validator"},{"p":"org.apache.calcite.sql.test","c":"SqlTestFactory","l":"validatorConfig"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"validatorContext(int, int, int, int)","u":"validatorContext(int,int,int,int)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"validatorContextPoint(int, int)","u":"validatorContextPoint(int,int)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"validatorUnknownFunction(String)","u":"validatorUnknownFunction(java.lang.String)"},{"p":"org.apache.calcite.rex","c":"RexLiteral","l":"validConstant(Object, Litmus)","u":"validConstant(java.lang.Object,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.sql.fun","c":"SqlBetweenOperator","l":"validRexOperands(int, Litmus)","u":"validRexOperands(int,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.sql.fun","c":"SqlDotOperator","l":"validRexOperands(int, Litmus)","u":"validRexOperands(int,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.sql.fun","c":"SqlInOperator","l":"validRexOperands(int, Litmus)","u":"validRexOperands(int,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.sql.fun","c":"SqlLikeOperator","l":"validRexOperands(int, Litmus)","u":"validRexOperands(int,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.sql","c":"SqlBinaryOperator","l":"validRexOperands(int, Litmus)","u":"validRexOperands(int,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.sql","c":"SqlOperator","l":"validRexOperands(int, Litmus)","u":"validRexOperands(int,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.sql","c":"SqlPostfixOperator","l":"validRexOperands(int, Litmus)","u":"validRexOperands(int,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.sql","c":"SqlPrefixOperator","l":"validRexOperands(int, Litmus)","u":"validRexOperands(int,org.apache.calcite.util.Litmus)"},{"p":"org.apache.calcite.linq4j.tree","c":"ConstantExpression","l":"value"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"value"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema.IntAndString","l":"value"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema.IntHolder","l":"value"},{"p":"org.apache.calcite.sql.fun","c":"SqlBetweenOperator","l":"VALUE_OPERAND"},{"p":"org.apache.calcite.adapter.java","c":"Map","l":"value()"},{"p":"org.apache.calcite.config","c":"CalciteSystemProperty","l":"value()"},{"p":"org.apache.calcite.linq4j.function","c":"Hints","l":"value()"},{"p":"org.apache.calcite.rex","c":"RexLiteral","l":"value(RexNode)","u":"value(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"value(SqlNode)","u":"value(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.config","c":"CalciteConnectionProperty","l":"valueClass()"},{"p":"org.apache.calcite.adapter.java","c":"Map","l":"valueIsNullable()"},{"p":"org.apache.calcite.linq4j.tree","c":"Types.MapType","l":"valueIsNullable()"},{"p":"org.apache.calcite.rex","c":"RexLiteral","l":"valueMatchesType(Comparable, SqlTypeName, boolean)","u":"valueMatchesType(java.lang.Comparable,org.apache.calcite.sql.type.SqlTypeName,boolean)"},{"p":"org.apache.calcite.sql","c":"SqlLiteral","l":"valueMatchesType(Object, SqlTypeName)","u":"valueMatchesType(java.lang.Object,org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"valueNotAllowed()"},{"p":"org.apache.calcite.adapter.pig","c":"PigDataType","l":"valueOf(byte)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"valueOf(long...)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet","l":"valueOf(LongBuffer)","u":"valueOf(java.nio.LongBuffer)"},{"p":"org.apache.calcite.adapter.pig","c":"PigAggFunction","l":"valueOf(SqlKind, boolean)","u":"valueOf(org.apache.calcite.sql.SqlKind,boolean)"},{"p":"org.apache.calcite.adapter.pig","c":"PigDataType","l":"valueOf(SqlTypeName)","u":"valueOf(org.apache.calcite.sql.type.SqlTypeName)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraMethod","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.adapter.csv","c":"CsvTable.Flavor","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.adapter.druid","c":"Granularity.Type","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.adapter.druid","c":"QueryType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableConvention","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRel.Prefer","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.adapter.enumerable","c":"JavaRowFormat","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.adapter.enumerable","c":"NullPolicy","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexImpTable.NullAs","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.adapter.enumerable","c":"WinAggImplementor.SeekType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.adapter.file","c":"CsvTable.Flavor","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbMethod","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.adapter.innodb","c":"QueryType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoMethod","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.adapter.os","c":"OsQueryType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.adapter.pig","c":"PigAggFunction","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.adapter.pig","c":"PigDataType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.adapter.redis","c":"RedisDataFormat","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.adapter.redis","c":"RedisDataType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.adapter.spark","c":"SparkMethod","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.chinook","c":"ConnectionFactory.DatabaseWrapper","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.chinook","c":"EnvironmentFairy.User","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.config","c":"CalciteConnectionProperty","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.config","c":"CharLiteralStyle","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.config","c":"Lex","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.config","c":"NullCollation","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite","c":"DataContext.Variable","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.interpreter","c":"BindableConvention","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.interpreter","c":"InterpretableConvention","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.linq4j","c":"JoinType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.linq4j","c":"OpType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"GotoExpressionKind","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive.Flavor","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.model","c":"JsonSchema.Type","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.model","c":"ModelHandler.ExtraOperand","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.piglet","c":"Ast.Direction","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.piglet","c":"Ast.Op","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.plan","c":"DeriveMode","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.plan.hep","c":"HepMatchOrder","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.plan","c":"RelOptRuleOperandChildPolicy","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.Logic","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.SubQueryType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.plan","c":"Strong.Policy","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.plan","c":"TableAccessMap.Mode","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.rel.core","c":"Aggregate.Group","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.rel.core","c":"JoinRelType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.rel.core","c":"Spool.Type","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.rel.core","c":"TableModify.Operation","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.rel.hint","c":"CompositeHintPredicate.Composition","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.rel.metadata","c":"NullSentinel","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Clause","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.rel","c":"RelDistribution.Type","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.rel","c":"RelFieldCollation.Direction","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.rel","c":"RelFieldCollation.NullDirection","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule.MatchModality","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeComparability","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.rel.type","c":"StructKind","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.rex","c":"RexDigestIncludeType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.rex","c":"RexUnknownAs","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.rex","c":"RexWindowExclusion","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"Hook","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.JsonModifyMode","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.PathMode","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"Pattern.Op","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.runtime.rtti","c":"RuntimeTypeInformation.RuntimeSqlTypeName","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeUtils.SpatialType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.FlatProductInputType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.JsonScope","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.schema","c":"ColumnStrategy","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.schema","c":"Schema.TableType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql.babel.postgres","c":"SqlSetOptions.Names","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql.babel.postgres","c":"SqlSetOptions.Values","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql.babel.postgres","c":"TransactionChainingMode","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql.babel.postgres","c":"TransactionMode","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql.babel","c":"TableCollectionType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateTableLike.LikeOption","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql.ddl","c":"SqlDdlNodes.FileType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql.fun","c":"SqlAvgAggFunction.Subtype","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql.fun","c":"SqlBetweenOperator.Flag","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql.fun","c":"SqlCovarAggFunction.Subtype","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibrary","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql.fun","c":"SqlTrimFunction.Flag","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"JoinConditionType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"JoinType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlAccessEnum","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlCollation.Coercibility","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlDialect.CalendarPolicy","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlDialect.DatabaseProduct","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlExplain.Depth","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlExplainFormat","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlExplainLevel","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlFunctionCategory","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlHint.HintOptionFormat","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlInsertKeyword","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlJdbcDataTypeName","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlJsonConstructorNullClause","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlJsonEmptyOrError","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlJsonEncoding","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlJsonExistsErrorBehavior","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlJsonQueryEmptyOrErrorBehavior","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlJsonQueryWrapperBehavior","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlJsonValueEmptyOrErrorBehavior","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlJsonValueReturning","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize.AfterOption","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize.RowsPerMatchOption","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlNullSemantics","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlSelectKeyword","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlStateCodes","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlSyntax","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlWriter.FrameTypeEnum","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlWriter.SubQueryStyle","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig.LineFolding","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"TableCharacteristic.Semantics","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture.CastType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture.VmName","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql.test","c":"SqlTester.VmName","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql.test","c":"SqlTests.Stage","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql.type","c":"CompositeOperandTypeChecker.Composition","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql.type","c":"SqlOperandTypeChecker.Consistency","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFamily","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName.Limit","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"SqlModality","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"SqlMonikerType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"SqlMonotonicity","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl.Status","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.statistic","c":"MapSqlStatisticProvider","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.Config","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.DatabaseInstance","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.SchemaSpec","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.tools","c":"PigRelBuilder.GroupOption","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.util.format.postgresql","c":"CapitalizationEnum","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.util.format.postgresql","c":"ChronoUnitEnum","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.util.format.postgresql","c":"DateCalendarEnum","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.util.format.postgresql","c":"PatternModifier","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.util.mapping","c":"MappingType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.util","c":"Optionality","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser.Type","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.calcite.interpreter","c":"Context","l":"values"},{"p":"org.apache.calcite.piglet","c":"Ast.Op","l":"VALUES"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"VALUES"},{"p":"org.apache.calcite.sql","c":"SqlWriter.FrameTypeEnum","l":"VALUES"},{"p":"org.apache.calcite.rel.hint","c":"HintPredicates","l":"VALUES"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"VALUES"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcRules","l":"VALUES_FACTORY"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraMethod","l":"values()"},{"p":"org.apache.calcite.adapter.csv","c":"CsvTable.Flavor","l":"values()"},{"p":"org.apache.calcite.adapter.druid","c":"DruidType","l":"values()"},{"p":"org.apache.calcite.adapter.druid","c":"Granularity.Type","l":"values()"},{"p":"org.apache.calcite.adapter.druid","c":"QueryType","l":"values()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableConvention","l":"values()"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRel.Prefer","l":"values()"},{"p":"org.apache.calcite.adapter.enumerable","c":"JavaRowFormat","l":"values()"},{"p":"org.apache.calcite.adapter.enumerable","c":"NullPolicy","l":"values()"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexImpTable.NullAs","l":"values()"},{"p":"org.apache.calcite.adapter.enumerable","c":"WinAggImplementor.SeekType","l":"values()"},{"p":"org.apache.calcite.adapter.file","c":"CsvTable.Flavor","l":"values()"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbMethod","l":"values()"},{"p":"org.apache.calcite.adapter.innodb","c":"QueryType","l":"values()"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoMethod","l":"values()"},{"p":"org.apache.calcite.adapter.os","c":"OsQueryType","l":"values()"},{"p":"org.apache.calcite.adapter.pig","c":"PigAggFunction","l":"values()"},{"p":"org.apache.calcite.adapter.pig","c":"PigDataType","l":"values()"},{"p":"org.apache.calcite.adapter.redis","c":"RedisDataFormat","l":"values()"},{"p":"org.apache.calcite.adapter.redis","c":"RedisDataType","l":"values()"},{"p":"org.apache.calcite.adapter.spark","c":"SparkMethod","l":"values()"},{"p":"org.apache.calcite.chinook","c":"ConnectionFactory.DatabaseWrapper","l":"values()"},{"p":"org.apache.calcite.chinook","c":"EnvironmentFairy.User","l":"values()"},{"p":"org.apache.calcite.config","c":"CalciteConnectionProperty","l":"values()"},{"p":"org.apache.calcite.config","c":"CharLiteralStyle","l":"values()"},{"p":"org.apache.calcite.config","c":"Lex","l":"values()"},{"p":"org.apache.calcite.config","c":"NullCollation","l":"values()"},{"p":"org.apache.calcite","c":"DataContext.Variable","l":"values()"},{"p":"org.apache.calcite.interpreter","c":"BindableConvention","l":"values()"},{"p":"org.apache.calcite.interpreter","c":"InterpretableConvention","l":"values()"},{"p":"org.apache.calcite.linq4j","c":"JoinType","l":"values()"},{"p":"org.apache.calcite.linq4j","c":"OpType","l":"values()"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"values()"},{"p":"org.apache.calcite.linq4j.tree","c":"GotoExpressionKind","l":"values()"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive.Flavor","l":"values()"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"values()"},{"p":"org.apache.calcite.model","c":"JsonSchema.Type","l":"values()"},{"p":"org.apache.calcite.model","c":"ModelHandler.ExtraOperand","l":"values()"},{"p":"org.apache.calcite.piglet","c":"Ast.Direction","l":"values()"},{"p":"org.apache.calcite.piglet","c":"Ast.Op","l":"values()"},{"p":"org.apache.calcite.plan","c":"DeriveMode","l":"values()"},{"p":"org.apache.calcite.plan.hep","c":"HepMatchOrder","l":"values()"},{"p":"org.apache.calcite.plan","c":"RelOptRuleOperandChildPolicy","l":"values()"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.Logic","l":"values()"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.SubQueryType","l":"values()"},{"p":"org.apache.calcite.plan","c":"Strong.Policy","l":"values()"},{"p":"org.apache.calcite.plan","c":"TableAccessMap.Mode","l":"values()"},{"p":"org.apache.calcite.rel.core","c":"Aggregate.Group","l":"values()"},{"p":"org.apache.calcite.rel.core","c":"JoinRelType","l":"values()"},{"p":"org.apache.calcite.rel.core","c":"Spool.Type","l":"values()"},{"p":"org.apache.calcite.rel.core","c":"TableModify.Operation","l":"values()"},{"p":"org.apache.calcite.rel.hint","c":"CompositeHintPredicate.Composition","l":"values()"},{"p":"org.apache.calcite.rel.metadata","c":"NullSentinel","l":"values()"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Clause","l":"values()"},{"p":"org.apache.calcite.rel","c":"RelDistribution.Type","l":"values()"},{"p":"org.apache.calcite.rel","c":"RelFieldCollation.Direction","l":"values()"},{"p":"org.apache.calcite.rel","c":"RelFieldCollation.NullDirection","l":"values()"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule.MatchModality","l":"values()"},{"p":"org.apache.calcite.rel.type","c":"RelDataTypeComparability","l":"values()"},{"p":"org.apache.calcite.rel.type","c":"StructKind","l":"values()"},{"p":"org.apache.calcite.rex","c":"RexDigestIncludeType","l":"values()"},{"p":"org.apache.calcite.rex","c":"RexUnknownAs","l":"values()"},{"p":"org.apache.calcite.rex","c":"RexWindowExclusion","l":"values()"},{"p":"org.apache.calcite.runtime","c":"Hook","l":"values()"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.JsonModifyMode","l":"values()"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.PathMode","l":"values()"},{"p":"org.apache.calcite.runtime","c":"Pattern.Op","l":"values()"},{"p":"org.apache.calcite.runtime.rtti","c":"RuntimeTypeInformation.RuntimeSqlTypeName","l":"values()"},{"p":"org.apache.calcite.runtime","c":"SpatialTypeUtils.SpatialType","l":"values()"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.FlatProductInputType","l":"values()"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.JsonScope","l":"values()"},{"p":"org.apache.calcite.schema","c":"ColumnStrategy","l":"values()"},{"p":"org.apache.calcite.schema","c":"Schema.TableType","l":"values()"},{"p":"org.apache.calcite.sql.babel.postgres","c":"SqlSetOptions.Names","l":"values()"},{"p":"org.apache.calcite.sql.babel.postgres","c":"SqlSetOptions.Values","l":"values()"},{"p":"org.apache.calcite.sql.babel.postgres","c":"TransactionChainingMode","l":"values()"},{"p":"org.apache.calcite.sql.babel.postgres","c":"TransactionMode","l":"values()"},{"p":"org.apache.calcite.sql.babel","c":"TableCollectionType","l":"values()"},{"p":"org.apache.calcite.sql.ddl","c":"SqlCreateTableLike.LikeOption","l":"values()"},{"p":"org.apache.calcite.sql.ddl","c":"SqlDdlNodes.FileType","l":"values()"},{"p":"org.apache.calcite.sql.fun","c":"SqlAvgAggFunction.Subtype","l":"values()"},{"p":"org.apache.calcite.sql.fun","c":"SqlBetweenOperator.Flag","l":"values()"},{"p":"org.apache.calcite.sql.fun","c":"SqlCovarAggFunction.Subtype","l":"values()"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibrary","l":"values()"},{"p":"org.apache.calcite.sql.fun","c":"SqlTrimFunction.Flag","l":"values()"},{"p":"org.apache.calcite.sql","c":"JoinConditionType","l":"values()"},{"p":"org.apache.calcite.sql","c":"JoinType","l":"values()"},{"p":"org.apache.calcite.sql","c":"SqlAccessEnum","l":"values()"},{"p":"org.apache.calcite.sql","c":"SqlCollation.Coercibility","l":"values()"},{"p":"org.apache.calcite.sql","c":"SqlDialect.CalendarPolicy","l":"values()"},{"p":"org.apache.calcite.sql","c":"SqlDialect.DatabaseProduct","l":"values()"},{"p":"org.apache.calcite.sql","c":"SqlExplain.Depth","l":"values()"},{"p":"org.apache.calcite.sql","c":"SqlExplainFormat","l":"values()"},{"p":"org.apache.calcite.sql","c":"SqlExplainLevel","l":"values()"},{"p":"org.apache.calcite.sql","c":"SqlFunctionCategory","l":"values()"},{"p":"org.apache.calcite.sql","c":"SqlHint.HintOptionFormat","l":"values()"},{"p":"org.apache.calcite.sql","c":"SqlInsertKeyword","l":"values()"},{"p":"org.apache.calcite.sql","c":"SqlJdbcDataTypeName","l":"values()"},{"p":"org.apache.calcite.sql","c":"SqlJsonConstructorNullClause","l":"values()"},{"p":"org.apache.calcite.sql","c":"SqlJsonEmptyOrError","l":"values()"},{"p":"org.apache.calcite.sql","c":"SqlJsonEncoding","l":"values()"},{"p":"org.apache.calcite.sql","c":"SqlJsonExistsErrorBehavior","l":"values()"},{"p":"org.apache.calcite.sql","c":"SqlJsonQueryEmptyOrErrorBehavior","l":"values()"},{"p":"org.apache.calcite.sql","c":"SqlJsonQueryWrapperBehavior","l":"values()"},{"p":"org.apache.calcite.sql","c":"SqlJsonValueEmptyOrErrorBehavior","l":"values()"},{"p":"org.apache.calcite.sql","c":"SqlJsonValueReturning","l":"values()"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"values()"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize.AfterOption","l":"values()"},{"p":"org.apache.calcite.sql","c":"SqlMatchRecognize.RowsPerMatchOption","l":"values()"},{"p":"org.apache.calcite.sql","c":"SqlNullSemantics","l":"values()"},{"p":"org.apache.calcite.sql","c":"SqlSelectKeyword","l":"values()"},{"p":"org.apache.calcite.sql","c":"SqlStateCodes","l":"values()"},{"p":"org.apache.calcite.sql","c":"SqlSyntax","l":"values()"},{"p":"org.apache.calcite.sql","c":"SqlWriter.FrameTypeEnum","l":"values()"},{"p":"org.apache.calcite.sql","c":"SqlWriter.SubQueryStyle","l":"values()"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig.LineFolding","l":"values()"},{"p":"org.apache.calcite.sql","c":"TableCharacteristic.Semantics","l":"values()"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture.CastType","l":"values()"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture.VmName","l":"values()"},{"p":"org.apache.calcite.sql.test","c":"SqlTester.VmName","l":"values()"},{"p":"org.apache.calcite.sql.test","c":"SqlTests.Stage","l":"values()"},{"p":"org.apache.calcite.sql.type","c":"CompositeOperandTypeChecker.Composition","l":"values()"},{"p":"org.apache.calcite.sql.type","c":"SqlOperandTypeChecker.Consistency","l":"values()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFamily","l":"values()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName.Limit","l":"values()"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"values()"},{"p":"org.apache.calcite.sql.validate","c":"SqlConformanceEnum","l":"values()"},{"p":"org.apache.calcite.sql.validate","c":"SqlModality","l":"values()"},{"p":"org.apache.calcite.sql.validate","c":"SqlMonikerType","l":"values()"},{"p":"org.apache.calcite.sql.validate","c":"SqlMonotonicity","l":"values()"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorImpl.Status","l":"values()"},{"p":"org.apache.calcite.statistic","c":"MapSqlStatisticProvider","l":"values()"},{"p":"org.apache.calcite.test","c":"CalciteAssert.Config","l":"values()"},{"p":"org.apache.calcite.test","c":"CalciteAssert.DatabaseInstance","l":"values()"},{"p":"org.apache.calcite.test","c":"CalciteAssert.SchemaSpec","l":"values()"},{"p":"org.apache.calcite.tools","c":"PigRelBuilder.GroupOption","l":"values()"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"values()"},{"p":"org.apache.calcite.util","c":"CompositeMap","l":"values()"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"values()"},{"p":"org.apache.calcite.util.format.postgresql","c":"CapitalizationEnum","l":"values()"},{"p":"org.apache.calcite.util.format.postgresql","c":"ChronoUnitEnum","l":"values()"},{"p":"org.apache.calcite.util.format.postgresql","c":"DateCalendarEnum","l":"values()"},{"p":"org.apache.calcite.util.format.postgresql","c":"PatternModifier","l":"values()"},{"p":"org.apache.calcite.util.mapping","c":"MappingType","l":"values()"},{"p":"org.apache.calcite.util","c":"Optionality","l":"values()"},{"p":"org.apache.calcite.util","c":"PrecedenceClimbingParser.Type","l":"values()"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"values(Iterable<? extends List<RexLiteral>>, RelDataType)","u":"values(java.lang.Iterable,org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"values(RelDataType)","u":"values(org.apache.calcite.rel.type.RelDataType)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdDistribution","l":"values(RelDataType, ImmutableList<ImmutableList<RexLiteral>>)","u":"values(org.apache.calcite.rel.type.RelDataType,com.google.common.collect.ImmutableList)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"values(RelDataType, Object...)","u":"values(org.apache.calcite.rel.type.RelDataType,java.lang.Object...)"},{"p":"org.apache.calcite.rel.core","c":"Values","l":"Values(RelInput)","u":"%3Cinit%3E(org.apache.calcite.rel.RelInput)"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdCollation","l":"values(RelMetadataQuery, RelDataType, ImmutableList<ImmutableList<RexLiteral>>)","u":"values(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.type.RelDataType,com.google.common.collect.ImmutableList)"},{"p":"org.apache.calcite.rel.core","c":"Values","l":"Values(RelOptCluster, List<RelHint>, RelDataType, ImmutableList<ImmutableList<RexLiteral>>, RelTraitSet)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,java.util.List,org.apache.calcite.rel.type.RelDataType,com.google.common.collect.ImmutableList,org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.rel.core","c":"Values","l":"Values(RelOptCluster, RelDataType, ImmutableList<ImmutableList<RexLiteral>>, RelTraitSet)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.type.RelDataType,com.google.common.collect.ImmutableList,org.apache.calcite.plan.RelTraitSet)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"values(String[], Object...)","u":"values(java.lang.String[],java.lang.Object...)"},{"p":"org.apache.calcite.rel.core","c":"RelFactories.Struct","l":"valuesFactory"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"valuesFolding()"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"valuesListNewline()"},{"p":"org.apache.calcite.interpreter","c":"ValuesNode","l":"ValuesNode(Compiler, Values)","u":"%3Cinit%3E(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.Values)"},{"p":"org.apache.calcite.rel.rules","c":"ValuesReduceRule","l":"ValuesReduceRule(RelOptRuleOperand, RelBuilderFactory, String)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.tools.RelBuilderFactory,java.lang.String)"},{"p":"org.apache.calcite.rel.rules","c":"ValuesReduceRule","l":"ValuesReduceRule(ValuesReduceRule.Config)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.ValuesReduceRule.Config)"},{"p":"org.apache.calcite.piglet","c":"Ast.ValuesStmt","l":"ValuesStmt(SqlParserPos, Ast.Identifier, Ast.Schema, List<List<Ast.Node>>)","u":"%3Cinit%3E(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.piglet.Ast.Identifier,org.apache.calcite.piglet.Ast.Schema,java.util.List)"},{"p":"org.apache.calcite.schema.impl","c":"AggregateFunctionImpl","l":"valueTypes"},{"p":"org.apache.calcite.sql.fun","c":"SqlAvgAggFunction.Subtype","l":"VAR_POP"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"VAR_POP"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"VAR_POP"},{"p":"org.apache.calcite.sql.fun","c":"SqlAvgAggFunction.Subtype","l":"VAR_SAMP"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"VAR_SAMP"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"VAR_SAMP"},{"p":"org.apache.calcite.runtime.rtti","c":"RuntimeTypeInformation.RuntimeSqlTypeName","l":"VARBINARY"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"VARBINARY"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"VARBINARY"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"VARBINARY_FORCE_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"VARBINARY_NULLABLE"},{"p":"org.apache.calcite.runtime.rtti","c":"RuntimeTypeInformation.RuntimeSqlTypeName","l":"VARCHAR"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"VARCHAR"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"VARCHAR"},{"p":"org.apache.calcite.sql.type","c":"InferTypes","l":"VARCHAR_1024"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"VARCHAR_2000"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"VARCHAR_2000_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"VARCHAR_4"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"VARCHAR_4_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"VARCHAR_FORCE_NULLABLE"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"VARCHAR_NULLABLE"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"variable(Consumer<RexCorrelVariable>)","u":"variable(java.util.function.Consumer)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"variable(Holder<RexCorrelVariable>)","u":"variable(org.apache.calcite.util.Holder)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"variable(Type)","u":"variable(java.lang.reflect.Type)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"variable(Type, String)","u":"variable(java.lang.reflect.Type,java.lang.String)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.VariableUsedVisitor","l":"variableFields"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.VariableUsedVisitor","l":"variables"},{"p":"org.apache.calcite.rex","c":"RexAnalyzer","l":"variables"},{"p":"org.apache.calcite.tools","c":"Hoist.Hoisted","l":"variables"},{"p":"org.apache.calcite.rel.core","c":"Join","l":"variablesSet"},{"p":"org.apache.calcite.rel.core","c":"Project","l":"variablesSet"},{"p":"org.apache.calcite.rel.mutable","c":"MutableJoin","l":"variablesSet"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.VariableUsedVisitor","l":"VariableUsedVisitor(RelShuttle)","u":"%3Cinit%3E(org.apache.calcite.rel.RelShuttle)"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"VARIADIC"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"variadic(SqlOperandCountRange)","u":"variadic(org.apache.calcite.sql.SqlOperandCountRange)"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"VARIANCE"},{"p":"org.apache.calcite.runtime.rtti","c":"RuntimeTypeInformation.RuntimeSqlTypeName","l":"VARIANT"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeFamily","l":"VARIANT"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"VARIANT"},{"p":"org.apache.calcite.sql.type","c":"OperandTypes","l":"VARIANT"},{"p":"org.apache.calcite.sql.type","c":"ReturnTypes","l":"VARIANT"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"VARIANT_CAST"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"VARIANT_CREATE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"VARIANT_ITEM"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"VARIANTNULL"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"VARIANTNULL"},{"p":"org.apache.calcite.runtime.variant","c":"VariantNull","l":"VariantNull()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.runtime.variant","c":"VariantSqlValue","l":"VariantSqlValue(RuntimeTypeInformation.RuntimeSqlTypeName)","u":"%3Cinit%3E(org.apache.calcite.runtime.rtti.RuntimeTypeInformation.RuntimeSqlTypeName)"},{"p":"org.apache.calcite.runtime.variant","c":"VariantValue","l":"VariantValue()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserTest","l":"varToStr(Hoist.Variable)","u":"varToStr(org.apache.calcite.tools.Hoist.Variable)"},{"p":"org.apache.calcite.statistic","c":"QuerySqlStatisticProvider","l":"VERBOSE_CACHING_INSTANCE"},{"p":"org.apache.calcite.plan","c":"RelOptUtil","l":"verifyTypeEquivalence(RelNode, RelNode, Object)","u":"verifyTypeEquivalence(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.lang.Object)"},{"p":"org.apache.calcite.model","c":"JsonRoot","l":"version"},{"p":"org.apache.calcite.util.graph","c":"DefaultDirectedGraph","l":"vertexSet()"},{"p":"org.apache.calcite.util.graph","c":"DirectedGraph","l":"vertexSet()"},{"p":"org.apache.calcite.sql","c":"SqlDialect.DatabaseProduct","l":"VERTICA"},{"p":"org.apache.calcite.sql.dialect","c":"VerticaSqlDialect","l":"VerticaSqlDialect(SqlDialect.Context)","u":"%3Cinit%3E(org.apache.calcite.sql.SqlDialect.Context)"},{"p":"org.apache.calcite.model","c":"JsonMaterialization","l":"view"},{"p":"org.apache.calcite.schema","c":"Schema.TableType","l":"VIEW"},{"p":"org.apache.calcite.sql.validate","c":"SqlMonikerType","l":"VIEW"},{"p":"org.apache.calcite.util","c":"Smalls","l":"VIEW_METHOD"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule.MatchModality","l":"VIEW_PARTIAL"},{"p":"org.apache.calcite.test.schemata.hr","c":"HrSchema","l":"view(String)","u":"view(java.lang.String)"},{"p":"org.apache.calcite.util","c":"Smalls","l":"view(String)","u":"view(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"viewConstraintNotSatisfied(String, String)","u":"viewConstraintNotSatisfied(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"viewExists(String)","u":"viewExists(java.lang.String)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter","l":"viewExpander"},{"p":"org.apache.calcite.tools","c":"Frameworks.ConfigBuilder","l":"viewExpander(RelOptTable.ViewExpander)","u":"viewExpander(org.apache.calcite.plan.RelOptTable.ViewExpander)"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockModifiableViewRelOptTable","l":"viewMacro(CalciteSchema, String, List<String>, List<String>, Boolean)","u":"viewMacro(org.apache.calcite.jdbc.CalciteSchema,java.lang.String,java.util.List,java.util.List,java.lang.Boolean)"},{"p":"org.apache.calcite.schema.impl","c":"ViewTable","l":"viewMacro(SchemaPlus, String, List<String>)","u":"viewMacro(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List)"},{"p":"org.apache.calcite.schema.impl","c":"ViewTable","l":"viewMacro(SchemaPlus, String, List<String>, Boolean)","u":"viewMacro(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List,java.lang.Boolean)"},{"p":"org.apache.calcite.schema.impl","c":"ViewTable","l":"viewMacro(SchemaPlus, String, List<String>, List<String>, Boolean)","u":"viewMacro(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List,java.util.List,java.lang.Boolean)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"viewNotFound(String)","u":"viewNotFound(java.lang.String)"},{"p":"org.apache.calcite.schema.impl","c":"ViewTableMacro","l":"viewPath"},{"p":"org.apache.calcite.model","c":"JsonMaterialization","l":"viewSchemaPath"},{"p":"org.apache.calcite.schema.impl","c":"ViewTableMacro","l":"viewSql"},{"p":"org.apache.calcite.schema.impl","c":"ViewTableMacro","l":"viewTable(CalcitePrepare.AnalyzeViewResult, String, List<String>, List<String>)","u":"viewTable(org.apache.calcite.jdbc.CalcitePrepare.AnalyzeViewResult,java.lang.String,java.util.List,java.util.List)"},{"p":"org.apache.calcite.schema.impl","c":"ViewTable","l":"ViewTable(Type, RelProtoDataType, String, List<String>, List<String>)","u":"%3Cinit%3E(java.lang.reflect.Type,org.apache.calcite.rel.type.RelProtoDataType,java.lang.String,java.util.List,java.util.List)"},{"p":"org.apache.calcite.schema.impl","c":"ViewTableMacro","l":"ViewTableMacro(CalciteSchema, String, List<String>, List<String>, Boolean)","u":"%3Cinit%3E(org.apache.calcite.jdbc.CalciteSchema,java.lang.String,java.util.List,java.util.List,java.lang.Boolean)"},{"p":"org.apache.calcite.schema","c":"ColumnStrategy","l":"VIRTUAL"},{"p":"org.apache.calcite.adapter.druid","c":"VirtualColumn","l":"VirtualColumn(String, String, DruidType)","u":"%3Cinit%3E(java.lang.String,java.lang.String,org.apache.calcite.adapter.druid.DruidType)"},{"p":"org.apache.calcite.test.catalog","c":"VirtualColumnsExpressionFactory","l":"VirtualColumnsExpressionFactory()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.interpreter","c":"Nodes.CoreCompiler","l":"visit(Aggregate)","u":"visit(org.apache.calcite.rel.core.Aggregate)"},{"p":"org.apache.calcite.piglet","c":"PigRelToSqlConverter","l":"visit(Aggregate)","u":"visit(org.apache.calcite.rel.core.Aggregate)"},{"p":"org.apache.calcite.rel.rel2sql","c":"RelToSqlConverter","l":"visit(Aggregate)","u":"visit(org.apache.calcite.rel.core.Aggregate)"},{"p":"org.apache.calcite.linq4j.tree","c":"Visitor","l":"visit(BinaryExpression)","u":"visit(org.apache.calcite.linq4j.tree.BinaryExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"VisitorImpl","l":"visit(BinaryExpression)","u":"visit(org.apache.calcite.linq4j.tree.BinaryExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"DeterministicCodeOptimizer","l":"visit(BinaryExpression, Expression, Expression)","u":"visit(org.apache.calcite.linq4j.tree.BinaryExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"OptimizeShuttle","l":"visit(BinaryExpression, Expression, Expression)","u":"visit(org.apache.calcite.linq4j.tree.BinaryExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"visit(BinaryExpression, Expression, Expression)","u":"visit(org.apache.calcite.linq4j.tree.BinaryExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.interpreter","c":"Nodes.CoreCompiler","l":"visit(Bindables.BindableTableScan)","u":"visit(org.apache.calcite.interpreter.Bindables.BindableTableScan)"},{"p":"org.apache.calcite.linq4j.tree","c":"Visitor","l":"visit(BlockStatement)","u":"visit(org.apache.calcite.linq4j.tree.BlockStatement)"},{"p":"org.apache.calcite.linq4j.tree","c":"VisitorImpl","l":"visit(BlockStatement)","u":"visit(org.apache.calcite.linq4j.tree.BlockStatement)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"visit(BlockStatement, List<Statement>)","u":"visit(org.apache.calcite.linq4j.tree.BlockStatement,java.util.List)"},{"p":"org.apache.calcite.rel.rel2sql","c":"RelToSqlConverter","l":"visit(Calc)","u":"visit(org.apache.calcite.rel.core.Calc)"},{"p":"org.apache.calcite.linq4j.tree","c":"Visitor","l":"visit(ClassDeclaration)","u":"visit(org.apache.calcite.linq4j.tree.ClassDeclaration)"},{"p":"org.apache.calcite.linq4j.tree","c":"VisitorImpl","l":"visit(ClassDeclaration)","u":"visit(org.apache.calcite.linq4j.tree.ClassDeclaration)"},{"p":"org.apache.calcite.linq4j.tree","c":"ClassDeclarationFinder","l":"visit(ClassDeclaration, List<MemberDeclaration>)","u":"visit(org.apache.calcite.linq4j.tree.ClassDeclaration,java.util.List)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"visit(ClassDeclaration, List<MemberDeclaration>)","u":"visit(org.apache.calcite.linq4j.tree.ClassDeclaration,java.util.List)"},{"p":"org.apache.calcite.interpreter","c":"Nodes.CoreCompiler","l":"visit(Collect)","u":"visit(org.apache.calcite.rel.core.Collect)"},{"p":"org.apache.calcite.linq4j.tree","c":"Visitor","l":"visit(ConditionalExpression)","u":"visit(org.apache.calcite.linq4j.tree.ConditionalExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"VisitorImpl","l":"visit(ConditionalExpression)","u":"visit(org.apache.calcite.linq4j.tree.ConditionalExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Visitor","l":"visit(ConditionalStatement)","u":"visit(org.apache.calcite.linq4j.tree.ConditionalStatement)"},{"p":"org.apache.calcite.linq4j.tree","c":"VisitorImpl","l":"visit(ConditionalStatement)","u":"visit(org.apache.calcite.linq4j.tree.ConditionalStatement)"},{"p":"org.apache.calcite.linq4j.tree","c":"OptimizeShuttle","l":"visit(ConditionalStatement, List<Node>)","u":"visit(org.apache.calcite.linq4j.tree.ConditionalStatement,java.util.List)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"visit(ConditionalStatement, List<Node>)","u":"visit(org.apache.calcite.linq4j.tree.ConditionalStatement,java.util.List)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"visit(ConstantExpression)","u":"visit(org.apache.calcite.linq4j.tree.ConstantExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Visitor","l":"visit(ConstantExpression)","u":"visit(org.apache.calcite.linq4j.tree.ConstantExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"VisitorImpl","l":"visit(ConstantExpression)","u":"visit(org.apache.calcite.linq4j.tree.ConstantExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Visitor","l":"visit(ConstructorDeclaration)","u":"visit(org.apache.calcite.linq4j.tree.ConstructorDeclaration)"},{"p":"org.apache.calcite.linq4j.tree","c":"VisitorImpl","l":"visit(ConstructorDeclaration)","u":"visit(org.apache.calcite.linq4j.tree.ConstructorDeclaration)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"visit(ConstructorDeclaration, BlockStatement)","u":"visit(org.apache.calcite.linq4j.tree.ConstructorDeclaration,org.apache.calcite.linq4j.tree.BlockStatement)"},{"p":"org.apache.calcite.rel.rel2sql","c":"RelToSqlConverter","l":"visit(Correlate)","u":"visit(org.apache.calcite.rel.core.Correlate)"},{"p":"org.apache.calcite.linq4j.tree","c":"Visitor","l":"visit(DeclarationStatement)","u":"visit(org.apache.calcite.linq4j.tree.DeclarationStatement)"},{"p":"org.apache.calcite.linq4j.tree","c":"VisitorImpl","l":"visit(DeclarationStatement)","u":"visit(org.apache.calcite.linq4j.tree.DeclarationStatement)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"visit(DeclarationStatement, Expression)","u":"visit(org.apache.calcite.linq4j.tree.DeclarationStatement,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"visit(DefaultExpression)","u":"visit(org.apache.calcite.linq4j.tree.DefaultExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Visitor","l":"visit(DefaultExpression)","u":"visit(org.apache.calcite.linq4j.tree.DefaultExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"VisitorImpl","l":"visit(DefaultExpression)","u":"visit(org.apache.calcite.linq4j.tree.DefaultExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"visit(DynamicExpression)","u":"visit(org.apache.calcite.linq4j.tree.DynamicExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Visitor","l":"visit(DynamicExpression)","u":"visit(org.apache.calcite.linq4j.tree.DynamicExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"VisitorImpl","l":"visit(DynamicExpression)","u":"visit(org.apache.calcite.linq4j.tree.DynamicExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Visitor","l":"visit(FieldDeclaration)","u":"visit(org.apache.calcite.linq4j.tree.FieldDeclaration)"},{"p":"org.apache.calcite.linq4j.tree","c":"VisitorImpl","l":"visit(FieldDeclaration)","u":"visit(org.apache.calcite.linq4j.tree.FieldDeclaration)"},{"p":"org.apache.calcite.linq4j.tree","c":"DeterministicCodeOptimizer","l":"visit(FieldDeclaration, Expression)","u":"visit(org.apache.calcite.linq4j.tree.FieldDeclaration,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"visit(FieldDeclaration, Expression)","u":"visit(org.apache.calcite.linq4j.tree.FieldDeclaration,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.interpreter","c":"Nodes.CoreCompiler","l":"visit(Filter)","u":"visit(org.apache.calcite.rel.core.Filter)"},{"p":"org.apache.calcite.rel.rel2sql","c":"RelToSqlConverter","l":"visit(Filter)","u":"visit(org.apache.calcite.rel.core.Filter)"},{"p":"org.apache.calcite.linq4j.tree","c":"Visitor","l":"visit(ForEachStatement)","u":"visit(org.apache.calcite.linq4j.tree.ForEachStatement)"},{"p":"org.apache.calcite.linq4j.tree","c":"VisitorImpl","l":"visit(ForEachStatement)","u":"visit(org.apache.calcite.linq4j.tree.ForEachStatement)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"visit(ForEachStatement, ParameterExpression, Expression, Statement)","u":"visit(org.apache.calcite.linq4j.tree.ForEachStatement,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Statement)"},{"p":"org.apache.calcite.linq4j.tree","c":"Visitor","l":"visit(ForStatement)","u":"visit(org.apache.calcite.linq4j.tree.ForStatement)"},{"p":"org.apache.calcite.linq4j.tree","c":"VisitorImpl","l":"visit(ForStatement)","u":"visit(org.apache.calcite.linq4j.tree.ForStatement)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"visit(ForStatement, List<DeclarationStatement>, Expression, Expression, Statement)","u":"visit(org.apache.calcite.linq4j.tree.ForStatement,java.util.List,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Statement)"},{"p":"org.apache.calcite.linq4j.tree","c":"Visitor","l":"visit(FunctionExpression)","u":"visit(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"VisitorImpl","l":"visit(FunctionExpression)","u":"visit(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"visit(FunctionExpression, BlockStatement)","u":"visit(org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.linq4j.tree.BlockStatement)"},{"p":"org.apache.calcite.linq4j.tree","c":"Visitor","l":"visit(GotoStatement)","u":"visit(org.apache.calcite.linq4j.tree.GotoStatement)"},{"p":"org.apache.calcite.linq4j.tree","c":"VisitorImpl","l":"visit(GotoStatement)","u":"visit(org.apache.calcite.linq4j.tree.GotoStatement)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"visit(GotoStatement, Expression)","u":"visit(org.apache.calcite.linq4j.tree.GotoStatement,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Visitor","l":"visit(IndexExpression)","u":"visit(org.apache.calcite.linq4j.tree.IndexExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"VisitorImpl","l":"visit(IndexExpression)","u":"visit(org.apache.calcite.linq4j.tree.IndexExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"visit(IndexExpression, Expression, List<Expression>)","u":"visit(org.apache.calcite.linq4j.tree.IndexExpression,org.apache.calcite.linq4j.tree.Expression,java.util.List)"},{"p":"org.apache.calcite.rel.rel2sql","c":"RelToSqlConverter","l":"visit(Intersect)","u":"visit(org.apache.calcite.rel.core.Intersect)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"visit(InvocationExpression)","u":"visit(org.apache.calcite.linq4j.tree.InvocationExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Visitor","l":"visit(InvocationExpression)","u":"visit(org.apache.calcite.linq4j.tree.InvocationExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"VisitorImpl","l":"visit(InvocationExpression)","u":"visit(org.apache.calcite.linq4j.tree.InvocationExpression)"},{"p":"org.apache.calcite.interpreter","c":"Nodes.CoreCompiler","l":"visit(Join)","u":"visit(org.apache.calcite.rel.core.Join)"},{"p":"org.apache.calcite.rel.rel2sql","c":"RelToSqlConverter","l":"visit(Join)","u":"visit(org.apache.calcite.rel.core.Join)"},{"p":"org.apache.calcite.model","c":"ModelHandler","l":"visit(JsonColumn)","u":"visit(org.apache.calcite.model.JsonColumn)"},{"p":"org.apache.calcite.model","c":"ModelHandler","l":"visit(JsonCustomSchema)","u":"visit(org.apache.calcite.model.JsonCustomSchema)"},{"p":"org.apache.calcite.model","c":"ModelHandler","l":"visit(JsonCustomTable)","u":"visit(org.apache.calcite.model.JsonCustomTable)"},{"p":"org.apache.calcite.model","c":"ModelHandler","l":"visit(JsonFunction)","u":"visit(org.apache.calcite.model.JsonFunction)"},{"p":"org.apache.calcite.model","c":"ModelHandler","l":"visit(JsonJdbcSchema)","u":"visit(org.apache.calcite.model.JsonJdbcSchema)"},{"p":"org.apache.calcite.model","c":"ModelHandler","l":"visit(JsonLattice)","u":"visit(org.apache.calcite.model.JsonLattice)"},{"p":"org.apache.calcite.model","c":"ModelHandler","l":"visit(JsonMapSchema)","u":"visit(org.apache.calcite.model.JsonMapSchema)"},{"p":"org.apache.calcite.model","c":"ModelHandler","l":"visit(JsonMaterialization)","u":"visit(org.apache.calcite.model.JsonMaterialization)"},{"p":"org.apache.calcite.model","c":"ModelHandler","l":"visit(JsonMeasure)","u":"visit(org.apache.calcite.model.JsonMeasure)"},{"p":"org.apache.calcite.model","c":"ModelHandler","l":"visit(JsonRoot)","u":"visit(org.apache.calcite.model.JsonRoot)"},{"p":"org.apache.calcite.model","c":"ModelHandler","l":"visit(JsonTile)","u":"visit(org.apache.calcite.model.JsonTile)"},{"p":"org.apache.calcite.model","c":"ModelHandler","l":"visit(JsonType)","u":"visit(org.apache.calcite.model.JsonType)"},{"p":"org.apache.calcite.model","c":"ModelHandler","l":"visit(JsonView)","u":"visit(org.apache.calcite.model.JsonView)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"visit(LabelStatement)","u":"visit(org.apache.calcite.linq4j.tree.LabelStatement)"},{"p":"org.apache.calcite.linq4j.tree","c":"Visitor","l":"visit(LabelStatement)","u":"visit(org.apache.calcite.linq4j.tree.LabelStatement)"},{"p":"org.apache.calcite.linq4j.tree","c":"VisitorImpl","l":"visit(LabelStatement)","u":"visit(org.apache.calcite.linq4j.tree.LabelStatement)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"visit(LambdaExpression)","u":"visit(org.apache.calcite.linq4j.tree.LambdaExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Visitor","l":"visit(LambdaExpression)","u":"visit(org.apache.calcite.linq4j.tree.LambdaExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"VisitorImpl","l":"visit(LambdaExpression)","u":"visit(org.apache.calcite.linq4j.tree.LambdaExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"visit(ListInitExpression)","u":"visit(org.apache.calcite.linq4j.tree.ListInitExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Visitor","l":"visit(ListInitExpression)","u":"visit(org.apache.calcite.linq4j.tree.ListInitExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"VisitorImpl","l":"visit(ListInitExpression)","u":"visit(org.apache.calcite.linq4j.tree.ListInitExpression)"},{"p":"org.apache.calcite.rel","c":"RelHomogeneousShuttle","l":"visit(LogicalAggregate)","u":"visit(org.apache.calcite.rel.logical.LogicalAggregate)"},{"p":"org.apache.calcite.rel","c":"RelShuttle","l":"visit(LogicalAggregate)","u":"visit(org.apache.calcite.rel.logical.LogicalAggregate)"},{"p":"org.apache.calcite.rel","c":"RelShuttleImpl","l":"visit(LogicalAggregate)","u":"visit(org.apache.calcite.rel.logical.LogicalAggregate)"},{"p":"org.apache.calcite.rel","c":"RelHomogeneousShuttle","l":"visit(LogicalCalc)","u":"visit(org.apache.calcite.rel.logical.LogicalCalc)"},{"p":"org.apache.calcite.rel","c":"RelShuttle","l":"visit(LogicalCalc)","u":"visit(org.apache.calcite.rel.logical.LogicalCalc)"},{"p":"org.apache.calcite.rel","c":"RelShuttleImpl","l":"visit(LogicalCalc)","u":"visit(org.apache.calcite.rel.logical.LogicalCalc)"},{"p":"org.apache.calcite.rel","c":"RelHomogeneousShuttle","l":"visit(LogicalCorrelate)","u":"visit(org.apache.calcite.rel.logical.LogicalCorrelate)"},{"p":"org.apache.calcite.rel","c":"RelShuttle","l":"visit(LogicalCorrelate)","u":"visit(org.apache.calcite.rel.logical.LogicalCorrelate)"},{"p":"org.apache.calcite.rel","c":"RelShuttleImpl","l":"visit(LogicalCorrelate)","u":"visit(org.apache.calcite.rel.logical.LogicalCorrelate)"},{"p":"org.apache.calcite.sql2rel","c":"CorrelateProjectExtractor","l":"visit(LogicalCorrelate)","u":"visit(org.apache.calcite.rel.logical.LogicalCorrelate)"},{"p":"org.apache.calcite.rel","c":"RelHomogeneousShuttle","l":"visit(LogicalExchange)","u":"visit(org.apache.calcite.rel.logical.LogicalExchange)"},{"p":"org.apache.calcite.rel","c":"RelShuttle","l":"visit(LogicalExchange)","u":"visit(org.apache.calcite.rel.logical.LogicalExchange)"},{"p":"org.apache.calcite.rel","c":"RelShuttleImpl","l":"visit(LogicalExchange)","u":"visit(org.apache.calcite.rel.logical.LogicalExchange)"},{"p":"org.apache.calcite.rel","c":"RelHomogeneousShuttle","l":"visit(LogicalFilter)","u":"visit(org.apache.calcite.rel.logical.LogicalFilter)"},{"p":"org.apache.calcite.rel","c":"RelShuttle","l":"visit(LogicalFilter)","u":"visit(org.apache.calcite.rel.logical.LogicalFilter)"},{"p":"org.apache.calcite.rel","c":"RelShuttleImpl","l":"visit(LogicalFilter)","u":"visit(org.apache.calcite.rel.logical.LogicalFilter)"},{"p":"org.apache.calcite.rel","c":"RelHomogeneousShuttle","l":"visit(LogicalIntersect)","u":"visit(org.apache.calcite.rel.logical.LogicalIntersect)"},{"p":"org.apache.calcite.rel","c":"RelShuttle","l":"visit(LogicalIntersect)","u":"visit(org.apache.calcite.rel.logical.LogicalIntersect)"},{"p":"org.apache.calcite.rel","c":"RelShuttleImpl","l":"visit(LogicalIntersect)","u":"visit(org.apache.calcite.rel.logical.LogicalIntersect)"},{"p":"org.apache.calcite.rel","c":"RelHomogeneousShuttle","l":"visit(LogicalJoin)","u":"visit(org.apache.calcite.rel.logical.LogicalJoin)"},{"p":"org.apache.calcite.rel","c":"RelShuttle","l":"visit(LogicalJoin)","u":"visit(org.apache.calcite.rel.logical.LogicalJoin)"},{"p":"org.apache.calcite.rel","c":"RelShuttleImpl","l":"visit(LogicalJoin)","u":"visit(org.apache.calcite.rel.logical.LogicalJoin)"},{"p":"org.apache.calcite.rel","c":"RelHomogeneousShuttle","l":"visit(LogicalMatch)","u":"visit(org.apache.calcite.rel.logical.LogicalMatch)"},{"p":"org.apache.calcite.rel","c":"RelShuttle","l":"visit(LogicalMatch)","u":"visit(org.apache.calcite.rel.logical.LogicalMatch)"},{"p":"org.apache.calcite.rel","c":"RelShuttleImpl","l":"visit(LogicalMatch)","u":"visit(org.apache.calcite.rel.logical.LogicalMatch)"},{"p":"org.apache.calcite.rel","c":"RelHomogeneousShuttle","l":"visit(LogicalMinus)","u":"visit(org.apache.calcite.rel.logical.LogicalMinus)"},{"p":"org.apache.calcite.rel","c":"RelShuttle","l":"visit(LogicalMinus)","u":"visit(org.apache.calcite.rel.logical.LogicalMinus)"},{"p":"org.apache.calcite.rel","c":"RelShuttleImpl","l":"visit(LogicalMinus)","u":"visit(org.apache.calcite.rel.logical.LogicalMinus)"},{"p":"org.apache.calcite.rel","c":"RelHomogeneousShuttle","l":"visit(LogicalProject)","u":"visit(org.apache.calcite.rel.logical.LogicalProject)"},{"p":"org.apache.calcite.rel","c":"RelShuttle","l":"visit(LogicalProject)","u":"visit(org.apache.calcite.rel.logical.LogicalProject)"},{"p":"org.apache.calcite.rel","c":"RelShuttleImpl","l":"visit(LogicalProject)","u":"visit(org.apache.calcite.rel.logical.LogicalProject)"},{"p":"org.apache.calcite.rel","c":"RelHomogeneousShuttle","l":"visit(LogicalSort)","u":"visit(org.apache.calcite.rel.logical.LogicalSort)"},{"p":"org.apache.calcite.rel","c":"RelShuttle","l":"visit(LogicalSort)","u":"visit(org.apache.calcite.rel.logical.LogicalSort)"},{"p":"org.apache.calcite.rel","c":"RelShuttleImpl","l":"visit(LogicalSort)","u":"visit(org.apache.calcite.rel.logical.LogicalSort)"},{"p":"org.apache.calcite.rel","c":"RelHomogeneousShuttle","l":"visit(LogicalTableModify)","u":"visit(org.apache.calcite.rel.logical.LogicalTableModify)"},{"p":"org.apache.calcite.rel","c":"RelShuttle","l":"visit(LogicalTableModify)","u":"visit(org.apache.calcite.rel.logical.LogicalTableModify)"},{"p":"org.apache.calcite.rel","c":"RelShuttleImpl","l":"visit(LogicalTableModify)","u":"visit(org.apache.calcite.rel.logical.LogicalTableModify)"},{"p":"org.apache.calcite.rel","c":"RelHomogeneousShuttle","l":"visit(LogicalUnion)","u":"visit(org.apache.calcite.rel.logical.LogicalUnion)"},{"p":"org.apache.calcite.rel","c":"RelShuttle","l":"visit(LogicalUnion)","u":"visit(org.apache.calcite.rel.logical.LogicalUnion)"},{"p":"org.apache.calcite.rel","c":"RelShuttleImpl","l":"visit(LogicalUnion)","u":"visit(org.apache.calcite.rel.logical.LogicalUnion)"},{"p":"org.apache.calcite.rel","c":"RelHomogeneousShuttle","l":"visit(LogicalValues)","u":"visit(org.apache.calcite.rel.logical.LogicalValues)"},{"p":"org.apache.calcite.rel","c":"RelShuttle","l":"visit(LogicalValues)","u":"visit(org.apache.calcite.rel.logical.LogicalValues)"},{"p":"org.apache.calcite.rel","c":"RelShuttleImpl","l":"visit(LogicalValues)","u":"visit(org.apache.calcite.rel.logical.LogicalValues)"},{"p":"org.apache.calcite.interpreter","c":"Nodes.CoreCompiler","l":"visit(Match)","u":"visit(org.apache.calcite.rel.core.Match)"},{"p":"org.apache.calcite.rel.rel2sql","c":"RelToSqlConverter","l":"visit(Match)","u":"visit(org.apache.calcite.rel.core.Match)"},{"p":"org.apache.calcite.linq4j.tree","c":"Visitor","l":"visit(MemberExpression)","u":"visit(org.apache.calcite.linq4j.tree.MemberExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"VisitorImpl","l":"visit(MemberExpression)","u":"visit(org.apache.calcite.linq4j.tree.MemberExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"DeterministicCodeOptimizer","l":"visit(MemberExpression, Expression)","u":"visit(org.apache.calcite.linq4j.tree.MemberExpression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"visit(MemberExpression, Expression)","u":"visit(org.apache.calcite.linq4j.tree.MemberExpression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"visit(MemberInitExpression)","u":"visit(org.apache.calcite.linq4j.tree.MemberInitExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Visitor","l":"visit(MemberInitExpression)","u":"visit(org.apache.calcite.linq4j.tree.MemberInitExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"VisitorImpl","l":"visit(MemberInitExpression)","u":"visit(org.apache.calcite.linq4j.tree.MemberInitExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Visitor","l":"visit(MethodCallExpression)","u":"visit(org.apache.calcite.linq4j.tree.MethodCallExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"VisitorImpl","l":"visit(MethodCallExpression)","u":"visit(org.apache.calcite.linq4j.tree.MethodCallExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"DeterministicCodeOptimizer","l":"visit(MethodCallExpression, Expression, List<Expression>)","u":"visit(org.apache.calcite.linq4j.tree.MethodCallExpression,org.apache.calcite.linq4j.tree.Expression,java.util.List)"},{"p":"org.apache.calcite.linq4j.tree","c":"OptimizeShuttle","l":"visit(MethodCallExpression, Expression, List<Expression>)","u":"visit(org.apache.calcite.linq4j.tree.MethodCallExpression,org.apache.calcite.linq4j.tree.Expression,java.util.List)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"visit(MethodCallExpression, Expression, List<Expression>)","u":"visit(org.apache.calcite.linq4j.tree.MethodCallExpression,org.apache.calcite.linq4j.tree.Expression,java.util.List)"},{"p":"org.apache.calcite.linq4j.tree","c":"Visitor","l":"visit(MethodDeclaration)","u":"visit(org.apache.calcite.linq4j.tree.MethodDeclaration)"},{"p":"org.apache.calcite.linq4j.tree","c":"VisitorImpl","l":"visit(MethodDeclaration)","u":"visit(org.apache.calcite.linq4j.tree.MethodDeclaration)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"visit(MethodDeclaration, BlockStatement)","u":"visit(org.apache.calcite.linq4j.tree.MethodDeclaration,org.apache.calcite.linq4j.tree.BlockStatement)"},{"p":"org.apache.calcite.rel.rel2sql","c":"RelToSqlConverter","l":"visit(Minus)","u":"visit(org.apache.calcite.rel.core.Minus)"},{"p":"org.apache.calcite.rel.mutable","c":"MutableRelVisitor","l":"visit(MutableRel)","u":"visit(org.apache.calcite.rel.mutable.MutableRel)"},{"p":"org.apache.calcite.linq4j.tree","c":"Visitor","l":"visit(NewArrayExpression)","u":"visit(org.apache.calcite.linq4j.tree.NewArrayExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"VisitorImpl","l":"visit(NewArrayExpression)","u":"visit(org.apache.calcite.linq4j.tree.NewArrayExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"visit(NewArrayExpression, int, Expression, List<Expression>)","u":"visit(org.apache.calcite.linq4j.tree.NewArrayExpression,int,org.apache.calcite.linq4j.tree.Expression,java.util.List)"},{"p":"org.apache.calcite.linq4j.tree","c":"Visitor","l":"visit(NewExpression)","u":"visit(org.apache.calcite.linq4j.tree.NewExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"VisitorImpl","l":"visit(NewExpression)","u":"visit(org.apache.calcite.linq4j.tree.NewExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"ClassDeclarationFinder","l":"visit(NewExpression, List<Expression>, List<MemberDeclaration>)","u":"visit(org.apache.calcite.linq4j.tree.NewExpression,java.util.List,java.util.List)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"visit(NewExpression, List<Expression>, List<MemberDeclaration>)","u":"visit(org.apache.calcite.linq4j.tree.NewExpression,java.util.List,java.util.List)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"visit(ParameterExpression)","u":"visit(org.apache.calcite.linq4j.tree.ParameterExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Visitor","l":"visit(ParameterExpression)","u":"visit(org.apache.calcite.linq4j.tree.ParameterExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"VisitorImpl","l":"visit(ParameterExpression)","u":"visit(org.apache.calcite.linq4j.tree.ParameterExpression)"},{"p":"org.apache.calcite.interpreter","c":"Nodes.CoreCompiler","l":"visit(Project)","u":"visit(org.apache.calcite.rel.core.Project)"},{"p":"org.apache.calcite.rel.rel2sql","c":"RelToSqlConverter","l":"visit(Project)","u":"visit(org.apache.calcite.rel.core.Project)"},{"p":"org.apache.calcite.rel.logical","c":"ToLogicalConverter","l":"visit(RelNode)","u":"visit(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.rel2sql","c":"RelToSqlConverter","l":"visit(RelNode)","u":"visit(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel","c":"RelShuttle","l":"visit(RelNode)","u":"visit(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel","c":"RelShuttleImpl","l":"visit(RelNode)","u":"visit(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.sql2rel","c":"ConvertToChecked","l":"visit(RelNode)","u":"visit(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.sql2rel","c":"CorrelationReferenceFinder","l":"visit(RelNode)","u":"visit(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.sql2rel","c":"DeduplicateCorrelateVariables","l":"visit(RelNode)","u":"visit(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator.CorelMapBuilder","l":"visit(RelNode)","u":"visit(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.sql2rel","c":"RexRewritingRelShuttle","l":"visit(RelNode)","u":"visit(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.interpreter","c":"Nodes.CoreCompiler","l":"visit(RelNode, int, RelNode)","u":"visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.plan","c":"RelTraitPropagationVisitor","l":"visit(RelNode, int, RelNode)","u":"visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel","c":"RelValidityChecker","l":"visit(RelNode, int, RelNode)","u":"visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel","c":"RelVisitor","l":"visit(RelNode, int, RelNode)","u":"visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.rel2sql","c":"RelToSqlConverter","l":"visit(Sample)","u":"visit(org.apache.calcite.rel.core.Sample)"},{"p":"org.apache.calcite.interpreter","c":"Nodes.CoreCompiler","l":"visit(SetOp)","u":"visit(org.apache.calcite.rel.core.SetOp)"},{"p":"org.apache.calcite.interpreter","c":"Nodes.CoreCompiler","l":"visit(Sort)","u":"visit(org.apache.calcite.rel.core.Sort)"},{"p":"org.apache.calcite.rel.rel2sql","c":"RelToSqlConverter","l":"visit(Sort)","u":"visit(org.apache.calcite.rel.core.Sort)"},{"p":"org.apache.calcite.sql.util","c":"SqlBasicVisitor","l":"visit(SqlCall)","u":"visit(org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.util","c":"SqlShuttle","l":"visit(SqlCall)","u":"visit(org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.util","c":"SqlVisitor","l":"visit(SqlCall)","u":"visit(org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.validate","c":"SqlScopedShuttle","l":"visit(SqlCall)","u":"visit(org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Blackboard","l":"visit(SqlCall)","u":"visit(org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.SqlIdentifierFinder","l":"visit(SqlCall)","u":"visit(org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.util","c":"Util.OverFinder","l":"visit(SqlCall)","u":"visit(org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.util","c":"SqlBasicVisitor","l":"visit(SqlDataTypeSpec)","u":"visit(org.apache.calcite.sql.SqlDataTypeSpec)"},{"p":"org.apache.calcite.sql.util","c":"SqlShuttle","l":"visit(SqlDataTypeSpec)","u":"visit(org.apache.calcite.sql.SqlDataTypeSpec)"},{"p":"org.apache.calcite.sql.util","c":"SqlVisitor","l":"visit(SqlDataTypeSpec)","u":"visit(org.apache.calcite.sql.SqlDataTypeSpec)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil.DeepCopier","l":"visit(SqlDataTypeSpec)","u":"visit(org.apache.calcite.sql.SqlDataTypeSpec)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Blackboard","l":"visit(SqlDataTypeSpec)","u":"visit(org.apache.calcite.sql.SqlDataTypeSpec)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.SqlIdentifierFinder","l":"visit(SqlDataTypeSpec)","u":"visit(org.apache.calcite.sql.SqlDataTypeSpec)"},{"p":"org.apache.calcite.sql.util","c":"SqlBasicVisitor","l":"visit(SqlDynamicParam)","u":"visit(org.apache.calcite.sql.SqlDynamicParam)"},{"p":"org.apache.calcite.sql.util","c":"SqlShuttle","l":"visit(SqlDynamicParam)","u":"visit(org.apache.calcite.sql.SqlDynamicParam)"},{"p":"org.apache.calcite.sql.util","c":"SqlVisitor","l":"visit(SqlDynamicParam)","u":"visit(org.apache.calcite.sql.SqlDynamicParam)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil.DeepCopier","l":"visit(SqlDynamicParam)","u":"visit(org.apache.calcite.sql.SqlDynamicParam)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Blackboard","l":"visit(SqlDynamicParam)","u":"visit(org.apache.calcite.sql.SqlDynamicParam)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.SqlIdentifierFinder","l":"visit(SqlDynamicParam)","u":"visit(org.apache.calcite.sql.SqlDynamicParam)"},{"p":"org.apache.calcite.sql.util","c":"SqlBasicVisitor","l":"visit(SqlIdentifier)","u":"visit(org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.sql.util","c":"SqlShuttle","l":"visit(SqlIdentifier)","u":"visit(org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.sql.util","c":"SqlVisitor","l":"visit(SqlIdentifier)","u":"visit(org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil.DeepCopier","l":"visit(SqlIdentifier)","u":"visit(org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Blackboard","l":"visit(SqlIdentifier)","u":"visit(org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.SqlIdentifierFinder","l":"visit(SqlIdentifier)","u":"visit(org.apache.calcite.sql.SqlIdentifier)"},{"p":"org.apache.calcite.sql.util","c":"SqlBasicVisitor","l":"visit(SqlIntervalQualifier)","u":"visit(org.apache.calcite.sql.SqlIntervalQualifier)"},{"p":"org.apache.calcite.sql.util","c":"SqlShuttle","l":"visit(SqlIntervalQualifier)","u":"visit(org.apache.calcite.sql.SqlIntervalQualifier)"},{"p":"org.apache.calcite.sql.util","c":"SqlVisitor","l":"visit(SqlIntervalQualifier)","u":"visit(org.apache.calcite.sql.SqlIntervalQualifier)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil.DeepCopier","l":"visit(SqlIntervalQualifier)","u":"visit(org.apache.calcite.sql.SqlIntervalQualifier)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Blackboard","l":"visit(SqlIntervalQualifier)","u":"visit(org.apache.calcite.sql.SqlIntervalQualifier)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.SqlIdentifierFinder","l":"visit(SqlIntervalQualifier)","u":"visit(org.apache.calcite.sql.SqlIntervalQualifier)"},{"p":"org.apache.calcite.sql.util","c":"SqlBasicVisitor","l":"visit(SqlLiteral)","u":"visit(org.apache.calcite.sql.SqlLiteral)"},{"p":"org.apache.calcite.sql.util","c":"SqlShuttle","l":"visit(SqlLiteral)","u":"visit(org.apache.calcite.sql.SqlLiteral)"},{"p":"org.apache.calcite.sql.util","c":"SqlVisitor","l":"visit(SqlLiteral)","u":"visit(org.apache.calcite.sql.SqlLiteral)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil.DeepCopier","l":"visit(SqlLiteral)","u":"visit(org.apache.calcite.sql.SqlLiteral)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Blackboard","l":"visit(SqlLiteral)","u":"visit(org.apache.calcite.sql.SqlLiteral)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.SqlIdentifierFinder","l":"visit(SqlLiteral)","u":"visit(org.apache.calcite.sql.SqlLiteral)"},{"p":"org.apache.calcite.sql.util","c":"SqlBasicVisitor","l":"visit(SqlNodeList)","u":"visit(org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.sql.util","c":"SqlShuttle","l":"visit(SqlNodeList)","u":"visit(org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.sql.util","c":"SqlVisitor","l":"visit(SqlNodeList)","u":"visit(org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil.DeepCopier","l":"visit(SqlNodeList)","u":"visit(org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Blackboard","l":"visit(SqlNodeList)","u":"visit(org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.SqlIdentifierFinder","l":"visit(SqlNodeList)","u":"visit(org.apache.calcite.sql.SqlNodeList)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"visit(SwitchStatement)","u":"visit(org.apache.calcite.linq4j.tree.SwitchStatement)"},{"p":"org.apache.calcite.linq4j.tree","c":"Visitor","l":"visit(SwitchStatement)","u":"visit(org.apache.calcite.linq4j.tree.SwitchStatement)"},{"p":"org.apache.calcite.linq4j.tree","c":"VisitorImpl","l":"visit(SwitchStatement)","u":"visit(org.apache.calcite.linq4j.tree.SwitchStatement)"},{"p":"org.apache.calcite.interpreter","c":"Nodes.CoreCompiler","l":"visit(TableFunctionScan)","u":"visit(org.apache.calcite.rel.core.TableFunctionScan)"},{"p":"org.apache.calcite.rel.rel2sql","c":"RelToSqlConverter","l":"visit(TableFunctionScan)","u":"visit(org.apache.calcite.rel.core.TableFunctionScan)"},{"p":"org.apache.calcite.rel","c":"RelHomogeneousShuttle","l":"visit(TableFunctionScan)","u":"visit(org.apache.calcite.rel.core.TableFunctionScan)"},{"p":"org.apache.calcite.rel","c":"RelShuttle","l":"visit(TableFunctionScan)","u":"visit(org.apache.calcite.rel.core.TableFunctionScan)"},{"p":"org.apache.calcite.rel","c":"RelShuttleImpl","l":"visit(TableFunctionScan)","u":"visit(org.apache.calcite.rel.core.TableFunctionScan)"},{"p":"org.apache.calcite.rel.rel2sql","c":"RelToSqlConverter","l":"visit(TableModify)","u":"visit(org.apache.calcite.rel.core.TableModify)"},{"p":"org.apache.calcite.interpreter","c":"Nodes.CoreCompiler","l":"visit(TableScan)","u":"visit(org.apache.calcite.rel.core.TableScan)"},{"p":"org.apache.calcite.rel.logical","c":"ToLogicalConverter","l":"visit(TableScan)","u":"visit(org.apache.calcite.rel.core.TableScan)"},{"p":"org.apache.calcite.rel.rel2sql","c":"RelToSqlConverter","l":"visit(TableScan)","u":"visit(org.apache.calcite.rel.core.TableScan)"},{"p":"org.apache.calcite.rel","c":"RelHomogeneousShuttle","l":"visit(TableScan)","u":"visit(org.apache.calcite.rel.core.TableScan)"},{"p":"org.apache.calcite.rel","c":"RelShuttle","l":"visit(TableScan)","u":"visit(org.apache.calcite.rel.core.TableScan)"},{"p":"org.apache.calcite.rel","c":"RelShuttleImpl","l":"visit(TableScan)","u":"visit(org.apache.calcite.rel.core.TableScan)"},{"p":"org.apache.calcite.linq4j.tree","c":"Visitor","l":"visit(TernaryExpression)","u":"visit(org.apache.calcite.linq4j.tree.TernaryExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"VisitorImpl","l":"visit(TernaryExpression)","u":"visit(org.apache.calcite.linq4j.tree.TernaryExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"DeterministicCodeOptimizer","l":"visit(TernaryExpression, Expression, Expression, Expression)","u":"visit(org.apache.calcite.linq4j.tree.TernaryExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"OptimizeShuttle","l":"visit(TernaryExpression, Expression, Expression, Expression)","u":"visit(org.apache.calcite.linq4j.tree.TernaryExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"visit(TernaryExpression, Expression, Expression, Expression)","u":"visit(org.apache.calcite.linq4j.tree.TernaryExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Visitor","l":"visit(ThrowStatement)","u":"visit(org.apache.calcite.linq4j.tree.ThrowStatement)"},{"p":"org.apache.calcite.linq4j.tree","c":"VisitorImpl","l":"visit(ThrowStatement)","u":"visit(org.apache.calcite.linq4j.tree.ThrowStatement)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"visit(ThrowStatement, Expression)","u":"visit(org.apache.calcite.linq4j.tree.ThrowStatement,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Visitor","l":"visit(TryStatement)","u":"visit(org.apache.calcite.linq4j.tree.TryStatement)"},{"p":"org.apache.calcite.linq4j.tree","c":"VisitorImpl","l":"visit(TryStatement)","u":"visit(org.apache.calcite.linq4j.tree.TryStatement)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"visit(TryStatement, Statement, List<CatchBlock>, Statement)","u":"visit(org.apache.calcite.linq4j.tree.TryStatement,org.apache.calcite.linq4j.tree.Statement,java.util.List,org.apache.calcite.linq4j.tree.Statement)"},{"p":"org.apache.calcite.linq4j.tree","c":"Visitor","l":"visit(TypeBinaryExpression)","u":"visit(org.apache.calcite.linq4j.tree.TypeBinaryExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"VisitorImpl","l":"visit(TypeBinaryExpression)","u":"visit(org.apache.calcite.linq4j.tree.TypeBinaryExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"DeterministicCodeOptimizer","l":"visit(TypeBinaryExpression, Expression)","u":"visit(org.apache.calcite.linq4j.tree.TypeBinaryExpression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"visit(TypeBinaryExpression, Expression)","u":"visit(org.apache.calcite.linq4j.tree.TypeBinaryExpression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Visitor","l":"visit(UnaryExpression)","u":"visit(org.apache.calcite.linq4j.tree.UnaryExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"VisitorImpl","l":"visit(UnaryExpression)","u":"visit(org.apache.calcite.linq4j.tree.UnaryExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"DeterministicCodeOptimizer","l":"visit(UnaryExpression, Expression)","u":"visit(org.apache.calcite.linq4j.tree.UnaryExpression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"OptimizeShuttle","l":"visit(UnaryExpression, Expression)","u":"visit(org.apache.calcite.linq4j.tree.UnaryExpression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"visit(UnaryExpression, Expression)","u":"visit(org.apache.calcite.linq4j.tree.UnaryExpression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.interpreter","c":"Nodes.CoreCompiler","l":"visit(Uncollect)","u":"visit(org.apache.calcite.rel.core.Uncollect)"},{"p":"org.apache.calcite.rel.rel2sql","c":"RelToSqlConverter","l":"visit(Uncollect)","u":"visit(org.apache.calcite.rel.core.Uncollect)"},{"p":"org.apache.calcite.rel.rel2sql","c":"RelToSqlConverter","l":"visit(Union)","u":"visit(org.apache.calcite.rel.core.Union)"},{"p":"org.apache.calcite.interpreter","c":"Nodes.CoreCompiler","l":"visit(Values)","u":"visit(org.apache.calcite.rel.core.Values)"},{"p":"org.apache.calcite.rel.rel2sql","c":"RelToSqlConverter","l":"visit(Values)","u":"visit(org.apache.calcite.rel.core.Values)"},{"p":"org.apache.calcite.linq4j.tree","c":"Visitor","l":"visit(WhileStatement)","u":"visit(org.apache.calcite.linq4j.tree.WhileStatement)"},{"p":"org.apache.calcite.linq4j.tree","c":"VisitorImpl","l":"visit(WhileStatement)","u":"visit(org.apache.calcite.linq4j.tree.WhileStatement)"},{"p":"org.apache.calcite.linq4j.tree","c":"Shuttle","l":"visit(WhileStatement, Expression, Statement)","u":"visit(org.apache.calcite.linq4j.tree.WhileStatement,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Statement)"},{"p":"org.apache.calcite.interpreter","c":"Nodes.CoreCompiler","l":"visit(Window)","u":"visit(org.apache.calcite.rel.core.Window)"},{"p":"org.apache.calcite.piglet","c":"PigRelToSqlConverter","l":"visit(Window)","u":"visit(org.apache.calcite.rel.core.Window)"},{"p":"org.apache.calcite.rel.rel2sql","c":"RelToSqlConverter","l":"visit(Window)","u":"visit(org.apache.calcite.rel.core.Window)"},{"p":"org.apache.calcite.sql.util","c":"SqlVisitor","l":"visitAll(List<SqlNode>)","u":"visitAll(java.util.List)"},{"p":"org.apache.calcite.rel.rel2sql","c":"RelToSqlConverter","l":"visitAntiOrSemiJoin(Join)","u":"visitAntiOrSemiJoin(org.apache.calcite.rel.core.Join)"},{"p":"org.apache.calcite.rex","c":"RexShuttle","l":"visitArray(RexNode[], boolean[])","u":"visitArray(org.apache.calcite.rex.RexNode[],boolean[])"},{"p":"org.apache.calcite.rex","c":"RexVisitorImpl","l":"visitArrayAnd(RexVisitor<Boolean>, List<RexNode>)","u":"visitArrayAnd(org.apache.calcite.rex.RexVisitor,java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexVisitorImpl","l":"visitArrayOr(RexVisitor<Boolean>, List<RexNode>)","u":"visitArrayOr(org.apache.calcite.rex.RexVisitor,java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexToLixTranslator","l":"visitCall(RexCall)","u":"visitCall(org.apache.calcite.rex.RexCall)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.InputFinder","l":"visitCall(RexCall)","u":"visitCall(org.apache.calcite.rex.RexCall)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceDecimalsRule.DecimalShuttle","l":"visitCall(RexCall)","u":"visitCall(org.apache.calcite.rex.RexCall)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.CaseShuttle","l":"visitCall(RexCall)","u":"visitCall(org.apache.calcite.rex.RexCall)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.ReducibleExprLocator","l":"visitCall(RexCall)","u":"visitCall(org.apache.calcite.rex.RexCall)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.RexReplacer","l":"visitCall(RexCall)","u":"visitCall(org.apache.calcite.rex.RexCall)"},{"p":"org.apache.calcite.rex","c":"RexChecker","l":"visitCall(RexCall)","u":"visitCall(org.apache.calcite.rex.RexCall)"},{"p":"org.apache.calcite.rex","c":"RexInterpreter","l":"visitCall(RexCall)","u":"visitCall(org.apache.calcite.rex.RexCall)"},{"p":"org.apache.calcite.rex","c":"RexPermuteInputsShuttle","l":"visitCall(RexCall)","u":"visitCall(org.apache.calcite.rex.RexCall)"},{"p":"org.apache.calcite.rex","c":"RexShuttle","l":"visitCall(RexCall)","u":"visitCall(org.apache.calcite.rex.RexCall)"},{"p":"org.apache.calcite.rex","c":"RexUtil.ExprSimplifier","l":"visitCall(RexCall)","u":"visitCall(org.apache.calcite.rex.RexCall)"},{"p":"org.apache.calcite.rex","c":"RexUtil.FieldAccessFinder","l":"visitCall(RexCall)","u":"visitCall(org.apache.calcite.rex.RexCall)"},{"p":"org.apache.calcite.rex","c":"RexVisitor","l":"visitCall(RexCall)","u":"visitCall(org.apache.calcite.rex.RexCall)"},{"p":"org.apache.calcite.rex","c":"RexVisitorImpl","l":"visitCall(RexCall)","u":"visitCall(org.apache.calcite.rex.RexCall)"},{"p":"org.apache.calcite.rex","c":"RexBiVisitor","l":"visitCall(RexCall, P)","u":"visitCall(org.apache.calcite.rex.RexCall,P)"},{"p":"org.apache.calcite.rex","c":"RexBiVisitorImpl","l":"visitCall(RexCall, P)","u":"visitCall(org.apache.calcite.rex.RexCall,P)"},{"p":"org.apache.calcite.rex","c":"RexUnaryBiVisitor","l":"visitCall(RexCall, R)","u":"visitCall(org.apache.calcite.rex.RexCall,R)"},{"p":"org.apache.calcite.rex","c":"LogicVisitor","l":"visitCall(RexCall, RelOptUtil.Logic)","u":"visitCall(org.apache.calcite.rex.RexCall,org.apache.calcite.plan.RelOptUtil.Logic)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableRelImplementor","l":"visitChild(EnumerableRel, int, EnumerableRel, EnumerableRel.Prefer)","u":"visitChild(org.apache.calcite.adapter.enumerable.EnumerableRel,int,org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel.Prefer)"},{"p":"org.apache.calcite.adapter.cassandra","c":"CassandraRel.Implementor","l":"visitChild(int, RelNode)","u":"visitChild(int,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.innodb","c":"InnodbRel.Implementor","l":"visitChild(int, RelNode)","u":"visitChild(int,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.mongodb","c":"MongoRel.Implementor","l":"visitChild(int, RelNode)","u":"visitChild(int,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.pig","c":"PigRel.Implementor","l":"visitChild(int, RelNode)","u":"visitChild(int,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor","l":"visitChild(int, RelNode)","u":"visitChild(int,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel","c":"RelShuttleImpl","l":"visitChild(RelNode, int, RelNode)","u":"visitChild(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectCorrelateTransposeRule.RelNodesExprsHandler","l":"visitChild(RelNode, int, RelNode)","u":"visitChild(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator.CorelMapBuilder","l":"visitChild(RelNode, int, RelNode)","u":"visitChild(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.sql.util","c":"SqlBasicVisitor.ArgHandler","l":"visitChild(SqlVisitor<R>, SqlNode, int, SqlNode)","u":"visitChild(org.apache.calcite.sql.util.SqlVisitor,org.apache.calcite.sql.SqlNode,int,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.util","c":"SqlBasicVisitor.ArgHandlerImpl","l":"visitChild(SqlVisitor<R>, SqlNode, int, SqlNode)","u":"visitChild(org.apache.calcite.sql.util.SqlVisitor,org.apache.calcite.sql.SqlNode,int,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.sql.util","c":"SqlShuttle.CallCopyingArgHandler","l":"visitChild(SqlVisitor<SqlNode>, SqlNode, int, SqlNode)","u":"visitChild(org.apache.calcite.sql.util.SqlVisitor,org.apache.calcite.sql.SqlNode,int,org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"visitChildren(ExpressionVisitor)","u":"visitChildren(org.apache.calcite.linq4j.tree.ExpressionVisitor)"},{"p":"org.apache.calcite.model","c":"JsonLattice","l":"visitChildren(ModelHandler)","u":"visitChildren(org.apache.calcite.model.ModelHandler)"},{"p":"org.apache.calcite.model","c":"JsonMapSchema","l":"visitChildren(ModelHandler)","u":"visitChildren(org.apache.calcite.model.ModelHandler)"},{"p":"org.apache.calcite.model","c":"JsonSchema","l":"visitChildren(ModelHandler)","u":"visitChildren(org.apache.calcite.model.ModelHandler)"},{"p":"org.apache.calcite.rel","c":"RelShuttleImpl","l":"visitChildren(RelNode)","u":"visitChildren(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexToLixTranslator","l":"visitCorrelVariable(RexCorrelVariable)","u":"visitCorrelVariable(org.apache.calcite.rex.RexCorrelVariable)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.VariableUsedVisitor","l":"visitCorrelVariable(RexCorrelVariable)","u":"visitCorrelVariable(org.apache.calcite.rex.RexCorrelVariable)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectCorrelateTransposeRule.RexFieldAccessReplacer","l":"visitCorrelVariable(RexCorrelVariable)","u":"visitCorrelVariable(org.apache.calcite.rex.RexCorrelVariable)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.ReducibleExprLocator","l":"visitCorrelVariable(RexCorrelVariable)","u":"visitCorrelVariable(org.apache.calcite.rex.RexCorrelVariable)"},{"p":"org.apache.calcite.rex","c":"RexChecker","l":"visitCorrelVariable(RexCorrelVariable)","u":"visitCorrelVariable(org.apache.calcite.rex.RexCorrelVariable)"},{"p":"org.apache.calcite.rex","c":"RexInterpreter","l":"visitCorrelVariable(RexCorrelVariable)","u":"visitCorrelVariable(org.apache.calcite.rex.RexCorrelVariable)"},{"p":"org.apache.calcite.rex","c":"RexShuttle","l":"visitCorrelVariable(RexCorrelVariable)","u":"visitCorrelVariable(org.apache.calcite.rex.RexCorrelVariable)"},{"p":"org.apache.calcite.rex","c":"RexVisitor","l":"visitCorrelVariable(RexCorrelVariable)","u":"visitCorrelVariable(org.apache.calcite.rex.RexCorrelVariable)"},{"p":"org.apache.calcite.rex","c":"RexVisitorImpl","l":"visitCorrelVariable(RexCorrelVariable)","u":"visitCorrelVariable(org.apache.calcite.rex.RexCorrelVariable)"},{"p":"org.apache.calcite.rex","c":"RexBiVisitor","l":"visitCorrelVariable(RexCorrelVariable, P)","u":"visitCorrelVariable(org.apache.calcite.rex.RexCorrelVariable,P)"},{"p":"org.apache.calcite.rex","c":"RexBiVisitorImpl","l":"visitCorrelVariable(RexCorrelVariable, P)","u":"visitCorrelVariable(org.apache.calcite.rex.RexCorrelVariable,P)"},{"p":"org.apache.calcite.rex","c":"RexUnaryBiVisitor","l":"visitCorrelVariable(RexCorrelVariable, R)","u":"visitCorrelVariable(org.apache.calcite.rex.RexCorrelVariable,R)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexToLixTranslator","l":"visitDynamicParam(RexDynamicParam)","u":"visitDynamicParam(org.apache.calcite.rex.RexDynamicParam)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.ReducibleExprLocator","l":"visitDynamicParam(RexDynamicParam)","u":"visitDynamicParam(org.apache.calcite.rex.RexDynamicParam)"},{"p":"org.apache.calcite.rex","c":"RexInterpreter","l":"visitDynamicParam(RexDynamicParam)","u":"visitDynamicParam(org.apache.calcite.rex.RexDynamicParam)"},{"p":"org.apache.calcite.rex","c":"RexShuttle","l":"visitDynamicParam(RexDynamicParam)","u":"visitDynamicParam(org.apache.calcite.rex.RexDynamicParam)"},{"p":"org.apache.calcite.rex","c":"RexVisitor","l":"visitDynamicParam(RexDynamicParam)","u":"visitDynamicParam(org.apache.calcite.rex.RexDynamicParam)"},{"p":"org.apache.calcite.rex","c":"RexVisitorImpl","l":"visitDynamicParam(RexDynamicParam)","u":"visitDynamicParam(org.apache.calcite.rex.RexDynamicParam)"},{"p":"org.apache.calcite.rex","c":"RexBiVisitor","l":"visitDynamicParam(RexDynamicParam, P)","u":"visitDynamicParam(org.apache.calcite.rex.RexDynamicParam,P)"},{"p":"org.apache.calcite.rex","c":"RexBiVisitorImpl","l":"visitDynamicParam(RexDynamicParam, P)","u":"visitDynamicParam(org.apache.calcite.rex.RexDynamicParam,P)"},{"p":"org.apache.calcite.rex","c":"RexUnaryBiVisitor","l":"visitDynamicParam(RexDynamicParam, R)","u":"visitDynamicParam(org.apache.calcite.rex.RexDynamicParam,R)"},{"p":"org.apache.calcite.rex","c":"RexVisitor","l":"visitEach(Iterable<? extends RexNode>)","u":"visitEach(java.lang.Iterable)"},{"p":"org.apache.calcite.rex","c":"RexBiVisitor","l":"visitEach(Iterable<? extends RexNode>, P)","u":"visitEach(java.lang.Iterable,P)"},{"p":"org.apache.calcite.rex","c":"RexBiVisitor","l":"visitEachIndexed(Iterable<? extends RexNode>)","u":"visitEachIndexed(java.lang.Iterable)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexToLixTranslator","l":"visitFieldAccess(RexFieldAccess)","u":"visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.VariableUsedVisitor","l":"visitFieldAccess(RexFieldAccess)","u":"visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectCorrelateTransposeRule.RexFieldAccessReplacer","l":"visitFieldAccess(RexFieldAccess)","u":"visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.ReducibleExprLocator","l":"visitFieldAccess(RexFieldAccess)","u":"visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)"},{"p":"org.apache.calcite.rex","c":"RexChecker","l":"visitFieldAccess(RexFieldAccess)","u":"visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)"},{"p":"org.apache.calcite.rex","c":"RexInterpreter","l":"visitFieldAccess(RexFieldAccess)","u":"visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)"},{"p":"org.apache.calcite.rex","c":"RexShuttle","l":"visitFieldAccess(RexFieldAccess)","u":"visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)"},{"p":"org.apache.calcite.rex","c":"RexUtil.FieldAccessFinder","l":"visitFieldAccess(RexFieldAccess)","u":"visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)"},{"p":"org.apache.calcite.rex","c":"RexVisitor","l":"visitFieldAccess(RexFieldAccess)","u":"visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)"},{"p":"org.apache.calcite.rex","c":"RexVisitorImpl","l":"visitFieldAccess(RexFieldAccess)","u":"visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)"},{"p":"org.apache.calcite.rex","c":"RexBiVisitor","l":"visitFieldAccess(RexFieldAccess, P)","u":"visitFieldAccess(org.apache.calcite.rex.RexFieldAccess,P)"},{"p":"org.apache.calcite.rex","c":"RexBiVisitorImpl","l":"visitFieldAccess(RexFieldAccess, P)","u":"visitFieldAccess(org.apache.calcite.rex.RexFieldAccess,P)"},{"p":"org.apache.calcite.rex","c":"RexUnaryBiVisitor","l":"visitFieldAccess(RexFieldAccess, R)","u":"visitFieldAccess(org.apache.calcite.rex.RexFieldAccess,R)"},{"p":"org.apache.calcite.rex","c":"LogicVisitor","l":"visitFieldAccess(RexFieldAccess, RelOptUtil.Logic)","u":"visitFieldAccess(org.apache.calcite.rex.RexFieldAccess,org.apache.calcite.plan.RelOptUtil.Logic)"},{"p":"org.apache.calcite.rex","c":"RexShuttle","l":"visitFieldCollations(List<RexFieldCollation>, boolean[])","u":"visitFieldCollations(java.util.List,boolean[])"},{"p":"org.apache.calcite.adapter.arrow","c":"ArrowRel.Implementor","l":"visitInput(int, RelNode)","u":"visitInput(int,org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor","l":"visitInput(RelNode, int)","u":"visitInput(org.apache.calcite.rel.RelNode,int)"},{"p":"org.apache.calcite.rel.rel2sql","c":"RelToSqlConverter","l":"visitInput(RelNode, int, boolean, boolean, Set<SqlImplementor.Clause>)","u":"visitInput(org.apache.calcite.rel.RelNode,int,boolean,boolean,java.util.Set)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor","l":"visitInput(RelNode, int, boolean, boolean, Set<SqlImplementor.Clause>)","u":"visitInput(org.apache.calcite.rel.RelNode,int,boolean,boolean,java.util.Set)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor","l":"visitInput(RelNode, int, Set<SqlImplementor.Clause>)","u":"visitInput(org.apache.calcite.rel.RelNode,int,java.util.Set)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor","l":"visitInput(RelNode, int, SqlImplementor.Clause...)","u":"visitInput(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.rel2sql.SqlImplementor.Clause...)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexToLixTranslator","l":"visitInputRef(RexInputRef)","u":"visitInputRef(org.apache.calcite.rex.RexInputRef)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.InputFinder","l":"visitInputRef(RexInputRef)","u":"visitInputRef(org.apache.calcite.rex.RexInputRef)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.InputReferencedVisitor","l":"visitInputRef(RexInputRef)","u":"visitInputRef(org.apache.calcite.rex.RexInputRef)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.RexInputConverter","l":"visitInputRef(RexInputRef)","u":"visitInputRef(org.apache.calcite.rex.RexInputRef)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.ReducibleExprLocator","l":"visitInputRef(RexInputRef)","u":"visitInputRef(org.apache.calcite.rex.RexInputRef)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.RexReplacer","l":"visitInputRef(RexInputRef)","u":"visitInputRef(org.apache.calcite.rex.RexInputRef)"},{"p":"org.apache.calcite.rex","c":"RexChecker","l":"visitInputRef(RexInputRef)","u":"visitInputRef(org.apache.calcite.rex.RexInputRef)"},{"p":"org.apache.calcite.rex","c":"RexInterpreter","l":"visitInputRef(RexInputRef)","u":"visitInputRef(org.apache.calcite.rex.RexInputRef)"},{"p":"org.apache.calcite.rex","c":"RexPermuteInputsShuttle","l":"visitInputRef(RexInputRef)","u":"visitInputRef(org.apache.calcite.rex.RexInputRef)"},{"p":"org.apache.calcite.rex","c":"RexShuttle","l":"visitInputRef(RexInputRef)","u":"visitInputRef(org.apache.calcite.rex.RexInputRef)"},{"p":"org.apache.calcite.rex","c":"RexUtil.FixNullabilityShuttle","l":"visitInputRef(RexInputRef)","u":"visitInputRef(org.apache.calcite.rex.RexInputRef)"},{"p":"org.apache.calcite.rex","c":"RexVisitor","l":"visitInputRef(RexInputRef)","u":"visitInputRef(org.apache.calcite.rex.RexInputRef)"},{"p":"org.apache.calcite.rex","c":"RexVisitorImpl","l":"visitInputRef(RexInputRef)","u":"visitInputRef(org.apache.calcite.rex.RexInputRef)"},{"p":"org.apache.calcite.rex","c":"RexBiVisitor","l":"visitInputRef(RexInputRef, P)","u":"visitInputRef(org.apache.calcite.rex.RexInputRef,P)"},{"p":"org.apache.calcite.rex","c":"RexBiVisitorImpl","l":"visitInputRef(RexInputRef, P)","u":"visitInputRef(org.apache.calcite.rex.RexInputRef,P)"},{"p":"org.apache.calcite.rex","c":"RexUnaryBiVisitor","l":"visitInputRef(RexInputRef, R)","u":"visitInputRef(org.apache.calcite.rex.RexInputRef,R)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionVisitor","l":"visitLambda(FunctionExpression<T>)","u":"visitLambda(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexToLixTranslator","l":"visitLambda(RexLambda)","u":"visitLambda(org.apache.calcite.rex.RexLambda)"},{"p":"org.apache.calcite.rex","c":"RexInterpreter","l":"visitLambda(RexLambda)","u":"visitLambda(org.apache.calcite.rex.RexLambda)"},{"p":"org.apache.calcite.rex","c":"RexShuttle","l":"visitLambda(RexLambda)","u":"visitLambda(org.apache.calcite.rex.RexLambda)"},{"p":"org.apache.calcite.rex","c":"RexVisitor","l":"visitLambda(RexLambda)","u":"visitLambda(org.apache.calcite.rex.RexLambda)"},{"p":"org.apache.calcite.rex","c":"RexVisitorImpl","l":"visitLambda(RexLambda)","u":"visitLambda(org.apache.calcite.rex.RexLambda)"},{"p":"org.apache.calcite.rex","c":"RexBiVisitor","l":"visitLambda(RexLambda, P)","u":"visitLambda(org.apache.calcite.rex.RexLambda,P)"},{"p":"org.apache.calcite.rex","c":"RexBiVisitorImpl","l":"visitLambda(RexLambda, P)","u":"visitLambda(org.apache.calcite.rex.RexLambda,P)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexToLixTranslator","l":"visitLambdaRef(RexLambdaRef)","u":"visitLambdaRef(org.apache.calcite.rex.RexLambdaRef)"},{"p":"org.apache.calcite.rex","c":"RexInterpreter","l":"visitLambdaRef(RexLambdaRef)","u":"visitLambdaRef(org.apache.calcite.rex.RexLambdaRef)"},{"p":"org.apache.calcite.rex","c":"RexShuttle","l":"visitLambdaRef(RexLambdaRef)","u":"visitLambdaRef(org.apache.calcite.rex.RexLambdaRef)"},{"p":"org.apache.calcite.rex","c":"RexVisitor","l":"visitLambdaRef(RexLambdaRef)","u":"visitLambdaRef(org.apache.calcite.rex.RexLambdaRef)"},{"p":"org.apache.calcite.rex","c":"RexVisitorImpl","l":"visitLambdaRef(RexLambdaRef)","u":"visitLambdaRef(org.apache.calcite.rex.RexLambdaRef)"},{"p":"org.apache.calcite.rex","c":"RexVisitor","l":"visitList(Iterable<? extends RexNode>)","u":"visitList(java.lang.Iterable)"},{"p":"org.apache.calcite.rex","c":"RexVisitor","l":"visitList(Iterable<? extends RexNode>, List<R>)","u":"visitList(java.lang.Iterable,java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexBiVisitor","l":"visitList(Iterable<? extends RexNode>, P)","u":"visitList(java.lang.Iterable,P)"},{"p":"org.apache.calcite.rex","c":"RexBiVisitor","l":"visitList(Iterable<? extends RexNode>, P, List<R>)","u":"visitList(java.lang.Iterable,P,java.util.List)"},{"p":"org.apache.calcite.rex","c":"RexShuttle","l":"visitList(List<? extends RexNode>, boolean[])","u":"visitList(java.util.List,boolean[])"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexToLixTranslator","l":"visitLiteral(RexLiteral)","u":"visitLiteral(org.apache.calcite.rex.RexLiteral)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.ReducibleExprLocator","l":"visitLiteral(RexLiteral)","u":"visitLiteral(org.apache.calcite.rex.RexLiteral)"},{"p":"org.apache.calcite.rex","c":"RexInterpreter","l":"visitLiteral(RexLiteral)","u":"visitLiteral(org.apache.calcite.rex.RexLiteral)"},{"p":"org.apache.calcite.rex","c":"RexShuttle","l":"visitLiteral(RexLiteral)","u":"visitLiteral(org.apache.calcite.rex.RexLiteral)"},{"p":"org.apache.calcite.rex","c":"RexVisitor","l":"visitLiteral(RexLiteral)","u":"visitLiteral(org.apache.calcite.rex.RexLiteral)"},{"p":"org.apache.calcite.rex","c":"RexVisitorImpl","l":"visitLiteral(RexLiteral)","u":"visitLiteral(org.apache.calcite.rex.RexLiteral)"},{"p":"org.apache.calcite.rex","c":"RexBiVisitor","l":"visitLiteral(RexLiteral, P)","u":"visitLiteral(org.apache.calcite.rex.RexLiteral,P)"},{"p":"org.apache.calcite.rex","c":"RexBiVisitorImpl","l":"visitLiteral(RexLiteral, P)","u":"visitLiteral(org.apache.calcite.rex.RexLiteral,P)"},{"p":"org.apache.calcite.rex","c":"RexUnaryBiVisitor","l":"visitLiteral(RexLiteral, R)","u":"visitLiteral(org.apache.calcite.rex.RexLiteral,R)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexToLixTranslator","l":"visitLocalRef(RexLocalRef)","u":"visitLocalRef(org.apache.calcite.rex.RexLocalRef)"},{"p":"org.apache.calcite.rex","c":"RexChecker","l":"visitLocalRef(RexLocalRef)","u":"visitLocalRef(org.apache.calcite.rex.RexLocalRef)"},{"p":"org.apache.calcite.rex","c":"RexInterpreter","l":"visitLocalRef(RexLocalRef)","u":"visitLocalRef(org.apache.calcite.rex.RexLocalRef)"},{"p":"org.apache.calcite.rex","c":"RexPermutationShuttle","l":"visitLocalRef(RexLocalRef)","u":"visitLocalRef(org.apache.calcite.rex.RexLocalRef)"},{"p":"org.apache.calcite.rex","c":"RexShuttle","l":"visitLocalRef(RexLocalRef)","u":"visitLocalRef(org.apache.calcite.rex.RexLocalRef)"},{"p":"org.apache.calcite.rex","c":"RexVisitor","l":"visitLocalRef(RexLocalRef)","u":"visitLocalRef(org.apache.calcite.rex.RexLocalRef)"},{"p":"org.apache.calcite.rex","c":"RexVisitorImpl","l":"visitLocalRef(RexLocalRef)","u":"visitLocalRef(org.apache.calcite.rex.RexLocalRef)"},{"p":"org.apache.calcite.rex","c":"RexBiVisitor","l":"visitLocalRef(RexLocalRef, P)","u":"visitLocalRef(org.apache.calcite.rex.RexLocalRef,P)"},{"p":"org.apache.calcite.rex","c":"RexBiVisitorImpl","l":"visitLocalRef(RexLocalRef, P)","u":"visitLocalRef(org.apache.calcite.rex.RexLocalRef,P)"},{"p":"org.apache.calcite.rex","c":"RexUnaryBiVisitor","l":"visitLocalRef(RexLocalRef, R)","u":"visitLocalRef(org.apache.calcite.rex.RexLocalRef,R)"},{"p":"org.apache.calcite.sql.util","c":"SqlVisitor","l":"visitNode(SqlNode)","u":"visitNode(org.apache.calcite.sql.SqlNode)"},{"p":"org.apache.calcite.util","c":"Glossary","l":"VISITOR_PATTERN"},{"p":"org.apache.calcite.plan","c":"VisitorDataContext","l":"VisitorDataContext(Object[])","u":"%3Cinit%3E(java.lang.Object[])"},{"p":"org.apache.calcite.linq4j.tree","c":"VisitorImpl","l":"VisitorImpl()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexToLixTranslator","l":"visitOver(RexOver)","u":"visitOver(org.apache.calcite.rex.RexOver)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.ReducibleExprLocator","l":"visitOver(RexOver)","u":"visitOver(org.apache.calcite.rex.RexOver)"},{"p":"org.apache.calcite.rex","c":"RexInterpreter","l":"visitOver(RexOver)","u":"visitOver(org.apache.calcite.rex.RexOver)"},{"p":"org.apache.calcite.rex","c":"RexShuttle","l":"visitOver(RexOver)","u":"visitOver(org.apache.calcite.rex.RexOver)"},{"p":"org.apache.calcite.rex","c":"RexVisitor","l":"visitOver(RexOver)","u":"visitOver(org.apache.calcite.rex.RexOver)"},{"p":"org.apache.calcite.rex","c":"RexVisitorImpl","l":"visitOver(RexOver)","u":"visitOver(org.apache.calcite.rex.RexOver)"},{"p":"org.apache.calcite.rex","c":"RexBiVisitor","l":"visitOver(RexOver, P)","u":"visitOver(org.apache.calcite.rex.RexOver,P)"},{"p":"org.apache.calcite.rex","c":"RexBiVisitorImpl","l":"visitOver(RexOver, P)","u":"visitOver(org.apache.calcite.rex.RexOver,P)"},{"p":"org.apache.calcite.rex","c":"RexUnaryBiVisitor","l":"visitOver(RexOver, R)","u":"visitOver(org.apache.calcite.rex.RexOver,R)"},{"p":"org.apache.calcite.rex","c":"LogicVisitor","l":"visitOver(RexOver, RelOptUtil.Logic)","u":"visitOver(org.apache.calcite.rex.RexOver,org.apache.calcite.plan.RelOptUtil.Logic)"},{"p":"org.apache.calcite.rex","c":"RexShuttle","l":"visitOverAggFunction(SqlAggFunction)","u":"visitOverAggFunction(org.apache.calcite.sql.SqlAggFunction)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexToLixTranslator","l":"visitPatternFieldRef(RexPatternFieldRef)","u":"visitPatternFieldRef(org.apache.calcite.rex.RexPatternFieldRef)"},{"p":"org.apache.calcite.rex","c":"RexInterpreter","l":"visitPatternFieldRef(RexPatternFieldRef)","u":"visitPatternFieldRef(org.apache.calcite.rex.RexPatternFieldRef)"},{"p":"org.apache.calcite.rex","c":"RexShuttle","l":"visitPatternFieldRef(RexPatternFieldRef)","u":"visitPatternFieldRef(org.apache.calcite.rex.RexPatternFieldRef)"},{"p":"org.apache.calcite.rex","c":"RexVisitor","l":"visitPatternFieldRef(RexPatternFieldRef)","u":"visitPatternFieldRef(org.apache.calcite.rex.RexPatternFieldRef)"},{"p":"org.apache.calcite.rex","c":"RexVisitorImpl","l":"visitPatternFieldRef(RexPatternFieldRef)","u":"visitPatternFieldRef(org.apache.calcite.rex.RexPatternFieldRef)"},{"p":"org.apache.calcite.rex","c":"RexBiVisitor","l":"visitPatternFieldRef(RexPatternFieldRef, P)","u":"visitPatternFieldRef(org.apache.calcite.rex.RexPatternFieldRef,P)"},{"p":"org.apache.calcite.rex","c":"RexBiVisitorImpl","l":"visitPatternFieldRef(RexPatternFieldRef, P)","u":"visitPatternFieldRef(org.apache.calcite.rex.RexPatternFieldRef,P)"},{"p":"org.apache.calcite.rex","c":"RexUnaryBiVisitor","l":"visitPatternFieldRef(RexPatternFieldRef, R)","u":"visitPatternFieldRef(org.apache.calcite.rex.RexPatternFieldRef,R)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexToLixTranslator","l":"visitRangeRef(RexRangeRef)","u":"visitRangeRef(org.apache.calcite.rex.RexRangeRef)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.ReducibleExprLocator","l":"visitRangeRef(RexRangeRef)","u":"visitRangeRef(org.apache.calcite.rex.RexRangeRef)"},{"p":"org.apache.calcite.rex","c":"RexInterpreter","l":"visitRangeRef(RexRangeRef)","u":"visitRangeRef(org.apache.calcite.rex.RexRangeRef)"},{"p":"org.apache.calcite.rex","c":"RexShuttle","l":"visitRangeRef(RexRangeRef)","u":"visitRangeRef(org.apache.calcite.rex.RexRangeRef)"},{"p":"org.apache.calcite.rex","c":"RexVisitor","l":"visitRangeRef(RexRangeRef)","u":"visitRangeRef(org.apache.calcite.rex.RexRangeRef)"},{"p":"org.apache.calcite.rex","c":"RexVisitorImpl","l":"visitRangeRef(RexRangeRef)","u":"visitRangeRef(org.apache.calcite.rex.RexRangeRef)"},{"p":"org.apache.calcite.rex","c":"RexBiVisitor","l":"visitRangeRef(RexRangeRef, P)","u":"visitRangeRef(org.apache.calcite.rex.RexRangeRef,P)"},{"p":"org.apache.calcite.rex","c":"RexBiVisitorImpl","l":"visitRangeRef(RexRangeRef, P)","u":"visitRangeRef(org.apache.calcite.rex.RexRangeRef,P)"},{"p":"org.apache.calcite.rex","c":"RexUnaryBiVisitor","l":"visitRangeRef(RexRangeRef, R)","u":"visitRangeRef(org.apache.calcite.rex.RexRangeRef,R)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor","l":"visitRoot(RelNode)","u":"visitRoot(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.sql.validate","c":"SqlScopedShuttle","l":"visitScoped(SqlCall)","u":"visitScoped(org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidatorUtil.DeepCopier","l":"visitScoped(SqlCall)","u":"visitScoped(org.apache.calcite.sql.SqlCall)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexToLixTranslator","l":"visitSubQuery(RexSubQuery)","u":"visitSubQuery(org.apache.calcite.rex.RexSubQuery)"},{"p":"org.apache.calcite.plan","c":"RelOptUtil.VariableUsedVisitor","l":"visitSubQuery(RexSubQuery)","u":"visitSubQuery(org.apache.calcite.rex.RexSubQuery)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.ReducibleExprLocator","l":"visitSubQuery(RexSubQuery)","u":"visitSubQuery(org.apache.calcite.rex.RexSubQuery)"},{"p":"org.apache.calcite.rex","c":"RexInterpreter","l":"visitSubQuery(RexSubQuery)","u":"visitSubQuery(org.apache.calcite.rex.RexSubQuery)"},{"p":"org.apache.calcite.rex","c":"RexShuttle","l":"visitSubQuery(RexSubQuery)","u":"visitSubQuery(org.apache.calcite.rex.RexSubQuery)"},{"p":"org.apache.calcite.rex","c":"RexUtil.SubQueryCollector","l":"visitSubQuery(RexSubQuery)","u":"visitSubQuery(org.apache.calcite.rex.RexSubQuery)"},{"p":"org.apache.calcite.rex","c":"RexUtil.SubQueryFinder","l":"visitSubQuery(RexSubQuery)","u":"visitSubQuery(org.apache.calcite.rex.RexSubQuery)"},{"p":"org.apache.calcite.rex","c":"RexVisitor","l":"visitSubQuery(RexSubQuery)","u":"visitSubQuery(org.apache.calcite.rex.RexSubQuery)"},{"p":"org.apache.calcite.rex","c":"RexVisitorImpl","l":"visitSubQuery(RexSubQuery)","u":"visitSubQuery(org.apache.calcite.rex.RexSubQuery)"},{"p":"org.apache.calcite.rex","c":"RexBiVisitor","l":"visitSubQuery(RexSubQuery, P)","u":"visitSubQuery(org.apache.calcite.rex.RexSubQuery,P)"},{"p":"org.apache.calcite.rex","c":"RexBiVisitorImpl","l":"visitSubQuery(RexSubQuery, P)","u":"visitSubQuery(org.apache.calcite.rex.RexSubQuery,P)"},{"p":"org.apache.calcite.rex","c":"RexUnaryBiVisitor","l":"visitSubQuery(RexSubQuery, R)","u":"visitSubQuery(org.apache.calcite.rex.RexSubQuery,R)"},{"p":"org.apache.calcite.rex","c":"LogicVisitor","l":"visitSubQuery(RexSubQuery, RelOptUtil.Logic)","u":"visitSubQuery(org.apache.calcite.rex.RexSubQuery,org.apache.calcite.plan.RelOptUtil.Logic)"},{"p":"org.apache.calcite.adapter.enumerable","c":"RexToLixTranslator","l":"visitTableInputRef(RexTableInputRef)","u":"visitTableInputRef(org.apache.calcite.rex.RexTableInputRef)"},{"p":"org.apache.calcite.rex","c":"RexInterpreter","l":"visitTableInputRef(RexTableInputRef)","u":"visitTableInputRef(org.apache.calcite.rex.RexTableInputRef)"},{"p":"org.apache.calcite.rex","c":"RexShuttle","l":"visitTableInputRef(RexTableInputRef)","u":"visitTableInputRef(org.apache.calcite.rex.RexTableInputRef)"},{"p":"org.apache.calcite.rex","c":"RexVisitor","l":"visitTableInputRef(RexTableInputRef)","u":"visitTableInputRef(org.apache.calcite.rex.RexTableInputRef)"},{"p":"org.apache.calcite.rex","c":"RexVisitorImpl","l":"visitTableInputRef(RexTableInputRef)","u":"visitTableInputRef(org.apache.calcite.rex.RexTableInputRef)"},{"p":"org.apache.calcite.rex","c":"RexBiVisitor","l":"visitTableInputRef(RexTableInputRef, P)","u":"visitTableInputRef(org.apache.calcite.rex.RexTableInputRef,P)"},{"p":"org.apache.calcite.rex","c":"RexBiVisitorImpl","l":"visitTableInputRef(RexTableInputRef, P)","u":"visitTableInputRef(org.apache.calcite.rex.RexTableInputRef,P)"},{"p":"org.apache.calcite.rex","c":"RexUnaryBiVisitor","l":"visitTableInputRef(RexTableInputRef, R)","u":"visitTableInputRef(org.apache.calcite.rex.RexTableInputRef,R)"},{"p":"org.apache.calcite.rex","c":"RexShuttle","l":"visitWindow(RexWindow)","u":"visitWindow(org.apache.calcite.rex.RexWindow)"},{"p":"org.apache.calcite.linq4j.tree","c":"Primitive","l":"VOID"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoRuleCall","l":"volcanoPlanner"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"VolcanoPlanner()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"VolcanoPlanner(Context)","u":"%3Cinit%3E(org.apache.calcite.plan.Context)"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoPlanner","l":"VolcanoPlanner(RelOptCostFactory, Context)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCostFactory,org.apache.calcite.plan.Context)"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoRelMetadataProvider","l":"VolcanoRelMetadataProvider()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoRuleCall","l":"VolcanoRuleCall(VolcanoPlanner, RelOptRuleOperand, RelNode[], Map<RelNode, List<RelNode>>)","u":"%3Cinit%3E(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.rel.RelNode[],java.util.Map)"},{"p":"org.apache.calcite.plan.volcano","c":"VolcanoTimeoutException","l":"VolcanoTimeoutException()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"W"},{"p":"org.apache.calcite.util","c":"Unsafe","l":"wait(Object)","u":"wait(java.lang.Object)"},{"p":"org.apache.calcite.util.trace","c":"CalciteLogger","l":"warn(String)","u":"warn(java.lang.String)"},{"p":"org.apache.calcite.util.trace","c":"CalciteLogger","l":"warn(String, Object, Object)","u":"warn(java.lang.String,java.lang.Object,java.lang.Object)"},{"p":"org.apache.calcite.util.trace","c":"CalciteLogger","l":"warn(String, Object, Object, Object)","u":"warn(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)"},{"p":"org.apache.calcite.util.trace","c":"CalciteLogger","l":"warn(String, Object, Object, Object, Object)","u":"warn(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)"},{"p":"org.apache.calcite.util.trace","c":"CalciteLogger","l":"warn(String, Object...)","u":"warn(java.lang.String,java.lang.Object...)"},{"p":"org.apache.calcite.adapter.druid","c":"Granularity.Type","l":"WEEK"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"WEEK"},{"p":"org.apache.calcite.rel.type","c":"TimeFrames","l":"WEEK_FRAME_NAMES"},{"p":"org.apache.calcite.test","c":"SqlOperatorTest","l":"WEEK_VARIANTS"},{"p":"org.apache.calcite.util.format.postgresql","c":"ChronoUnitEnum","l":"WEEKS_IN_MONTH"},{"p":"org.apache.calcite.util.format.postgresql","c":"ChronoUnitEnum","l":"WEEKS_IN_YEAR"},{"p":"org.apache.calcite.util.format.postgresql","c":"ChronoUnitEnum","l":"WEEKS_IN_YEAR_ISO_8601"},{"p":"org.apache.calcite.linq4j","c":"OpType","l":"WHERE"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor.Clause","l":"WHERE"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"WHERE"},{"p":"org.apache.calcite.sql","c":"SqlWriter.FrameTypeEnum","l":"WHERE_LIST"},{"p":"org.apache.calcite.sql","c":"SqlSelect","l":"WHERE_OPERAND"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"where(Enumerable<TSource>, Predicate1<TSource>)","u":"where(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"where(Enumerable<TSource>, Predicate2<TSource, Integer>)","u":"where(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Predicate2)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"where(FunctionExpression<? extends Predicate1<T>>)","u":"where(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"where(FunctionExpression<? extends Predicate1<T>>)","u":"where(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"where(FunctionExpression<? extends Predicate1<TSource>>)"},{"p":"","c":"","l":"where(FunctionExpression<? extends Predicate1<TSource>>)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"where(Predicate1<T>)","u":"where(org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"where(Predicate1<TSource>)","u":"where(org.apache.calcite.linq4j.function.Predicate1)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"where(Predicate2<T, Integer>)","u":"where(org.apache.calcite.linq4j.function.Predicate2)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"where(Predicate2<TSource, Integer>)","u":"where(org.apache.calcite.linq4j.function.Predicate2)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"where(Queryable<T>, FunctionExpression<? extends Predicate1<T>>)","u":"where(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"where(Queryable<T>, FunctionExpression<? extends Predicate1<T>>)","u":"where(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"where(Queryable<T>, FunctionExpression<Predicate1<T>>)","u":"where(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"WHERE2"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"whereFolding()"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"whereListItemsOnSeparateLines()"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"whereN(FunctionExpression<? extends Predicate2<T, Integer>>)","u":"whereN(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"whereN(FunctionExpression<? extends Predicate2<T, Integer>>)","u":"whereN(org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"whereN(FunctionExpression<? extends Predicate2<TSource, Integer>>)"},{"p":"","c":"","l":"whereN(FunctionExpression<? extends Predicate2<TSource, Integer>>)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"whereN(Queryable<T>, FunctionExpression<? extends Predicate2<T, Integer>>)","u":"whereN(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"whereN(Queryable<T>, FunctionExpression<? extends Predicate2<T, Integer>>)","u":"whereN(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"whereN(Queryable<T>, FunctionExpression<Predicate2<T, Integer>>)","u":"whereN(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j.tree","c":"ExpressionType","l":"While"},{"p":"org.apache.calcite.linq4j.tree","c":"Expressions","l":"while_(Expression, Statement)","u":"while_(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Statement)"},{"p":"org.apache.calcite.linq4j.tree","c":"WhileStatement","l":"WhileStatement(Expression, Statement)","u":"%3Cinit%3E(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Statement)"},{"p":"org.apache.calcite.sql.pretty","c":"SqlPrettyWriter","l":"whiteSpace()"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"whole"},{"p":"org.apache.calcite.test","c":"IntervalTest.Fixture","l":"wholeExpr(String)","u":"wholeExpr(java.lang.String)"},{"p":"org.apache.calcite.test","c":"SqlValidatorTestCase","l":"wholeExpr(String)","u":"wholeExpr(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig.LineFolding","l":"WIDE"},{"p":"org.apache.calcite.util","c":"Smalls.WideProductSale","l":"WideProductSale(int, double)","u":"%3Cinit%3E(int,double)"},{"p":"org.apache.calcite.util","c":"Smalls.WideSaleSchema","l":"WideSaleSchema()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.test","c":"SqlValidatorTestCase","l":"win(String)","u":"win(java.lang.String)"},{"p":"org.apache.calcite.adapter.enumerable.impl","c":"WinAggAddContextImpl","l":"WinAggAddContextImpl(BlockBuilder, List<Expression>, Function<BlockBuilder, WinAggFrameResultContext>)","u":"%3Cinit%3E(org.apache.calcite.linq4j.tree.BlockBuilder,java.util.List,com.google.common.base.Function)"},{"p":"org.apache.calcite.adapter.enumerable.impl","c":"WinAggAddContextImpl","l":"WinAggAddContextImpl(BlockBuilder, List<Expression>, Function<BlockBuilder, WinAggFrameResultContext>)","u":"%3Cinit%3E(org.apache.calcite.linq4j.tree.BlockBuilder,java.util.List,java.util.function.Function)"},{"p":"org.apache.calcite.adapter.enumerable.impl","c":"WinAggResetContextImpl","l":"WinAggResetContextImpl(BlockBuilder, List<Expression>, Expression, Expression, Expression, Expression, Expression, Expression)","u":"%3Cinit%3E(org.apache.calcite.linq4j.tree.BlockBuilder,java.util.List,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)"},{"p":"org.apache.calcite.adapter.enumerable.impl","c":"WinAggResultContextImpl","l":"WinAggResultContextImpl(BlockBuilder, List<Expression>, Function<BlockBuilder, WinAggFrameResultContext>)","u":"%3Cinit%3E(org.apache.calcite.linq4j.tree.BlockBuilder,java.util.List,com.google.common.base.Function)"},{"p":"org.apache.calcite.adapter.enumerable.impl","c":"WinAggResultContextImpl","l":"WinAggResultContextImpl(BlockBuilder, List<Expression>, Function<BlockBuilder, WinAggFrameResultContext>)","u":"%3Cinit%3E(org.apache.calcite.linq4j.tree.BlockBuilder,java.util.List,java.util.function.Function)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"WINDOW"},{"p":"org.apache.calcite.sql","c":"SqlWriter.FrameTypeEnum","l":"WINDOW"},{"p":"org.apache.calcite.rel.hint","c":"HintPredicates","l":"WINDOW"},{"p":"org.apache.calcite.sql","c":"SqlWriter.FrameTypeEnum","l":"WINDOW_DECL_LIST"},{"p":"org.apache.calcite.rel.rules","c":"CoreRules","l":"WINDOW_REDUCE_EXPRESSIONS"},{"p":"org.apache.calcite.rel.metadata","c":"RelMdCollation","l":"window(RelMetadataQuery, RelNode, ImmutableList<Window.Group>)","u":"window(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList)"},{"p":"org.apache.calcite.rel.core","c":"Window","l":"Window(RelOptCluster, RelTraitSet, List<RelHint>, RelNode, List<RexLiteral>, RelDataType, List<Window.Group>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,java.util.List,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType,java.util.List)"},{"p":"org.apache.calcite.rel.core","c":"Window","l":"Window(RelOptCluster, RelTraitSet, RelNode, List<RexLiteral>, RelDataType, List<Window.Group>)","u":"%3Cinit%3E(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType,java.util.List)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"windowDeclListNewline()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"windowedAggregateIllegalInClause(String)","u":"windowedAggregateIllegalInClause(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"windowFolding()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"windowHasNegativeSize()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"windowInHavingNotAllowed()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"windowNameMustBeSimple()"},{"p":"org.apache.calcite.sql.validate","c":"SelectScope","l":"windowNames"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"windowNewline()"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"windowNotFound(String)","u":"windowNotFound(java.lang.String)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.WindowReduceExpressionsRule","l":"WindowReduceExpressionsRule(Class<? extends Window>, boolean, RelBuilderFactory)","u":"%3Cinit%3E(java.lang.Class,boolean,org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.WindowReduceExpressionsRule","l":"WindowReduceExpressionsRule(ReduceExpressionsRule.WindowReduceExpressionsRule.WindowReduceExpressionsRuleConfig)","u":"%3Cinit%3E(org.apache.calcite.rel.rules.ReduceExpressionsRule.WindowReduceExpressionsRule.WindowReduceExpressionsRuleConfig)"},{"p":"org.apache.calcite.rel.rel2sql","c":"SqlImplementor","l":"windowTableFunctionScanContext(SqlNode, List<SqlNode>)","u":"windowTableFunctionScanContext(org.apache.calcite.sql.SqlNode,java.util.List)"},{"p":"org.apache.calcite.test","c":"SqlValidatorTestCase","l":"winExp(String)","u":"winExp(java.lang.String)"},{"p":"org.apache.calcite.test","c":"SqlValidatorTestCase","l":"winExp2(String)","u":"winExp2(java.lang.String)"},{"p":"org.apache.calcite.test","c":"SqlValidatorTestCase","l":"winSql(String)","u":"winSql(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"WITH"},{"p":"org.apache.calcite.sql","c":"SqlWriter.FrameTypeEnum","l":"WITH"},{"p":"org.apache.calcite.sql","c":"SqlWriter.FrameTypeEnum","l":"WITH_BODY"},{"p":"org.apache.calcite.sql","c":"SqlJsonQueryWrapperBehavior","l":"WITH_CONDITIONAL_ARRAY"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"WITH_ITEM"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"WITH_ITEM_TABLE_REF"},{"p":"org.apache.calcite.sql","c":"SqlJsonQueryWrapperBehavior","l":"WITH_UNCONDITIONAL_ARRAY"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertThat","l":"with(CalciteAssert.Config)","u":"with(org.apache.calcite.test.CalciteAssert.Config)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertThat","l":"with(CalciteAssert.ConnectionPostProcessor)","u":"with(org.apache.calcite.test.CalciteAssert.ConnectionPostProcessor)"},{"p":"org.apache.calcite.test","c":"ConnectionFactory","l":"with(CalciteAssert.ConnectionPostProcessor)","u":"with(org.apache.calcite.test.CalciteAssert.ConnectionPostProcessor)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertThat","l":"with(CalciteAssert.SchemaSpec...)","u":"with(org.apache.calcite.test.CalciteAssert.SchemaSpec...)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertThat","l":"with(ConnectionFactory)","u":"with(org.apache.calcite.test.ConnectionFactory)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertThat","l":"with(ConnectionProperty, Object)","u":"with(org.apache.calcite.avatica.ConnectionProperty,java.lang.Object)"},{"p":"org.apache.calcite.test","c":"ConnectionFactory","l":"with(ConnectionProperty, Object)","u":"with(org.apache.calcite.avatica.ConnectionProperty,java.lang.Object)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertThat","l":"with(Lex)","u":"with(org.apache.calcite.config.Lex)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertThat","l":"with(Map<String, String>)","u":"with(java.util.Map)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"with(RelNode, Function<RelBuilder, E>)","u":"with(org.apache.calcite.rel.RelNode,java.util.function.Function)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertThat","l":"with(SqlConformanceEnum)","u":"with(org.apache.calcite.sql.validate.SqlConformanceEnum)"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonArrayAggAggFunction","l":"with(SqlJsonConstructorNullClause)","u":"with(org.apache.calcite.sql.SqlJsonConstructorNullClause)"},{"p":"org.apache.calcite.sql.fun","c":"SqlJsonObjectAggAggFunction","l":"with(SqlJsonConstructorNullClause)","u":"with(org.apache.calcite.sql.SqlJsonConstructorNullClause)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertThat","l":"with(String, Object)","u":"with(java.lang.String,java.lang.Object)"},{"p":"org.apache.calcite.test","c":"ConnectionFactory","l":"with(String, Object)","u":"with(java.lang.String,java.lang.Object)"},{"p":"org.apache.calcite.materialize","c":"Lattice.SqlWriter","l":"with(StringBuilder)","u":"with(java.lang.StringBuilder)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Config","l":"withAddJsonTypeOperatorEnabled(boolean)"},{"p":"org.apache.calcite.test","c":"RelOptFixture","l":"withAfter(BiFunction<RelOptFixture, RelNode, RelNode>)","u":"withAfter(java.util.function.BiFunction)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewAggregateRule.Config","l":"withAggregateProjectPullUpConstantsRule(RelOptRule)","u":"withAggregateProjectPullUpConstantsRule(org.apache.calcite.plan.RelOptRule)"},{"p":"org.apache.calcite.tools","c":"RelBuilder.Config","l":"withAggregateUnique(boolean)"},{"p":"org.apache.calcite.rel.rules","c":"JoinAssociateRule.Config","l":"withAllowAlwaysTrueCondition(boolean)"},{"p":"org.apache.calcite.rel.rules","c":"JoinCommuteRule.Config","l":"withAllowAlwaysTrueCondition(boolean)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateJoinTransposeRule.Config","l":"withAllowFunctions(boolean)"},{"p":"org.apache.calcite.sql.fun","c":"SqlBasicAggFunction","l":"withAllowsFraming(boolean)"},{"p":"org.apache.calcite.sql.fun","c":"SqlBasicAggFunction","l":"withAllowsNullTreatment(boolean)"},{"p":"org.apache.calcite.sql.fun","c":"SqlBasicAggFunction","l":"withAllowsSeparator(boolean)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"withAlwaysUseParentheses(boolean)"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"withApproximate(boolean)"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"withArgList(List<Integer>)","u":"withArgList(java.util.List)"},{"p":"org.apache.calcite.adapter.enumerable","c":"EnumerableBatchNestedLoopJoinRule.Config","l":"withBatchSize(int)"},{"p":"org.apache.calcite.test","c":"RelOptFixture","l":"withBefore(BiFunction<RelOptFixture, RelNode, RelNode>)","u":"withBefore(java.util.function.BiFunction)"},{"p":"org.apache.calcite.rel.rules","c":"FilterProjectTransposeRule.Config","l":"withBloat(int)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectMergeRule.Config","l":"withBloat(int)"},{"p":"org.apache.calcite.tools","c":"RelBuilder.Config","l":"withBloat(int)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"withBrokenTestsEnabled(boolean)"},{"p":"org.apache.calcite.sql.fun","c":"SqlBasicOperator","l":"withCallFactory(SqlCallFactory)","u":"withCallFactory(org.apache.calcite.sql.fun.SqlCallFactory)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator.Config","l":"withCallRewrite(boolean)"},{"p":"org.apache.calcite.runtime","c":"PairList","l":"withCapacity(int)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"withCaseClausesOnNewLines(boolean)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser.Config","l":"withCaseSensitive(boolean)"},{"p":"org.apache.calcite.sql","c":"SqlDialect.Context","l":"withCaseSensitive(boolean)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"withCaseSensitive(boolean)"},{"p":"org.apache.calcite.sql.validate","c":"SqlNameMatchers","l":"withCaseSensitive(boolean)"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"withCaseSensitive(boolean)"},{"p":"org.apache.calcite.sql.test","c":"SqlTestFactory","l":"withCatalogReader(SqlTestFactory.CatalogReaderFactory)","u":"withCatalogReader(org.apache.calcite.sql.test.SqlTestFactory.CatalogReaderFactory)"},{"p":"org.apache.calcite.test","c":"SqlToRelFixture","l":"withCatalogReader(SqlTestFactory.CatalogReaderFactory)","u":"withCatalogReader(org.apache.calcite.sql.test.SqlTestFactory.CatalogReaderFactory)"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"withCatalogReader(SqlTestFactory.CatalogReaderFactory)","u":"withCatalogReader(org.apache.calcite.sql.test.SqlTestFactory.CatalogReaderFactory)"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture","l":"withCatalogReaderFactory(SqlTestFactory.CatalogReaderFactory)","u":"withCatalogReaderFactory(org.apache.calcite.sql.test.SqlTestFactory.CatalogReaderFactory)"},{"p":"org.apache.calcite.test","c":"RelOptFixture","l":"withCatalogReaderFactory(SqlTestFactory.CatalogReaderFactory)","u":"withCatalogReaderFactory(org.apache.calcite.sql.test.SqlTestFactory.CatalogReaderFactory)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser.Config","l":"withCharLiteralStyles(Iterable<CharLiteralStyle>)","u":"withCharLiteralStyles(java.lang.Iterable)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"withClauseEndsLine(boolean)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"withClauseStartsLine(boolean)"},{"p":"org.apache.calcite.sql.test","c":"SqlTestFactory","l":"withCluster(UnaryOperator<RelOptCluster>)","u":"withCluster(java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture","l":"withCluster(UnaryOperator<RelOptCluster>)","u":"withCluster(java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.rel.rules","c":"CoerceInputsRule.Config","l":"withCoerceNames(boolean)"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"withCollation(RelCollation)","u":"withCollation(org.apache.calcite.rel.RelCollation)"},{"p":"org.apache.calcite.rel","c":"RelRoot","l":"withCollation(RelCollation)","u":"withCollation(org.apache.calcite.rel.RelCollation)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator.Config","l":"withColumnReferenceExpansion(boolean)"},{"p":"org.apache.calcite.plan","c":"Contexts","l":"withConfig(CalciteConnectionConfig)","u":"withConfig(org.apache.calcite.config.CalciteConnectionConfig)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserFixture","l":"withConfig(UnaryOperator<SqlParser.Config>)","u":"withConfig(java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture","l":"withConfig(UnaryOperator<SqlToRelConverter.Config>)","u":"withConfig(java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.test","c":"RelOptFixture","l":"withConfig(UnaryOperator<SqlToRelConverter.Config>)","u":"withConfig(java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.test","c":"SqlToRelFixture","l":"withConfig(UnaryOperator<SqlToRelConverter.Config>)","u":"withConfig(java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser.Config","l":"withConformance(SqlConformance)","u":"withConformance(org.apache.calcite.sql.validate.SqlConformance)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserFixture","l":"withConformance(SqlConformance)","u":"withConformance(org.apache.calcite.sql.validate.SqlConformance)"},{"p":"org.apache.calcite.sql","c":"SqlDialect.Context","l":"withConformance(SqlConformance)","u":"withConformance(org.apache.calcite.sql.validate.SqlConformance)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"withConformance(SqlConformance)","u":"withConformance(org.apache.calcite.sql.validate.SqlConformance)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator.Config","l":"withConformance(SqlConformance)","u":"withConformance(org.apache.calcite.sql.validate.SqlConformance)"},{"p":"org.apache.calcite.test","c":"RelOptFixture","l":"withConformance(SqlConformance)","u":"withConformance(org.apache.calcite.sql.validate.SqlConformance)"},{"p":"org.apache.calcite.test","c":"SqlToRelFixture","l":"withConformance(SqlConformance)","u":"withConformance(org.apache.calcite.sql.validate.SqlConformance)"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"withConformance(SqlConformance)","u":"withConformance(org.apache.calcite.sql.validate.SqlConformance)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertQuery","l":"withConnection(Consumer<Connection>)","u":"withConnection(java.util.function.Consumer)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"withConnectionFactory(UnaryOperator<ConnectionFactory>)","u":"withConnectionFactory(java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.sql.test","c":"SqlTestFactory","l":"withConnectionFactory(UnaryOperator<ConnectionFactory>)","u":"withConnectionFactory(java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.rel.rules","c":"CoerceInputsRule.Config","l":"withConsumerRelClass(Class<? extends RelNode>)","u":"withConsumerRelClass(java.lang.Class)"},{"p":"org.apache.calcite.test","c":"RelOptFixture","l":"withContext(UnaryOperator<Context>)","u":"withContext(java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.rel.convert","c":"ConverterRule.Config","l":"withConversion(Class<? extends RelNode>, RelTrait, RelTrait, String)","u":"withConversion(java.lang.Class,org.apache.calcite.plan.RelTrait,org.apache.calcite.plan.RelTrait,java.lang.String)"},{"p":"org.apache.calcite.rel.convert","c":"ConverterRule.Config","l":"withConversion(Class<R>, Predicate<? super R>, RelTrait, RelTrait, String)","u":"withConversion(java.lang.Class,java.util.function.Predicate,org.apache.calcite.plan.RelTrait,org.apache.calcite.plan.RelTrait,java.lang.String)"},{"p":"org.apache.calcite.tools","c":"RelBuilder.Config","l":"withConvertCorrelateToJoin(boolean)"},{"p":"org.apache.calcite.rel.convert","c":"TraitMatchingRule.Config","l":"withConverterRule(ConverterRule)","u":"withConverterRule(org.apache.calcite.rel.convert.ConverterRule)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserFixture","l":"withConvertToLinux(boolean)"},{"p":"org.apache.calcite.rel.rules","c":"FilterProjectTransposeRule.Config","l":"withCopyFilter(boolean)"},{"p":"org.apache.calcite.rel.rules","c":"FilterProjectTransposeRule.Config","l":"withCopyProject(boolean)"},{"p":"org.apache.calcite.rel.rules","c":"LoptOptimizeJoinRule.Config","l":"withCostFunction(LoptOptimizeJoinRule.CostFunction)","u":"withCostFunction(org.apache.calcite.rel.rules.LoptOptimizeJoinRule.CostFunction)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Config","l":"withCreateValuesRel(boolean)"},{"p":"org.apache.calcite.sql","c":"SqlDialect.Context","l":"withDatabaseMajorVersion(int)"},{"p":"org.apache.calcite.sql","c":"SqlDialect.Context","l":"withDatabaseMinorVersion(int)"},{"p":"org.apache.calcite.sql","c":"SqlDialect.Context","l":"withDatabaseProduct(SqlDialect.DatabaseProduct)","u":"withDatabaseProduct(org.apache.calcite.sql.SqlDialect.DatabaseProduct)"},{"p":"org.apache.calcite.sql","c":"SqlDialect.Context","l":"withDatabaseProductName(String)","u":"withDatabaseProductName(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlDialect.Context","l":"withDatabaseVersion(String)","u":"withDatabaseVersion(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlDialect.Context","l":"withDataTypeSystem(RelDataTypeSystem)","u":"withDataTypeSystem(org.apache.calcite.rel.type.RelDataTypeSystem)"},{"p":"org.apache.calcite.test","c":"RelOptFixture","l":"withDecorrelate(boolean)"},{"p":"org.apache.calcite.test","c":"SqlToRelFixture","l":"withDecorrelate(boolean)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Config","l":"withDecorrelationEnabled(boolean)"},{"p":"org.apache.calcite.tools","c":"RelBuilder.Config","l":"withDedupAggregateCalls(boolean)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator.Config","l":"withDefaultNullCollation(NullCollation)","u":"withDefaultNullCollation(org.apache.calcite.config.NullCollation)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertThat","l":"withDefaultSchema(String)","u":"withDefaultSchema(java.lang.String)"},{"p":"org.apache.calcite.plan","c":"RelRule.Config","l":"withDescription(String)","u":"withDescription(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlBasicFunction","l":"withDeterministic(boolean)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"withDialect(SqlDialect)","u":"withDialect(org.apache.calcite.sql.SqlDialect)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserFixture","l":"withDialect(SqlDialect)","u":"withDialect(org.apache.calcite.sql.SqlDialect)"},{"p":"org.apache.calcite.test","c":"RelOptFixture","l":"withDiffRepos(DiffRepository)","u":"withDiffRepos(org.apache.calcite.test.DiffRepository)"},{"p":"org.apache.calcite.test","c":"SqlToRelFixture","l":"withDiffRepos(DiffRepository)","u":"withDiffRepos(org.apache.calcite.test.DiffRepository)"},{"p":"org.apache.calcite.rel","c":"RelFieldCollation","l":"withDirection(RelFieldCollation.Direction)","u":"withDirection(org.apache.calcite.rel.RelFieldCollation.Direction)"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"withDistinct(boolean)"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"withDistinctKeys(ImmutableBitSet)","u":"withDistinctKeys(org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.sql","c":"SqlBasicFunction","l":"withDynamic(boolean)"},{"p":"org.apache.calcite.test","c":"RelOptFixture","l":"withDynamicTable()"},{"p":"org.apache.calcite.test","c":"SqlToRelFixture","l":"withDynamicTable()"},{"p":"org.apache.calcite.runtime","c":"SqlFunctions.DateFormatFunction","l":"withElements(FormatModel, String, Consumer<List<FormatElement>>)","u":"withElements(org.apache.calcite.util.format.FormatModel,java.lang.String,java.util.function.Consumer)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator.Config","l":"withEmbeddedQuery(boolean)"},{"p":"org.apache.calcite.rel.type","c":"TimeFrameSet.Builder","l":"withEpoch(TimestampString)","u":"withEpoch(org.apache.calcite.util.TimestampString)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.JsonValueContext","l":"withException(Exception)","u":"withException(java.lang.Exception)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Config","l":"withExpand(boolean)"},{"p":"org.apache.calcite.test","c":"RelOptFixture","l":"withExpand(boolean)"},{"p":"org.apache.calcite.test","c":"SqlToRelFixture","l":"withExpand(boolean)"},{"p":"org.apache.calcite.sql","c":"SqlBasicCall","l":"withExpanded(boolean)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Config","l":"withExplain(boolean)"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"withExpr(String)","u":"withExpr(java.lang.String)"},{"p":"org.apache.calcite.adapter.druid","c":"VirtualColumn.Builder","l":"withExpression(String)","u":"withExpression(java.lang.String)"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"withExtendedCatalog()"},{"p":"org.apache.calcite.test","c":"SqlToRelFixture","l":"withExtendedTester()"},{"p":"org.apache.calcite.rel.rules","c":"AggregateReduceFunctionsRule.Config","l":"withExtraCondition(Predicate<AggregateCall>)","u":"withExtraCondition(java.util.function.Predicate)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserFixture","l":"withFactory(UnaryOperator<SqlTestFactory>)","u":"withFactory(java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"withFactory(UnaryOperator<SqlTestFactory>)","u":"withFactory(java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture","l":"withFactory(UnaryOperator<SqlTestFactory>)","u":"withFactory(java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.test","c":"RelOptFixture","l":"withFactory(UnaryOperator<SqlTestFactory>)","u":"withFactory(java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.test","c":"SqlToRelFixture","l":"withFactory(UnaryOperator<SqlTestFactory>)","u":"withFactory(java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"withFactory(UnaryOperator<SqlTestFactory>)","u":"withFactory(java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule.Config","l":"withFastBailOut(boolean)"},{"p":"org.apache.calcite.rel","c":"RelFieldCollation","l":"withFieldIndex(int)"},{"p":"org.apache.calcite.adapter.innodb","c":"IndexCondition","l":"withFieldNames(List<String>)","u":"withFieldNames(java.util.List)"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"withFilter(int)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewAggregateRule.Config","l":"withFilterAggregateTransposeRule(RelOptRule)","u":"withFilterAggregateTransposeRule(org.apache.calcite.plan.RelOptRule)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewAggregateRule.Config","l":"withFilterProjectTransposeRule(RelOptRule)","u":"withFilterProjectTransposeRule(org.apache.calcite.plan.RelOptRule)"},{"p":"org.apache.calcite.sql2rel","c":"RelDecorrelator.AdjustProjectForCountAggregateRule.AdjustProjectForCountAggregateRuleConfig","l":"withFlavor(boolean)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"withFoldLength(int)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectMergeRule.Config","l":"withForce(boolean)"},{"p":"org.apache.calcite.util","c":"TimestampString","l":"withFraction(String)","u":"withFraction(java.lang.String)"},{"p":"org.apache.calcite.util","c":"TimestampWithTimeZoneString","l":"withFraction(String)","u":"withFraction(java.lang.String)"},{"p":"org.apache.calcite.util","c":"TimeString","l":"withFraction(String)","u":"withFraction(java.lang.String)"},{"p":"org.apache.calcite.util","c":"TimeWithTimeZoneString","l":"withFraction(String)","u":"withFraction(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"withFromFolding(SqlWriterConfig.LineFolding)","u":"withFromFolding(org.apache.calcite.sql.SqlWriterConfig.LineFolding)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateReduceFunctionsRule.Config","l":"withFunctionsToReduce(Iterable<SqlKind>)","u":"withFunctionsToReduce(java.lang.Iterable)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateReduceFunctionsRule.Config","l":"withFunctionsToReduce(Set<SqlKind>)","u":"withFunctionsToReduce(java.util.Set)"},{"p":"org.apache.calcite.sql.fun","c":"SqlBasicAggFunction","l":"withFunctionType(SqlFunctionCategory)","u":"withFunctionType(org.apache.calcite.sql.SqlFunctionCategory)"},{"p":"org.apache.calcite.sql","c":"SqlBasicFunction","l":"withFunctionType(SqlFunctionCategory)","u":"withFunctionType(org.apache.calcite.sql.SqlFunctionCategory)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule.Config","l":"withGenerateUnionRewriting(boolean)"},{"p":"org.apache.calcite.sql.type","c":"CompositeOperandTypeChecker","l":"withGenerator(BiFunction<SqlOperator, String, String>)","u":"withGenerator(java.util.function.BiFunction)"},{"p":"org.apache.calcite.sql.type","c":"SqlOperandTypeChecker","l":"withGenerator(BiFunction<SqlOperator, String, String>)","u":"withGenerator(java.util.function.BiFunction)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"withGroupByFolding(SqlWriterConfig.LineFolding)","u":"withGroupByFolding(org.apache.calcite.sql.SqlWriterConfig.LineFolding)"},{"p":"org.apache.calcite.sql.fun","c":"SqlBasicAggFunction","l":"withGroupOrder(Optionality)","u":"withGroupOrder(org.apache.calcite.util.Optionality)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"withHavingFolding(SqlWriterConfig.LineFolding)","u":"withHavingFolding(org.apache.calcite.sql.SqlWriterConfig.LineFolding)"},{"p":"org.apache.calcite.adapter.jdbc","c":"JdbcTableScan","l":"withHints(List<RelHint>)","u":"withHints(java.util.List)"},{"p":"org.apache.calcite.rel.hint","c":"Hintable","l":"withHints(List<RelHint>)","u":"withHints(java.util.List)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalAggregate","l":"withHints(List<RelHint>)","u":"withHints(java.util.List)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalAsofJoin","l":"withHints(List<RelHint>)","u":"withHints(java.util.List)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalCalc","l":"withHints(List<RelHint>)","u":"withHints(java.util.List)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalCorrelate","l":"withHints(List<RelHint>)","u":"withHints(java.util.List)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalFilter","l":"withHints(List<RelHint>)","u":"withHints(java.util.List)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalIntersect","l":"withHints(List<RelHint>)","u":"withHints(java.util.List)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalJoin","l":"withHints(List<RelHint>)","u":"withHints(java.util.List)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalMinus","l":"withHints(List<RelHint>)","u":"withHints(java.util.List)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalProject","l":"withHints(List<RelHint>)","u":"withHints(java.util.List)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalSnapshot","l":"withHints(List<RelHint>)","u":"withHints(java.util.List)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalSort","l":"withHints(List<RelHint>)","u":"withHints(java.util.List)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalTableFunctionScan","l":"withHints(List<RelHint>)","u":"withHints(java.util.List)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalTableScan","l":"withHints(List<RelHint>)","u":"withHints(java.util.List)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalUnion","l":"withHints(List<RelHint>)","u":"withHints(java.util.List)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalValues","l":"withHints(List<RelHint>)","u":"withHints(java.util.List)"},{"p":"org.apache.calcite.rel.logical","c":"LogicalWindow","l":"withHints(List<RelHint>)","u":"withHints(java.util.List)"},{"p":"org.apache.calcite.rel","c":"RelRoot","l":"withHints(List<RelHint>)","u":"withHints(java.util.List)"},{"p":"org.apache.calcite.test","c":"SqlToRelTestBase.CustomCorrelate","l":"withHints(List<RelHint>)","u":"withHints(java.util.List)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Config","l":"withHintStrategyTable(HintStrategyTable)","u":"withHintStrategyTable(org.apache.calcite.rel.hint.HintStrategyTable)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertQuery","l":"withHook(Hook, Consumer<T>)","u":"withHook(org.apache.calcite.runtime.Hook,java.util.function.Consumer)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertThat","l":"withHook(Hook, Consumer<T>)","u":"withHook(org.apache.calcite.runtime.Hook,java.util.function.Consumer)"},{"p":"org.apache.calcite.test","c":"RelOptFixture","l":"withHook(Hook, Consumer<T>)","u":"withHook(org.apache.calcite.runtime.Hook,java.util.function.Consumer)"},{"p":"org.apache.calcite.adapter.splunk","c":"SplunkPushDownRule.Config","l":"withId(String)","u":"withId(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlDialect.Context","l":"withIdentifierEscapedQuoteString(String)","u":"withIdentifierEscapedQuoteString(java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator.Config","l":"withIdentifierExpansion(boolean)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser.Config","l":"withIdentifierMaxLength(int)"},{"p":"org.apache.calcite.sql","c":"SqlDialect.Context","l":"withIdentifierQuoteString(String)","u":"withIdentifierQuoteString(java.lang.String)"},{"p":"org.apache.calcite.rel.externalize","c":"RelWriterImpl","l":"withIdPrefix"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"withIgnoreNulls(boolean)"},{"p":"org.apache.calcite.sql","c":"SqlExplain","l":"withImplementation()"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"WITHIN_DISTINCT"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"WITHIN_DISTINCT"},{"p":"org.apache.calcite.sql","c":"SqlKind","l":"WITHIN_GROUP"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"WITHIN_GROUP"},{"p":"org.apache.calcite.test","c":"Matchers","l":"within(T, double)","u":"within(T,double)"},{"p":"org.apache.calcite.rel.rules","c":"JoinProjectTransposeRule.Config","l":"withIncludeOuter(boolean)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"withIndentation(int)"},{"p":"org.apache.calcite.adapter.innodb","c":"IndexCondition","l":"withIndexColumnNames(List<String>)","u":"withIndexColumnNames(java.util.List)"},{"p":"org.apache.calcite.adapter.innodb","c":"IndexCondition","l":"withIndexName(String)","u":"withIndexName(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"withinDistinctNotAllowed(String)","u":"withinDistinctNotAllowed(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"withinGroupClauseIllegalInAggregate(String)","u":"withinGroupClauseIllegalInAggregate(java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"withinGroupNotAllowed(String)","u":"withinGroupNotAllowed(java.lang.String)"},{"p":"org.apache.calcite.util","c":"TryThreadLocal","l":"withInitial(Supplier<? extends S>)","u":"withInitial(java.util.function.Supplier)"},{"p":"org.apache.calcite.rel.externalize","c":"RelJson","l":"withInputTranslator(RelJson.InputTranslator)","u":"withInputTranslator(org.apache.calcite.rel.externalize.RelJson.InputTranslator)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Config","l":"withInSubQueryThreshold(int)"},{"p":"org.apache.calcite.test","c":"RelOptFixture","l":"withInSubQueryThreshold(int)"},{"p":"org.apache.calcite.rel.convert","c":"ConverterRule.Config","l":"withInTrait(RelTrait)","u":"withInTrait(org.apache.calcite.plan.RelTrait)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.JsonPathContext","l":"withJavaObj(JsonFunctions.PathMode, Object)","u":"withJavaObj(org.apache.calcite.runtime.JsonFunctions.PathMode,java.lang.Object)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.JsonValueContext","l":"withJavaObj(Object)","u":"withJavaObj(java.lang.Object)"},{"p":"org.apache.calcite.sql","c":"SqlDialect.Context","l":"withJethroInfo(JethroDataSqlDialect.JethroInfo)","u":"withJethroInfo(org.apache.calcite.sql.dialect.JethroDataSqlDialect.JethroInfo)"},{"p":"org.apache.calcite.rel.externalize","c":"RelJson","l":"withJsonBuilder(JsonBuilder)","u":"withJsonBuilder(org.apache.calcite.util.JsonBuilder)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"withKeywordsLowerCase(boolean)"},{"p":"org.apache.calcite.rel","c":"RelRoot","l":"withKind(SqlKind)","u":"withKind(org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.sql","c":"SqlBasicFunction","l":"withKind(SqlKind)","u":"withKind(org.apache.calcite.sql.SqlKind)"},{"p":"org.apache.calcite.test","c":"RelOptFixture","l":"withLateDecorrelate(boolean)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"withLeadingComma(boolean)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"withLenientOperatorLookup(boolean)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator.Config","l":"withLenientOperatorLookup(boolean)"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"withLenientOperatorLookup(boolean)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser.Config","l":"withLex(Lex)","u":"withLex(org.apache.calcite.config.Lex)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"withLex(Lex)","u":"withLex(org.apache.calcite.config.Lex)"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"withLex(Lex)","u":"withLex(org.apache.calcite.config.Lex)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"withLibraries(SqlLibrary...)","u":"withLibraries(org.apache.calcite.sql.fun.SqlLibrary...)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"withLibrary(SqlLibrary)","u":"withLibrary(org.apache.calcite.sql.fun.SqlLibrary)"},{"p":"org.apache.calcite.rel.externalize","c":"RelJson","l":"withLibraryOperatorTable()"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"withLineFolding(SqlWriterConfig.LineFolding)","u":"withLineFolding(org.apache.calcite.sql.SqlWriterConfig.LineFolding)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"withLineLength(int)"},{"p":"org.apache.calcite.sql","c":"SqlWith","l":"withList"},{"p":"org.apache.calcite.sql","c":"SqlDialect.Context","l":"withLiteralEscapedQuoteString(String)","u":"withLiteralEscapedQuoteString(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlDialect.Context","l":"withLiteralQuoteString(String)","u":"withLiteralQuoteString(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"withMatchFolding(SqlWriterConfig.LineFolding)","u":"withMatchFolding(org.apache.calcite.sql.SqlWriterConfig.LineFolding)"},{"p":"org.apache.calcite.rel.rules","c":"ExchangeRemoveConstantKeysRule.Config","l":"withMatchHandler(RelRule.MatchHandler<ExchangeRemoveConstantKeysRule>)","u":"withMatchHandler(org.apache.calcite.plan.RelRule.MatchHandler)"},{"p":"org.apache.calcite.rel.rules","c":"SortMergeRule.Config","l":"withMatchHandler(RelRule.MatchHandler<SortMergeRule>)","u":"withMatchHandler(org.apache.calcite.plan.RelRule.MatchHandler)"},{"p":"org.apache.calcite.rel.rules","c":"SubQueryRemoveRule.Config","l":"withMatchHandler(RelRule.MatchHandler<SubQueryRemoveRule>)","u":"withMatchHandler(org.apache.calcite.plan.RelRule.MatchHandler)"},{"p":"org.apache.calcite.rel.rules","c":"ValuesReduceRule.Config","l":"withMatchHandler(RelRule.MatchHandler<ValuesReduceRule>)","u":"withMatchHandler(org.apache.calcite.plan.RelRule.MatchHandler)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.Config","l":"withMatchNullability(boolean)"},{"p":"org.apache.calcite.rel.rules","c":"SortUnionTransposeRule.Config","l":"withMatchNullFetch(boolean)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertThat","l":"withMaterializations(String, boolean, String...)","u":"withMaterializations(java.lang.String,boolean,java.lang.String...)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertThat","l":"withMaterializations(String, Function<JsonBuilder, List<Object>>)","u":"withMaterializations(java.lang.String,java.util.function.Function)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertThat","l":"withMaterializations(String, String...)","u":"withMaterializations(java.lang.String,java.lang.String...)"},{"p":"org.apache.calcite.test","c":"CustomTypeSystems","l":"withMaxPrecision(RelDataTypeSystem, Function<SqlTypeName, Integer>)","u":"withMaxPrecision(org.apache.calcite.rel.type.RelDataTypeSystem,java.util.function.Function)"},{"p":"org.apache.calcite.test","c":"CustomTypeSystems","l":"withMaxScale(RelDataTypeSystem, Function<SqlTypeName, Integer>)","u":"withMaxScale(org.apache.calcite.rel.type.RelDataTypeSystem,java.util.function.Function)"},{"p":"org.apache.calcite.util","c":"Litmus","l":"withMessageArgs(String, Object...)","u":"withMessageArgs(java.lang.String,java.lang.Object...)"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture","l":"withMetadataConfig(RelMetadataFixture.MetadataConfig)","u":"withMetadataConfig(org.apache.calcite.test.RelMetadataFixture.MetadataConfig)"},{"p":"org.apache.calcite.util","c":"TimestampString","l":"withMillis(int)"},{"p":"org.apache.calcite.util","c":"TimestampWithTimeZoneString","l":"withMillis(int)"},{"p":"org.apache.calcite.util","c":"TimeString","l":"withMillis(int)"},{"p":"org.apache.calcite.util","c":"TimeWithTimeZoneString","l":"withMillis(int)"},{"p":"org.apache.calcite.profile","c":"ProfilerImpl.Builder","l":"withMinimumSurprise(double)"},{"p":"org.apache.calcite.test","c":"CustomTypeSystems","l":"withMinScale(RelDataTypeSystem, Function<SqlTypeName, Integer>)","u":"withMinScale(org.apache.calcite.rel.type.RelDataTypeSystem,java.util.function.Function)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertThat","l":"withModel(String)","u":"withModel(java.lang.String)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertThat","l":"withModel(URL)","u":"withModel(java.net.URL)"},{"p":"org.apache.calcite.sql","c":"SqlBasicFunction","l":"withMonotonicityInference(Function<SqlOperatorBinding, SqlMonotonicity>)","u":"withMonotonicityInference(java.util.function.Function)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator.Config","l":"withNakedMeasures(boolean)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator.Config","l":"withNakedMeasuresInAggregateQuery(boolean)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator.Config","l":"withNakedMeasuresInNonAggregateQuery(boolean)"},{"p":"org.apache.calcite.rel.core","c":"AggregateCall","l":"withName(String)","u":"withName(java.lang.String)"},{"p":"org.apache.calcite.adapter.druid","c":"VirtualColumn.Builder","l":"withName(String)","u":"withName(java.lang.String)"},{"p":"org.apache.calcite.sql.fun","c":"SqlBasicAggFunction","l":"withName(String)","u":"withName(java.lang.String)"},{"p":"org.apache.calcite.sql.fun","c":"SqlFloorFunction","l":"withName(String)","u":"withName(java.lang.String)"},{"p":"org.apache.calcite.sql","c":"SqlBasicFunction","l":"withName(String)","u":"withName(java.lang.String)"},{"p":"org.apache.calcite.util","c":"TimestampString","l":"withNanos(int)"},{"p":"org.apache.calcite.util","c":"TimestampWithTimeZoneString","l":"withNanos(int)"},{"p":"org.apache.calcite.util","c":"TimeString","l":"withNanos(int)"},{"p":"org.apache.calcite.util","c":"TimeWithTimeZoneString","l":"withNanos(int)"},{"p":"org.apache.calcite.sql","c":"SqlDataTypeSpec","l":"withNullable(Boolean)","u":"withNullable(java.lang.Boolean)"},{"p":"org.apache.calcite.sql","c":"SqlDataTypeSpec","l":"withNullable(Boolean, SqlParserPos)","u":"withNullable(java.lang.Boolean,org.apache.calcite.sql.parser.SqlParserPos)"},{"p":"org.apache.calcite.sql","c":"SqlDialect.Context","l":"withNullCollation(NullCollation)","u":"withNullCollation(org.apache.calcite.config.NullCollation)"},{"p":"org.apache.calcite.rel","c":"RelFieldCollation","l":"withNullDirection(RelFieldCollation.NullDirection)","u":"withNullDirection(org.apache.calcite.rel.RelFieldCollation.NullDirection)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateReduceFunctionsRule.Config","l":"withOperandFor(Class<? extends Aggregate>)","u":"withOperandFor(java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateRemoveRule.Config","l":"withOperandFor(Class<? extends Aggregate>)","u":"withOperandFor(java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateFilterTransposeRule.Config","l":"withOperandFor(Class<? extends Aggregate>, Class<? extends Filter>)","u":"withOperandFor(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateFilterTransposeRule.Config","l":"withOperandFor(Class<? extends Aggregate>, Class<? extends Filter>, Class<? extends RelNode>)","u":"withOperandFor(java.lang.Class,java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateJoinJoinRemoveRule.Config","l":"withOperandFor(Class<? extends Aggregate>, Class<? extends Join>)","u":"withOperandFor(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateJoinRemoveRule.Config","l":"withOperandFor(Class<? extends Aggregate>, Class<? extends Join>)","u":"withOperandFor(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateJoinTransposeRule.Config","l":"withOperandFor(Class<? extends Aggregate>, Class<? extends Join>, boolean)","u":"withOperandFor(java.lang.Class,java.lang.Class,boolean)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateProjectConstantToDummyJoinRule.Config","l":"withOperandFor(Class<? extends Aggregate>, Class<? extends Project>)","u":"withOperandFor(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateProjectMergeRule.Config","l":"withOperandFor(Class<? extends Aggregate>, Class<? extends Project>)","u":"withOperandFor(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateProjectStarTableRule.Config","l":"withOperandFor(Class<? extends Aggregate>, Class<? extends Project>, Class<StarTable.StarTableScan>)","u":"withOperandFor(java.lang.Class,java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateExtractProjectRule.Config","l":"withOperandFor(Class<? extends Aggregate>, Class<? extends RelNode>)","u":"withOperandFor(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateProjectPullUpConstantsRule.Config","l":"withOperandFor(Class<? extends Aggregate>, Class<? extends RelNode>)","u":"withOperandFor(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateUnionTransposeRule.Config","l":"withOperandFor(Class<? extends Aggregate>, Class<? extends Union>)","u":"withOperandFor(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateUnionAggregateRule.Config","l":"withOperandFor(Class<? extends Aggregate>, Class<? extends Union>, Class<? extends RelNode>, Class<? extends RelNode>)","u":"withOperandFor(java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateValuesRule.Config","l":"withOperandFor(Class<? extends Aggregate>, Class<? extends Values>)","u":"withOperandFor(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateStarTableRule.Config","l":"withOperandFor(Class<? extends Aggregate>, Class<StarTable.StarTableScan>)","u":"withOperandFor(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"FilterMergeRule.Config","l":"withOperandFor(Class<? extends Filter>)","u":"withOperandFor(java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"FilterAggregateTransposeRule.Config","l":"withOperandFor(Class<? extends Filter>, Class<? extends Aggregate>)","u":"withOperandFor(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"FilterAggregateTransposeRule.Config","l":"withOperandFor(Class<? extends Filter>, Class<? extends Aggregate>, Class<? extends RelNode>)","u":"withOperandFor(java.lang.Class,java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"FilterCalcMergeRule.Config","l":"withOperandFor(Class<? extends Filter>, Class<? extends Calc>)","u":"withOperandFor(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"FilterCorrelateRule.Config","l":"withOperandFor(Class<? extends Filter>, Class<? extends Correlate>)","u":"withOperandFor(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"FilterMultiJoinMergeRule.Config","l":"withOperandFor(Class<? extends Filter>, Class<? extends MultiJoin>)","u":"withOperandFor(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"FilterProjectTransposeRule.Config","l":"withOperandFor(Class<? extends Filter>, Class<? extends Project>, Class<? extends RelNode>)","u":"withOperandFor(java.lang.Class,java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"MaterializedViewFilterScanRule.Config","l":"withOperandFor(Class<? extends Filter>, Class<? extends TableScan>)","u":"withOperandFor(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"FilterProjectTransposeRule.Config","l":"withOperandFor(Class<? extends Filter>, Predicate<Filter>, Class<? extends Project>, Predicate<Project>)","u":"withOperandFor(java.lang.Class,java.util.function.Predicate,java.lang.Class,java.util.function.Predicate)"},{"p":"org.apache.calcite.rel.rules","c":"IntersectToDistinctRule.Config","l":"withOperandFor(Class<? extends Intersect>)","u":"withOperandFor(java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"JoinAddRedundantSemiJoinRule.Config","l":"withOperandFor(Class<? extends Join>)","u":"withOperandFor(java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"JoinAssociateRule.Config","l":"withOperandFor(Class<? extends Join>)","u":"withOperandFor(java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"JoinCommuteRule.Config","l":"withOperandFor(Class<? extends Join>)","u":"withOperandFor(java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"JoinPushExpressionsRule.Config","l":"withOperandFor(Class<? extends Join>)","u":"withOperandFor(java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"JoinPushThroughJoinRule.Config","l":"withOperandFor(Class<? extends Join>)","u":"withOperandFor(java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"JoinPushTransitivePredicatesRule.Config","l":"withOperandFor(Class<? extends Join>)","u":"withOperandFor(java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"JoinToCorrelateRule.Config","l":"withOperandFor(Class<? extends Join>)","u":"withOperandFor(java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"JoinToMultiJoinRule.Config","l":"withOperandFor(Class<? extends Join>)","u":"withOperandFor(java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinRemoveRule.Config","l":"withOperandFor(Class<? extends Join>)","u":"withOperandFor(java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinFilterTransposeRule.Config","l":"withOperandFor(Class<? extends Join>, Class<? extends Filter>)","u":"withOperandFor(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinJoinTransposeRule.Config","l":"withOperandFor(Class<? extends Join>, Class<? extends Join>)","u":"withOperandFor(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinProjectTransposeRule.Config","l":"withOperandFor(Class<? extends Join>, Class<? extends Project>)","u":"withOperandFor(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"JoinUnionTransposeRule.Config","l":"withOperandFor(Class<? extends Join>, Class<? extends Union>, boolean)","u":"withOperandFor(java.lang.Class,java.lang.Class,boolean)"},{"p":"org.apache.calcite.rel.rules","c":"MinusToDistinctRule.Config","l":"withOperandFor(Class<? extends Minus>)","u":"withOperandFor(java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectMergeRule.Config","l":"withOperandFor(Class<? extends Project>)","u":"withOperandFor(java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectCalcMergeRule.Config","l":"withOperandFor(Class<? extends Project>, Class<? extends Calc>)","u":"withOperandFor(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectCorrelateTransposeRule.Config","l":"withOperandFor(Class<? extends Project>, Class<? extends Correlate>)","u":"withOperandFor(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectFilterTransposeRule.Config","l":"withOperandFor(Class<? extends Project>, Class<? extends Filter>)","u":"withOperandFor(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectFilterTransposeRule.Config","l":"withOperandFor(Class<? extends Project>, Class<? extends Filter>, Class<? extends RelNode>)","u":"withOperandFor(java.lang.Class,java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectJoinJoinRemoveRule.Config","l":"withOperandFor(Class<? extends Project>, Class<? extends Join>)","u":"withOperandFor(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectJoinRemoveRule.Config","l":"withOperandFor(Class<? extends Project>, Class<? extends Join>)","u":"withOperandFor(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectJoinTransposeRule.Config","l":"withOperandFor(Class<? extends Project>, Class<? extends Join>)","u":"withOperandFor(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinRule.ProjectToSemiJoinRule.ProjectToSemiJoinRuleConfig","l":"withOperandFor(Class<? extends Project>, Class<? extends Join>, Class<? extends Aggregate>)","u":"withOperandFor(java.lang.Class,java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectWindowTransposeRule.Config","l":"withOperandFor(Class<? extends Project>, Class<? extends Window>)","u":"withOperandFor(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectMultiJoinMergeRule.Config","l":"withOperandFor(Class<? extends Project>, Class<MultiJoin>)","u":"withOperandFor(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.adapter.splunk","c":"SplunkPushDownRule.Config","l":"withOperandFor(Class<? extends RelNode>)","u":"withOperandFor(java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"CoerceInputsRule.Config","l":"withOperandFor(Class<? extends RelNode>)","u":"withOperandFor(java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.Config","l":"withOperandFor(Class<? extends RelNode>)","u":"withOperandFor(java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"UnionMergeRule.Config","l":"withOperandFor(Class<? extends RelNode>)","u":"withOperandFor(java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"ValuesReduceRule.Config","l":"withOperandFor(Class<? extends RelNode>)","u":"withOperandFor(java.lang.Class)"},{"p":"org.apache.calcite.rel.stream","c":"StreamRules.DeltaAggregateTransposeRule.DeltaAggregateTransposeRuleConfig","l":"withOperandFor(Class<? extends RelNode>)","u":"withOperandFor(java.lang.Class)"},{"p":"org.apache.calcite.rel.stream","c":"StreamRules.DeltaFilterTransposeRule.DeltaFilterTransposeRuleConfig","l":"withOperandFor(Class<? extends RelNode>)","u":"withOperandFor(java.lang.Class)"},{"p":"org.apache.calcite.rel.stream","c":"StreamRules.DeltaProjectTransposeRule.DeltaProjectTransposeRuleConfig","l":"withOperandFor(Class<? extends RelNode>)","u":"withOperandFor(java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"SampleToFilterRule.Config","l":"withOperandFor(Class<? extends Sample>)","u":"withOperandFor(java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"SortJoinCopyRule.Config","l":"withOperandFor(Class<? extends Sort>, Class<? extends Join>)","u":"withOperandFor(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"SortJoinTransposeRule.Config","l":"withOperandFor(Class<? extends Sort>, Class<? extends Join>)","u":"withOperandFor(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"SortProjectTransposeRule.Config","l":"withOperandFor(Class<? extends Sort>, Class<? extends Project>)","u":"withOperandFor(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"SortProjectTransposeRule.Config","l":"withOperandFor(Class<? extends Sort>, Class<? extends Project>, Class<? extends RelNode>)","u":"withOperandFor(java.lang.Class,java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"SortUnionTransposeRule.Config","l":"withOperandFor(Class<? extends Sort>, Class<? extends Union>)","u":"withOperandFor(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"UnionEliminatorRule.Config","l":"withOperandFor(Class<? extends Union>)","u":"withOperandFor(java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"UnionPullUpConstantsRule.Config","l":"withOperandFor(Class<? extends Union>)","u":"withOperandFor(java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"UnionToDistinctRule.Config","l":"withOperandFor(Class<? extends Union>)","u":"withOperandFor(java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"UnionToValuesRule.Config","l":"withOperandFor(Class<? extends Union>)","u":"withOperandFor(java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"SemiJoinRule.JoinToSemiJoinRule.JoinToSemiJoinRuleConfig","l":"withOperandFor(Class<Join>, Class<Aggregate>)","u":"withOperandFor(java.lang.Class,java.lang.Class)"},{"p":"org.apache.calcite.rel.rules","c":"ExchangeRemoveConstantKeysRule.Config","l":"withOperandFor(Class<R>, Predicate<R>)","u":"withOperandFor(java.lang.Class,java.util.function.Predicate)"},{"p":"org.apache.calcite.rel.rules","c":"PruneEmptyRules.RemoveEmptySingleRule.RemoveEmptySingleRuleConfig","l":"withOperandFor(Class<R>, Predicate<R>)","u":"withOperandFor(java.lang.Class,java.util.function.Predicate)"},{"p":"org.apache.calcite.sql","c":"SqlBasicFunction","l":"withOperandHandler(SqlOperandHandler)","u":"withOperandHandler(org.apache.calcite.sql.type.SqlOperandHandler)"},{"p":"org.apache.calcite.plan","c":"RelRule.Config","l":"withOperandSupplier(RelRule.OperandTransform)","u":"withOperandSupplier(org.apache.calcite.plan.RelRule.OperandTransform)"},{"p":"org.apache.calcite.sql","c":"SqlBasicFunction","l":"withOperandTypeChecker(SqlOperandTypeChecker)","u":"withOperandTypeChecker(org.apache.calcite.sql.type.SqlOperandTypeChecker)"},{"p":"org.apache.calcite.sql","c":"SqlBasicFunction","l":"withOperandTypeInference(SqlOperandTypeInference)","u":"withOperandTypeInference(org.apache.calcite.sql.type.SqlOperandTypeInference)"},{"p":"org.apache.calcite.rel.externalize","c":"RelJson","l":"withOperatorTable(SqlOperatorTable)","u":"withOperatorTable(org.apache.calcite.sql.SqlOperatorTable)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"withOperatorTable(SqlOperatorTable)","u":"withOperatorTable(org.apache.calcite.sql.SqlOperatorTable)"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"withOperatorTable(SqlOperatorTable)","u":"withOperatorTable(org.apache.calcite.sql.SqlOperatorTable)"},{"p":"org.apache.calcite.sql.test","c":"SqlTestFactory","l":"withOperatorTable(UnaryOperator<SqlOperatorTable>)","u":"withOperatorTable(java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"withOrderByFolding(SqlWriterConfig.LineFolding)","u":"withOrderByFolding(org.apache.calcite.sql.SqlWriterConfig.LineFolding)"},{"p":"org.apache.calcite.rel.core","c":"Uncollect","l":"withOrdinality"},{"p":"org.apache.calcite.rel.mutable","c":"MutableUncollect","l":"withOrdinality"},{"p":"org.apache.calcite.sql","c":"SqlUnnestOperator","l":"withOrdinality"},{"p":"org.apache.calcite.sql","c":"SqlJsonQueryWrapperBehavior","l":"WITHOUT_ARRAY"},{"p":"org.apache.calcite.rel.convert","c":"ConverterRule.Config","l":"withOutTrait(RelTrait)","u":"withOutTrait(org.apache.calcite.plan.RelTrait)"},{"p":"org.apache.calcite.sql.fun","c":"SqlBasicAggFunction","l":"withOver(boolean)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"withOverFolding(SqlWriterConfig.LineFolding)","u":"withOverFolding(org.apache.calcite.sql.SqlWriterConfig.LineFolding)"},{"p":"org.apache.calcite.rex","c":"RexSimplify","l":"withParanoid(boolean)"},{"p":"org.apache.calcite.tools","c":"Hoist.Config","l":"withParserConfig(SqlParser.Config)","u":"withParserConfig(org.apache.calcite.sql.parser.SqlParser.Config)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"withParserConfig(UnaryOperator<SqlParser.Config>)","u":"withParserConfig(java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.sql.test","c":"SqlTestFactory","l":"withParserConfig(UnaryOperator<SqlParser.Config>)","u":"withParserConfig(java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"withParserConfig(UnaryOperator<SqlParser.Config>)","u":"withParserConfig(java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser.Config","l":"withParserFactory(SqlParserImplFactory)","u":"withParserFactory(org.apache.calcite.sql.parser.SqlParserImplFactory)"},{"p":"org.apache.calcite.profile","c":"ProfilerImpl.Builder","l":"withPassSize(int)"},{"p":"org.apache.calcite.sql.fun","c":"SqlBasicAggFunction","l":"withPercentile(boolean)"},{"p":"org.apache.calcite.tools","c":"Frameworks","l":"withPlanner(Frameworks.PlannerAction<R>)","u":"withPlanner(org.apache.calcite.tools.Frameworks.PlannerAction)"},{"p":"org.apache.calcite.tools","c":"Frameworks","l":"withPlanner(Frameworks.PlannerAction<R>, FrameworkConfig)","u":"withPlanner(org.apache.calcite.tools.Frameworks.PlannerAction,org.apache.calcite.tools.FrameworkConfig)"},{"p":"org.apache.calcite.test","c":"RelOptFixture","l":"withPlanner(RelOptPlanner)","u":"withPlanner(org.apache.calcite.plan.RelOptPlanner)"},{"p":"org.apache.calcite.sql.test","c":"SqlTestFactory","l":"withPlannerContext(UnaryOperator<Context>)","u":"withPlannerContext(java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.sql.test","c":"SqlTestFactory","l":"withPlannerFactory(SqlTestFactory.PlannerFactory)","u":"withPlannerFactory(org.apache.calcite.sql.test.SqlTestFactory.PlannerFactory)"},{"p":"org.apache.calcite.adapter.innodb","c":"IndexCondition","l":"withPointQueryKey(List<Object>)","u":"withPointQueryKey(java.util.List)"},{"p":"org.apache.calcite.test","c":"RelOptFixture","l":"withPre(HepProgram)","u":"withPre(org.apache.calcite.plan.hep.HepProgram)"},{"p":"org.apache.calcite.sql.fun","c":"SqlBasicOperator","l":"withPrecedence(int, boolean)","u":"withPrecedence(int,boolean)"},{"p":"org.apache.calcite.rel.rules","c":"FilterJoinRule.Config","l":"withPredicate(FilterJoinRule.Predicate)","u":"withPredicate(org.apache.calcite.rel.rules.FilterJoinRule.Predicate)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"withPredicates(RelMetadataQuery, Function<RelBuilder, E>)","u":"withPredicates(org.apache.calcite.rel.metadata.RelMetadataQuery,java.util.function.Function)"},{"p":"org.apache.calcite.rex","c":"RexSimplify","l":"withPredicates(RelOptPredicateList)","u":"withPredicates(org.apache.calcite.plan.RelOptPredicateList)"},{"p":"org.apache.calcite.tools","c":"Frameworks","l":"withPrepare(FrameworkConfig, Frameworks.BasePrepareAction<R>)","u":"withPrepare(org.apache.calcite.tools.FrameworkConfig,org.apache.calcite.tools.Frameworks.BasePrepareAction)"},{"p":"org.apache.calcite.tools","c":"Frameworks","l":"withPrepare(Frameworks.BasePrepareAction<R>)","u":"withPrepare(org.apache.calcite.tools.Frameworks.BasePrepareAction)"},{"p":"org.apache.calcite.tools","c":"Frameworks","l":"withPrepare(Frameworks.PrepareAction<R>)","u":"withPrepare(org.apache.calcite.tools.Frameworks.PrepareAction)"},{"p":"org.apache.calcite.jdbc","c":"Driver","l":"withPrepareFactory(Supplier<CalcitePrepare>)","u":"withPrepareFactory(java.util.function.Supplier)"},{"p":"org.apache.calcite.test","c":"RelOptFixture","l":"withPreRule(RelOptRule...)","u":"withPreRule(org.apache.calcite.plan.RelOptRule...)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectCorrelateTransposeRule.Config","l":"withPreserveExprCondition(PushProjector.ExprCondition)","u":"withPreserveExprCondition(org.apache.calcite.rel.rules.PushProjector.ExprCondition)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectFilterTransposeRule.Config","l":"withPreserveExprCondition(PushProjector.ExprCondition)","u":"withPreserveExprCondition(org.apache.calcite.rel.rules.PushProjector.ExprCondition)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectJoinTransposeRule.Config","l":"withPreserveExprCondition(PushProjector.ExprCondition)","u":"withPreserveExprCondition(org.apache.calcite.rel.rules.PushProjector.ExprCondition)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectSetOpTransposeRule.Config","l":"withPreserveExprCondition(PushProjector.ExprCondition)","u":"withPreserveExprCondition(org.apache.calcite.rel.rules.PushProjector.ExprCondition)"},{"p":"org.apache.calcite.tools","c":"RelBuilder.Config","l":"withPreventEmptyFieldList(boolean)"},{"p":"org.apache.calcite.test","c":"RelOptFixture","l":"withProgram(HepProgram)","u":"withProgram(org.apache.calcite.plan.hep.HepProgram)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewAggregateRule.Config","l":"withProjectMergeRule(RelOptRule)","u":"withProjectMergeRule(org.apache.calcite.plan.RelOptRule)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertQuery","l":"withProperty(Hook, V)","u":"withProperty(org.apache.calcite.runtime.Hook,V)"},{"p":"org.apache.calcite.test","c":"RelOptFixture","l":"withProperty(Hook, V)","u":"withProperty(org.apache.calcite.runtime.Hook,V)"},{"p":"org.apache.calcite.tools","c":"RelBuilder.Config","l":"withPruneInputOfAggregate(boolean)"},{"p":"org.apache.calcite.adapter.innodb","c":"IndexCondition","l":"withPushDownConditions(List<RexNode>)","u":"withPushDownConditions(java.util.List)"},{"p":"org.apache.calcite.tools","c":"RelBuilder.Config","l":"withPushJoinCondition(boolean)"},{"p":"org.apache.calcite.adapter.innodb","c":"IndexCondition","l":"withQueryType(QueryType)","u":"withQueryType(org.apache.calcite.adapter.innodb.QueryType)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"withQuoteAllIdentifiers(boolean)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser.Config","l":"withQuotedCasing(Casing)","u":"withQuotedCasing(org.apache.calcite.avatica.util.Casing)"},{"p":"org.apache.calcite.sql","c":"SqlDialect.Context","l":"withQuotedCasing(Casing)","u":"withQuotedCasing(org.apache.calcite.avatica.util.Casing)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"withQuotedCasing(Casing)","u":"withQuotedCasing(org.apache.calcite.avatica.util.Casing)"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"withQuotedCasing(Casing)","u":"withQuotedCasing(org.apache.calcite.avatica.util.Casing)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserPos","l":"withQuoting(boolean)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser.Config","l":"withQuoting(Quoting)","u":"withQuoting(org.apache.calcite.avatica.util.Quoting)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"withQuoting(Quoting)","u":"withQuoting(org.apache.calcite.avatica.util.Quoting)"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"withQuoting(Quoting)","u":"withQuoting(org.apache.calcite.avatica.util.Quoting)"},{"p":"org.apache.calcite.adapter.innodb","c":"IndexCondition","l":"withRangeQueryLowerKey(List<Object>)","u":"withRangeQueryLowerKey(java.util.List)"},{"p":"org.apache.calcite.adapter.innodb","c":"IndexCondition","l":"withRangeQueryLowerOp(ComparisonOperator)","u":"withRangeQueryLowerOp(com.alibaba.innodb.java.reader.comparator.ComparisonOperator)"},{"p":"org.apache.calcite.adapter.innodb","c":"IndexCondition","l":"withRangeQueryUpperKey(List<Object>)","u":"withRangeQueryUpperKey(java.util.List)"},{"p":"org.apache.calcite.adapter.innodb","c":"IndexCondition","l":"withRangeQueryUpperOp(ComparisonOperator)","u":"withRangeQueryUpperOp(com.alibaba.innodb.java.reader.comparator.ComparisonOperator)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertThat","l":"withRel(Function<RelBuilder, RelNode>)","u":"withRel(java.util.function.Function)"},{"p":"org.apache.calcite.rel","c":"RelRoot","l":"withRel(RelNode)","u":"withRel(org.apache.calcite.rel.RelNode)"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture","l":"withRelBuilderConfig(UnaryOperator<RelBuilder.Config>)","u":"withRelBuilderConfig(java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.test","c":"RelOptFixture","l":"withRelBuilderConfig(UnaryOperator<RelBuilder.Config>)","u":"withRelBuilderConfig(java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Config","l":"withRelBuilderConfigTransform(UnaryOperator<RelBuilder.Config>)","u":"withRelBuilderConfigTransform(java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.plan","c":"RelRule.Config","l":"withRelBuilderFactory(RelBuilderFactory)","u":"withRelBuilderFactory(org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Config","l":"withRelBuilderFactory(RelBuilderFactory)","u":"withRelBuilderFactory(org.apache.calcite.tools.RelBuilderFactory)"},{"p":"org.apache.calcite.test","c":"RelOptFixture","l":"withRelBuilderSimplify(boolean)"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture","l":"withRelFn(Function<RelBuilder, RelNode>)","u":"withRelFn(java.util.function.Function)"},{"p":"org.apache.calcite.test","c":"RelOptFixture","l":"withRelSupplier(RelSupplier)","u":"withRelSupplier(org.apache.calcite.test.RelSupplier)"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture","l":"withRelTransform(UnaryOperator<RelNode>)","u":"withRelTransform(java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.adapter.innodb","c":"IndexCondition","l":"withRemainderConditions(List<RexNode>)","u":"withRemainderConditions(java.util.List)"},{"p":"org.apache.calcite.tools","c":"RelBuilder.Config","l":"withRemoveRedundantDistinct(boolean)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Config","l":"withRemoveSortInSubQuery(boolean)"},{"p":"org.apache.calcite.linq4j.tree","c":"BlockBuilder","l":"withRemoveUnused(boolean)"},{"p":"org.apache.calcite.sql.fun","c":"SqlFloorFunction","l":"withReturnTypeInference(SqlReturnTypeInference)","u":"withReturnTypeInference(org.apache.calcite.sql.type.SqlReturnTypeInference)"},{"p":"org.apache.calcite.sql","c":"SqlBasicFunction","l":"withReturnTypeInference(SqlReturnTypeInference)","u":"withReturnTypeInference(org.apache.calcite.sql.type.SqlReturnTypeInference)"},{"p":"org.apache.calcite.rel.rules","c":"JoinPushThroughJoinRule.Config","l":"withRight(boolean)"},{"p":"org.apache.calcite.test","c":"CustomTypeSystems","l":"withRoundingMode(RelDataTypeSystem, RoundingMode)","u":"withRoundingMode(org.apache.calcite.rel.type.RelDataTypeSystem,java.math.RoundingMode)"},{"p":"org.apache.calcite.test","c":"RelOptFixture","l":"withRule(RelOptRule...)","u":"withRule(org.apache.calcite.plan.RelOptRule...)"},{"p":"org.apache.calcite.rel.convert","c":"ConverterRule.Config","l":"withRuleFactory(Function<ConverterRule.Config, ConverterRule>)","u":"withRuleFactory(java.util.function.Function)"},{"p":"org.apache.calcite.test","c":"CalciteAssert.AssertThat","l":"withSchema(String, Schema)","u":"withSchema(java.lang.String,org.apache.calcite.schema.Schema)"},{"p":"org.apache.calcite.prepare","c":"CalciteCatalogReader","l":"withSchemaPath(List<String>)","u":"withSchemaPath(java.util.List)"},{"p":"org.apache.calcite.prepare","c":"Prepare.CatalogReader","l":"withSchemaPath(List<String>)","u":"withSchemaPath(java.util.List)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"withSelectFolding(SqlWriterConfig.LineFolding)","u":"withSelectFolding(org.apache.calcite.sql.SqlWriterConfig.LineFolding)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"withSelectListExtraIndentFlag(boolean)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"withSelectListItemsOnSeparateLines(boolean)"},{"p":"org.apache.calcite.tools","c":"RelBuilder","l":"withSimplifier(BiFunction<RelBuilder, RexSimplify, RexSimplify>, Function<RelBuilder, E>)","u":"withSimplifier(java.util.function.BiFunction,java.util.function.Function)"},{"p":"org.apache.calcite.tools","c":"RelBuilder.Config","l":"withSimplify(boolean)"},{"p":"org.apache.calcite.tools","c":"RelBuilder.Config","l":"withSimplifyLimit(boolean)"},{"p":"org.apache.calcite.tools","c":"RelBuilder.Config","l":"withSimplifyValues(boolean)"},{"p":"org.apache.calcite.rel.rules","c":"FilterJoinRule.Config","l":"withSmart(boolean)"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture","l":"withSql(String)","u":"withSql(java.lang.String)"},{"p":"org.apache.calcite.test","c":"SqlToRelFixture","l":"withSql(String)","u":"withSql(java.lang.String)"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"withSql(String)","u":"withSql(java.lang.String)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator.Config","l":"withSqlConformance(SqlConformance)","u":"withSqlConformance(org.apache.calcite.sql.validate.SqlConformance)"},{"p":"org.apache.calcite.sql.test","c":"SqlTestFactory","l":"withSqlToRelConfig(UnaryOperator<SqlToRelConverter.Config>)","u":"withSqlToRelConfig(java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.sql.fun","c":"SqlBasicAggFunction","l":"withStatic(SqlStaticAggFunction)","u":"withStatic(org.apache.calcite.sql.SqlStaticAggFunction)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.JsonPathContext","l":"withStrictException(Exception)","u":"withStrictException(java.lang.Exception)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.JsonPathContext","l":"withStrictException(String, Exception)","u":"withStrictException(java.lang.String,java.lang.Exception)"},{"p":"org.apache.calcite.test","c":"RelOptFixture","l":"withSubQueryRules()"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"withSubQueryStyle(SqlWriter.SubQueryStyle)","u":"withSubQueryStyle(org.apache.calcite.sql.SqlWriter.SubQueryStyle)"},{"p":"org.apache.calcite.rel.rules","c":"JoinCommuteRule.Config","l":"withSwapOuter(boolean)"},{"p":"org.apache.calcite.sql.fun","c":"SqlBasicAggFunction","l":"withSyntax(SqlSyntax)","u":"withSyntax(org.apache.calcite.sql.SqlSyntax)"},{"p":"org.apache.calcite.sql","c":"SqlBasicFunction","l":"withSyntax(SqlSyntax)","u":"withSyntax(org.apache.calcite.sql.SqlSyntax)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserFixture","l":"withTester(SqlParserTest.Tester)","u":"withTester(org.apache.calcite.sql.parser.SqlParserTest.Tester)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"withTester(UnaryOperator<SqlTester>)","u":"withTester(java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.test","c":"RelMetadataFixture","l":"withTester(UnaryOperator<SqlTester>)","u":"withTester(java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"withTester(UnaryOperator<SqlTester>)","u":"withTester(java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateExpandWithinDistinctRule.Config","l":"withThrowIfNotUnique(boolean)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser.Config","l":"withTimeUnitCodes(Map<String, ? extends TimeUnit>)","u":"withTimeUnitCodes(java.util.Map)"},{"p":"org.apache.calcite.util","c":"TimestampWithTimeZoneString","l":"withTimeZone(TimeZone)","u":"withTimeZone(java.util.TimeZone)"},{"p":"org.apache.calcite.util","c":"TimeWithTimeZoneString","l":"withTimeZone(TimeZone)","u":"withTimeZone(java.util.TimeZone)"},{"p":"org.apache.calcite.rel.rules","c":"ReduceExpressionsRule.Config","l":"withTreatDynamicCallsAsConstant(boolean)"},{"p":"org.apache.calcite.test","c":"RelOptFixture","l":"withTrim(boolean)"},{"p":"org.apache.calcite.test","c":"SqlToRelFixture","l":"withTrim(boolean)"},{"p":"org.apache.calcite.sql2rel","c":"SqlToRelConverter.Config","l":"withTrimUnusedFields(boolean)"},{"p":"org.apache.calcite.sql","c":"SqlExplain","l":"withType()"},{"p":"org.apache.calcite.adapter.druid","c":"VirtualColumn.Builder","l":"withType(DruidType)","u":"withType(org.apache.calcite.adapter.druid.DruidType)"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"withTypeCoercion(boolean)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator.Config","l":"withTypeCoercionEnabled(boolean)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator.Config","l":"withTypeCoercionFactory(TypeCoercionFactory)","u":"withTypeCoercionFactory(org.apache.calcite.sql.validate.implicit.TypeCoercionFactory)"},{"p":"org.apache.calcite.sql.validate","c":"SqlValidator.Config","l":"withTypeCoercionRules(SqlTypeCoercionRule)","u":"withTypeCoercionRules(org.apache.calcite.sql.type.SqlTypeCoercionRule)"},{"p":"org.apache.calcite.sql.test","c":"SqlTestFactory","l":"withTypeFactoryFactory(SqlTestFactory.TypeFactoryFactory)","u":"withTypeFactoryFactory(org.apache.calcite.sql.test.SqlTestFactory.TypeFactoryFactory)"},{"p":"org.apache.calcite.sql.test","c":"SqlTestFactory","l":"withTypeSystem(UnaryOperator<RelDataTypeSystem>)","u":"withTypeSystem(java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.rel.rules.materialize","c":"MaterializedViewRule.Config","l":"withUnionRewritingPullProgram(HepProgram)","u":"withUnionRewritingPullProgram(org.apache.calcite.plan.hep.HepProgram)"},{"p":"org.apache.calcite.rex","c":"RexSimplify","l":"withUnknownAsFalse(boolean)"},{"p":"org.apache.calcite.runtime","c":"JsonFunctions.JsonPathContext","l":"withUnknownException(Exception)","u":"withUnknownException(java.lang.Exception)"},{"p":"org.apache.calcite.sql.parser","c":"SqlParser.Config","l":"withUnquotedCasing(Casing)","u":"withUnquotedCasing(org.apache.calcite.avatica.util.Casing)"},{"p":"org.apache.calcite.sql","c":"SqlDialect.Context","l":"withUnquotedCasing(Casing)","u":"withUnquotedCasing(org.apache.calcite.avatica.util.Casing)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"withUnquotedCasing(Casing)","u":"withUnquotedCasing(org.apache.calcite.avatica.util.Casing)"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"withUnquotedCasing(Casing)","u":"withUnquotedCasing(org.apache.calcite.avatica.util.Casing)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"withUpdateSetFolding(SqlWriterConfig.LineFolding)","u":"withUpdateSetFolding(org.apache.calcite.sql.SqlWriterConfig.LineFolding)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"withUpdateSetListNewline(boolean)"},{"p":"org.apache.calcite.rel.rules","c":"AggregateExpandDistinctAggregatesRule.Config","l":"withUsingGroupingSets(boolean)"},{"p":"org.apache.calcite.sql","c":"SqlBasicFunction","l":"withValidation(int)"},{"p":"org.apache.calcite.sql.test","c":"SqlTestFactory","l":"withValidator(SqlTestFactory.ValidatorFactory)","u":"withValidator(org.apache.calcite.sql.test.SqlTestFactory.ValidatorFactory)"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"withValidatorCallRewrite(boolean)"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"withValidatorColumnReferenceExpansion(boolean)"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"withValidatorConfig(UnaryOperator<SqlValidator.Config>)","u":"withValidatorConfig(java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.sql.test","c":"SqlTestFactory","l":"withValidatorConfig(UnaryOperator<SqlValidator.Config>)","u":"withValidatorConfig(java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"withValidatorConfig(UnaryOperator<SqlValidator.Config>)","u":"withValidatorConfig(java.util.function.UnaryOperator)"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"withValidatorIdentifierExpansion(boolean)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"withValuesFolding(SqlWriterConfig.LineFolding)","u":"withValuesFolding(org.apache.calcite.sql.SqlWriterConfig.LineFolding)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"withValuesListNewline(boolean)"},{"p":"org.apache.calcite.test","c":"RelOptFixture","l":"withVolcanoPlanner(boolean)"},{"p":"org.apache.calcite.test","c":"RelOptFixture","l":"withVolcanoPlanner(boolean, Consumer<VolcanoPlanner>)","u":"withVolcanoPlanner(boolean,java.util.function.Consumer)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"withWhereFolding(SqlWriterConfig.LineFolding)","u":"withWhereFolding(org.apache.calcite.sql.SqlWriterConfig.LineFolding)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"withWhereListItemsOnSeparateLines(boolean)"},{"p":"org.apache.calcite.test","c":"SqlValidatorFixture","l":"withWhole(boolean)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectFilterTransposeRule.Config","l":"withWholeFilter(boolean)"},{"p":"org.apache.calcite.rel.rules","c":"ProjectFilterTransposeRule.Config","l":"withWholeProject(boolean)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"withWindowDeclListNewline(boolean)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"withWindowFolding(SqlWriterConfig.LineFolding)","u":"withWindowFolding(org.apache.calcite.sql.SqlWriterConfig.LineFolding)"},{"p":"org.apache.calcite.sql","c":"SqlWriterConfig","l":"withWindowNewline(boolean)"},{"p":"org.apache.calcite.util","c":"ImmutableBitSet.Builder","l":"wouldEqual(ImmutableBitSet)","u":"wouldEqual(org.apache.calcite.util.ImmutableBitSet)"},{"p":"org.apache.calcite.config","c":"CalciteConnectionProperty","l":"wrap(Properties)","u":"wrap(java.util.Properties)"},{"p":"org.apache.calcite.sql","c":"SqlCollation","l":"wrappedCharset"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema.EveryType","l":"wrapperBoolean"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema.EveryType","l":"wrapperByte"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema.EveryType","l":"wrapperCharacter"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema.EveryType","l":"wrapperDouble"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema.EveryType","l":"wrapperFloat"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema.EveryType","l":"wrapperInteger"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema.EveryType","l":"wrapperLong"},{"p":"org.apache.calcite.test.schemata.catchall","c":"CatchallSchema.EveryType","l":"wrapperShort"},{"p":"org.apache.calcite.test.catalog","c":"MockCatalogReader.MockTable","l":"wraps"},{"p":"org.apache.calcite.plan","c":"TableAccessMap.Mode","l":"WRITE_ACCESS"},{"p":"org.apache.calcite.sql","c":"SqlAccessType","l":"WRITE_ONLY"},{"p":"org.apache.calcite.util","c":"StackWriter","l":"write(char[], int, int)","u":"write(char[],int,int)"},{"p":"org.apache.calcite.util","c":"StackWriter","l":"write(int)"},{"p":"org.apache.calcite.adapter.druid","c":"DefaultDimensionSpec","l":"write(JsonGenerator)","u":"write(com.fasterxml.jackson.core.JsonGenerator)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidJson","l":"write(JsonGenerator)","u":"write(com.fasterxml.jackson.core.JsonGenerator)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery.JsonPostAggregation","l":"write(JsonGenerator)","u":"write(com.fasterxml.jackson.core.JsonGenerator)"},{"p":"org.apache.calcite.adapter.druid","c":"ExtractionDimensionSpec","l":"write(JsonGenerator)","u":"write(com.fasterxml.jackson.core.JsonGenerator)"},{"p":"org.apache.calcite.adapter.druid","c":"TimeExtractionFunction","l":"write(JsonGenerator)","u":"write(com.fasterxml.jackson.core.JsonGenerator)"},{"p":"org.apache.calcite.adapter.druid","c":"VirtualColumn","l":"write(JsonGenerator)","u":"write(com.fasterxml.jackson.core.JsonGenerator)"},{"p":"org.apache.calcite.materialize","c":"Lattice.SqlWriter","l":"write(RexNode)","u":"write(org.apache.calcite.rex.RexNode)"},{"p":"org.apache.calcite.util","c":"StackWriter","l":"write(String, int, int)","u":"write(java.lang.String,int,int)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery","l":"writeArray(JsonGenerator, List<?>)","u":"writeArray(com.fasterxml.jackson.core.JsonGenerator,java.util.List)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery","l":"writeField(JsonGenerator, String, Object)","u":"writeField(com.fasterxml.jackson.core.JsonGenerator,java.lang.String,java.lang.Object)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery","l":"writeFieldIf(JsonGenerator, String, Object)","u":"writeFieldIf(com.fasterxml.jackson.core.JsonGenerator,java.lang.String,java.lang.Object)"},{"p":"org.apache.calcite.adapter.druid","c":"DruidQuery","l":"writeObject(JsonGenerator, Object)","u":"writeObject(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)"},{"p":"org.apache.calcite.plan.visualizer","c":"RuleMatchVisualizer","l":"writeToFile()"},{"p":"org.apache.calcite.rel.core","c":"Spool","l":"writeType"},{"p":"org.apache.calcite.sql.test","c":"SqlOperatorFixture","l":"WRONG_FORMAT_MESSAGE"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"wrongNumberOfParam(String, int, String)","u":"wrongNumberOfParam(java.lang.String,int,java.lang.String)"},{"p":"org.apache.calcite.runtime","c":"CalciteResource","l":"wrongNumOfArguments()"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"WW"},{"p":"org.apache.calcite.test.schemata.hr","c":"Location","l":"x"},{"p":"org.apache.calcite.sql","c":"SqlExplainFormat","l":"XML"},{"p":"org.apache.calcite.util","c":"BuiltInMethod","l":"XML_TRANSFORM"},{"p":"org.apache.calcite.sql.fun","c":"SqlLibraryOperators","l":"XML_TRANSFORM"},{"p":"org.apache.calcite.util","c":"XmlOutput","l":"XmlOutput(PrintWriter)","u":"%3Cinit%3E(java.io.PrintWriter)"},{"p":"org.apache.calcite.util","c":"XmlOutput","l":"XmlOutput(Writer)","u":"%3Cinit%3E(java.io.Writer)"},{"p":"org.apache.calcite.runtime","c":"XmlFunctions","l":"xmlTransform(String, String)","u":"xmlTransform(java.lang.String,java.lang.String)"},{"p":"org.apache.calcite.test.schemata.hr","c":"Location","l":"y"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"Y"},{"p":"org.apache.calcite.adapter.druid","c":"Granularity.Type","l":"YEAR"},{"p":"org.apache.calcite.sql.fun","c":"SqlStdOperatorTable","l":"YEAR"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName","l":"YEAR_INTERVAL_TYPES"},{"p":"org.apache.calcite.test","c":"SqlOperatorTest","l":"YEAR_VARIANTS"},{"p":"org.apache.calcite.util.format.postgresql","c":"ChronoUnitEnum","l":"YEARS"},{"p":"org.apache.calcite.util.format.postgresql","c":"ChronoUnitEnum","l":"YEARS_IN_CENTURY"},{"p":"org.apache.calcite.util.format.postgresql","c":"ChronoUnitEnum","l":"YEARS_IN_CENTURY_ISO_8601"},{"p":"org.apache.calcite.util.format.postgresql","c":"ChronoUnitEnum","l":"YEARS_IN_MILLENIA"},{"p":"org.apache.calcite.util.format.postgresql","c":"ChronoUnitEnum","l":"YEARS_IN_MILLENIA_ISO_8601"},{"p":"org.apache.calcite.util.format.postgresql","c":"ChronoUnitEnum","l":"YEARS_ISO_8601"},{"p":"org.apache.calcite.util.format.postgresql.format.compiled","c":"YearWithCommasCompiledPattern","l":"YearWithCommasCompiledPattern(Set<PatternModifier>)","u":"%3Cinit%3E(java.util.Set)"},{"p":"org.apache.calcite.util.format.postgresql.format","c":"YearWithCommasFormatPattern","l":"YearWithCommasFormatPattern()","u":"%3Cinit%3E()"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"YY"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"YYY"},{"p":"org.apache.calcite.util.format","c":"FormatElementEnum","l":"YYYY"},{"p":"org.apache.calcite.sql.type","c":"SqlTypeName.Limit","l":"ZERO"},{"p":"org.apache.calcite.sql.parser","c":"SqlParserPos","l":"ZERO"},{"p":"org.apache.calcite.linq4j","c":"Ord","l":"zip(E[])"},{"p":"org.apache.calcite.linq4j","c":"EnumerableDefaults","l":"zip(Enumerable<T0>, Enumerable<T1>, Function2<T0, T1, TResult>)","u":"zip(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.linq4j","c":"DefaultEnumerable","l":"zip(Enumerable<T1>, Function2<T, T1, TResult>)","u":"zip(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.linq4j","c":"ExtendedEnumerable","l":"zip(Enumerable<T1>, Function2<TSource, T1, TResult>)","u":"zip(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.function.Function2)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"zip(Enumerable<T1>, FunctionExpression<Function2<T, T1, TResult>>)","u":"zip(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"CassandraTable.CassandraQueryable","l":"zip(Enumerable<T1>, FunctionExpression<Function2<T, T1, TResult>>)","u":"zip(org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"","c":"","l":"zip(Enumerable<T1>, FunctionExpression<Function2<TSource, T1, TResult>>)"},{"p":"","c":"","l":"zip(Enumerable<T1>, FunctionExpression<Function2<TSource, T1, TResult>>)"},{"p":"org.apache.calcite.linq4j","c":"Ord","l":"zip(Iterable<? extends E>)","u":"zip(java.lang.Iterable)"},{"p":"org.apache.calcite.util","c":"Pair","l":"zip(Iterable<? extends K>, Iterable<? extends V>)","u":"zip(java.lang.Iterable,java.lang.Iterable)"},{"p":"org.apache.calcite.linq4j","c":"Ord","l":"zip(Iterator<? extends E>)","u":"zip(java.util.Iterator)"},{"p":"org.apache.calcite.util","c":"Pair","l":"zip(K[], V[])","u":"zip(K[],V[])"},{"p":"org.apache.calcite.linq4j","c":"Ord","l":"zip(List<? extends E>)","u":"zip(java.util.List)"},{"p":"org.apache.calcite.util","c":"Pair","l":"zip(List<? extends K>, List<? extends V>)","u":"zip(java.util.List,java.util.List)"},{"p":"org.apache.calcite.util","c":"Pair","l":"zip(List<? extends K>, List<? extends V>, boolean)","u":"zip(java.util.List,java.util.List,boolean)"},{"p":"org.apache.calcite.util.mapping","c":"IntPair","l":"zip(List<? extends Number>, List<? extends Number>)","u":"zip(java.util.List,java.util.List)"},{"p":"org.apache.calcite.util.mapping","c":"IntPair","l":"zip(List<? extends Number>, List<? extends Number>, boolean)","u":"zip(java.util.List,java.util.List,boolean)"},{"p":"org.apache.calcite.linq4j","c":"QueryableFactory","l":"zip(Queryable<T>, Enumerable<T1>, FunctionExpression<Function2<T, T1, TResult>>)","u":"zip(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableRecorder","l":"zip(Queryable<T>, Enumerable<T1>, FunctionExpression<Function2<T, T1, TResult>>)","u":"zip(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.linq4j","c":"QueryableDefaults","l":"zip(Queryable<T0>, Enumerable<T1>, FunctionExpression<Function2<T0, T1, TResult>>)","u":"zip(org.apache.calcite.linq4j.Queryable,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.linq4j.tree.FunctionExpression)"},{"p":"org.apache.calcite.util","c":"Pair","l":"zipMutable(List<K>, List<V>)","u":"zipMutable(java.util.List,java.util.List)"}];updateSearchResults();